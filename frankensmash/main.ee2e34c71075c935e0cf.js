/*! For license information please see main.ee2e34c71075c935e0cf.js.LICENSE.txt */
(()=>{var __webpack_modules__={173:(module,__unused_webpack_exports,__webpack_require__)=>{var t;self,t=function(){return(()=>{var __webpack_modules__={5406:function(e){e.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t),r.d(t,"encode",(function(){return k})),r.d(t,"decode",(function(){return q})),r.d(t,"decodeAsync",(function(){return W})),r.d(t,"decodeArrayStream",(function(){return Z})),r.d(t,"decodeStream",(function(){return X})),r.d(t,"Decoder",(function(){return F})),r.d(t,"Encoder",(function(){return B})),r.d(t,"ExtensionCodec",(function(){return _})),r.d(t,"ExtData",(function(){return d})),r.d(t,"EXT_TIMESTAMP",(function(){return m})),r.d(t,"encodeDateToTimeSpec",(function(){return b})),r.d(t,"encodeTimeSpecToTimestamp",(function(){return y})),r.d(t,"decodeTimestampToTimeSpec",(function(){return v})),r.d(t,"encodeTimestampExtension",(function(){return w})),r.d(t,"decodeTimestampExtension",(function(){return A}));var n=function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)s.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return s},i=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(n(arguments[t]));return e},o="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function s(e){for(var t=e.length,r=0,n=0;n<t;){var i=e.charCodeAt(n++);if(0!=(4294967168&i))if(0==(4294965248&i))r+=2;else{if(i>=55296&&i<=56319&&n<t){var o=e.charCodeAt(n);56320==(64512&o)&&(++n,i=((1023&i)<<10)+(1023&o)+65536)}r+=0==(4294901760&i)?3:4}else r++}return r}var a=o?new TextEncoder:void 0,c="undefined"!=typeof process?200:0,u=(null==a?void 0:a.encodeInto)?function(e,t,r){a.encodeInto(e,t.subarray(r))}:function(e,t,r){t.set(a.encode(e),r)};function l(e,t,r){for(var n=t,o=n+r,s=[],a="";n<o;){var c=e[n++];if(0==(128&c))s.push(c);else if(192==(224&c)){var u=63&e[n++];s.push((31&c)<<6|u)}else if(224==(240&c)){u=63&e[n++];var l=63&e[n++];s.push((31&c)<<12|u<<6|l)}else if(240==(248&c)){var p=(7&c)<<18|(u=63&e[n++])<<12|(l=63&e[n++])<<6|63&e[n++];p>65535&&(p-=65536,s.push(p>>>10&1023|55296),p=56320|1023&p),s.push(p)}else s.push(c);s.length>=4096&&(a+=String.fromCharCode.apply(String,i(s)),s.length=0)}return s.length>0&&(a+=String.fromCharCode.apply(String,i(s))),a}var p=o?new TextDecoder:null,h="undefined"!=typeof process?200:0,d=function(e,t){this.type=e,this.data=t};function f(e,t,r){var n=Math.floor(r/4294967296),i=r;e.setUint32(t,n),e.setUint32(t+4,i)}function g(e,t){var r=e.getInt32(t),n=e.getUint32(t+4),i=r<Math.floor(Number.MIN_SAFE_INTEGER/4294967296)||r===Math.floor(Number.MIN_SAFE_INTEGER/4294967296)&&0===n,o=r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296);return i||o?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n}var m=-1;function y(e){var t,r=e.sec,n=e.nsec;if(r>=0&&n>=0&&r<=17179869183){if(0===n&&r<=4294967295){var i=new Uint8Array(4);return(t=new DataView(i.buffer)).setUint32(0,r),i}var o=r/4294967296,s=4294967295&r;return i=new Uint8Array(8),(t=new DataView(i.buffer)).setUint32(0,n<<2|3&o),t.setUint32(4,s),i}return i=new Uint8Array(12),(t=new DataView(i.buffer)).setUint32(0,n),f(t,4,r),i}function b(e){var t=e.getTime(),r=Math.floor(t/1e3),n=1e6*(t-1e3*r),i=Math.floor(n/1e9);return{sec:r+i,nsec:n-1e9*i}}function w(e){return e instanceof Date?y(b(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var r=t.getUint32(0);return{sec:4294967296*(3&r)+t.getUint32(4),nsec:r>>>2};case 12:return{sec:g(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function A(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var x={type:m,encode:w,decode:A},_=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(x)}return e.prototype.register=function(e){var t=e.type,r=e.encode,n=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=n;else{var i=1+t;this.builtInEncoders[i]=r,this.builtInDecoders[i]=n}},e.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++)if(null!=(n=this.builtInEncoders[r])&&null!=(i=n(e,t)))return new d(-1-r,i);for(r=0;r<this.encoders.length;r++){var n,i;if(null!=(n=this.encoders[r])&&null!=(i=n(e,t)))return new d(r,i)}return e instanceof d?e:null},e.prototype.decode=function(e,t,r){var n=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return n?n(e,t,r):new d(t,e)},e.defaultCodec=new e,e}();function S(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var E=function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},B=function(){function e(e,t,r,n,i,o,s,a){void 0===e&&(e=_.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=100),void 0===n&&(n=2048),void 0===i&&(i=!1),void 0===o&&(o=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=n,this.sortKeys=i,this.forceFloat32=o,this.ignoreUndefined=s,this.forceIntegerToFloat=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.getUint8Array()},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):"bigint"==typeof e?this.encodebigint(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),n=new DataView(t);r.set(this.bytes),this.view=n,this.bytes=r},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.encodebigint=function(e){e>=BigInt(0)?e<BigInt(128)?this.writeU8(Number(e)):e<BigInt(256)?(this.writeU8(204),this.writeU8(Number(e))):e<BigInt(65536)?(this.writeU8(205),this.writeU16(Number(e))):e<BigInt(4294967296)?(this.writeU8(206),this.writeU32(Number(e))):(this.writeU8(207),this.writeBig64(e)):e>=BigInt(-32)?this.writeU8(224|Number(e)+32):e>=BigInt(-128)?(this.writeU8(208),this.writeI8(Number(e))):e>=BigInt(-32768)?(this.writeU8(209),this.writeI16(Number(e))):e>=BigInt(-2147483648)?(this.writeU8(210),this.writeI32(Number(e))):(this.writeU8(211),this.writeBig64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(o&&t>c){var r=s(e);this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),u(e,this.bytes,this.pos),this.pos+=r}else r=s(e),this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),function(e,t,r){for(var n=e.length,i=r,o=0;o<n;){var s=e.charCodeAt(o++);if(0!=(4294967168&s)){if(0==(4294965248&s))t[i++]=s>>6&31|192;else{if(s>=55296&&s<=56319&&o<n){var a=e.charCodeAt(o);56320==(64512&a)&&(++o,s=((1023&s)<<10)+(1023&a)+65536)}0==(4294901760&s)?(t[i++]=s>>12&15|224,t[i++]=s>>6&63|128):(t[i++]=s>>18&7|240,t[i++]=s>>12&63|128,t[i++]=s>>6&63|128)}t[i++]=63&s|128}else t[i++]=s}}(e,this.bytes,this.pos),this.pos+=r},e.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(null!=r)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var r=S(e);this.writeU8a(r)},e.prototype.encodeArray=function(e,t){var r,n,i=e.length;if(i<16)this.writeU8(144+i);else if(i<65536)this.writeU8(220),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large array: "+i);this.writeU8(221),this.writeU32(i)}try{for(var o=E(e),s=o.next();!s.done;s=o.next()){var a=s.value;this.doEncode(a,t+1)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}},e.prototype.countWithoutUndefined=function(e,t){var r,n,i=0;try{for(var o=E(t),s=o.next();!s.done;s=o.next())void 0!==e[s.value]&&i++}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return i},e.prototype.encodeMap=function(e,t){var r,n,i=Object.keys(e);this.sortKeys&&i.sort();var o=this.ignoreUndefined?this.countWithoutUndefined(e,i):i.length;if(o<16)this.writeU8(128+o);else if(o<65536)this.writeU8(222),this.writeU16(o);else{if(!(o<4294967296))throw new Error("Too large map object: "+o);this.writeU8(223),this.writeU32(o)}try{for(var s=E(i),a=s.next();!a.done;a=s.next()){var c=a.value,u=e[c];this.ignoreUndefined&&void 0===u||(this.encodeString(c),this.doEncode(u,t+1))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=r/4294967296,i=r;e.setUint32(t,n),e.setUint32(t+4,i)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e.prototype.writeBig64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=Number(r/BigInt(4294967296)),i=Number(r%BigInt(4294967296));n<0&&0!==i&&(n-=1),e.setUint32(t,n),e.setUint32(t+4,i)}(this.view,this.pos,e),this.pos+=8},e}(),T={};function k(e,t){return void 0===t&&(t=T),new B(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encode(e)}function U(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var I=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,r){var n=this.caches[r-1],i=n.length;e:for(var o=0;o<i;o++){for(var s=n[o],a=s.bytes,c=0;c<r;c++)if(a[c]!==e[t+c])continue e;return s.value}return null},e.prototype.store=function(e,t){var r=this.caches[e.length-1],n={bytes:e,value:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=n:r.push(n)},e.prototype.decode=function(e,t,r){var n=this.get(e,t,r);if(null!=n)return this.hit++,n;this.miss++;var i=l(e,t,r),o=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(o,i),i},e}(),R=function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},C=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)}(n,i,(t=e[r](t)).done,t.value)}))}}},D=function(e){return this instanceof D?(this.v=e,this):new D(e)},O=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=i[e](t)).value instanceof D?Promise.resolve(r.value.v).then(c,u):l(o[0][2],r)}catch(e){l(o[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}},N=new DataView(new ArrayBuffer(0)),P=new Uint8Array(N.buffer),L=function(){try{N.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),j=new L("Insufficient data"),z=new I,F=function(){function e(e,t,r,n,i,o,s,a){void 0===e&&(e=_.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=4294967295),void 0===n&&(n=4294967295),void 0===i&&(i=4294967295),void 0===o&&(o=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=z),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=n,this.maxArrayLength=i,this.maxMapLength=o,this.maxExtLength=s,this.keyDecoder=a,this.totalPos=0,this.pos=0,this.view=N,this.bytes=P,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1},e.prototype.setBuffer=function(e){this.bytes=S(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=S(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),r=S(e),n=new Uint8Array(t.length+r.length);n.set(t),n.set(r,t.length),this.setBuffer(n)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,r=this.pos;return new RangeError("Extra "+(t.byteLength-r)+" of "+t.byteLength+" byte(s) found at buffer["+e+"]")},e.prototype.decode=function(e){return this.reinitializeState(),this.setBuffer(e),this.doDecodeSingleSync()},e.prototype.doDecodeSingleSync=function(){var e=this.doDecodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeAsync=function(e){var t,r,n,i;return function(e,t,r,n){return new(r||(r=Promise))((function(t,i){function o(e){try{a(n.next(e))}catch(e){i(e)}}function s(e){try{a(n.throw(e))}catch(e){i(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(o,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var o,s,a,c,u,l,p,h;return R(this,(function(d){switch(d.label){case 0:o=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),t=C(e),d.label=2;case 2:return[4,t.next()];case 3:if((r=d.sent()).done)return[3,5];if(a=r.value,o)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a);try{s=this.doDecodeSync(),o=!0}catch(e){if(!(e instanceof L))throw e}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=d.sent(),n={error:c},[3,12];case 7:return d.trys.push([7,,10,11]),r&&!r.done&&(i=t.return)?[4,i.call(t)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(n)throw n.error;return[7];case 11:return[7];case 12:if(o){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,s]}throw l=(u=this).headByte,p=u.pos,h=u.totalPos,new RangeError("Insufficient data in parcing "+U(l)+" at "+h+" ("+p+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return O(this,arguments,(function(){var r,n,i,o,s,a,c,u,l;return R(this,(function(p){switch(p.label){case 0:r=t,n=-1,p.label=1;case 1:p.trys.push([1,13,14,19]),i=C(e),p.label=2;case 2:return[4,D(i.next())];case 3:if((o=p.sent()).done)return[3,12];if(s=o.value,t&&0===n)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(s),r&&(n=this.readArraySize(),r=!1,this.complete()),p.label=4;case 4:p.trys.push([4,9,,10]),p.label=5;case 5:return[4,D(this.doDecodeSync())];case 6:return[4,p.sent()];case 7:return p.sent(),0==--n?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((a=p.sent())instanceof L))throw a;return[3,10];case 10:this.totalPos+=this.pos,p.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=p.sent(),u={error:c},[3,19];case 14:return p.trys.push([14,,17,18]),o&&!o.done&&(l=i.return)?[4,D(l.call(i))]:[3,16];case 15:p.sent(),p.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(n=e-128)){this.pushMapState(n),this.complete();continue e}t={}}else if(e<160){if(0!=(n=e-144)){this.pushArrayState(n),this.complete();continue e}t=[]}else{var r=e-160;t=this.decodeUtf8String(r,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)r=this.lookU8(),t=this.decodeUtf8String(r,1);else if(218===e)r=this.lookU16(),t=this.decodeUtf8String(r,2);else if(219===e)r=this.lookU32(),t=this.decodeUtf8String(r,4);else if(220===e){if(0!==(n=this.readU16())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(221===e){if(0!==(n=this.readU32())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(222===e){if(0!==(n=this.readU16())){this.pushMapState(n),this.complete();continue e}t={}}else if(223===e){if(0!==(n=this.readU32())){this.pushMapState(n),this.complete();continue e}t={}}else if(196===e){var n=this.lookU8();t=this.decodeBinary(n,1)}else if(197===e)n=this.lookU16(),t=this.decodeBinary(n,2);else if(198===e)n=this.lookU32(),t=this.decodeBinary(n,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)n=this.lookU8(),t=this.decodeExtension(n,1);else if(200===e)n=this.lookU16(),t=this.decodeExtension(n,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+U(e));n=this.lookU32(),t=this.decodeExtension(n,4)}this.complete();for(var i=this.stack;i.length>0;){var o=i[i.length-1];if(0===o.type){if(o.array[o.position]=t,o.position++,o.position!==o.size)continue e;i.pop(),t=o.array}else{if(1===o.type){if("string"!=(s=typeof t)&&"number"!==s)throw new Error("The type of key must be string or number but "+typeof t);o.key=t,o.type=2;continue e}if(o.map[o.key]=t,o.readCount++,o.readCount!==o.size){o.key=null,o.type=1;continue e}i.pop(),t=o.map}}return t}var s},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+U(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw j;var n,i=this.pos+t;return n=this.stateIsMapKey()&&(null===(r=this.keyDecoder)||void 0===r?void 0:r.canBeCached(e))?this.keyDecoder.decode(this.bytes,i,e):o&&e>h?function(e,t,r){var n=e.subarray(t,t+r);return p.decode(n)}(this.bytes,i,e):l(this.bytes,i,e),this.pos+=t+e,n},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw j;var r=this.pos+t,n=this.bytes.subarray(r,r+e);return this.pos+=t+e,n},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var r=this.view.getInt8(this.pos+t),n=this.decodeBinary(e,t+1);return this.extensionCodec.decode(n,r,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,r,n,i=(e=this.view,t=this.pos,r=e.getUint32(t),n=e.getUint32(t+4),r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296)?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n);return this.pos+=8,i},e.prototype.readI64=function(){var e=g(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),M={};function q(e,t){return void 0===t&&(t=M),new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}var H=function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},$=function(e){return this instanceof $?(this.v=e,this):new $(e)},G=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=i[e](t)).value instanceof $?Promise.resolve(r.value.v).then(c,u):l(o[0][2],r)}catch(e){l(o[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}};function K(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function V(e){return null!=e[Symbol.asyncIterator]?e:function(e){return G(this,arguments,(function(){var t,r,n,i;return H(this,(function(o){switch(o.label){case 0:t=e.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,$(t.read())];case 3:return r=o.sent(),n=r.done,i=r.value,n?[4,$(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return K(i),[4,$(i)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function W(e,t){return void 0===t&&(t=M),function(e,t,r,n){return new(r||(r=Promise))((function(t,i){function o(e){try{a(n.next(e))}catch(e){i(e)}}function s(e){try{a(n.throw(e))}catch(e){i(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(o,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var r;return function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}(this,(function(n){return r=V(e),[2,new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeAsync(r)]}))}))}function Z(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(r)}function X(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(r)}}])},5155:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,o=c(e),s=o[0],a=o[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,p=a>0?s-4:s;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[l++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,i=n%3,o=[],s=16383,a=0,c=n-i;a<c;a+=s)o.push(u(e,a,a+s>c?c:a+s));return 1===i?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),o.join("")};for(var r=[],n=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=o.length;s<a;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var i,o,s=[],a=t;a<n;a+=3)i=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},5117:function(e,t,r){var n;!function(i){"use strict";var o,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,a=Math.ceil,c=Math.floor,u="[BigNumber Error] ",l=u+"Number primitive has more than 15 significant digits: ",p=1e14,h=14,d=9007199254740991,f=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],g=1e7,m=1e9;function y(e){var t=0|e;return e>0||e===t?t:t-1}function b(e){for(var t,r,n=1,i=e.length,o=e[0]+"";n<i;){for(t=e[n++]+"",r=h-t.length;r--;t="0"+t);o+=t}for(i=o.length;48===o.charCodeAt(--i););return o.slice(0,i+1||1)}function w(e,t){var r,n,i=e.c,o=t.c,s=e.s,a=t.s,c=e.e,u=t.e;if(!s||!a)return null;if(r=i&&!i[0],n=o&&!o[0],r||n)return r?n?0:-a:s;if(s!=a)return s;if(r=s<0,n=c==u,!i||!o)return n?0:!i^r?1:-1;if(!n)return c>u^r?1:-1;for(a=(c=i.length)<(u=o.length)?c:u,s=0;s<a;s++)if(i[s]!=o[s])return i[s]>o[s]^r?1:-1;return c==u?0:c>u^r?1:-1}function v(e,t,r,n){if(e<t||e>r||e!==c(e))throw Error(u+(n||"Argument")+("number"==typeof e?e<t||e>r?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function A(e){var t=e.c.length-1;return y(e.e/h)==t&&e.c[t]%2!=0}function x(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function _(e,t,r){var n,i;if(t<0){for(i=r+".";++t;i+=r);e=i+e}else if(++t>(n=e.length)){for(i=r,t-=n;--t;i+=r);e+=i}else t<n&&(e=e.slice(0,t)+"."+e.slice(t));return e}(o=function e(t){var r,n,i,o,S,E,B,T,k,U,I=H.prototype={constructor:H,toString:null,valueOf:null},R=new H(1),C=20,D=4,O=-7,N=21,P=-1e7,L=1e7,j=!1,z=1,F=0,M={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},q="0123456789abcdefghijklmnopqrstuvwxyz";function H(e,t){var r,o,a,u,p,f,g,m,y=this;if(!(y instanceof H))return new H(e,t);if(null==t){if(e&&!0===e._isBigNumber)return y.s=e.s,void(!e.c||e.e>L?y.c=y.e=null:e.e<P?y.c=[y.e=0]:(y.e=e.e,y.c=e.c.slice()));if((f="number"==typeof e)&&0*e==0){if(y.s=1/e<0?(e=-e,-1):1,e===~~e){for(u=0,p=e;p>=10;p/=10,u++);return void(u>L?y.c=y.e=null:(y.e=u,y.c=[e]))}m=String(e)}else{if(!s.test(m=String(e)))return i(y,m,f);y.s=45==m.charCodeAt(0)?(m=m.slice(1),-1):1}(u=m.indexOf("."))>-1&&(m=m.replace(".","")),(p=m.search(/e/i))>0?(u<0&&(u=p),u+=+m.slice(p+1),m=m.substring(0,p)):u<0&&(u=m.length)}else{if(v(t,2,q.length,"Base"),10==t)return V(y=new H(e),C+y.e+1,D);if(m=String(e),f="number"==typeof e){if(0*e!=0)return i(y,m,f,t);if(y.s=1/e<0?(m=m.slice(1),-1):1,H.DEBUG&&m.replace(/^0\.0*|\./,"").length>15)throw Error(l+e)}else y.s=45===m.charCodeAt(0)?(m=m.slice(1),-1):1;for(r=q.slice(0,t),u=p=0,g=m.length;p<g;p++)if(r.indexOf(o=m.charAt(p))<0){if("."==o){if(p>u){u=g;continue}}else if(!a&&(m==m.toUpperCase()&&(m=m.toLowerCase())||m==m.toLowerCase()&&(m=m.toUpperCase()))){a=!0,p=-1,u=0;continue}return i(y,String(e),f,t)}f=!1,(u=(m=n(m,t,10,y.s)).indexOf("."))>-1?m=m.replace(".",""):u=m.length}for(p=0;48===m.charCodeAt(p);p++);for(g=m.length;48===m.charCodeAt(--g););if(m=m.slice(p,++g)){if(g-=p,f&&H.DEBUG&&g>15&&(e>d||e!==c(e)))throw Error(l+y.s*e);if((u=u-p-1)>L)y.c=y.e=null;else if(u<P)y.c=[y.e=0];else{if(y.e=u,y.c=[],p=(u+1)%h,u<0&&(p+=h),p<g){for(p&&y.c.push(+m.slice(0,p)),g-=h;p<g;)y.c.push(+m.slice(p,p+=h));p=h-(m=m.slice(p)).length}else p-=g;for(;p--;m+="0");y.c.push(+m)}}else y.c=[y.e=0]}function $(e,t,r,n){var i,o,s,a,c;if(null==r?r=D:v(r,0,8),!e.c)return e.toString();if(i=e.c[0],s=e.e,null==t)c=b(e.c),c=1==n||2==n&&(s<=O||s>=N)?x(c,s):_(c,s,"0");else if(o=(e=V(new H(e),t,r)).e,a=(c=b(e.c)).length,1==n||2==n&&(t<=o||o<=O)){for(;a<t;c+="0",a++);c=x(c,o)}else if(t-=s,c=_(c,o,"0"),o+1>a){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=o-a)>0)for(o+1==a&&(c+=".");t--;c+="0");return e.s<0&&i?"-"+c:c}function G(e,t){for(var r,n=1,i=new H(e[0]);n<e.length;n++){if(!(r=new H(e[n])).s){i=r;break}t.call(i,r)&&(i=r)}return i}function K(e,t,r){for(var n=1,i=t.length;!t[--i];t.pop());for(i=t[0];i>=10;i/=10,n++);return(r=n+r*h-1)>L?e.c=e.e=null:r<P?e.c=[e.e=0]:(e.e=r,e.c=t),e}function V(e,t,r,n){var i,o,s,u,l,d,g,m=e.c,y=f;if(m){e:{for(i=1,u=m[0];u>=10;u/=10,i++);if((o=t-i)<0)o+=h,s=t,g=(l=m[d=0])/y[i-s-1]%10|0;else if((d=a((o+1)/h))>=m.length){if(!n)break e;for(;m.length<=d;m.push(0));l=g=0,i=1,s=(o%=h)-h+1}else{for(l=u=m[d],i=1;u>=10;u/=10,i++);g=(s=(o%=h)-h+i)<0?0:l/y[i-s-1]%10|0}if(n=n||t<0||null!=m[d+1]||(s<0?l:l%y[i-s-1]),n=r<4?(g||n)&&(0==r||r==(e.s<0?3:2)):g>5||5==g&&(4==r||n||6==r&&(o>0?s>0?l/y[i-s]:0:m[d-1])%10&1||r==(e.s<0?8:7)),t<1||!m[0])return m.length=0,n?(t-=e.e+1,m[0]=y[(h-t%h)%h],e.e=-t||0):m[0]=e.e=0,e;if(0==o?(m.length=d,u=1,d--):(m.length=d+1,u=y[h-o],m[d]=s>0?c(l/y[i-s]%y[s])*u:0),n)for(;;){if(0==d){for(o=1,s=m[0];s>=10;s/=10,o++);for(s=m[0]+=u,u=1;s>=10;s/=10,u++);o!=u&&(e.e++,m[0]==p&&(m[0]=1));break}if(m[d]+=u,m[d]!=p)break;m[d--]=0,u=1}for(o=m.length;0===m[--o];m.pop());}e.e>L?e.c=e.e=null:e.e<P&&(e.c=[e.e=0])}return e}function W(e){var t,r=e.e;return null===r?e.toString():(t=b(e.c),t=r<=O||r>=N?x(t,r):_(t,r,"0"),e.s<0?"-"+t:t)}return H.clone=e,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(e){var t,r;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(v(r=e[t],0,m,t),C=r),e.hasOwnProperty(t="ROUNDING_MODE")&&(v(r=e[t],0,8,t),D=r),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((r=e[t])&&r.pop?(v(r[0],-m,0,t),v(r[1],0,m,t),O=r[0],N=r[1]):(v(r,-m,m,t),O=-(N=r<0?-r:r))),e.hasOwnProperty(t="RANGE"))if((r=e[t])&&r.pop)v(r[0],-m,-1,t),v(r[1],1,m,t),P=r[0],L=r[1];else{if(v(r,-m,m,t),!r)throw Error(u+t+" cannot be zero: "+r);P=-(L=r<0?-r:r)}if(e.hasOwnProperty(t="CRYPTO")){if((r=e[t])!==!!r)throw Error(u+t+" not true or false: "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw j=!r,Error(u+"crypto unavailable");j=r}else j=r}if(e.hasOwnProperty(t="MODULO_MODE")&&(v(r=e[t],0,9,t),z=r),e.hasOwnProperty(t="POW_PRECISION")&&(v(r=e[t],0,m,t),F=r),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(r=e[t]))throw Error(u+t+" not an object: "+r);M=r}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(r=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(r))throw Error(u+t+" invalid: "+r);q=r}}return{DECIMAL_PLACES:C,ROUNDING_MODE:D,EXPONENTIAL_AT:[O,N],RANGE:[P,L],CRYPTO:j,MODULO_MODE:z,POW_PRECISION:F,FORMAT:M,ALPHABET:q}},H.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!H.DEBUG)return!0;var t,r,n=e.c,i=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(n)){if((1===o||-1===o)&&i>=-m&&i<=m&&i===c(i)){if(0===n[0]){if(0===i&&1===n.length)return!0;break e}if((t=(i+1)%h)<1&&(t+=h),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=p||r!==c(r))break e;if(0!==r)return!0}}}else if(null===n&&null===i&&(null===o||1===o||-1===o))return!0;throw Error(u+"Invalid BigNumber: "+e)},H.maximum=H.max=function(){return G(arguments,I.lt)},H.minimum=H.min=function(){return G(arguments,I.gt)},H.random=(o=9007199254740992,S=Math.random()*o&2097151?function(){return c(Math.random()*o)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,i,o,s=0,l=[],p=new H(R);if(null==e?e=C:v(e,0,m),i=a(e/h),j)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(i*=2));s<i;)(o=131072*t[s]+(t[s+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[s]=r[0],t[s+1]=r[1]):(l.push(o%1e14),s+=2);s=i/2}else{if(!crypto.randomBytes)throw j=!1,Error(u+"crypto unavailable");for(t=crypto.randomBytes(i*=7);s<i;)(o=281474976710656*(31&t[s])+1099511627776*t[s+1]+4294967296*t[s+2]+16777216*t[s+3]+(t[s+4]<<16)+(t[s+5]<<8)+t[s+6])>=9e15?crypto.randomBytes(7).copy(t,s):(l.push(o%1e14),s+=7);s=i/7}if(!j)for(;s<i;)(o=S())<9e15&&(l[s++]=o%1e14);for(i=l[--s],e%=h,i&&e&&(o=f[h-e],l[s]=c(i/o)*o);0===l[s];l.pop(),s--);if(s<0)l=[n=0];else{for(n=-1;0===l[0];l.splice(0,1),n-=h);for(s=1,o=l[0];o>=10;o/=10,s++);s<h&&(n-=h-s)}return p.e=n,p.c=l,p}),H.sum=function(){for(var e=1,t=arguments,r=new H(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e="0123456789";function t(e,t,r,n){for(var i,o,s=[0],a=0,c=e.length;a<c;){for(o=s.length;o--;s[o]*=t);for(s[0]+=n.indexOf(e.charAt(a++)),i=0;i<s.length;i++)s[i]>r-1&&(null==s[i+1]&&(s[i+1]=0),s[i+1]+=s[i]/r|0,s[i]%=r)}return s.reverse()}return function(n,i,o,s,a){var c,u,l,p,h,d,f,g,m=n.indexOf("."),y=C,w=D;for(m>=0&&(p=F,F=0,n=n.replace(".",""),d=(g=new H(i)).pow(n.length-m),F=p,g.c=t(_(b(d.c),d.e,"0"),10,o,e),g.e=g.c.length),l=p=(f=t(n,i,o,a?(c=q,e):(c=e,q))).length;0==f[--p];f.pop());if(!f[0])return c.charAt(0);if(m<0?--l:(d.c=f,d.e=l,d.s=s,f=(d=r(d,g,y,w,o)).c,h=d.r,l=d.e),m=f[u=l+y+1],p=o/2,h=h||u<0||null!=f[u+1],h=w<4?(null!=m||h)&&(0==w||w==(d.s<0?3:2)):m>p||m==p&&(4==w||h||6==w&&1&f[u-1]||w==(d.s<0?8:7)),u<1||!f[0])n=h?_(c.charAt(1),-y,c.charAt(0)):c.charAt(0);else{if(f.length=u,h)for(--o;++f[--u]>o;)f[u]=0,u||(++l,f=[1].concat(f));for(p=f.length;!f[--p];);for(m=0,n="";m<=p;n+=c.charAt(f[m++]));n=_(n,l,c.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,i,o,s,a=0,c=e.length,u=t%g,l=t/g|0;for(e=e.slice();c--;)a=((i=u*(o=e[c]%g)+(n=l*o+(s=e[c]/g|0)*u)%g*g+a)/r|0)+(n/g|0)+l*s,e[c]=i%r;return a&&(e=[a].concat(e)),e}function t(e,t,r,n){var i,o;if(r!=n)o=r>n?1:-1;else for(i=o=0;i<r;i++)if(e[i]!=t[i]){o=e[i]>t[i]?1:-1;break}return o}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,i,o,s,a){var u,l,d,f,g,m,b,w,v,A,x,_,S,E,B,T,k,U=n.s==i.s?1:-1,I=n.c,R=i.c;if(!(I&&I[0]&&R&&R[0]))return new H(n.s&&i.s&&(I?!R||I[0]!=R[0]:R)?I&&0==I[0]||!R?0*U:U/0:NaN);for(v=(w=new H(U)).c=[],U=o+(l=n.e-i.e)+1,a||(a=p,l=y(n.e/h)-y(i.e/h),U=U/h|0),d=0;R[d]==(I[d]||0);d++);if(R[d]>(I[d]||0)&&l--,U<0)v.push(1),f=!0;else{for(E=I.length,T=R.length,d=0,U+=2,(g=c(a/(R[0]+1)))>1&&(R=e(R,g,a),I=e(I,g,a),T=R.length,E=I.length),S=T,x=(A=I.slice(0,T)).length;x<T;A[x++]=0);k=R.slice(),k=[0].concat(k),B=R[0],R[1]>=a/2&&B++;do{if(g=0,(u=t(R,A,T,x))<0){if(_=A[0],T!=x&&(_=_*a+(A[1]||0)),(g=c(_/B))>1)for(g>=a&&(g=a-1),b=(m=e(R,g,a)).length,x=A.length;1==t(m,A,b,x);)g--,r(m,T<b?k:R,b,a),b=m.length,u=1;else 0==g&&(u=g=1),b=(m=R.slice()).length;if(b<x&&(m=[0].concat(m)),r(A,m,x,a),x=A.length,-1==u)for(;t(R,A,T,x)<1;)g++,r(A,T<x?k:R,x,a),x=A.length}else 0===u&&(g++,A=[0]);v[d++]=g,A[0]?A[x++]=I[S]||0:(A=[I[S]],x=1)}while((S++<E||null!=A[0])&&U--);f=null!=A[0],v[0]||v.splice(0,1)}if(a==p){for(d=1,U=v[0];U>=10;U/=10,d++);V(w,o+(w.e=d+l*h-1)+1,s,f)}else w.e=l,w.r=+f;return w}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,B=/^([^.]+)\.$/,T=/^\.([^.]+)$/,k=/^-?(Infinity|NaN)$/,U=/^\s*\+(?=[\w.])|^\s+|\s+$/g,i=function(e,t,r,n){var i,o=r?t:t.replace(U,"");if(k.test(o))e.s=isNaN(o)?null:o<0?-1:1;else{if(!r&&(o=o.replace(E,(function(e,t,r){return i="x"==(r=r.toLowerCase())?16:"b"==r?2:8,n&&n!=i?e:t})),n&&(i=n,o=o.replace(B,"$1").replace(T,"0.$1")),t!=o))return new H(o,i);if(H.DEBUG)throw Error(u+"Not a"+(n?" base "+n:"")+" number: "+t);e.s=null}e.c=e.e=null},I.absoluteValue=I.abs=function(){var e=new H(this);return e.s<0&&(e.s=1),e},I.comparedTo=function(e,t){return w(this,new H(e,t))},I.decimalPlaces=I.dp=function(e,t){var r,n,i,o=this;if(null!=e)return v(e,0,m),null==t?t=D:v(t,0,8),V(new H(o),e+o.e+1,t);if(!(r=o.c))return null;if(n=((i=r.length-1)-y(this.e/h))*h,i=r[i])for(;i%10==0;i/=10,n--);return n<0&&(n=0),n},I.dividedBy=I.div=function(e,t){return r(this,new H(e,t),C,D)},I.dividedToIntegerBy=I.idiv=function(e,t){return r(this,new H(e,t),0,1)},I.exponentiatedBy=I.pow=function(e,t){var r,n,i,o,s,l,p,d,f=this;if((e=new H(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+W(e));if(null!=t&&(t=new H(t)),s=e.e>14,!f.c||!f.c[0]||1==f.c[0]&&!f.e&&1==f.c.length||!e.c||!e.c[0])return d=new H(Math.pow(+W(f),s?2-A(e):+W(e))),t?d.mod(t):d;if(l=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new H(NaN);(n=!l&&f.isInteger()&&t.isInteger())&&(f=f.mod(t))}else{if(e.e>9&&(f.e>0||f.e<-1||(0==f.e?f.c[0]>1||s&&f.c[1]>=24e7:f.c[0]<8e13||s&&f.c[0]<=9999975e7)))return o=f.s<0&&A(e)?-0:0,f.e>-1&&(o=1/o),new H(l?1/o:o);F&&(o=a(F/h+2))}for(s?(r=new H(.5),l&&(e.s=1),p=A(e)):p=(i=Math.abs(+W(e)))%2,d=new H(R);;){if(p){if(!(d=d.times(f)).c)break;o?d.c.length>o&&(d.c.length=o):n&&(d=d.mod(t))}if(i){if(0===(i=c(i/2)))break;p=i%2}else if(V(e=e.times(r),e.e+1,1),e.e>14)p=A(e);else{if(0==(i=+W(e)))break;p=i%2}f=f.times(f),o?f.c&&f.c.length>o&&(f.c.length=o):n&&(f=f.mod(t))}return n?d:(l&&(d=R.div(d)),t?d.mod(t):o?V(d,F,D,void 0):d)},I.integerValue=function(e){var t=new H(this);return null==e?e=D:v(e,0,8),V(t,t.e+1,e)},I.isEqualTo=I.eq=function(e,t){return 0===w(this,new H(e,t))},I.isFinite=function(){return!!this.c},I.isGreaterThan=I.gt=function(e,t){return w(this,new H(e,t))>0},I.isGreaterThanOrEqualTo=I.gte=function(e,t){return 1===(t=w(this,new H(e,t)))||0===t},I.isInteger=function(){return!!this.c&&y(this.e/h)>this.c.length-2},I.isLessThan=I.lt=function(e,t){return w(this,new H(e,t))<0},I.isLessThanOrEqualTo=I.lte=function(e,t){return-1===(t=w(this,new H(e,t)))||0===t},I.isNaN=function(){return!this.s},I.isNegative=function(){return this.s<0},I.isPositive=function(){return this.s>0},I.isZero=function(){return!!this.c&&0==this.c[0]},I.minus=function(e,t){var r,n,i,o,s=this,a=s.s;if(t=(e=new H(e,t)).s,!a||!t)return new H(NaN);if(a!=t)return e.s=-t,s.plus(e);var c=s.e/h,u=e.e/h,l=s.c,d=e.c;if(!c||!u){if(!l||!d)return l?(e.s=-t,e):new H(d?s:NaN);if(!l[0]||!d[0])return d[0]?(e.s=-t,e):new H(l[0]?s:3==D?-0:0)}if(c=y(c),u=y(u),l=l.slice(),a=c-u){for((o=a<0)?(a=-a,i=l):(u=c,i=d),i.reverse(),t=a;t--;i.push(0));i.reverse()}else for(n=(o=(a=l.length)<(t=d.length))?a:t,a=t=0;t<n;t++)if(l[t]!=d[t]){o=l[t]<d[t];break}if(o&&(i=l,l=d,d=i,e.s=-e.s),(t=(n=d.length)-(r=l.length))>0)for(;t--;l[r++]=0);for(t=p-1;n>a;){if(l[--n]<d[n]){for(r=n;r&&!l[--r];l[r]=t);--l[r],l[n]+=p}l[n]-=d[n]}for(;0==l[0];l.splice(0,1),--u);return l[0]?K(e,l,u):(e.s=3==D?-1:1,e.c=[e.e=0],e)},I.modulo=I.mod=function(e,t){var n,i,o=this;return e=new H(e,t),!o.c||!e.s||e.c&&!e.c[0]?new H(NaN):!e.c||o.c&&!o.c[0]?new H(o):(9==z?(i=e.s,e.s=1,n=r(o,e,0,3),e.s=i,n.s*=i):n=r(o,e,0,z),(e=o.minus(n.times(e))).c[0]||1!=z||(e.s=o.s),e)},I.multipliedBy=I.times=function(e,t){var r,n,i,o,s,a,c,u,l,d,f,m,b,w,v,A=this,x=A.c,_=(e=new H(e,t)).c;if(!(x&&_&&x[0]&&_[0]))return!A.s||!e.s||x&&!x[0]&&!_||_&&!_[0]&&!x?e.c=e.e=e.s=null:(e.s*=A.s,x&&_?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=y(A.e/h)+y(e.e/h),e.s*=A.s,(c=x.length)<(d=_.length)&&(b=x,x=_,_=b,i=c,c=d,d=i),i=c+d,b=[];i--;b.push(0));for(w=p,v=g,i=d;--i>=0;){for(r=0,f=_[i]%v,m=_[i]/v|0,o=i+(s=c);o>i;)r=((u=f*(u=x[--s]%v)+(a=m*u+(l=x[s]/v|0)*f)%v*v+b[o]+r)/w|0)+(a/v|0)+m*l,b[o--]=u%w;b[o]=r}return r?++n:b.splice(0,1),K(e,b,n)},I.negated=function(){var e=new H(this);return e.s=-e.s||null,e},I.plus=function(e,t){var r,n=this,i=n.s;if(t=(e=new H(e,t)).s,!i||!t)return new H(NaN);if(i!=t)return e.s=-t,n.minus(e);var o=n.e/h,s=e.e/h,a=n.c,c=e.c;if(!o||!s){if(!a||!c)return new H(i/0);if(!a[0]||!c[0])return c[0]?e:new H(a[0]?n:0*i)}if(o=y(o),s=y(s),a=a.slice(),i=o-s){for(i>0?(s=o,r=c):(i=-i,r=a),r.reverse();i--;r.push(0));r.reverse()}for((i=a.length)-(t=c.length)<0&&(r=c,c=a,a=r,t=i),i=0;t;)i=(a[--t]=a[t]+c[t]+i)/p|0,a[t]=p===a[t]?0:a[t]%p;return i&&(a=[i].concat(a),++s),K(e,a,s)},I.precision=I.sd=function(e,t){var r,n,i,o=this;if(null!=e&&e!==!!e)return v(e,1,m),null==t?t=D:v(t,0,8),V(new H(o),e,t);if(!(r=o.c))return null;if(n=(i=r.length-1)*h+1,i=r[i]){for(;i%10==0;i/=10,n--);for(i=r[0];i>=10;i/=10,n++);}return e&&o.e+1>n&&(n=o.e+1),n},I.shiftedBy=function(e){return v(e,-9007199254740991,d),this.times("1e"+e)},I.squareRoot=I.sqrt=function(){var e,t,n,i,o,s=this,a=s.c,c=s.s,u=s.e,l=C+4,p=new H("0.5");if(1!==c||!a||!a[0])return new H(!c||c<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(c=Math.sqrt(+W(s)))||c==1/0?(((t=b(a)).length+u)%2==0&&(t+="0"),c=Math.sqrt(+t),u=y((u+1)/2)-(u<0||u%2),n=new H(t=c==1/0?"5e"+u:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+u)):n=new H(c+""),n.c[0])for((c=(u=n.e)+l)<3&&(c=0);;)if(o=n,n=p.times(o.plus(r(s,o,l,1))),b(o.c).slice(0,c)===(t=b(n.c)).slice(0,c)){if(n.e<u&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(V(n,n.e+C+2,1),e=!n.times(n).eq(s));break}if(!i&&(V(o,o.e+C+2,0),o.times(o).eq(s))){n=o;break}l+=4,c+=4,i=1}return V(n,n.e+C+1,D,e)},I.toExponential=function(e,t){return null!=e&&(v(e,0,m),e++),$(this,e,t,1)},I.toFixed=function(e,t){return null!=e&&(v(e,0,m),e=e+this.e+1),$(this,e,t)},I.toFormat=function(e,t,r){var n,i=this;if(null==r)null!=e&&t&&"object"==typeof t?(r=t,t=null):e&&"object"==typeof e?(r=e,e=t=null):r=M;else if("object"!=typeof r)throw Error(u+"Argument not an object: "+r);if(n=i.toFixed(e,t),i.c){var o,s=n.split("."),a=+r.groupSize,c=+r.secondaryGroupSize,l=r.groupSeparator||"",p=s[0],h=s[1],d=i.s<0,f=d?p.slice(1):p,g=f.length;if(c&&(o=a,a=c,c=o,g-=o),a>0&&g>0){for(o=g%a||a,p=f.substr(0,o);o<g;o+=a)p+=l+f.substr(o,a);c>0&&(p+=l+f.slice(o)),d&&(p="-"+p)}n=h?p+(r.decimalSeparator||"")+((c=+r.fractionGroupSize)?h.replace(new RegExp("\\d{"+c+"}\\B","g"),"$&"+(r.fractionGroupSeparator||"")):h):p}return(r.prefix||"")+n+(r.suffix||"")},I.toFraction=function(e){var t,n,i,o,s,a,c,l,p,d,g,m,y=this,w=y.c;if(null!=e&&(!(c=new H(e)).isInteger()&&(c.c||1!==c.s)||c.lt(R)))throw Error(u+"Argument "+(c.isInteger()?"out of range: ":"not an integer: ")+W(c));if(!w)return new H(y);for(t=new H(R),p=n=new H(R),i=l=new H(R),m=b(w),s=t.e=m.length-y.e-1,t.c[0]=f[(a=s%h)<0?h+a:a],e=!e||c.comparedTo(t)>0?s>0?t:p:c,a=L,L=1/0,c=new H(m),l.c[0]=0;d=r(c,t,0,1),1!=(o=n.plus(d.times(i))).comparedTo(e);)n=i,i=o,p=l.plus(d.times(o=p)),l=o,t=c.minus(d.times(o=t)),c=o;return o=r(e.minus(n),i,0,1),l=l.plus(o.times(p)),n=n.plus(o.times(i)),l.s=p.s=y.s,g=r(p,i,s*=2,D).minus(y).abs().comparedTo(r(l,n,s,D).minus(y).abs())<1?[p,i]:[l,n],L=a,g},I.toNumber=function(){return+W(this)},I.toPrecision=function(e,t){return null!=e&&v(e,1,m),$(this,e,t,2)},I.toString=function(e){var t,r=this,i=r.s,o=r.e;return null===o?i?(t="Infinity",i<0&&(t="-"+t)):t="NaN":(null==e?t=o<=O||o>=N?x(b(r.c),o):_(b(r.c),o,"0"):10===e?t=_(b((r=V(new H(r),C+o+1,D)).c),r.e,"0"):(v(e,2,q.length,"Base"),t=n(_(b(r.c),o,"0"),10,e,i,!0)),i<0&&r.c[0]&&(t="-"+t)),t},I.valueOf=I.toJSON=function(){return W(this)},I._isBigNumber=!0,null!=t&&H.set(t),H}()).default=o.BigNumber=o,void 0===(n=function(){return o}.call(t,r,t,e))||(e.exports=n)}()},2486:(e,t,r)=>{"use strict";const n=r(5155),i=r(4525),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=a(r);const i=n.write(e,t);return i!==r&&(n=n.slice(0,i)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Z(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Z(e,ArrayBuffer)||e&&Z(e.buffer,ArrayBuffer))return d(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(Z(e,SharedArrayBuffer)||e&&Z(e.buffer,SharedArrayBuffer)))return d(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,r);const i=function(e){if(c.isBuffer(e)){const t=0|f(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||X(e.length)?a(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return l(e),a(e<0?0:0|f(e))}function h(e){const t=e.length<0?0:0|f(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,c.prototype),n}function f(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Z(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return K(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(i)return n?-1:K(e).length;t=(""+t).toLowerCase(),i=!0}}function m(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return B(this,t,r);case"ascii":return k(this,t,r);case"latin1":case"binary":return U(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function y(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function b(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),X(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,i){let o,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let n=-1;for(o=r;o<a;o++)if(u(e,o)===u(t,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===c)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+c>a&&(r=a-c),o=r;o>=0;o--){let r=!0;for(let n=0;n<c;n++)if(u(e,o+n)!==u(t,n)){r=!1;break}if(r)return o}return-1}function v(e,t,r,n){r=Number(r)||0;const i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=t.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(X(n))return s;e[r+s]=n}return s}function A(e,t,r,n){return W(K(t,e.length-r),e,r,n)}function x(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function _(e,t,r,n){return W(V(t),e,r,n)}function S(e,t,r,n){return W(function(e,t){let r,n,i;const o=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function B(e,t,r){r=Math.min(e.length,r);const n=[];let i=t;for(;i<r;){const t=e[i];let o=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=r){let r,n,a,c;switch(s){case 1:t<128&&(o=t);break;case 2:r=e[i+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(o=c));break;case 3:r=e[i+1],n=e[i+2],128==(192&r)&&128==(192&n)&&(c=(15&t)<<12|(63&r)<<6|63&n,c>2047&&(c<55296||c>57343)&&(o=c));break;case 4:r=e[i+1],n=e[i+2],a=e[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(o=c))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(e){const t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=T));return r}(n)}t.kMaxLength=s,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},c.allocUnsafe=function(e){return p(e)},c.allocUnsafeSlow=function(e){return p(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(Z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),Z(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=c.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if(Z(t,Uint8Array))i+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,i)}i+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)y(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?B(this,0,e):m.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},o&&(c.prototype[o]=c.prototype.inspect),c.prototype.compare=function(e,t,r,n,i){if(Z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(o,s),u=this.slice(n,i),l=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==l[e]){o=u[e],s=l[e];break}return o<s?-1:s<o?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return b(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return b(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let o=!1;for(;;)switch(n){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":case"latin1":case"binary":return x(this,e,t,r);case"base64":return _(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function k(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function U(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function I(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i="";for(let n=t;n<r;++n)i+=Y[e[n]];return i}function R(e,t,r){const n=e.slice(t,r);let i="";for(let e=0;e<n.length-1;e+=2)i+=String.fromCharCode(n[e]+256*n[e+1]);return i}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,r,n,i,o){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function O(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function N(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r+7]=o,o>>=8,e[r+6]=o,o>>=8,e[r+5]=o,o>>=8,e[r+4]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function P(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(e,t,r,n,o){return t=+t,r>>>=0,o||P(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,o){return t=+t,r>>>=0,o||P(e,0,r,8),i.write(e,t,r,n,52,8),r+8}c.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),c.prototype.readBigUInt64BE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=t,i=1,o=this[e+--n];for(;n>0&&(i*=256);)o+=this[e+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},c.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=J((function(e,t=0){return O(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=J((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);D(this,e,t,r,n-1,-n)}let i=0,o=1,s=0;for(this[t]=255&e;++i<r&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);D(this,e,t,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=J((function(e,t=0){return O(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=J((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{const o=c.isBuffer(e)?e:c.from(e,n),s=o.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=o[i%s]}return this};const z={};function F(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function M(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function q(e,t,r,n,i,o){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new z.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,r){H(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||$(t,e.length-(r+1))}(n,i,o)}function H(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function $(e,t,r){if(Math.floor(e)!==e)throw H(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=M(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=M(i)),i+="n"),n+=` It must be ${t}. Received ${i}`,n}),RangeError);const G=/[^+/0-9A-Za-z-_]/g;function K(e,t){let r;t=t||1/0;const n=e.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(G,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function Z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function X(e){return e!=e}const Y=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i]}return t}();function J(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},7615:(e,t,r)=>{"use strict";var n=r(1801),i=r(2550),o=i(n("String.prototype.indexOf"));e.exports=function(e,t){var r=n(e,!!t);return"function"==typeof r&&o(e,".prototype.")>-1?i(r):r}},2550:(e,t,r)=>{"use strict";var n=r(1930),i=r(1801),o=i("%Function.prototype.apply%"),s=i("%Function.prototype.call%"),a=i("%Reflect.apply%",!0)||n.call(s,o),c=i("%Object.getOwnPropertyDescriptor%",!0),u=i("%Object.defineProperty%",!0),l=i("%Math.max%");if(u)try{u({},"a",{value:1})}catch(e){u=null}e.exports=function(e){var t=a(n,s,arguments);if(c&&u){var r=c(t,"length");r.configurable&&u(t,"length",{value:1+l(0,e.length-(arguments.length-1))})}return t};var p=function(){return a(n,o,arguments)};u?u(e.exports,"apply",{value:p}):e.exports.apply=p},1069:e=>{function t(e){if(e)return function(e){for(var r in t.prototype)e[r]=t.prototype[r];return e}(e)}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},t.prototype.once=function(e,t){function r(){this.off(e,r),t.apply(this,arguments)}return r.fn=t,this.on(e,r),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var r,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<n.length;i++)if((r=n[i])===t||r.fn===t){n.splice(i,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),r=this._callbacks["$"+e],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(r){n=0;for(var i=(r=r.slice(0)).length;n<i;++n)r[n].apply(this,t)}return this},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},t.prototype.hasListeners=function(e){return!!this.listeners(e).length}},5799:e=>{e.exports=n,n.default=n,n.stable=s,n.stableStringify=s;var t=[],r=[];function n(e,n,o){var s;for(i(e,"",[],void 0),s=0===r.length?JSON.stringify(e,n,o):JSON.stringify(e,c(n),o);0!==t.length;){var a=t.pop();4===a.length?Object.defineProperty(a[0],a[1],a[3]):a[0][a[1]]=a[2]}return s}function i(e,n,o,s){var a;if("object"==typeof e&&null!==e){for(a=0;a<o.length;a++)if(o[a]===e){var c=Object.getOwnPropertyDescriptor(s,n);return void(void 0!==c.get?c.configurable?(Object.defineProperty(s,n,{value:"[Circular]"}),t.push([s,n,e,c])):r.push([e,n]):(s[n]="[Circular]",t.push([s,n,e])))}if(o.push(e),Array.isArray(e))for(a=0;a<e.length;a++)i(e[a],a,o,e);else{var u=Object.keys(e);for(a=0;a<u.length;a++){var l=u[a];i(e[l],l,o,e)}}o.pop()}}function o(e,t){return e<t?-1:e>t?1:0}function s(e,n,i){var o,s=a(e,"",[],void 0)||e;for(o=0===r.length?JSON.stringify(s,n,i):JSON.stringify(s,c(n),i);0!==t.length;){var u=t.pop();4===u.length?Object.defineProperty(u[0],u[1],u[3]):u[0][u[1]]=u[2]}return o}function a(e,n,i,s){var c;if("object"==typeof e&&null!==e){for(c=0;c<i.length;c++)if(i[c]===e){var u=Object.getOwnPropertyDescriptor(s,n);return void(void 0!==u.get?u.configurable?(Object.defineProperty(s,n,{value:"[Circular]"}),t.push([s,n,e,u])):r.push([e,n]):(s[n]="[Circular]",t.push([s,n,e])))}if("function"==typeof e.toJSON)return;if(i.push(e),Array.isArray(e))for(c=0;c<e.length;c++)a(e[c],c,i,e);else{var l={},p=Object.keys(e).sort(o);for(c=0;c<p.length;c++){var h=p[c];a(e[h],h,i,e),l[h]=e[h]}if(void 0===s)return l;t.push([s,n,e]),s[n]=l}i.pop()}}function c(e){return e=void 0!==e?e:function(e,t){return t},function(t,n){if(r.length>0)for(var i=0;i<r.length;i++){var o=r[i];if(o[1]===t&&o[0]===n){n="[Circular]",r.splice(i,1);break}}return e.call(this,t,n)}}},9930:e=>{"use strict";var t="Function.prototype.bind called on incompatible ",r=Array.prototype.slice,n=Object.prototype.toString,i="[object Function]";e.exports=function(e){var o=this;if("function"!=typeof o||n.call(o)!==i)throw new TypeError(t+o);for(var s,a=r.call(arguments,1),c=function(){if(this instanceof s){var t=o.apply(this,a.concat(r.call(arguments)));return Object(t)===t?t:this}return o.apply(e,a.concat(r.call(arguments)))},u=Math.max(0,o.length-a.length),l=[],p=0;p<u;p++)l.push("$"+p);if(s=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(c),o.prototype){var h=function(){};h.prototype=o.prototype,s.prototype=new h,h.prototype=null}return s}},1930:(e,t,r)=>{"use strict";var n=r(9930);e.exports=Function.prototype.bind||n},1801:(e,t,r)=>{"use strict";var n,i=SyntaxError,o=Function,s=TypeError,a=function(e){try{return o('"use strict"; return ('+e+").constructor;")()}catch(e){}},c=Object.getOwnPropertyDescriptor;if(c)try{c({},"")}catch(e){c=null}var u=function(){throw new s},l=c?function(){try{return u}catch(e){try{return c(arguments,"callee").get}catch(e){return u}}}():u,p=r(9905)(),h=Object.getPrototypeOf||function(e){return e.__proto__},d={},f="undefined"==typeof Uint8Array?n:h(Uint8Array),g={"%AggregateError%":"undefined"==typeof AggregateError?n:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?n:ArrayBuffer,"%ArrayIteratorPrototype%":p?h([][Symbol.iterator]()):n,"%AsyncFromSyncIteratorPrototype%":n,"%AsyncFunction%":d,"%AsyncGenerator%":d,"%AsyncGeneratorFunction%":d,"%AsyncIteratorPrototype%":d,"%Atomics%":"undefined"==typeof Atomics?n:Atomics,"%BigInt%":"undefined"==typeof BigInt?n:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?n:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?n:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?n:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?n:FinalizationRegistry,"%Function%":o,"%GeneratorFunction%":d,"%Int8Array%":"undefined"==typeof Int8Array?n:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?n:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?n:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":p?h(h([][Symbol.iterator]())):n,"%JSON%":"object"==typeof JSON?JSON:n,"%Map%":"undefined"==typeof Map?n:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&p?h((new Map)[Symbol.iterator]()):n,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?n:Promise,"%Proxy%":"undefined"==typeof Proxy?n:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?n:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?n:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&p?h((new Set)[Symbol.iterator]()):n,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?n:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":p?h(""[Symbol.iterator]()):n,"%Symbol%":p?Symbol:n,"%SyntaxError%":i,"%ThrowTypeError%":l,"%TypedArray%":f,"%TypeError%":s,"%Uint8Array%":"undefined"==typeof Uint8Array?n:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?n:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?n:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?n:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?n:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?n:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?n:WeakSet},m=function e(t){var r;if("%AsyncFunction%"===t)r=a("async function () {}");else if("%GeneratorFunction%"===t)r=a("function* () {}");else if("%AsyncGeneratorFunction%"===t)r=a("async function* () {}");else if("%AsyncGenerator%"===t){var n=e("%AsyncGeneratorFunction%");n&&(r=n.prototype)}else if("%AsyncIteratorPrototype%"===t){var i=e("%AsyncGenerator%");i&&(r=h(i.prototype))}return g[t]=r,r},y={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},b=r(1930),w=r(9284),v=b.call(Function.call,Array.prototype.concat),A=b.call(Function.apply,Array.prototype.splice),x=b.call(Function.call,String.prototype.replace),_=b.call(Function.call,String.prototype.slice),S=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,E=/\\(\\)?/g,B=function(e){var t=_(e,0,1),r=_(e,-1);if("%"===t&&"%"!==r)throw new i("invalid intrinsic syntax, expected closing `%`");if("%"===r&&"%"!==t)throw new i("invalid intrinsic syntax, expected opening `%`");var n=[];return x(e,S,(function(e,t,r,i){n[n.length]=r?x(i,E,"$1"):t||e})),n},T=function(e,t){var r,n=e;if(w(y,n)&&(n="%"+(r=y[n])[0]+"%"),w(g,n)){var o=g[n];if(o===d&&(o=m(n)),void 0===o&&!t)throw new s("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:r,name:n,value:o}}throw new i("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new s("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new s('"allowMissing" argument must be a boolean');var r=B(e),n=r.length>0?r[0]:"",o=T("%"+n+"%",t),a=o.name,u=o.value,l=!1,p=o.alias;p&&(n=p[0],A(r,v([0,1],p)));for(var h=1,d=!0;h<r.length;h+=1){var f=r[h],m=_(f,0,1),y=_(f,-1);if(('"'===m||"'"===m||"`"===m||'"'===y||"'"===y||"`"===y)&&m!==y)throw new i("property names with quotes must have matching quotes");if("constructor"!==f&&d||(l=!0),w(g,a="%"+(n+="."+f)+"%"))u=g[a];else if(null!=u){if(!(f in u)){if(!t)throw new s("base intrinsic for "+e+" exists, but the property is not available.");return}if(c&&h+1>=r.length){var b=c(u,f);u=(d=!!b)&&"get"in b&&!("originalValue"in b.get)?b.get:u[f]}else d=w(u,f),u=u[f];d&&!l&&(g[a]=u)}}return u}},9905:(e,t,r)=>{"use strict";var n="undefined"!=typeof Symbol&&Symbol,i=r(5682);e.exports=function(){return"function"==typeof n&&"function"==typeof Symbol&&"symbol"==typeof n("foo")&&"symbol"==typeof Symbol("bar")&&i()}},5682:e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(e,t);if(42!==i.value||!0!==i.enumerable)return!1}return!0}},9284:(e,t,r)=>{"use strict";var n=r(1930);e.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},7267:(e,t,r)=>{var n;!function(){"use strict";var t="object"==typeof window?window:{};!t.HI_BASE32_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(t=r.g);var i=!t.HI_BASE32_NO_COMMON_JS&&e.exports,o=r.amdO,s="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),a={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,2:26,3:27,4:28,5:29,6:30,7:31},c=[0,0,0,0,0,0,0,0],u=function(e,t){t.length>10&&(t="..."+t.substr(-10));var r=new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading "+e+" bytes: "+t+" <-");throw r.position=e,r},l=function(e){if(""===e)return[];if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");for(var t,r,n,i,o,s,c,u,l=[],p=0,h=(e=e.replace(/=/g,"")).length,d=0,f=h>>3<<3;d<f;)t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],o=a[e.charAt(d++)],s=a[e.charAt(d++)],c=a[e.charAt(d++)],u=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4),l[p++]=255&(i<<4|o>>>1),l[p++]=255&(o<<7|s<<2|c>>>3),l[p++]=255&(c<<5|u);var g=h-f;return 2===g?(t=a[e.charAt(d++)],r=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2)):4===g?(t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4)):5===g?(t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],o=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4),l[p++]=255&(i<<4|o>>>1)):7===g&&(t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],o=a[e.charAt(d++)],s=a[e.charAt(d++)],c=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4),l[p++]=255&(i<<4|o>>>1),l[p++]=255&(o<<7|s<<2|c>>>3)),l},p=function(e,t){if(!t)return function(e){for(var t,r,n="",i=e.length,o=0,s=0;o<i;)if((t=e[o++])<=127)n+=String.fromCharCode(t);else{t>191&&t<=223?(r=31&t,s=1):t<=239?(r=15&t,s=2):t<=247?(r=7&t,s=3):u(o,n);for(var a=0;a<s;++a)((t=e[o++])<128||t>191)&&u(o,n),r<<=6,r+=63&t;r>=55296&&r<=57343&&u(o,n),r>1114111&&u(o,n),r<=65535?n+=String.fromCharCode(r):(r-=65536,n+=String.fromCharCode(55296+(r>>10)),n+=String.fromCharCode(56320+(1023&r)))}return n}(l(e));if(""===e)return"";if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");var r,n,i,o,s,c,p,h,d="",f=e.indexOf("=");-1===f&&(f=e.length);for(var g=0,m=f>>3<<3;g<m;)r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],h=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))+String.fromCharCode(255&(o<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))+String.fromCharCode(255&(p<<5|h));var y=f-m;return 2===y?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))):4===y?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))):5===y?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],s=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))+String.fromCharCode(255&(o<<4|s>>>1))):7===y&&(r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))+String.fromCharCode(255&(o<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))),d},h={encode:function(e,t){var r="string"!=typeof e;return r&&e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),r?function(e){for(var t,r,n,i,o,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e[u++],r=e[u++],n=e[u++],i=e[u++],o=e[u++],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[31&(i<<3|o>>>5)]+s[31&o];var p=c-l;return 1===p?(t=e[u],a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e[u++],r=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e[u++],r=e[u++],n=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e[u++],r=e[u++],n=e[u++],i=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[i<<3&31]+"="),a}(e):t?function(e){for(var t,r,n,i,o,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),i=e.charCodeAt(u++),o=e.charCodeAt(u++),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[31&(i<<3|o>>>5)]+s[31&o];var p=c-l;return 1===p?(t=e.charCodeAt(u),a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),i=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[i<<3&31]+"="),a}(e):function(e){var t,r,n,i,o,a,u,l=!1,p="",h=0,d=0,f=e.length;if(""===e)return p;do{for(c[0]=c[5],c[1]=c[6],c[2]=c[7],u=d;h<f&&u<5;++h)(a=e.charCodeAt(h))<128?c[u++]=a:a<2048?(c[u++]=192|a>>6,c[u++]=128|63&a):a<55296||a>=57344?(c[u++]=224|a>>12,c[u++]=128|a>>6&63,c[u++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++h)),c[u++]=240|a>>18,c[u++]=128|a>>12&63,c[u++]=128|a>>6&63,c[u++]=128|63&a);d=u-5,h===f&&++h,h>f&&u<6&&(l=!0),t=c[0],u>4?(r=c[1],n=c[2],i=c[3],o=c[4],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[31&(i<<3|o>>>5)]+s[31&o]):1===u?p+=s[t>>>3]+s[t<<2&31]+"======":2===u?(r=c[1],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===u?(r=c[1],n=c[2],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):(r=c[1],n=c[2],i=c[3],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[i<<3&31]+"=")}while(!l);return p}(e)},decode:p};p.asBytes=l,i?e.exports=h:(t.base32=h,o&&(void 0===(n=function(){return h}.call(h,r,h,e))||(e.exports=n)))}()},4525:(e,t)=>{t.read=function(e,t,r,n,i){var o,s,a=8*i-n-1,c=(1<<a)-1,u=c>>1,l=-7,p=r?i-1:0,h=r?-1:1,d=e[t+p];for(p+=h,o=d&(1<<-l)-1,d>>=-l,l+=a;l>0;o=256*o+e[t+p],p+=h,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=n;l>0;s=256*s+e[t+p],p+=h,l-=8);if(0===o)o=1-u;else{if(o===c)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),o-=u}return(d?-1:1)*s*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var s,a,c,u=8*o-i-1,l=(1<<u)-1,p=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,f=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+p>=1?h/c:h*Math.pow(2,1-p))*c>=2&&(s++,c/=2),s+p>=l?(a=0,s=l):s+p>=1?(a=(t*c-1)*Math.pow(2,i),s+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,i),s=0));i>=8;e[r+d]=255&a,d+=f,a/=256,i-=8);for(s=s<<i|a,u+=i;u>0;e[r+d]=255&s,d+=f,s/=256,u-=8);e[r+d-f]|=128*g}},3477:(module,exports,__nested_webpack_require_96669__)=>{var __WEBPACK_AMD_DEFINE_RESULT__;(function(){"use strict";var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=__nested_webpack_require_96669__.g:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD=__nested_webpack_require_96669__.amdO,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(r){return new Sha256(t,!0).update(r)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(r,n){return new HmacSha256(r,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createHmacOutputMethod(n,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function HmacSha256(e,t,r){var n,i=typeof e;if("string"===i){var o,s=[],a=e.length,c=0;for(n=0;n<a;++n)(o=e.charCodeAt(n))<128?s[c++]=o:o<2048?(s[c++]=192|o>>6,s[c++]=128|63&o):o<55296||o>=57344?(s[c++]=224|o>>12,s[c++]=128|o>>6&63,s[c++]=128|63&o):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++n)),s[c++]=240|o>>18,s[c++]=128|o>>12&63,s[c++]=128|o>>6&63,s[c++]=128|63&o);e=s}else{if("object"!==i)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var u=[],l=[];for(n=0;n<64;++n){var p=e[n]||0;u[n]=92^p,l[n]=54^p}Sha256.call(this,t,r),this.update(l),this.oKeyPad=u,this.inner=!0,this.sharedMemory=r}Sha256.prototype.update=function(e){if(!this.finalized){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,i,o=0,s=e.length,a=this.blocks;o<s;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),t)for(i=this.start;o<s&&i<64;++o)a[i>>2]|=e[o]<<SHIFT[3&i++];else for(i=this.start;o<s&&i<64;++o)(n=e.charCodeAt(o))<128?a[i>>2]|=n<<SHIFT[3&i++]:n<2048?(a[i>>2]|=(192|n>>6)<<SHIFT[3&i++],a[i>>2]|=(128|63&n)<<SHIFT[3&i++]):n<55296||n>=57344?(a[i>>2]|=(224|n>>12)<<SHIFT[3&i++],a[i>>2]|=(128|n>>6&63)<<SHIFT[3&i++],a[i>>2]|=(128|63&n)<<SHIFT[3&i++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++o)),a[i>>2]|=(240|n>>18)<<SHIFT[3&i++],a[i>>2]|=(128|n>>12&63)<<SHIFT[3&i++],a[i>>2]|=(128|n>>6&63)<<SHIFT[3&i++],a[i>>2]|=(128|63&n)<<SHIFT[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=64?(this.block=a[16],this.start=i-64,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,r,n,i,o,s,a,c,u=this.h0,l=this.h1,p=this.h2,h=this.h3,d=this.h4,f=this.h5,g=this.h6,m=this.h7,y=this.blocks;for(e=16;e<64;++e)t=((i=y[e-15])>>>7|i<<25)^(i>>>18|i<<14)^i>>>3,r=((i=y[e-2])>>>17|i<<15)^(i>>>19|i<<13)^i>>>10,y[e]=y[e-16]+t+y[e-7]+r<<0;for(c=l&p,e=0;e<64;e+=4)this.first?(this.is224?(o=300032,m=(i=y[0]-1413257819)-150054599<<0,h=i+24177077<<0):(o=704751109,m=(i=y[0]-210244248)-1521486534<<0,h=i+143694565<<0),this.first=!1):(t=(u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),n=(o=u&l)^u&p^c,m=h+(i=m+(r=(d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+(d&f^~d&g)+K[e]+y[e])<<0,h=i+(t+n)<<0),t=(h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10),n=(s=h&u)^h&l^o,g=p+(i=g+(r=(m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(m&d^~m&f)+K[e+1]+y[e+1])<<0,t=((p=i+(t+n)<<0)>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10),n=(a=p&h)^p&u^s,f=l+(i=f+(r=(g>>>6|g<<26)^(g>>>11|g<<21)^(g>>>25|g<<7))+(g&m^~g&d)+K[e+2]+y[e+2])<<0,t=((l=i+(t+n)<<0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(c=l&p)^l&h^a,d=u+(i=d+(r=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+(f&g^~f&m)+K[e+3]+y[e+3])<<0,u=i+(t+n)<<0;this.h0=this.h0+u<<0,this.h1=this.h1+l<<0,this.h2=this.h2+p<<0,this.h3=this.h3+h<<0,this.h4=this.h4+d<<0,this.h5=this.h5+f<<0,this.h6=this.h6+g<<0,this.h7=this.h7+m<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,i=this.h4,o=this.h5,s=this.h6,a=this.h7,c=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[15&s];return this.is224||(c+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]),c},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,i=this.h4,o=this.h5,s=this.h6,a=this.h7,c=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,i>>24&255,i>>16&255,i>>8&255,255&i,o>>24&255,o>>16&255,o>>8&255,255&o,s>>24&255,s>>16&255,s>>8&255,255&s];return this.is224||c.push(a>>24&255,a>>16&255,a>>8&255,255&a),c},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__nested_webpack_require_96669__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))})()},583:(e,t,r)=>{var n;!function(){"use strict";var i="input is invalid type",o="object"==typeof window,s=o?window:{};s.JS_SHA3_NO_WINDOW&&(o=!1);var a=!o&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=r.g:a&&(s=self);var c=!s.JS_SHA3_NO_COMMON_JS&&e.exports,u=r.amdO,l=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,p="0123456789abcdef".split(""),h=[4,1024,262144,67108864],d=[0,8,16,24],f=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],g=[224,256,384,512],m=[128,256],y=["hex","buffer","arrayBuffer","array","digest"],b={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!l||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var w=function(e,t,r){return function(n){return new O(e,t,e).update(n)[r]()}},v=function(e,t,r){return function(n,i){return new O(e,t,i).update(n)[r]()}},A=function(e,t,r){return function(t,n,i,o){return B["cshake"+e].update(t,n,i,o)[r]()}},x=function(e,t,r){return function(t,n,i,o){return B["kmac"+e].update(t,n,i,o)[r]()}},_=function(e,t,r,n){for(var i=0;i<y.length;++i){var o=y[i];e[o]=t(r,n,o)}return e},S=function(e,t){var r=w(e,t,"hex");return r.create=function(){return new O(e,t,e)},r.update=function(e){return r.create().update(e)},_(r,w,e,t)},E=[{name:"keccak",padding:[1,256,65536,16777216],bits:g,createMethod:S},{name:"sha3",padding:[6,1536,393216,100663296],bits:g,createMethod:S},{name:"shake",padding:[31,7936,2031616,520093696],bits:m,createMethod:function(e,t){var r=v(e,t,"hex");return r.create=function(r){return new O(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},_(r,v,e,t)}},{name:"cshake",padding:h,bits:m,createMethod:function(e,t){var r=b[e],n=A(e,0,"hex");return n.create=function(n,i,o){return i||o?new O(e,t,n).bytepad([i,o],r):B["shake"+e].create(n)},n.update=function(e,t,r,i){return n.create(t,r,i).update(e)},_(n,A,e,t)}},{name:"kmac",padding:h,bits:m,createMethod:function(e,t){var r=b[e],n=x(e,0,"hex");return n.create=function(n,i,o){return new N(e,t,i).bytepad(["KMAC",o],r).bytepad([n],r)},n.update=function(e,t,r,i){return n.create(e,r,i).update(t)},_(n,x,e,t)}}],B={},T=[],k=0;k<E.length;++k)for(var U=E[k],I=U.bits,R=0;R<I.length;++R){var C=U.name+"_"+I[R];if(T.push(C),B[C]=U.createMethod(I[R],U.padding),"sha3"!==U.name){var D=U.name+I[R];T.push(D),B[D]=B[C]}}function O(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function N(e,t,r){O.call(this,e,t,r)}O.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(i);if(null===e)throw new Error(i);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(i);t=!0}for(var n,o,s=this.blocks,a=this.byteCount,c=e.length,u=this.blockCount,p=0,h=this.s;p<c;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<u+1;++n)s[n]=0;if(t)for(n=this.start;p<c&&n<a;++p)s[n>>2]|=e[p]<<d[3&n++];else for(n=this.start;p<c&&n<a;++p)(o=e.charCodeAt(p))<128?s[n>>2]|=o<<d[3&n++]:o<2048?(s[n>>2]|=(192|o>>6)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):o<55296||o>=57344?(s[n>>2]|=(224|o>>12)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++p)),s[n>>2]|=(240|o>>18)<<d[3&n++],s[n>>2]|=(128|o>>12&63)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[u],n=0;n<u;++n)h[n]^=s[n];P(h),this.reset=!0}else this.start=n}return this},O.prototype.encode=function(e,t){var r=255&e,n=1,i=[r];for(r=255&(e>>=8);r>0;)i.unshift(r),r=255&(e>>=8),++n;return t?i.push(n):i.unshift(n),this.update(i),i.length},O.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(i);if(null===e)throw new Error(i);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(i);t=!0}var n=0,o=e.length;if(t)n=o;else for(var s=0;s<e.length;++s){var a=e.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++s)),n+=4)}return n+=this.encode(8*n),this.update(e),n},O.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var i=t-r%t,o=[];return o.length=i,this.update(o),this},O.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];P(n)}},O.prototype.toString=O.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a="";s<n;){for(o=0;o<t&&s<n;++o,++s)e=r[o],a+=p[e>>4&15]+p[15&e]+p[e>>12&15]+p[e>>8&15]+p[e>>20&15]+p[e>>16&15]+p[e>>28&15]+p[e>>24&15];s%t==0&&(P(r),o=0)}return i&&(e=r[o],a+=p[e>>4&15]+p[15&e],i>1&&(a+=p[e>>12&15]+p[e>>8&15]),i>2&&(a+=p[e>>20&15]+p[e>>16&15])),a},O.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;e=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var c=new Uint32Array(e);s<n;){for(o=0;o<t&&s<n;++o,++s)c[s]=r[o];s%t==0&&P(r)}return i&&(c[o]=r[o],e=e.slice(0,a)),e},O.prototype.buffer=O.prototype.arrayBuffer,O.prototype.digest=O.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,c=[];a<i;){for(s=0;s<r&&a<i;++s,++a)e=a<<2,t=n[s],c[e]=255&t,c[e+1]=t>>8&255,c[e+2]=t>>16&255,c[e+3]=t>>24&255;a%r==0&&P(n)}return o&&(e=a<<2,t=n[s],c[e]=255&t,o>1&&(c[e+1]=t>>8&255),o>2&&(c[e+2]=t>>16&255)),c},N.prototype=new O,N.prototype.finalize=function(){return this.encode(this.outputBits,!0),O.prototype.finalize.call(this)};var P=function(e){var t,r,n,i,o,s,a,c,u,l,p,h,d,g,m,y,b,w,v,A,x,_,S,E,B,T,k,U,I,R,C,D,O,N,P,L,j,z,F,M,q,H,$,G,K,V,W,Z,X,Y,J,Q,ee,te,re,ne,ie,oe,se,ae,ce,ue,le;for(n=0;n<48;n+=2)i=e[0]^e[10]^e[20]^e[30]^e[40],o=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],c=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],l=e[6]^e[16]^e[26]^e[36]^e[46],p=e[7]^e[17]^e[27]^e[37]^e[47],t=(h=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|a>>>31),r=(d=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|s>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=i^(c<<1|u>>>31),r=o^(u<<1|c>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=s^(l<<1|p>>>31),r=a^(p<<1|l>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=c^(h<<1|d>>>31),r=u^(d<<1|h>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=l^(i<<1|o>>>31),r=p^(o<<1|i>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,g=e[0],m=e[1],V=e[11]<<4|e[10]>>>28,W=e[10]<<4|e[11]>>>28,U=e[20]<<3|e[21]>>>29,I=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,ce=e[30]<<9|e[31]>>>23,H=e[40]<<18|e[41]>>>14,$=e[41]<<18|e[40]>>>14,N=e[2]<<1|e[3]>>>31,P=e[3]<<1|e[2]>>>31,y=e[13]<<12|e[12]>>>20,b=e[12]<<12|e[13]>>>20,Z=e[22]<<10|e[23]>>>22,X=e[23]<<10|e[22]>>>22,R=e[33]<<13|e[32]>>>19,C=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,le=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,L=e[14]<<6|e[15]>>>26,j=e[15]<<6|e[14]>>>26,w=e[25]<<11|e[24]>>>21,v=e[24]<<11|e[25]>>>21,Y=e[34]<<15|e[35]>>>17,J=e[35]<<15|e[34]>>>17,D=e[45]<<29|e[44]>>>3,O=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,B=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,ie=e[16]<<23|e[17]>>>9,z=e[26]<<25|e[27]>>>7,F=e[27]<<25|e[26]>>>7,A=e[36]<<21|e[37]>>>11,x=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,G=e[8]<<27|e[9]>>>5,K=e[9]<<27|e[8]>>>5,T=e[18]<<20|e[19]>>>12,k=e[19]<<20|e[18]>>>12,oe=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,M=e[38]<<8|e[39]>>>24,q=e[39]<<8|e[38]>>>24,_=e[48]<<14|e[49]>>>18,S=e[49]<<14|e[48]>>>18,e[0]=g^~y&w,e[1]=m^~b&v,e[10]=E^~T&U,e[11]=B^~k&I,e[20]=N^~L&z,e[21]=P^~j&F,e[30]=G^~V&Z,e[31]=K^~W&X,e[40]=te^~ne&oe,e[41]=re^~ie&se,e[2]=y^~w&A,e[3]=b^~v&x,e[12]=T^~U&R,e[13]=k^~I&C,e[22]=L^~z&M,e[23]=j^~F&q,e[32]=V^~Z&Y,e[33]=W^~X&J,e[42]=ne^~oe&ae,e[43]=ie^~se&ce,e[4]=w^~A&_,e[5]=v^~x&S,e[14]=U^~R&D,e[15]=I^~C&O,e[24]=z^~M&H,e[25]=F^~q&$,e[34]=Z^~Y&Q,e[35]=X^~J&ee,e[44]=oe^~ae&ue,e[45]=se^~ce&le,e[6]=A^~_&g,e[7]=x^~S&m,e[16]=R^~D&E,e[17]=C^~O&B,e[26]=M^~H&N,e[27]=q^~$&P,e[36]=Y^~Q&G,e[37]=J^~ee&K,e[46]=ae^~ue&te,e[47]=ce^~le&re,e[8]=_^~g&y,e[9]=S^~m&b,e[18]=D^~E&T,e[19]=O^~B&k,e[28]=H^~N&L,e[29]=$^~P&j,e[38]=Q^~G&V,e[39]=ee^~K&W,e[48]=ue^~te&ne,e[49]=le^~re&ie,e[0]^=f[n],e[1]^=f[n+1]};if(c)e.exports=B;else{for(k=0;k<T.length;++k)s[T[k]]=B[T[k]];u&&(void 0===(n=function(){return B}.call(t,r,t,e))||(e.exports=n))}}()},9757:(e,t,r)=>{var n;!function(){"use strict";var t="input is invalid type",i="object"==typeof window,o=i?window:{};o.JS_SHA512_NO_WINDOW&&(i=!1);var s=!i&&"object"==typeof self;!o.JS_SHA512_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?o=r.g:s&&(o=self);var a=!o.JS_SHA512_NO_COMMON_JS&&e.exports,c=r.amdO,u=!o.JS_SHA512_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,l="0123456789abcdef".split(""),p=[-2147483648,8388608,32768,128],h=[24,16,8,0],d=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],f=["hex","array","digest","arrayBuffer"],g=[];!o.JS_SHA512_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!u||!o.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var m=function(e,t){return function(r){return new v(t,!0).update(r)[e]()}},y=function(e){var t=m("hex",e);t.create=function(){return new v(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<f.length;++r){var n=f[r];t[n]=m(n,e)}return t},b=function(e,t){return function(r,n){return new A(r,t,!0).update(n)[e]()}},w=function(e){var t=b("hex",e);t.create=function(t){return new A(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<f.length;++r){var n=f[r];t[n]=b(n,e)}return t};function v(e,t){t?(g[0]=g[1]=g[2]=g[3]=g[4]=g[5]=g[6]=g[7]=g[8]=g[9]=g[10]=g[11]=g[12]=g[13]=g[14]=g[15]=g[16]=g[17]=g[18]=g[19]=g[20]=g[21]=g[22]=g[23]=g[24]=g[25]=g[26]=g[27]=g[28]=g[29]=g[30]=g[31]=g[32]=0,this.blocks=g):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],384==e?(this.h0h=3418070365,this.h0l=3238371032,this.h1h=1654270250,this.h1l=914150663,this.h2h=2438529370,this.h2l=812702999,this.h3h=355462360,this.h3l=4144912697,this.h4h=1731405415,this.h4l=4290775857,this.h5h=2394180231,this.h5l=1750603025,this.h6h=3675008525,this.h6l=1694076839,this.h7h=1203062813,this.h7l=3204075428):256==e?(this.h0h=573645204,this.h0l=4230739756,this.h1h=2673172387,this.h1l=3360449730,this.h2h=596883563,this.h2l=1867755857,this.h3h=2520282905,this.h3l=1497426621,this.h4h=2519219938,this.h4l=2827943907,this.h5h=3193839141,this.h5l=1401305490,this.h6h=721525244,this.h6l=746961066,this.h7h=246885852,this.h7l=2177182882):224==e?(this.h0h=2352822216,this.h0l=424955298,this.h1h=1944164710,this.h1l=2312950998,this.h2h=502970286,this.h2l=855612546,this.h3h=1738396948,this.h3l=1479516111,this.h4h=258812777,this.h4l=2077511080,this.h5h=2011393907,this.h5l=79989058,this.h6h=1067287976,this.h6l=1780299464,this.h7h=286451373,this.h7l=2446758561):(this.h0h=1779033703,this.h0l=4089235720,this.h1h=3144134277,this.h1l=2227873595,this.h2h=1013904242,this.h2l=4271175723,this.h3h=2773480762,this.h3l=1595750129,this.h4h=1359893119,this.h4l=2917565137,this.h5h=2600822924,this.h5l=725511199,this.h6h=528734635,this.h6l=4215389547,this.h7h=1541459225,this.h7l=327033209),this.bits=e,this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1}function A(e,r,n){var i,o=typeof e;if("string"!==o){if("object"!==o)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);i=!0}var s=e.length;if(!i){for(var a,c=[],l=(s=e.length,0),p=0;p<s;++p)(a=e.charCodeAt(p))<128?c[l++]=a:a<2048?(c[l++]=192|a>>6,c[l++]=128|63&a):a<55296||a>=57344?(c[l++]=224|a>>12,c[l++]=128|a>>6&63,c[l++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++p)),c[l++]=240|a>>18,c[l++]=128|a>>12&63,c[l++]=128|a>>6&63,c[l++]=128|63&a);e=c}e.length>128&&(e=new v(r,!0).update(e).array());var h=[],d=[];for(p=0;p<128;++p){var f=e[p]||0;h[p]=92^f,d[p]=54^f}v.call(this,r,n),this.update(d),this.oKeyPad=h,this.inner=!0,this.sharedMemory=n}v.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var r,n=typeof e;if("string"!==n){if("object"!==n)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);r=!0}for(var i,o,s=0,a=e.length,c=this.blocks;s<a;){if(this.hashed&&(this.hashed=!1,c[0]=this.block,c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=c[16]=c[17]=c[18]=c[19]=c[20]=c[21]=c[22]=c[23]=c[24]=c[25]=c[26]=c[27]=c[28]=c[29]=c[30]=c[31]=c[32]=0),r)for(o=this.start;s<a&&o<128;++s)c[o>>2]|=e[s]<<h[3&o++];else for(o=this.start;s<a&&o<128;++s)(i=e.charCodeAt(s))<128?c[o>>2]|=i<<h[3&o++]:i<2048?(c[o>>2]|=(192|i>>6)<<h[3&o++],c[o>>2]|=(128|63&i)<<h[3&o++]):i<55296||i>=57344?(c[o>>2]|=(224|i>>12)<<h[3&o++],c[o>>2]|=(128|i>>6&63)<<h[3&o++],c[o>>2]|=(128|63&i)<<h[3&o++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++s)),c[o>>2]|=(240|i>>18)<<h[3&o++],c[o>>2]|=(128|i>>12&63)<<h[3&o++],c[o>>2]|=(128|i>>6&63)<<h[3&o++],c[o>>2]|=(128|63&i)<<h[3&o++]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=128?(this.block=c[32],this.start=o-128,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this},v.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[32]=this.block,e[t>>2]|=p[3&t],this.block=e[32],t>=112&&(this.hashed||this.hash(),e[0]=this.block,e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=e[16]=e[17]=e[18]=e[19]=e[20]=e[21]=e[22]=e[23]=e[24]=e[25]=e[26]=e[27]=e[28]=e[29]=e[30]=e[31]=e[32]=0),e[30]=this.hBytes<<3|this.bytes>>>29,e[31]=this.bytes<<3,this.hash()}},v.prototype.hash=function(){var e,t,r,n,i,o,s,a,c,u,l,p,h,f,g,m,y,b,w,v,A,x,_,S,E,B=this.h0h,T=this.h0l,k=this.h1h,U=this.h1l,I=this.h2h,R=this.h2l,C=this.h3h,D=this.h3l,O=this.h4h,N=this.h4l,P=this.h5h,L=this.h5l,j=this.h6h,z=this.h6l,F=this.h7h,M=this.h7l,q=this.blocks;for(e=32;e<160;e+=2)t=((v=q[e-30])>>>1|(A=q[e-29])<<31)^(v>>>8|A<<24)^v>>>7,r=(A>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25),n=((v=q[e-4])>>>19|(A=q[e-3])<<13)^(A>>>29|v<<3)^v>>>6,i=(A>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26),v=q[e-32],A=q[e-31],c=((x=q[e-14])>>>16)+(v>>>16)+(t>>>16)+(n>>>16)+((a=(65535&x)+(65535&v)+(65535&t)+(65535&n)+((s=((_=q[e-13])>>>16)+(A>>>16)+(r>>>16)+(i>>>16)+((o=(65535&_)+(65535&A)+(65535&r)+(65535&i))>>>16))>>>16))>>>16),q[e]=c<<16|65535&a,q[e+1]=s<<16|65535&o;var H=B,$=T,G=k,K=U,V=I,W=R,Z=C,X=D,Y=O,J=N,Q=P,ee=L,te=j,re=z,ne=F,ie=M;for(m=G&V,y=K&W,e=0;e<160;e+=8)t=(H>>>28|$<<4)^($>>>2|H<<30)^($>>>7|H<<25),r=($>>>28|H<<4)^(H>>>2|$<<30)^(H>>>7|$<<25),n=(Y>>>14|J<<18)^(Y>>>18|J<<14)^(J>>>9|Y<<23),i=(J>>>14|Y<<18)^(J>>>18|Y<<14)^(Y>>>9|J<<23),b=(u=H&G)^H&V^m,w=(l=$&K)^$&W^y,S=Y&Q^~Y&te,E=J&ee^~J&re,v=q[e],A=q[e+1],v=(c=((x=d[e])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(ne>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&ne)+((s=((_=d[e+1])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(ie>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&ie))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,ne=(c=(Z>>>16)+(v>>>16)+((a=(65535&Z)+(65535&v)+((s=(X>>>16)+(A>>>16)+((o=(65535&X)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,ie=s<<16|65535&o,t=((Z=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(X=s<<16|65535&o)<<4)^(X>>>2|Z<<30)^(X>>>7|Z<<25),r=(X>>>28|Z<<4)^(Z>>>2|X<<30)^(Z>>>7|X<<25),n=(ne>>>14|ie<<18)^(ne>>>18|ie<<14)^(ie>>>9|ne<<23),i=(ie>>>14|ne<<18)^(ie>>>18|ne<<14)^(ne>>>9|ie<<23),b=(p=Z&H)^Z&G^u,w=(h=X&$)^X&K^l,S=ne&Y^~ne&Q,E=ie&J^~ie&ee,v=q[e+2],A=q[e+3],v=(c=((x=d[e+2])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(te>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&te)+((s=((_=d[e+3])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(re>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&re))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,te=(c=(V>>>16)+(v>>>16)+((a=(65535&V)+(65535&v)+((s=(W>>>16)+(A>>>16)+((o=(65535&W)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,re=s<<16|65535&o,t=((V=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(W=s<<16|65535&o)<<4)^(W>>>2|V<<30)^(W>>>7|V<<25),r=(W>>>28|V<<4)^(V>>>2|W<<30)^(V>>>7|W<<25),n=(te>>>14|re<<18)^(te>>>18|re<<14)^(re>>>9|te<<23),i=(re>>>14|te<<18)^(re>>>18|te<<14)^(te>>>9|re<<23),b=(f=V&Z)^V&H^p,w=(g=W&X)^W&$^h,S=te&ne^~te&Y,E=re&ie^~re&J,v=q[e+4],A=q[e+5],v=(c=((x=d[e+4])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(Q>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&Q)+((s=((_=d[e+5])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(ee>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&ee))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,Q=(c=(G>>>16)+(v>>>16)+((a=(65535&G)+(65535&v)+((s=(K>>>16)+(A>>>16)+((o=(65535&K)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,ee=s<<16|65535&o,t=((G=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(K=s<<16|65535&o)<<4)^(K>>>2|G<<30)^(K>>>7|G<<25),r=(K>>>28|G<<4)^(G>>>2|K<<30)^(G>>>7|K<<25),n=(Q>>>14|ee<<18)^(Q>>>18|ee<<14)^(ee>>>9|Q<<23),i=(ee>>>14|Q<<18)^(ee>>>18|Q<<14)^(Q>>>9|ee<<23),b=(m=G&V)^G&Z^f,w=(y=K&W)^K&X^g,S=Q&te^~Q&ne,E=ee&re^~ee&ie,v=q[e+6],A=q[e+7],v=(c=((x=d[e+6])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(Y>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&Y)+((s=((_=d[e+7])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(J>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&J))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,Y=(c=(H>>>16)+(v>>>16)+((a=(65535&H)+(65535&v)+((s=($>>>16)+(A>>>16)+((o=(65535&$)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,J=s<<16|65535&o,H=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,$=s<<16|65535&o;c=(B>>>16)+(H>>>16)+((a=(65535&B)+(65535&H)+((s=(T>>>16)+($>>>16)+((o=(65535&T)+(65535&$))>>>16))>>>16))>>>16),this.h0h=c<<16|65535&a,this.h0l=s<<16|65535&o,c=(k>>>16)+(G>>>16)+((a=(65535&k)+(65535&G)+((s=(U>>>16)+(K>>>16)+((o=(65535&U)+(65535&K))>>>16))>>>16))>>>16),this.h1h=c<<16|65535&a,this.h1l=s<<16|65535&o,c=(I>>>16)+(V>>>16)+((a=(65535&I)+(65535&V)+((s=(R>>>16)+(W>>>16)+((o=(65535&R)+(65535&W))>>>16))>>>16))>>>16),this.h2h=c<<16|65535&a,this.h2l=s<<16|65535&o,c=(C>>>16)+(Z>>>16)+((a=(65535&C)+(65535&Z)+((s=(D>>>16)+(X>>>16)+((o=(65535&D)+(65535&X))>>>16))>>>16))>>>16),this.h3h=c<<16|65535&a,this.h3l=s<<16|65535&o,c=(O>>>16)+(Y>>>16)+((a=(65535&O)+(65535&Y)+((s=(N>>>16)+(J>>>16)+((o=(65535&N)+(65535&J))>>>16))>>>16))>>>16),this.h4h=c<<16|65535&a,this.h4l=s<<16|65535&o,c=(P>>>16)+(Q>>>16)+((a=(65535&P)+(65535&Q)+((s=(L>>>16)+(ee>>>16)+((o=(65535&L)+(65535&ee))>>>16))>>>16))>>>16),this.h5h=c<<16|65535&a,this.h5l=s<<16|65535&o,c=(j>>>16)+(te>>>16)+((a=(65535&j)+(65535&te)+((s=(z>>>16)+(re>>>16)+((o=(65535&z)+(65535&re))>>>16))>>>16))>>>16),this.h6h=c<<16|65535&a,this.h6l=s<<16|65535&o,c=(F>>>16)+(ne>>>16)+((a=(65535&F)+(65535&ne)+((s=(M>>>16)+(ie>>>16)+((o=(65535&M)+(65535&ie))>>>16))>>>16))>>>16),this.h7h=c<<16|65535&a,this.h7l=s<<16|65535&o},v.prototype.hex=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,i=this.h2h,o=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,p=this.h5h,h=this.h5l,d=this.h6h,f=this.h6l,g=this.h7h,m=this.h7l,y=this.bits,b=l[e>>28&15]+l[e>>24&15]+l[e>>20&15]+l[e>>16&15]+l[e>>12&15]+l[e>>8&15]+l[e>>4&15]+l[15&e]+l[t>>28&15]+l[t>>24&15]+l[t>>20&15]+l[t>>16&15]+l[t>>12&15]+l[t>>8&15]+l[t>>4&15]+l[15&t]+l[r>>28&15]+l[r>>24&15]+l[r>>20&15]+l[r>>16&15]+l[r>>12&15]+l[r>>8&15]+l[r>>4&15]+l[15&r]+l[n>>28&15]+l[n>>24&15]+l[n>>20&15]+l[n>>16&15]+l[n>>12&15]+l[n>>8&15]+l[n>>4&15]+l[15&n]+l[i>>28&15]+l[i>>24&15]+l[i>>20&15]+l[i>>16&15]+l[i>>12&15]+l[i>>8&15]+l[i>>4&15]+l[15&i]+l[o>>28&15]+l[o>>24&15]+l[o>>20&15]+l[o>>16&15]+l[o>>12&15]+l[o>>8&15]+l[o>>4&15]+l[15&o]+l[s>>28&15]+l[s>>24&15]+l[s>>20&15]+l[s>>16&15]+l[s>>12&15]+l[s>>8&15]+l[s>>4&15]+l[15&s];return y>=256&&(b+=l[a>>28&15]+l[a>>24&15]+l[a>>20&15]+l[a>>16&15]+l[a>>12&15]+l[a>>8&15]+l[a>>4&15]+l[15&a]),y>=384&&(b+=l[c>>28&15]+l[c>>24&15]+l[c>>20&15]+l[c>>16&15]+l[c>>12&15]+l[c>>8&15]+l[c>>4&15]+l[15&c]+l[u>>28&15]+l[u>>24&15]+l[u>>20&15]+l[u>>16&15]+l[u>>12&15]+l[u>>8&15]+l[u>>4&15]+l[15&u]+l[p>>28&15]+l[p>>24&15]+l[p>>20&15]+l[p>>16&15]+l[p>>12&15]+l[p>>8&15]+l[p>>4&15]+l[15&p]+l[h>>28&15]+l[h>>24&15]+l[h>>20&15]+l[h>>16&15]+l[h>>12&15]+l[h>>8&15]+l[h>>4&15]+l[15&h]),512==y&&(b+=l[d>>28&15]+l[d>>24&15]+l[d>>20&15]+l[d>>16&15]+l[d>>12&15]+l[d>>8&15]+l[d>>4&15]+l[15&d]+l[f>>28&15]+l[f>>24&15]+l[f>>20&15]+l[f>>16&15]+l[f>>12&15]+l[f>>8&15]+l[f>>4&15]+l[15&f]+l[g>>28&15]+l[g>>24&15]+l[g>>20&15]+l[g>>16&15]+l[g>>12&15]+l[g>>8&15]+l[g>>4&15]+l[15&g]+l[m>>28&15]+l[m>>24&15]+l[m>>20&15]+l[m>>16&15]+l[m>>12&15]+l[m>>8&15]+l[m>>4&15]+l[15&m]),b},v.prototype.toString=v.prototype.hex,v.prototype.digest=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,i=this.h2h,o=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,l=this.h5h,p=this.h5l,h=this.h6h,d=this.h6l,f=this.h7h,g=this.h7l,m=this.bits,y=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,i>>24&255,i>>16&255,i>>8&255,255&i,o>>24&255,o>>16&255,o>>8&255,255&o,s>>24&255,s>>16&255,s>>8&255,255&s];return m>=256&&y.push(a>>24&255,a>>16&255,a>>8&255,255&a),m>=384&&y.push(c>>24&255,c>>16&255,c>>8&255,255&c,u>>24&255,u>>16&255,u>>8&255,255&u,l>>24&255,l>>16&255,l>>8&255,255&l,p>>24&255,p>>16&255,p>>8&255,255&p),512==m&&y.push(h>>24&255,h>>16&255,h>>8&255,255&h,d>>24&255,d>>16&255,d>>8&255,255&d,f>>24&255,f>>16&255,f>>8&255,255&f,g>>24&255,g>>16&255,g>>8&255,255&g),y},v.prototype.array=v.prototype.digest,v.prototype.arrayBuffer=function(){this.finalize();var e=this.bits,t=new ArrayBuffer(e/8),r=new DataView(t);return r.setUint32(0,this.h0h),r.setUint32(4,this.h0l),r.setUint32(8,this.h1h),r.setUint32(12,this.h1l),r.setUint32(16,this.h2h),r.setUint32(20,this.h2l),r.setUint32(24,this.h3h),e>=256&&r.setUint32(28,this.h3l),e>=384&&(r.setUint32(32,this.h4h),r.setUint32(36,this.h4l),r.setUint32(40,this.h5h),r.setUint32(44,this.h5l)),512==e&&(r.setUint32(48,this.h6h),r.setUint32(52,this.h6l),r.setUint32(56,this.h7h),r.setUint32(60,this.h7l)),t},v.prototype.clone=function(){var e=new v(this.bits,!1);return this.copyTo(e),e},v.prototype.copyTo=function(e){var t=0,r=["h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","start","bytes","hBytes","finalized","hashed","lastByteIndex"];for(t=0;t<r.length;++t)e[r[t]]=this[r[t]];for(t=0;t<this.blocks.length;++t)e.blocks[t]=this.blocks[t]},A.prototype=new v,A.prototype.finalize=function(){if(v.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();v.call(this,this.bits,this.sharedMemory),this.update(this.oKeyPad),this.update(e),v.prototype.finalize.call(this)}},A.prototype.clone=function(){var e=new A([],this.bits,!1);this.copyTo(e),e.inner=this.inner;for(var t=0;t<this.oKeyPad.length;++t)e.oKeyPad[t]=this.oKeyPad[t];return e};var x=y(512);x.sha512=x,x.sha384=y(384),x.sha512_256=y(256),x.sha512_224=y(224),x.sha512.hmac=w(512),x.sha384.hmac=w(384),x.sha512_256.hmac=w(256),x.sha512_224.hmac=w(224),a?e.exports=x:(o.sha512=x.sha512,o.sha384=x.sha384,o.sha512_256=x.sha512_256,o.sha512_224=x.sha512_224,c&&(void 0===(n=function(){return x}.call(x,r,x,e))||(e.exports=n)))}()},4360:(e,t,r)=>{var n=r(592).stringify,i=r(9385);e.exports=function(e){return{parse:i(e),stringify:n}},e.exports.parse=i(),e.exports.stringify=n},9385:(e,t,r)=>{var n=null;const i=/(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/,o=/(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;e.exports=function(e){"use strict";var t={strict:!1,storeAsString:!1,alwaysParseAsBig:!1,useNativeBigInt:!1,protoAction:"error",constructorAction:"error"};if(null!=e){if(!0===e.strict&&(t.strict=!0),!0===e.storeAsString&&(t.storeAsString=!0),t.alwaysParseAsBig=!0===e.alwaysParseAsBig&&e.alwaysParseAsBig,t.useNativeBigInt=!0===e.useNativeBigInt&&e.useNativeBigInt,void 0!==e.constructorAction){if("error"!==e.constructorAction&&"ignore"!==e.constructorAction&&"preserve"!==e.constructorAction)throw new Error(`Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${e.constructorAction}`);t.constructorAction=e.constructorAction}if(void 0!==e.protoAction){if("error"!==e.protoAction&&"ignore"!==e.protoAction&&"preserve"!==e.protoAction)throw new Error(`Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${e.protoAction}`);t.protoAction=e.protoAction}}var s,a,c,u,l={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},p=function(e){throw{name:"SyntaxError",message:e,at:s,text:c}},h=function(e){return e&&e!==a&&p("Expected '"+e+"' instead of '"+a+"'"),a=c.charAt(s),s+=1,a},d=function(){var e,i="";for("-"===a&&(i="-",h("-"));a>="0"&&a<="9";)i+=a,h();if("."===a)for(i+=".";h()&&a>="0"&&a<="9";)i+=a;if("e"===a||"E"===a)for(i+=a,h(),"-"!==a&&"+"!==a||(i+=a,h());a>="0"&&a<="9";)i+=a,h();if(e=+i,isFinite(e))return null==n&&(n=r(5117)),i.length>15?t.storeAsString?i:t.useNativeBigInt?BigInt(i):new n(i):t.alwaysParseAsBig?t.useNativeBigInt?BigInt(e):new n(e):e;p("Bad number")},f=function(){var e,t,r,n="";if('"'===a)for(var i=s;h();){if('"'===a)return s-1>i&&(n+=c.substring(i,s-1)),h(),n;if("\\"===a){if(s-1>i&&(n+=c.substring(i,s-1)),h(),"u"===a){for(r=0,t=0;t<4&&(e=parseInt(h(),16),isFinite(e));t+=1)r=16*r+e;n+=String.fromCharCode(r)}else{if("string"!=typeof l[a])break;n+=l[a]}i=s}}p("Bad string")},g=function(){for(;a&&a<=" ";)h()};return u=function(){switch(g(),a){case"{":return function(){var e,r=Object.create(null);if("{"===a){if(h("{"),g(),"}"===a)return h("}"),r;for(;a;){if(e=f(),g(),h(":"),!0===t.strict&&Object.hasOwnProperty.call(r,e)&&p('Duplicate key "'+e+'"'),!0===i.test(e)?"error"===t.protoAction?p("Object contains forbidden prototype property"):"ignore"===t.protoAction?u():r[e]=u():!0===o.test(e)?"error"===t.constructorAction?p("Object contains forbidden constructor property"):"ignore"===t.constructorAction?u():r[e]=u():r[e]=u(),g(),"}"===a)return h("}"),r;h(","),g()}}p("Bad object")}();case"[":return function(){var e=[];if("["===a){if(h("["),g(),"]"===a)return h("]"),e;for(;a;){if(e.push(u()),g(),"]"===a)return h("]"),e;h(","),g()}}p("Bad array")}();case'"':return f();case"-":return d();default:return a>="0"&&a<="9"?d():function(){switch(a){case"t":return h("t"),h("r"),h("u"),h("e"),!0;case"f":return h("f"),h("a"),h("l"),h("s"),h("e"),!1;case"n":return h("n"),h("u"),h("l"),h("l"),null}p("Unexpected '"+a+"'")}()}},function(e,t){var r;return c=e+"",s=0,a=" ",r=u(),g(),a&&p("Syntax error"),"function"==typeof t?function e(r,n){var i,o=r[n];return o&&"object"==typeof o&&Object.keys(o).forEach((function(t){void 0!==(i=e(o,t))?o[t]=i:delete o[t]})),t.call(r,n,o)}({"":r},""):r}}},592:(e,t,r)=>{var n=r(5117),i=e.exports;!function(){"use strict";var e,t,r,o=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,s={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function a(e){return o.lastIndex=0,o.test(e)?'"'+e.replace(o,(function(e){var t=s[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}function c(i,o){var s,u,l,p,h,d=e,f=o[i],g=null!=f&&(f instanceof n||n.isBigNumber(f));switch(f&&"object"==typeof f&&"function"==typeof f.toJSON&&(f=f.toJSON(i)),"function"==typeof r&&(f=r.call(o,i,f)),typeof f){case"string":return g?f:a(f);case"number":return isFinite(f)?String(f):"null";case"boolean":case"null":case"bigint":return String(f);case"object":if(!f)return"null";if(e+=t,h=[],"[object Array]"===Object.prototype.toString.apply(f)){for(p=f.length,s=0;s<p;s+=1)h[s]=c(s,f)||"null";return l=0===h.length?"[]":e?"[\n"+e+h.join(",\n"+e)+"\n"+d+"]":"["+h.join(",")+"]",e=d,l}if(r&&"object"==typeof r)for(p=r.length,s=0;s<p;s+=1)"string"==typeof r[s]&&(l=c(u=r[s],f))&&h.push(a(u)+(e?": ":":")+l);else Object.keys(f).forEach((function(t){var r=c(t,f);r&&h.push(a(t)+(e?": ":":")+r)}));return l=0===h.length?"{}":e?"{\n"+e+h.join(",\n"+e)+"\n"+d+"}":"{"+h.join(",")+"}",e=d,l}}"function"!=typeof i.stringify&&(i.stringify=function(n,i,o){var s;if(e="",t="","number"==typeof o)for(s=0;s<o;s+=1)t+=" ";else"string"==typeof o&&(t=o);if(r=i,i&&"function"!=typeof i&&("object"!=typeof i||"number"!=typeof i.length))throw new Error("JSON.stringify");return c("",{"":n})})}()},3126:(e,t,r)=>{var n="function"==typeof Map&&Map.prototype,i=Object.getOwnPropertyDescriptor&&n?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,o=n&&i&&"function"==typeof i.get?i.get:null,s=n&&Map.prototype.forEach,a="function"==typeof Set&&Set.prototype,c=Object.getOwnPropertyDescriptor&&a?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,u=a&&c&&"function"==typeof c.get?c.get:null,l=a&&Set.prototype.forEach,p="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,h="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,d="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,f=Boolean.prototype.valueOf,g=Object.prototype.toString,m=Function.prototype.toString,y=String.prototype.match,b="function"==typeof BigInt?BigInt.prototype.valueOf:null,w=Object.getOwnPropertySymbols,v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,A="function"==typeof Symbol&&"object"==typeof Symbol.iterator,x=Object.prototype.propertyIsEnumerable,_=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null),S=r(4654).custom,E=S&&I(S)?S:null,B="function"==typeof Symbol&&void 0!==Symbol.toStringTag?Symbol.toStringTag:null;function T(e,t,r){var n="double"===(r.quoteStyle||t)?'"':"'";return n+e+n}function k(e){return String(e).replace(/"/g,"&quot;")}function U(e){return!("[object Array]"!==D(e)||B&&"object"==typeof e&&B in e)}function I(e){if(A)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!v)return!1;try{return v.call(e),!0}catch(e){}return!1}e.exports=function e(t,r,n,i){var a=r||{};if(C(a,"quoteStyle")&&"single"!==a.quoteStyle&&"double"!==a.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(C(a,"maxStringLength")&&("number"==typeof a.maxStringLength?a.maxStringLength<0&&a.maxStringLength!==1/0:null!==a.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var c=!C(a,"customInspect")||a.customInspect;if("boolean"!=typeof c)throw new TypeError('option "customInspect", if provided, must be `true` or `false`');if(C(a,"indent")&&null!==a.indent&&"\t"!==a.indent&&!(parseInt(a.indent,10)===a.indent&&a.indent>0))throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return N(t,a);if("number"==typeof t)return 0===t?1/0/t>0?"0":"-0":String(t);if("bigint"==typeof t)return String(t)+"n";var g=void 0===a.depth?5:a.depth;if(void 0===n&&(n=0),n>=g&&g>0&&"object"==typeof t)return U(t)?"[Array]":"[Object]";var w,x=function(e,t){var r;if("\t"===e.indent)r="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;r=Array(e.indent+1).join(" ")}return{base:r,prev:Array(t+1).join(r)}}(a,n);if(void 0===i)i=[];else if(O(i,t)>=0)return"[Circular]";function S(t,r,o){if(r&&(i=i.slice()).push(r),o){var s={depth:a.depth};return C(a,"quoteStyle")&&(s.quoteStyle=a.quoteStyle),e(t,s,n+1,i)}return e(t,a,n+1,i)}if("function"==typeof t){var R=function(e){if(e.name)return e.name;var t=y.call(m.call(e),/^function\s*([\w$]+)/);return t?t[1]:null}(t),P=M(t,S);return"[Function"+(R?": "+R:" (anonymous)")+"]"+(P.length>0?" { "+P.join(", ")+" }":"")}if(I(t)){var q=A?String(t).replace(/^(Symbol\(.*\))_[^)]*$/,"$1"):v.call(t);return"object"!=typeof t||A?q:L(q)}if((w=t)&&"object"==typeof w&&("undefined"!=typeof HTMLElement&&w instanceof HTMLElement||"string"==typeof w.nodeName&&"function"==typeof w.getAttribute)){for(var H="<"+String(t.nodeName).toLowerCase(),$=t.attributes||[],G=0;G<$.length;G++)H+=" "+$[G].name+"="+T(k($[G].value),"double",a);return H+=">",t.childNodes&&t.childNodes.length&&(H+="..."),H+"</"+String(t.nodeName).toLowerCase()+">"}if(U(t)){if(0===t.length)return"[]";var K=M(t,S);return x&&!function(e){for(var t=0;t<e.length;t++)if(O(e[t],"\n")>=0)return!1;return!0}(K)?"["+F(K,x)+"]":"[ "+K.join(", ")+" ]"}if(function(e){return!("[object Error]"!==D(e)||B&&"object"==typeof e&&B in e)}(t)){var V=M(t,S);return 0===V.length?"["+String(t)+"]":"{ ["+String(t)+"] "+V.join(", ")+" }"}if("object"==typeof t&&c){if(E&&"function"==typeof t[E])return t[E]();if("function"==typeof t.inspect)return t.inspect()}if(function(e){if(!o||!e||"object"!=typeof e)return!1;try{o.call(e);try{u.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var W=[];return s.call(t,(function(e,r){W.push(S(r,t,!0)+" => "+S(e,t))})),z("Map",o.call(t),W,x)}if(function(e){if(!u||!e||"object"!=typeof e)return!1;try{u.call(e);try{o.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var Z=[];return l.call(t,(function(e){Z.push(S(e,t))})),z("Set",u.call(t),Z,x)}if(function(e){if(!p||!e||"object"!=typeof e)return!1;try{p.call(e,p);try{h.call(e,h)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return j("WeakMap");if(function(e){if(!h||!e||"object"!=typeof e)return!1;try{h.call(e,h);try{p.call(e,p)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return j("WeakSet");if(function(e){if(!d||!e||"object"!=typeof e)return!1;try{return d.call(e),!0}catch(e){}return!1}(t))return j("WeakRef");if(function(e){return!("[object Number]"!==D(e)||B&&"object"==typeof e&&B in e)}(t))return L(S(Number(t)));if(function(e){if(!e||"object"!=typeof e||!b)return!1;try{return b.call(e),!0}catch(e){}return!1}(t))return L(S(b.call(t)));if(function(e){return!("[object Boolean]"!==D(e)||B&&"object"==typeof e&&B in e)}(t))return L(f.call(t));if(function(e){return!("[object String]"!==D(e)||B&&"object"==typeof e&&B in e)}(t))return L(S(String(t)));if(!function(e){return!("[object Date]"!==D(e)||B&&"object"==typeof e&&B in e)}(t)&&!function(e){return!("[object RegExp]"!==D(e)||B&&"object"==typeof e&&B in e)}(t)){var X=M(t,S),Y=_?_(t)===Object.prototype:t instanceof Object||t.constructor===Object,J=t instanceof Object?"":"null prototype",Q=!Y&&B&&Object(t)===t&&B in t?D(t).slice(8,-1):J?"Object":"",ee=(Y||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(Q||J?"["+[].concat(Q||[],J||[]).join(": ")+"] ":"");return 0===X.length?ee+"{}":x?ee+"{"+F(X,x)+"}":ee+"{ "+X.join(", ")+" }"}return String(t)};var R=Object.prototype.hasOwnProperty||function(e){return e in this};function C(e,t){return R.call(e,t)}function D(e){return g.call(e)}function O(e,t){if(e.indexOf)return e.indexOf(t);for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}function N(e,t){if(e.length>t.maxStringLength){var r=e.length-t.maxStringLength,n="... "+r+" more character"+(r>1?"s":"");return N(e.slice(0,t.maxStringLength),t)+n}return T(e.replace(/(['\\])/g,"\\$1").replace(/[\x00-\x1f]/g,P),"single",t)}function P(e){var t=e.charCodeAt(0),r={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return r?"\\"+r:"\\x"+(t<16?"0":"")+t.toString(16).toUpperCase()}function L(e){return"Object("+e+")"}function j(e){return e+" { ? }"}function z(e,t,r,n){return e+" ("+t+") {"+(n?F(r,n):r.join(", "))+"}"}function F(e,t){if(0===e.length)return"";var r="\n"+t.prev+t.base;return r+e.join(","+r)+"\n"+t.prev}function M(e,t){var r=U(e),n=[];if(r){n.length=e.length;for(var i=0;i<e.length;i++)n[i]=C(e,i)?t(e[i],e):""}var o,s="function"==typeof w?w(e):[];if(A){o={};for(var a=0;a<s.length;a++)o["$"+s[a]]=s[a]}for(var c in e)C(e,c)&&(r&&String(Number(c))===c&&c<e.length||A&&o["$"+c]instanceof Symbol||(/[^\w$]/.test(c)?n.push(t(c,e)+": "+t(e[c],e)):n.push(c+": "+t(e[c],e))));if("function"==typeof w)for(var u=0;u<s.length;u++)x.call(e,s[u])&&n.push("["+t(s[u])+"]: "+t(e[s[u]],e));return n}},3680:(e,t,r)=>{"use strict";var n=r(1801),i=r(7615),o=r(3126),s=n("%TypeError%"),a=n("%WeakMap%",!0),c=n("%Map%",!0),u=i("WeakMap.prototype.get",!0),l=i("WeakMap.prototype.set",!0),p=i("WeakMap.prototype.has",!0),h=i("Map.prototype.get",!0),d=i("Map.prototype.set",!0),f=i("Map.prototype.has",!0),g=function(e,t){for(var r,n=e;null!==(r=n.next);n=r)if(r.key===t)return n.next=r.next,r.next=e.next,e.next=r,r};e.exports=function(){var e,t,r,n={assert:function(e){if(!n.has(e))throw new s("Side channel does not contain "+o(e))},get:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return u(e,n)}else if(c){if(t)return h(t,n)}else if(r)return function(e,t){var r=g(e,t);return r&&r.value}(r,n)},has:function(n){if(a&&n&&("object"==typeof n||"function"==typeof n)){if(e)return p(e,n)}else if(c){if(t)return f(t,n)}else if(r)return function(e,t){return!!g(e,t)}(r,n);return!1},set:function(n,i){a&&n&&("object"==typeof n||"function"==typeof n)?(e||(e=new a),l(e,n,i)):c?(t||(t=new c),d(t,n,i)):(r||(r={key:{},next:null}),function(e,t,r){var n=g(e,t);n?n.value=r:e.next={key:t,next:e.next,value:r}}(r,n,i))}};return n}},2858:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function r(){this._defaults=[]}["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert","disableTLSCerts"].forEach((function(e){r.prototype[e]=function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return this._defaults.push({fn:e,args:r}),this}})),r.prototype._setDefaults=function(e){this._defaults.forEach((function(r){var n;e[r.fn].apply(e,function(e){if(Array.isArray(e))return t(e)}(n=r.args)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())}))},e.exports=r},5391:(e,t,r)=>{"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i;"undefined"!=typeof window?i=window:"undefined"==typeof self?(console.warn("Using browser-only version of superagent in non-browser environment"),i=void 0):i=self;var o=r(1069),s=r(5799),a=r(3065),c=r(4287),u=r(1960),l=r(969),p=r(2858);function h(){}e.exports=function(e,r){return"function"==typeof r?new t.Request("GET",e).end(r):1===arguments.length?new t.Request("GET",e):new t.Request(e,r)};var d=t=e.exports;t.Request=v,d.getXHR=function(){if(i.XMLHttpRequest&&(!i.location||"file:"!==i.location.protocol||!i.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}throw new Error("Browser-only version of superagent could not find XHR")};var f="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};function g(e){if(!u(e))return e;var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&m(t,r,e[r]);return t.join("&")}function m(e,t,r){if(void 0!==r)if(null!==r)if(Array.isArray(r))r.forEach((function(r){m(e,t,r)}));else if(u(r))for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&m(e,"".concat(t,"[").concat(n,"]"),r[n]);else e.push(encodeURI(t)+"="+encodeURIComponent(r));else e.push(encodeURI(t))}function y(e){for(var t,r,n={},i=e.split("&"),o=0,s=i.length;o<s;++o)-1===(r=(t=i[o]).indexOf("="))?n[decodeURIComponent(t)]="":n[decodeURIComponent(t.slice(0,r))]=decodeURIComponent(t.slice(r+1));return n}function b(e){return/[/+]json($|[^-\w])/i.test(e)}function w(e){this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!==this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var t=this.xhr.status;1223===t&&(t=204),this._setStatusProperties(t),this.headers=function(e){for(var t,r,n,i,o=e.split(/\r?\n/),s={},a=0,c=o.length;a<c;++a)-1!==(t=(r=o[a]).indexOf(":"))&&(n=r.slice(0,t).toLowerCase(),i=f(r.slice(t+1)),s[n]=i);return s}(this.xhr.getAllResponseHeaders()),this.header=this.headers,this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&e._responseType?this.body=this.xhr.response:this.body="HEAD"===this.req.method?null:this._parseBody(this.text?this.text:this.xhr.response)}function v(e,t){var r=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",(function(){var e,t=null,n=null;try{n=new w(r)}catch(e){return(t=new Error("Parser is unable to parse the response")).parse=!0,t.original=e,r.xhr?(t.rawResponse=void 0===r.xhr.responseType?r.xhr.responseText:r.xhr.response,t.status=r.xhr.status?r.xhr.status:null,t.statusCode=t.status):(t.rawResponse=null,t.status=null),r.callback(t)}r.emit("response",n);try{r._isResponseOK(n)||(e=new Error(n.statusText||n.text||"Unsuccessful HTTP response"))}catch(t){e=t}e?(e.original=t,e.response=n,e.status=n.status,r.callback(e,n)):r.callback(null,n)}))}function A(e,t,r){var n=d("DELETE",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n}d.serializeObject=g,d.parseString=y,d.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},d.serialize={"application/x-www-form-urlencoded":a.stringify,"application/json":s},d.parse={"application/x-www-form-urlencoded":y,"application/json":JSON.parse},l(w.prototype),w.prototype._parseBody=function(e){var t=d.parse[this.type];return this.req._parser?this.req._parser(this,e):(!t&&b(this.type)&&(t=d.parse["application/json"]),t&&e&&(e.length>0||e instanceof Object)?t(e):null)},w.prototype.toError=function(){var e=this.req,t=e.method,r=e.url,n="cannot ".concat(t," ").concat(r," (").concat(this.status,")"),i=new Error(n);return i.status=this.status,i.method=t,i.url=r,i},d.Response=w,o(v.prototype),c(v.prototype),v.prototype.type=function(e){return this.set("Content-Type",d.types[e]||e),this},v.prototype.accept=function(e){return this.set("Accept",d.types[e]||e),this},v.prototype.auth=function(e,t,r){1===arguments.length&&(t=""),"object"===n(t)&&null!==t&&(r=t,t=""),r||(r={type:"function"==typeof btoa?"basic":"auto"});var i=function(e){if("function"==typeof btoa)return btoa(e);throw new Error("Cannot use basic auth, btoa is not a function")};return this._auth(e,t,r,i)},v.prototype.query=function(e){return"string"!=typeof e&&(e=g(e)),e&&this._query.push(e),this},v.prototype.attach=function(e,t,r){if(t){if(this._data)throw new Error("superagent can't mix .send() and .attach()");this._getFormData().append(e,t,r||t.name)}return this},v.prototype._getFormData=function(){return this._formData||(this._formData=new i.FormData),this._formData},v.prototype.callback=function(e,t){if(this._shouldRetry(e,t))return this._retry();var r=this._callback;this.clearTimeout(),e&&(this._maxRetries&&(e.retries=this._retries-1),this.emit("error",e)),r(e,t)},v.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},v.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},v.prototype.ca=v.prototype.agent,v.prototype.buffer=v.prototype.ca,v.prototype.write=function(){throw new Error("Streaming is not supported in browser version of superagent")},v.prototype.pipe=v.prototype.write,v.prototype._isHost=function(e){return e&&"object"===n(e)&&!Array.isArray(e)&&"[object Object]"!==Object.prototype.toString.call(e)},v.prototype.end=function(e){this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=e||h,this._finalizeQueryString(),this._end()},v.prototype._setUploadTimeout=function(){var e=this;this._uploadTimeout&&!this._uploadTimeoutTimer&&(this._uploadTimeoutTimer=setTimeout((function(){e._timeoutError("Upload timeout of ",e._uploadTimeout,"ETIMEDOUT")}),this._uploadTimeout))},v.prototype._end=function(){if(this._aborted)return this.callback(new Error("The request has been aborted even before .end() was called"));var e=this;this.xhr=d.getXHR();var t=this.xhr,r=this._formData||this._data;this._setTimeouts(),t.onreadystatechange=function(){var r=t.readyState;if(r>=2&&e._responseTimeoutTimer&&clearTimeout(e._responseTimeoutTimer),4===r){var n;try{n=t.status}catch(e){n=0}if(!n){if(e.timedout||e._aborted)return;return e.crossDomainError()}e.emit("end")}};var n=function(t,r){r.total>0&&(r.percent=r.loaded/r.total*100,100===r.percent&&clearTimeout(e._uploadTimeoutTimer)),r.direction=t,e.emit("progress",r)};if(this.hasListeners("progress"))try{t.addEventListener("progress",n.bind(null,"download")),t.upload&&t.upload.addEventListener("progress",n.bind(null,"upload"))}catch(e){}t.upload&&this._setUploadTimeout();try{this.username&&this.password?t.open(this.method,this.url,!0,this.username,this.password):t.open(this.method,this.url,!0)}catch(e){return this.callback(e)}if(this._withCredentials&&(t.withCredentials=!0),!this._formData&&"GET"!==this.method&&"HEAD"!==this.method&&"string"!=typeof r&&!this._isHost(r)){var i=this._header["content-type"],o=this._serializer||d.serialize[i?i.split(";")[0]:""];!o&&b(i)&&(o=d.serialize["application/json"]),o&&(r=o(r))}for(var s in this.header)null!==this.header[s]&&Object.prototype.hasOwnProperty.call(this.header,s)&&t.setRequestHeader(s,this.header[s]);this._responseType&&(t.responseType=this._responseType),this.emit("request",this),t.send(void 0===r?null:r)},d.agent=function(){return new p},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach((function(e){p.prototype[e.toLowerCase()]=function(t,r){var n=new d.Request(e,t);return this._setDefaults(n),r&&n.end(r),n}})),p.prototype.del=p.prototype.delete,d.get=function(e,t,r){var n=d("GET",e);return"function"==typeof t&&(r=t,t=null),t&&n.query(t),r&&n.end(r),n},d.head=function(e,t,r){var n=d("HEAD",e);return"function"==typeof t&&(r=t,t=null),t&&n.query(t),r&&n.end(r),n},d.options=function(e,t,r){var n=d("OPTIONS",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},d.del=A,d.delete=A,d.patch=function(e,t,r){var n=d("PATCH",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},d.post=function(e,t,r){var n=d("POST",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n},d.put=function(e,t,r){var n=d("PUT",e);return"function"==typeof t&&(r=t,t=null),t&&n.send(t),r&&n.end(r),n}},1960:e=>{"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=function(e){return null!==e&&"object"===t(e)}},4287:(e,t,r)=>{"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i=r(1960);function o(e){if(e)return function(e){for(var t in o.prototype)Object.prototype.hasOwnProperty.call(o.prototype,t)&&(e[t]=o.prototype[t]);return e}(e)}e.exports=o,o.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),clearTimeout(this._uploadTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,delete this._uploadTimeoutTimer,this},o.prototype.parse=function(e){return this._parser=e,this},o.prototype.responseType=function(e){return this._responseType=e,this},o.prototype.serialize=function(e){return this._serializer=e,this},o.prototype.timeout=function(e){if(!e||"object"!==n(e))return this._timeout=e,this._responseTimeout=0,this._uploadTimeout=0,this;for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))switch(t){case"deadline":this._timeout=e.deadline;break;case"response":this._responseTimeout=e.response;break;case"upload":this._uploadTimeout=e.upload;break;default:console.warn("Unknown timeout option",t)}return this},o.prototype.retry=function(e,t){return 0!==arguments.length&&!0!==e||(e=1),e<=0&&(e=0),this._maxRetries=e,this._retries=0,this._retryCallback=t,this};var s=new Set(["ETIMEDOUT","ECONNRESET","EADDRINUSE","ECONNREFUSED","EPIPE","ENOTFOUND","ENETUNREACH","EAI_AGAIN"]),a=new Set([408,413,429,500,502,503,504,521,522,524]);o.prototype._shouldRetry=function(e,t){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var r=this._retryCallback(e,t);if(!0===r)return!0;if(!1===r)return!1}catch(e){console.error(e)}if(t&&t.status&&a.has(t.status))return!0;if(e){if(e.code&&s.has(e.code))return!0;if(e.timeout&&"ECONNABORTED"===e.code)return!0;if(e.crossDomain)return!0}return!1},o.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this.timedoutError=null,this._end()},o.prototype.then=function(e,t){var r=this;if(!this._fullfilledPromise){var n=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise((function(e,t){n.on("abort",(function(){if(!(r._maxRetries&&r._maxRetries>r._retries))if(r.timedout&&r.timedoutError)t(r.timedoutError);else{var e=new Error("Aborted");e.code="ABORTED",e.status=r.status,e.method=r.method,e.url=r.url,t(e)}})),n.end((function(r,n){r?t(r):e(n)}))}))}return this._fullfilledPromise.then(e,t)},o.prototype.catch=function(e){return this.then(void 0,e)},o.prototype.use=function(e){return e(this),this},o.prototype.ok=function(e){if("function"!=typeof e)throw new Error("Callback required");return this._okCallback=e,this},o.prototype._isResponseOK=function(e){return!!e&&(this._okCallback?this._okCallback(e):e.status>=200&&e.status<300)},o.prototype.get=function(e){return this._header[e.toLowerCase()]},o.prototype.getHeader=o.prototype.get,o.prototype.set=function(e,t){if(i(e)){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&this.set(r,e[r]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},o.prototype.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},o.prototype.field=function(e,t){if(null==e)throw new Error(".field(name, val) name can not be empty");if(this._data)throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");if(i(e)){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&this.field(r,e[r]);return this}if(Array.isArray(t)){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&this.field(e,t[n]);return this}if(null==t)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof t&&(t=String(t)),this._getFormData().append(e,t),this},o.prototype.abort=function(){return this._aborted||(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort")),this},o.prototype._auth=function(e,t,r,n){switch(r.type){case"basic":this.set("Authorization","Basic ".concat(n("".concat(e,":").concat(t))));break;case"auto":this.username=e,this.password=t;break;case"bearer":this.set("Authorization","Bearer ".concat(e))}return this},o.prototype.withCredentials=function(e){return void 0===e&&(e=!0),this._withCredentials=e,this},o.prototype.redirects=function(e){return this._maxRedirects=e,this},o.prototype.maxResponseSize=function(e){if("number"!=typeof e)throw new TypeError("Invalid argument");return this._maxResponseSize=e,this},o.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},o.prototype.send=function(e){var t=i(e),r=this._header["content-type"];if(this._formData)throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");if(t&&!this._data)Array.isArray(e)?this._data=[]:this._isHost(e)||(this._data={});else if(e&&this._data&&this._isHost(this._data))throw new Error("Can't merge these send calls");if(t&&i(this._data))for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(this._data[n]=e[n]);else"string"==typeof e?(r||this.type("form"),(r=this._header["content-type"])&&(r=r.toLowerCase().trim()),this._data="application/x-www-form-urlencoded"===r?this._data?"".concat(this._data,"&").concat(e):e:(this._data||"")+e):this._data=e;return!t||this._isHost(e)||r||this.type("json"),this},o.prototype.sortQuery=function(e){return this._sort=void 0===e||e,this},o.prototype._finalizeQueryString=function(){var e=this._query.join("&");if(e&&(this.url+=(this.url.includes("?")?"&":"?")+e),this._query.length=0,this._sort){var t=this.url.indexOf("?");if(t>=0){var r=this.url.slice(t+1).split("&");"function"==typeof this._sort?r.sort(this._sort):r.sort(),this.url=this.url.slice(0,t)+"?"+r.join("&")}}},o.prototype._appendQueryString=function(){console.warn("Unsupported")},o.prototype._timeoutError=function(e,t,r){if(!this._aborted){var n=new Error("".concat(e+t,"ms exceeded"));n.timeout=t,n.code="ECONNABORTED",n.errno=r,this.timedout=!0,this.timedoutError=n,this.abort(),this.callback(n)}},o.prototype._setTimeouts=function(){var e=this;this._timeout&&!this._timer&&(this._timer=setTimeout((function(){e._timeoutError("Timeout of ",e._timeout,"ETIME")}),this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout((function(){e._timeoutError("Response timeout of ",e._responseTimeout,"ETIMEDOUT")}),this._responseTimeout))}},969:(e,t,r)=>{"use strict";var n=r(3094);function i(e){if(e)return function(e){for(var t in i.prototype)Object.prototype.hasOwnProperty.call(i.prototype,t)&&(e[t]=i.prototype[t]);return e}(e)}e.exports=i,i.prototype.get=function(e){return this.header[e.toLowerCase()]},i.prototype._setHeaderProperties=function(e){var t=e["content-type"]||"";this.type=n.type(t);var r=n.params(t);for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(this[i]=r[i]);this.links={};try{e.link&&(this.links=n.parseLinks(e.link))}catch(e){}},i.prototype._setStatusProperties=function(e){var t=e/100|0;this.statusCode=e,this.status=this.statusCode,this.statusType=t,this.info=1===t,this.ok=2===t,this.redirect=3===t,this.clientError=4===t,this.serverError=5===t,this.error=(4===t||5===t)&&this.toError(),this.created=201===e,this.accepted=202===e,this.noContent=204===e,this.badRequest=400===e,this.unauthorized=401===e,this.notAcceptable=406===e,this.forbidden=403===e,this.notFound=404===e,this.unprocessableEntity=422===e}},3094:(e,t)=>{"use strict";function r(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var i=0,o=function(){};return{s:o,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,a=!0,c=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return a=e.done,e},e:function(e){c=!0,s=e},f:function(){try{a||null==r.return||r.return()}finally{if(c)throw s}}}}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}t.type=function(e){return e.split(/ *; */).shift()},t.params=function(e){var t,n={},i=r(e.split(/ *; */));try{for(i.s();!(t=i.n()).done;){var o=t.value.split(/ *= */),s=o.shift(),a=o.shift();s&&a&&(n[s]=a)}}catch(e){i.e(e)}finally{i.f()}return n},t.parseLinks=function(e){var t,n={},i=r(e.split(/ *, */));try{for(i.s();!(t=i.n()).done;){var o=t.value.split(/ *; */),s=o[0].slice(1,-1);n[o[1].split(/ *= */)[1].slice(1,-1)]=s}}catch(e){i.e(e)}finally{i.f()}return n},t.cleanHeader=function(e,t){return delete e["content-type"],delete e["content-length"],delete e["transfer-encoding"],delete e.host,t&&(delete e.authorization,delete e.cookie),e}},5335:e=>{"use strict";var t=String.prototype.replace,r=/%20/g,n="RFC3986";e.exports={default:n,formatters:{RFC1738:function(e){return t.call(e,r,"+")},RFC3986:function(e){return String(e)}},RFC1738:"RFC1738",RFC3986:n}},3065:(e,t,r)=>{"use strict";var n=r(4246),i=r(1688),o=r(5335);e.exports={formats:o,parse:i,stringify:n}},1688:(e,t,r)=>{"use strict";var n=r(4562),i=Object.prototype.hasOwnProperty,o=Array.isArray,s={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:n.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},c=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},u=function(e,t,r,n){if(e){var o=r.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,s=/(\[[^[\]]*])/g,a=r.depth>0&&/(\[[^[\]]*])/.exec(o),u=a?o.slice(0,a.index):o,l=[];if(u){if(!r.plainObjects&&i.call(Object.prototype,u)&&!r.allowPrototypes)return;l.push(u)}for(var p=0;r.depth>0&&null!==(a=s.exec(o))&&p<r.depth;){if(p+=1,!r.plainObjects&&i.call(Object.prototype,a[1].slice(1,-1))&&!r.allowPrototypes)return;l.push(a[1])}return a&&l.push("["+o.slice(a.index)+"]"),function(e,t,r,n){for(var i=n?t:c(t,r),o=e.length-1;o>=0;--o){var s,a=e[o];if("[]"===a&&r.parseArrays)s=[].concat(i);else{s=r.plainObjects?Object.create(null):{};var u="["===a.charAt(0)&&"]"===a.charAt(a.length-1)?a.slice(1,-1):a,l=parseInt(u,10);r.parseArrays||""!==u?!isNaN(l)&&a!==u&&String(l)===u&&l>=0&&r.parseArrays&&l<=r.arrayLimit?(s=[])[l]=i:s[u]=i:s={0:i}}i=s}return i}(l,t,r,n)}};e.exports=function(e,t){var r=function(e){if(!e)return s;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?s.charset:e.charset;return{allowDots:void 0===e.allowDots?s.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:s.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:s.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:s.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:s.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:s.comma,decoder:"function"==typeof e.decoder?e.decoder:s.decoder,delimiter:"string"==typeof e.delimiter||n.isRegExp(e.delimiter)?e.delimiter:s.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:s.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:s.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:s.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:s.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:s.strictNullHandling}}(t);if(""===e||null==e)return r.plainObjects?Object.create(null):{};for(var l="string"==typeof e?function(e,t){var r,u={},l=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,p=t.parameterLimit===1/0?void 0:t.parameterLimit,h=l.split(t.delimiter,p),d=-1,f=t.charset;if(t.charsetSentinel)for(r=0;r<h.length;++r)0===h[r].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[r]?f="utf-8":"utf8=%26%2310003%3B"===h[r]&&(f="iso-8859-1"),d=r,r=h.length);for(r=0;r<h.length;++r)if(r!==d){var g,m,y=h[r],b=y.indexOf("]="),w=-1===b?y.indexOf("="):b+1;-1===w?(g=t.decoder(y,s.decoder,f,"key"),m=t.strictNullHandling?null:""):(g=t.decoder(y.slice(0,w),s.decoder,f,"key"),m=n.maybeMap(c(y.slice(w+1),t),(function(e){return t.decoder(e,s.decoder,f,"value")}))),m&&t.interpretNumericEntities&&"iso-8859-1"===f&&(m=a(m)),y.indexOf("[]=")>-1&&(m=o(m)?[m]:m),i.call(u,g)?u[g]=n.combine(u[g],m):u[g]=m}return u}(e,r):e,p=r.plainObjects?Object.create(null):{},h=Object.keys(l),d=0;d<h.length;++d){var f=h[d],g=u(f,l[f],r,"string"==typeof e);p=n.merge(p,g,r)}return!0===r.allowSparse?p:n.compact(p)}},4246:(e,t,r)=>{"use strict";var n=r(3680),i=r(4562),o=r(5335),s=Object.prototype.hasOwnProperty,a={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},c=Array.isArray,u=Array.prototype.push,l=function(e,t){u.apply(e,c(t)?t:[t])},p=Date.prototype.toISOString,h=o.default,d={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:i.encode,encodeValuesOnly:!1,format:h,formatter:o.formatters[h],indices:!1,serializeDate:function(e){return p.call(e)},skipNulls:!1,strictNullHandling:!1},f=function e(t,r,o,s,a,u,p,h,f,g,m,y,b,w,v){var A,x=t;if(v.has(t))throw new RangeError("Cyclic object value");if("function"==typeof p?x=p(r,x):x instanceof Date?x=g(x):"comma"===o&&c(x)&&(x=i.maybeMap(x,(function(e){return e instanceof Date?g(e):e}))),null===x){if(s)return u&&!b?u(r,d.encoder,w,"key",m):r;x=""}if("string"==typeof(A=x)||"number"==typeof A||"boolean"==typeof A||"symbol"==typeof A||"bigint"==typeof A||i.isBuffer(x))return u?[y(b?r:u(r,d.encoder,w,"key",m))+"="+y(u(x,d.encoder,w,"value",m))]:[y(r)+"="+y(String(x))];var _,S=[];if(void 0===x)return S;if("comma"===o&&c(x))_=[{value:x.length>0?x.join(",")||null:void 0}];else if(c(p))_=p;else{var E=Object.keys(x);_=h?E.sort(h):E}for(var B=0;B<_.length;++B){var T=_[B],k="object"==typeof T&&void 0!==T.value?T.value:x[T];if(!a||null!==k){var U=c(x)?"function"==typeof o?o(r,T):r:r+(f?"."+T:"["+T+"]");v.set(t,!0);var I=n();l(S,e(k,U,o,s,a,u,p,h,f,g,m,y,b,w,I))}}return S};e.exports=function(e,t){var r,i=e,u=function(e){if(!e)return d;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||d.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var r=o.default;if(void 0!==e.format){if(!s.call(o.formatters,e.format))throw new TypeError("Unknown format option provided.");r=e.format}var n=o.formatters[r],i=d.filter;return("function"==typeof e.filter||c(e.filter))&&(i=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:d.addQueryPrefix,allowDots:void 0===e.allowDots?d.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:d.charsetSentinel,delimiter:void 0===e.delimiter?d.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:d.encode,encoder:"function"==typeof e.encoder?e.encoder:d.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:d.encodeValuesOnly,filter:i,format:r,formatter:n,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:d.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:d.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:d.strictNullHandling}}(t);"function"==typeof u.filter?i=(0,u.filter)("",i):c(u.filter)&&(r=u.filter);var p,h=[];if("object"!=typeof i||null===i)return"";p=t&&t.arrayFormat in a?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var g=a[p];r||(r=Object.keys(i)),u.sort&&r.sort(u.sort);for(var m=n(),y=0;y<r.length;++y){var b=r[y];u.skipNulls&&null===i[b]||l(h,f(i[b],b,g,u.strictNullHandling,u.skipNulls,u.encode?u.encoder:null,u.filter,u.sort,u.allowDots,u.serializeDate,u.format,u.formatter,u.encodeValuesOnly,u.charset,m))}var w=h.join(u.delimiter),v=!0===u.addQueryPrefix?"?":"";return u.charsetSentinel&&("iso-8859-1"===u.charset?v+="utf8=%26%2310003%3B&":v+="utf8=%E2%9C%93&"),w.length>0?v+w:""}},4562:(e,t,r)=>{"use strict";var n=r(5335),i=Object.prototype.hasOwnProperty,o=Array.isArray,s=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),a=function(e,t){for(var r=t&&t.plainObjects?Object.create(null):{},n=0;n<e.length;++n)void 0!==e[n]&&(r[n]=e[n]);return r};e.exports={arrayToObject:a,assign:function(e,t){return Object.keys(t).reduce((function(e,r){return e[r]=t[r],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],r=[],n=0;n<t.length;++n)for(var i=t[n],s=i.obj[i.prop],a=Object.keys(s),c=0;c<a.length;++c){var u=a[c],l=s[u];"object"==typeof l&&null!==l&&-1===r.indexOf(l)&&(t.push({obj:s,prop:u}),r.push(l))}return function(e){for(;e.length>1;){var t=e.pop(),r=t.obj[t.prop];if(o(r)){for(var n=[],i=0;i<r.length;++i)void 0!==r[i]&&n.push(r[i]);t.obj[t.prop]=n}}}(t),e},decode:function(e,t,r){var n=e.replace(/\+/g," ");if("iso-8859-1"===r)return n.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(n)}catch(e){return n}},encode:function(e,t,r,i,o){if(0===e.length)return e;var a=e;if("symbol"==typeof e?a=Symbol.prototype.toString.call(e):"string"!=typeof e&&(a=String(e)),"iso-8859-1"===r)return escape(a).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var c="",u=0;u<a.length;++u){var l=a.charCodeAt(u);45===l||46===l||95===l||126===l||l>=48&&l<=57||l>=65&&l<=90||l>=97&&l<=122||o===n.RFC1738&&(40===l||41===l)?c+=a.charAt(u):l<128?c+=s[l]:l<2048?c+=s[192|l>>6]+s[128|63&l]:l<55296||l>=57344?c+=s[224|l>>12]+s[128|l>>6&63]+s[128|63&l]:(u+=1,l=65536+((1023&l)<<10|1023&a.charCodeAt(u)),c+=s[240|l>>18]+s[128|l>>12&63]+s[128|l>>6&63]+s[128|63&l])}return c},isBuffer:function(e){return!(!e||"object"!=typeof e||!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e)))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(o(e)){for(var r=[],n=0;n<e.length;n+=1)r.push(t(e[n]));return r}return t(e)},merge:function e(t,r,n){if(!r)return t;if("object"!=typeof r){if(o(t))t.push(r);else{if(!t||"object"!=typeof t)return[t,r];(n&&(n.plainObjects||n.allowPrototypes)||!i.call(Object.prototype,r))&&(t[r]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(r);var s=t;return o(t)&&!o(r)&&(s=a(t,n)),o(t)&&o(r)?(r.forEach((function(r,o){if(i.call(t,o)){var s=t[o];s&&"object"==typeof s&&r&&"object"==typeof r?t[o]=e(s,r,n):t.push(r)}else t[o]=r})),t):Object.keys(r).reduce((function(t,o){var s=r[o];return i.call(t,o)?t[o]=e(t[o],s,n):t[o]=s,t}),s)}}},7765:function(e,t){!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var o=t(),s=t([1]),a=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),u=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),p=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function d(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function f(e,t,r,n,i){var o,s=0;for(o=0;o<i;o++)s|=e[t+o]^r[n+o];return(1&s-1>>>8)-1}function g(e,t,r,n){return f(e,t,r,n,16)}function m(e,t,r,n){return f(e,t,r,n,32)}function y(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,f=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,y=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=o,x=s,_=a,S=c,E=u,B=l,T=p,k=h,U=d,I=f,R=g,C=m,D=y,O=b,N=w,P=v,L=0;L<20;L+=2)A^=(i=(D^=(i=(U^=(i=(E^=(i=A+D|0)<<7|i>>>25)+A|0)<<9|i>>>23)+E|0)<<13|i>>>19)+U|0)<<18|i>>>14,B^=(i=(x^=(i=(O^=(i=(I^=(i=B+x|0)<<7|i>>>25)+B|0)<<9|i>>>23)+I|0)<<13|i>>>19)+O|0)<<18|i>>>14,R^=(i=(T^=(i=(_^=(i=(N^=(i=R+T|0)<<7|i>>>25)+R|0)<<9|i>>>23)+N|0)<<13|i>>>19)+_|0)<<18|i>>>14,P^=(i=(C^=(i=(k^=(i=(S^=(i=P+C|0)<<7|i>>>25)+P|0)<<9|i>>>23)+S|0)<<13|i>>>19)+k|0)<<18|i>>>14,A^=(i=(S^=(i=(_^=(i=(x^=(i=A+S|0)<<7|i>>>25)+A|0)<<9|i>>>23)+x|0)<<13|i>>>19)+_|0)<<18|i>>>14,B^=(i=(E^=(i=(k^=(i=(T^=(i=B+E|0)<<7|i>>>25)+B|0)<<9|i>>>23)+T|0)<<13|i>>>19)+k|0)<<18|i>>>14,R^=(i=(I^=(i=(U^=(i=(C^=(i=R+I|0)<<7|i>>>25)+R|0)<<9|i>>>23)+C|0)<<13|i>>>19)+U|0)<<18|i>>>14,P^=(i=(N^=(i=(O^=(i=(D^=(i=P+N|0)<<7|i>>>25)+P|0)<<9|i>>>23)+D|0)<<13|i>>>19)+O|0)<<18|i>>>14;A=A+o|0,x=x+s|0,_=_+a|0,S=S+c|0,E=E+u|0,B=B+l|0,T=T+p|0,k=k+h|0,U=U+d|0,I=I+f|0,R=R+g|0,C=C+m|0,D=D+y|0,O=O+b|0,N=N+w|0,P=P+v|0,e[0]=A>>>0&255,e[1]=A>>>8&255,e[2]=A>>>16&255,e[3]=A>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=_>>>0&255,e[9]=_>>>8&255,e[10]=_>>>16&255,e[11]=_>>>24&255,e[12]=S>>>0&255,e[13]=S>>>8&255,e[14]=S>>>16&255,e[15]=S>>>24&255,e[16]=E>>>0&255,e[17]=E>>>8&255,e[18]=E>>>16&255,e[19]=E>>>24&255,e[20]=B>>>0&255,e[21]=B>>>8&255,e[22]=B>>>16&255,e[23]=B>>>24&255,e[24]=T>>>0&255,e[25]=T>>>8&255,e[26]=T>>>16&255,e[27]=T>>>24&255,e[28]=k>>>0&255,e[29]=k>>>8&255,e[30]=k>>>16&255,e[31]=k>>>24&255,e[32]=U>>>0&255,e[33]=U>>>8&255,e[34]=U>>>16&255,e[35]=U>>>24&255,e[36]=I>>>0&255,e[37]=I>>>8&255,e[38]=I>>>16&255,e[39]=I>>>24&255,e[40]=R>>>0&255,e[41]=R>>>8&255,e[42]=R>>>16&255,e[43]=R>>>24&255,e[44]=C>>>0&255,e[45]=C>>>8&255,e[46]=C>>>16&255,e[47]=C>>>24&255,e[48]=D>>>0&255,e[49]=D>>>8&255,e[50]=D>>>16&255,e[51]=D>>>24&255,e[52]=O>>>0&255,e[53]=O>>>8&255,e[54]=O>>>16&255,e[55]=O>>>24&255,e[56]=N>>>0&255,e[57]=N>>>8&255,e[58]=N>>>16&255,e[59]=N>>>24&255,e[60]=P>>>0&255,e[61]=P>>>8&255,e[62]=P>>>16&255,e[63]=P>>>24&255}(e,t,r,n)}function b(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,f=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,y=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=0;A<20;A+=2)o^=(i=(y^=(i=(d^=(i=(u^=(i=o+y|0)<<7|i>>>25)+o|0)<<9|i>>>23)+u|0)<<13|i>>>19)+d|0)<<18|i>>>14,l^=(i=(s^=(i=(b^=(i=(f^=(i=l+s|0)<<7|i>>>25)+l|0)<<9|i>>>23)+f|0)<<13|i>>>19)+b|0)<<18|i>>>14,g^=(i=(p^=(i=(a^=(i=(w^=(i=g+p|0)<<7|i>>>25)+g|0)<<9|i>>>23)+w|0)<<13|i>>>19)+a|0)<<18|i>>>14,v^=(i=(m^=(i=(h^=(i=(c^=(i=v+m|0)<<7|i>>>25)+v|0)<<9|i>>>23)+c|0)<<13|i>>>19)+h|0)<<18|i>>>14,o^=(i=(c^=(i=(a^=(i=(s^=(i=o+c|0)<<7|i>>>25)+o|0)<<9|i>>>23)+s|0)<<13|i>>>19)+a|0)<<18|i>>>14,l^=(i=(u^=(i=(h^=(i=(p^=(i=l+u|0)<<7|i>>>25)+l|0)<<9|i>>>23)+p|0)<<13|i>>>19)+h|0)<<18|i>>>14,g^=(i=(f^=(i=(d^=(i=(m^=(i=g+f|0)<<7|i>>>25)+g|0)<<9|i>>>23)+m|0)<<13|i>>>19)+d|0)<<18|i>>>14,v^=(i=(w^=(i=(b^=(i=(y^=(i=v+w|0)<<7|i>>>25)+v|0)<<9|i>>>23)+y|0)<<13|i>>>19)+b|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=g>>>0&255,e[9]=g>>>8&255,e[10]=g>>>16&255,e[11]=g>>>24&255,e[12]=v>>>0&255,e[13]=v>>>8&255,e[14]=v>>>16&255,e[15]=v>>>24&255,e[16]=p>>>0&255,e[17]=p>>>8&255,e[18]=p>>>16&255,e[19]=p>>>24&255,e[20]=h>>>0&255,e[21]=h>>>8&255,e[22]=h>>>16&255,e[23]=h>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=f>>>0&255,e[29]=f>>>8&255,e[30]=f>>>16&255,e[31]=f>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function v(e,t,r,n,i,o,s){var a,c,u=new Uint8Array(16),l=new Uint8Array(64);for(c=0;c<16;c++)u[c]=0;for(c=0;c<8;c++)u[c]=o[c];for(;i>=64;){for(y(l,u,s,w),c=0;c<64;c++)e[t+c]=r[n+c]^l[c];for(a=1,c=8;c<16;c++)a=a+(255&u[c])|0,u[c]=255&a,a>>>=8;i-=64,t+=64,n+=64}if(i>0)for(y(l,u,s,w),c=0;c<i;c++)e[t+c]=r[n+c]^l[c];return 0}function A(e,t,r,n,i){var o,s,a=new Uint8Array(16),c=new Uint8Array(64);for(s=0;s<16;s++)a[s]=0;for(s=0;s<8;s++)a[s]=n[s];for(;r>=64;){for(y(c,a,i,w),s=0;s<64;s++)e[t+s]=c[s];for(o=1,s=8;s<16;s++)o=o+(255&a[s])|0,a[s]=255&o,o>>>=8;r-=64,t+=64}if(r>0)for(y(c,a,i,w),s=0;s<r;s++)e[t+s]=c[s];return 0}function x(e,t,r,n,i){var o=new Uint8Array(32);b(o,n,i,w);for(var s=new Uint8Array(8),a=0;a<8;a++)s[a]=n[a+16];return A(e,t,r,s,o)}function _(e,t,r,n,i,o,s){var a=new Uint8Array(32);b(a,o,s,w);for(var c=new Uint8Array(8),u=0;u<8;u++)c[u]=o[u+16];return v(e,t,r,n,i,c,a)}var S=function(e){var t,r,n,i,o,s,a,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,s=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|s<<2),a=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(s>>>11|a<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(a>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function E(e,t,r,n,i,o){var s=new S(o);return s.update(r,n,i),s.finish(e,t),0}function B(e,t,r,n,i,o){var s=new Uint8Array(16);return E(s,0,r,n,i,o),g(e,t,s,0)}function T(e,t,r,n,i){var o;if(r<32)return-1;for(_(e,0,t,0,r,n,i),E(e,16,e,32,r-32,e),o=0;o<16;o++)e[o]=0;return 0}function k(e,t,r,n,i){var o,s=new Uint8Array(32);if(r<32)return-1;if(x(s,0,32,n,i),0!==B(t,16,t,32,r-32,s))return-1;for(_(e,0,t,0,r,n,i),o=0;o<32;o++)e[o]=0;return 0}function U(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function I(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function R(e,t,r){for(var n,i=~(r-1),o=0;o<16;o++)n=i&(e[o]^t[o]),e[o]^=n,t[o]^=n}function C(e,r){var n,i,o,s=t(),a=t();for(n=0;n<16;n++)a[n]=r[n];for(I(a),I(a),I(a),i=0;i<2;i++){for(s[0]=a[0]-65517,n=1;n<15;n++)s[n]=a[n]-65535-(s[n-1]>>16&1),s[n-1]&=65535;s[15]=a[15]-32767-(s[14]>>16&1),o=s[15]>>16&1,s[14]&=65535,R(a,s,1-o)}for(n=0;n<16;n++)e[2*n]=255&a[n],e[2*n+1]=a[n]>>8}function D(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return C(r,e),C(n,t),m(r,0,n,0)}function O(e){var t=new Uint8Array(32);return C(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function P(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function L(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function j(e,t,r){var n,i,o=0,s=0,a=0,c=0,u=0,l=0,p=0,h=0,d=0,f=0,g=0,m=0,y=0,b=0,w=0,v=0,A=0,x=0,_=0,S=0,E=0,B=0,T=0,k=0,U=0,I=0,R=0,C=0,D=0,O=0,N=0,P=r[0],L=r[1],j=r[2],z=r[3],F=r[4],M=r[5],q=r[6],H=r[7],$=r[8],G=r[9],K=r[10],V=r[11],W=r[12],Z=r[13],X=r[14],Y=r[15];o+=(n=t[0])*P,s+=n*L,a+=n*j,c+=n*z,u+=n*F,l+=n*M,p+=n*q,h+=n*H,d+=n*$,f+=n*G,g+=n*K,m+=n*V,y+=n*W,b+=n*Z,w+=n*X,v+=n*Y,s+=(n=t[1])*P,a+=n*L,c+=n*j,u+=n*z,l+=n*F,p+=n*M,h+=n*q,d+=n*H,f+=n*$,g+=n*G,m+=n*K,y+=n*V,b+=n*W,w+=n*Z,v+=n*X,A+=n*Y,a+=(n=t[2])*P,c+=n*L,u+=n*j,l+=n*z,p+=n*F,h+=n*M,d+=n*q,f+=n*H,g+=n*$,m+=n*G,y+=n*K,b+=n*V,w+=n*W,v+=n*Z,A+=n*X,x+=n*Y,c+=(n=t[3])*P,u+=n*L,l+=n*j,p+=n*z,h+=n*F,d+=n*M,f+=n*q,g+=n*H,m+=n*$,y+=n*G,b+=n*K,w+=n*V,v+=n*W,A+=n*Z,x+=n*X,_+=n*Y,u+=(n=t[4])*P,l+=n*L,p+=n*j,h+=n*z,d+=n*F,f+=n*M,g+=n*q,m+=n*H,y+=n*$,b+=n*G,w+=n*K,v+=n*V,A+=n*W,x+=n*Z,_+=n*X,S+=n*Y,l+=(n=t[5])*P,p+=n*L,h+=n*j,d+=n*z,f+=n*F,g+=n*M,m+=n*q,y+=n*H,b+=n*$,w+=n*G,v+=n*K,A+=n*V,x+=n*W,_+=n*Z,S+=n*X,E+=n*Y,p+=(n=t[6])*P,h+=n*L,d+=n*j,f+=n*z,g+=n*F,m+=n*M,y+=n*q,b+=n*H,w+=n*$,v+=n*G,A+=n*K,x+=n*V,_+=n*W,S+=n*Z,E+=n*X,B+=n*Y,h+=(n=t[7])*P,d+=n*L,f+=n*j,g+=n*z,m+=n*F,y+=n*M,b+=n*q,w+=n*H,v+=n*$,A+=n*G,x+=n*K,_+=n*V,S+=n*W,E+=n*Z,B+=n*X,T+=n*Y,d+=(n=t[8])*P,f+=n*L,g+=n*j,m+=n*z,y+=n*F,b+=n*M,w+=n*q,v+=n*H,A+=n*$,x+=n*G,_+=n*K,S+=n*V,E+=n*W,B+=n*Z,T+=n*X,k+=n*Y,f+=(n=t[9])*P,g+=n*L,m+=n*j,y+=n*z,b+=n*F,w+=n*M,v+=n*q,A+=n*H,x+=n*$,_+=n*G,S+=n*K,E+=n*V,B+=n*W,T+=n*Z,k+=n*X,U+=n*Y,g+=(n=t[10])*P,m+=n*L,y+=n*j,b+=n*z,w+=n*F,v+=n*M,A+=n*q,x+=n*H,_+=n*$,S+=n*G,E+=n*K,B+=n*V,T+=n*W,k+=n*Z,U+=n*X,I+=n*Y,m+=(n=t[11])*P,y+=n*L,b+=n*j,w+=n*z,v+=n*F,A+=n*M,x+=n*q,_+=n*H,S+=n*$,E+=n*G,B+=n*K,T+=n*V,k+=n*W,U+=n*Z,I+=n*X,R+=n*Y,y+=(n=t[12])*P,b+=n*L,w+=n*j,v+=n*z,A+=n*F,x+=n*M,_+=n*q,S+=n*H,E+=n*$,B+=n*G,T+=n*K,k+=n*V,U+=n*W,I+=n*Z,R+=n*X,C+=n*Y,b+=(n=t[13])*P,w+=n*L,v+=n*j,A+=n*z,x+=n*F,_+=n*M,S+=n*q,E+=n*H,B+=n*$,T+=n*G,k+=n*K,U+=n*V,I+=n*W,R+=n*Z,C+=n*X,D+=n*Y,w+=(n=t[14])*P,v+=n*L,A+=n*j,x+=n*z,_+=n*F,S+=n*M,E+=n*q,B+=n*H,T+=n*$,k+=n*G,U+=n*K,I+=n*V,R+=n*W,C+=n*Z,D+=n*X,O+=n*Y,v+=(n=t[15])*P,s+=38*(x+=n*j),a+=38*(_+=n*z),c+=38*(S+=n*F),u+=38*(E+=n*M),l+=38*(B+=n*q),p+=38*(T+=n*H),h+=38*(k+=n*$),d+=38*(U+=n*G),f+=38*(I+=n*K),g+=38*(R+=n*V),m+=38*(C+=n*W),y+=38*(D+=n*Z),b+=38*(O+=n*X),w+=38*(N+=n*Y),o=(n=(o+=38*(A+=n*L))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),o=(n=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=s,e[2]=a,e[3]=c,e[4]=u,e[5]=l,e[6]=p,e[7]=h,e[8]=d,e[9]=f,e[10]=g,e[11]=m,e[12]=y,e[13]=b,e[14]=w,e[15]=v}function z(e,t){j(e,t,t)}function F(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)z(i,i),2!==n&&4!==n&&j(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function M(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)z(i,i),1!==n&&j(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function q(e,r,n){var i,o,s=new Uint8Array(32),c=new Float64Array(80),u=t(),l=t(),p=t(),h=t(),d=t(),f=t();for(o=0;o<31;o++)s[o]=r[o];for(s[31]=127&r[31]|64,s[0]&=248,N(c,n),o=0;o<16;o++)l[o]=c[o],h[o]=u[o]=p[o]=0;for(u[0]=h[0]=1,o=254;o>=0;--o)R(u,l,i=s[o>>>3]>>>(7&o)&1),R(p,h,i),P(d,u,p),L(u,u,p),P(p,l,h),L(l,l,h),z(h,d),z(f,u),j(u,p,u),j(p,l,d),P(d,u,p),L(u,u,p),z(l,u),L(p,h,f),j(u,p,a),P(u,u,h),j(p,p,u),j(u,h,f),j(h,l,c),z(l,d),R(u,l,i),R(p,h,i);for(o=0;o<16;o++)c[o+16]=u[o],c[o+32]=p[o],c[o+48]=l[o],c[o+64]=h[o];var g=c.subarray(32),m=c.subarray(16);return F(g,g),j(m,m,g),C(e,m),0}function H(e,t){return q(e,t,i)}function $(e,t){return r(t,32),H(e,t)}function G(e,t,r){var i=new Uint8Array(32);return q(i,r,t),b(e,n,i,w)}S.prototype.blocks=function(e,t,r){for(var n,i,o,s,a,c,u,l,p,h,d,f,g,m,y,b,w,v,A,x=this.fin?0:2048,_=this.h[0],S=this.h[1],E=this.h[2],B=this.h[3],T=this.h[4],k=this.h[5],U=this.h[6],I=this.h[7],R=this.h[8],C=this.h[9],D=this.r[0],O=this.r[1],N=this.r[2],P=this.r[3],L=this.r[4],j=this.r[5],z=this.r[6],F=this.r[7],M=this.r[8],q=this.r[9];r>=16;)h=p=0,h+=(_+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*D,h+=(S+=8191&(n>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*q),h+=(E+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*M),h+=(B+=8191&(o>>>7|(s=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),p=(h+=(T+=8191&(s>>>4|(a=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*z))>>>13,h&=8191,h+=(k+=a>>>1&8191)*(5*j),h+=(U+=8191&(a>>>14|(c=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*L),h+=(I+=8191&(c>>>11|(u=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*P),h+=(R+=8191&(u>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*N),d=p+=(h+=(C+=l>>>5|x)*(5*O))>>>13,d+=_*O,d+=S*D,d+=E*(5*q),d+=B*(5*M),p=(d+=T*(5*F))>>>13,d&=8191,d+=k*(5*z),d+=U*(5*j),d+=I*(5*L),d+=R*(5*P),p+=(d+=C*(5*N))>>>13,d&=8191,f=p,f+=_*N,f+=S*O,f+=E*D,f+=B*(5*q),p=(f+=T*(5*M))>>>13,f&=8191,f+=k*(5*F),f+=U*(5*z),f+=I*(5*j),f+=R*(5*L),g=p+=(f+=C*(5*P))>>>13,g+=_*P,g+=S*N,g+=E*O,g+=B*D,p=(g+=T*(5*q))>>>13,g&=8191,g+=k*(5*M),g+=U*(5*F),g+=I*(5*z),g+=R*(5*j),m=p+=(g+=C*(5*L))>>>13,m+=_*L,m+=S*P,m+=E*N,m+=B*O,p=(m+=T*D)>>>13,m&=8191,m+=k*(5*q),m+=U*(5*M),m+=I*(5*F),m+=R*(5*z),y=p+=(m+=C*(5*j))>>>13,y+=_*j,y+=S*L,y+=E*P,y+=B*N,p=(y+=T*O)>>>13,y&=8191,y+=k*D,y+=U*(5*q),y+=I*(5*M),y+=R*(5*F),b=p+=(y+=C*(5*z))>>>13,b+=_*z,b+=S*j,b+=E*L,b+=B*P,p=(b+=T*N)>>>13,b&=8191,b+=k*O,b+=U*D,b+=I*(5*q),b+=R*(5*M),w=p+=(b+=C*(5*F))>>>13,w+=_*F,w+=S*z,w+=E*j,w+=B*L,p=(w+=T*P)>>>13,w&=8191,w+=k*N,w+=U*O,w+=I*D,w+=R*(5*q),v=p+=(w+=C*(5*M))>>>13,v+=_*M,v+=S*F,v+=E*z,v+=B*j,p=(v+=T*L)>>>13,v&=8191,v+=k*P,v+=U*N,v+=I*O,v+=R*D,A=p+=(v+=C*(5*q))>>>13,A+=_*q,A+=S*M,A+=E*F,A+=B*z,p=(A+=T*j)>>>13,A&=8191,A+=k*L,A+=U*P,A+=I*N,A+=R*O,_=h=8191&(p=(p=((p+=(A+=C*D)>>>13)<<2)+p|0)+(h&=8191)|0),S=d+=p>>>=13,E=f&=8191,B=g&=8191,T=m&=8191,k=y&=8191,U=b&=8191,I=w&=8191,R=v&=8191,C=A&=8191,t+=16,r-=16;this.h[0]=_,this.h[1]=S,this.h[2]=E,this.h[3]=B,this.h[4]=T,this.h[5]=k,this.h[6]=U,this.h[7]=I,this.h[8]=R,this.h[9]=C},S.prototype.finish=function(e,t){var r,n,i,o,s=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=r,r=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,s[0]=this.h[0]+5,r=s[0]>>>13,s[0]&=8191,o=1;o<10;o++)s[o]=this.h[o]+r,r=s[o]>>>13,s[o]&=8191;for(s[9]-=8192,n=(1^r)-1,o=0;o<10;o++)s[o]&=n;for(n=~n,o=0;o<10;o++)this.h[o]=this.h[o]&n|s[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},S.prototype.update=function(e,t,r){var n,i;if(this.leftover){for((i=16-this.leftover)>r&&(i=r),n=0;n<i;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(i=r-r%16,this.blocks(e,t,i),t+=i,r-=i),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var K=T,V=k,W=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Z(e,t,r,n){for(var i,o,s,a,c,u,l,p,h,d,f,g,m,y,b,w,v,A,x,_,S,E,B,T,k,U,I=new Int32Array(16),R=new Int32Array(16),C=e[0],D=e[1],O=e[2],N=e[3],P=e[4],L=e[5],j=e[6],z=e[7],F=t[0],M=t[1],q=t[2],H=t[3],$=t[4],G=t[5],K=t[6],V=t[7],Z=0;n>=128;){for(x=0;x<16;x++)_=8*x+Z,I[x]=r[_+0]<<24|r[_+1]<<16|r[_+2]<<8|r[_+3],R[x]=r[_+4]<<24|r[_+5]<<16|r[_+6]<<8|r[_+7];for(x=0;x<80;x++)if(i=C,o=D,s=O,a=N,c=P,u=L,l=j,h=F,d=M,f=q,g=H,m=$,y=G,b=K,B=65535&(E=V),T=E>>>16,k=65535&(S=z),U=S>>>16,B+=65535&(E=($>>>14|P<<18)^($>>>18|P<<14)^(P>>>9|$<<23)),T+=E>>>16,k+=65535&(S=(P>>>14|$<<18)^(P>>>18|$<<14)^($>>>9|P<<23)),U+=S>>>16,B+=65535&(E=$&G^~$&K),T+=E>>>16,k+=65535&(S=P&L^~P&j),U+=S>>>16,B+=65535&(E=W[2*x+1]),T+=E>>>16,k+=65535&(S=W[2*x]),U+=S>>>16,S=I[x%16],T+=(E=R[x%16])>>>16,k+=65535&S,U+=S>>>16,k+=(T+=(B+=65535&E)>>>16)>>>16,B=65535&(E=A=65535&B|T<<16),T=E>>>16,k=65535&(S=v=65535&k|(U+=k>>>16)<<16),U=S>>>16,B+=65535&(E=(F>>>28|C<<4)^(C>>>2|F<<30)^(C>>>7|F<<25)),T+=E>>>16,k+=65535&(S=(C>>>28|F<<4)^(F>>>2|C<<30)^(F>>>7|C<<25)),U+=S>>>16,T+=(E=F&M^F&q^M&q)>>>16,k+=65535&(S=C&D^C&O^D&O),U+=S>>>16,p=65535&(k+=(T+=(B+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,w=65535&B|T<<16,B=65535&(E=g),T=E>>>16,k=65535&(S=a),U=S>>>16,T+=(E=A)>>>16,k+=65535&(S=v),U+=S>>>16,D=i,O=o,N=s,P=a=65535&(k+=(T+=(B+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,L=c,j=u,z=l,C=p,M=h,q=d,H=f,$=g=65535&B|T<<16,G=m,K=y,V=b,F=w,x%16==15)for(_=0;_<16;_++)S=I[_],B=65535&(E=R[_]),T=E>>>16,k=65535&S,U=S>>>16,S=I[(_+9)%16],B+=65535&(E=R[(_+9)%16]),T+=E>>>16,k+=65535&S,U+=S>>>16,v=I[(_+1)%16],B+=65535&(E=((A=R[(_+1)%16])>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25)),T+=E>>>16,k+=65535&(S=(v>>>1|A<<31)^(v>>>8|A<<24)^v>>>7),U+=S>>>16,v=I[(_+14)%16],T+=(E=((A=R[(_+14)%16])>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26))>>>16,k+=65535&(S=(v>>>19|A<<13)^(A>>>29|v<<3)^v>>>6),U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,I[_]=65535&k|U<<16,R[_]=65535&B|T<<16;B=65535&(E=F),T=E>>>16,k=65535&(S=C),U=S>>>16,S=e[0],T+=(E=t[0])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[0]=C=65535&k|U<<16,t[0]=F=65535&B|T<<16,B=65535&(E=M),T=E>>>16,k=65535&(S=D),U=S>>>16,S=e[1],T+=(E=t[1])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[1]=D=65535&k|U<<16,t[1]=M=65535&B|T<<16,B=65535&(E=q),T=E>>>16,k=65535&(S=O),U=S>>>16,S=e[2],T+=(E=t[2])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[2]=O=65535&k|U<<16,t[2]=q=65535&B|T<<16,B=65535&(E=H),T=E>>>16,k=65535&(S=N),U=S>>>16,S=e[3],T+=(E=t[3])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[3]=N=65535&k|U<<16,t[3]=H=65535&B|T<<16,B=65535&(E=$),T=E>>>16,k=65535&(S=P),U=S>>>16,S=e[4],T+=(E=t[4])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[4]=P=65535&k|U<<16,t[4]=$=65535&B|T<<16,B=65535&(E=G),T=E>>>16,k=65535&(S=L),U=S>>>16,S=e[5],T+=(E=t[5])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[5]=L=65535&k|U<<16,t[5]=G=65535&B|T<<16,B=65535&(E=K),T=E>>>16,k=65535&(S=j),U=S>>>16,S=e[6],T+=(E=t[6])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[6]=j=65535&k|U<<16,t[6]=K=65535&B|T<<16,B=65535&(E=V),T=E>>>16,k=65535&(S=z),U=S>>>16,S=e[7],T+=(E=t[7])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[7]=z=65535&k|U<<16,t[7]=V=65535&B|T<<16,Z+=128,n-=128}return n}function X(e,t,r){var n,i=new Int32Array(8),o=new Int32Array(8),s=new Uint8Array(256),a=r;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,Z(i,o,t,r),r%=128,n=0;n<r;n++)s[n]=t[a-r+n];for(s[r]=128,s[(r=256-128*(r<112?1:0))-9]=0,d(s,r-8,a/536870912|0,a<<3),Z(i,o,s,r),n=0;n<8;n++)d(e,8*n,i[n],o[n]);return 0}function Y(e,r){var n=t(),i=t(),o=t(),s=t(),a=t(),c=t(),l=t(),p=t(),h=t();L(n,e[1],e[0]),L(h,r[1],r[0]),j(n,n,h),P(i,e[0],e[1]),P(h,r[0],r[1]),j(i,i,h),j(o,e[3],r[3]),j(o,o,u),j(s,e[2],r[2]),P(s,s,s),L(a,i,n),L(c,s,o),P(l,s,o),P(p,i,n),j(e[0],a,c),j(e[1],p,l),j(e[2],l,c),j(e[3],a,p)}function J(e,t,r){var n;for(n=0;n<4;n++)R(e[n],t[n],r)}function Q(e,r){var n=t(),i=t(),o=t();F(o,r[2]),j(n,r[0],o),j(i,r[1],o),C(e,i),e[31]^=O(n)<<7}function ee(e,t,r){var n,i;for(U(e[0],o),U(e[1],s),U(e[2],s),U(e[3],o),i=255;i>=0;--i)J(e,t,n=r[i/8|0]>>(7&i)&1),Y(t,e),Y(e,e),J(e,t,n)}function te(e,r){var n=[t(),t(),t(),t()];U(n[0],l),U(n[1],p),U(n[2],s),j(n[3],l,p),ee(e,n,r)}function re(e,n,i){var o,s=new Uint8Array(64),a=[t(),t(),t(),t()];for(i||r(n,32),X(s,n,32),s[0]&=248,s[31]&=127,s[31]|=64,te(a,s),Q(e,a),o=0;o<32;o++)n[o+32]=e[o];return 0}var ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ie(e,t){var r,n,i,o;for(n=63;n>=32;--n){for(r=0,i=n-32,o=n-12;i<o;++i)t[i]+=r-16*t[n]*ne[i-(n-32)],r=Math.floor((t[i]+128)/256),t[i]-=256*r;t[i]+=r,t[n]=0}for(r=0,i=0;i<32;i++)t[i]+=r-(t[31]>>4)*ne[i],r=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=r*ne[i];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function oe(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;ie(e,r)}function se(e,r,n,i){var o,s,a=new Uint8Array(64),c=new Uint8Array(64),u=new Uint8Array(64),l=new Float64Array(64),p=[t(),t(),t(),t()];X(a,i,32),a[0]&=248,a[31]&=127,a[31]|=64;var h=n+64;for(o=0;o<n;o++)e[64+o]=r[o];for(o=0;o<32;o++)e[32+o]=a[32+o];for(X(u,e.subarray(32),n+32),oe(u),te(p,u),Q(e,p),o=32;o<64;o++)e[o]=i[o];for(X(c,e,n+64),oe(c),o=0;o<64;o++)l[o]=0;for(o=0;o<32;o++)l[o]=u[o];for(o=0;o<32;o++)for(s=0;s<32;s++)l[o+s]+=c[o]*a[s];return ie(e.subarray(32),l),h}function ae(e,r,n,i){var a,u=new Uint8Array(32),l=new Uint8Array(64),p=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),i=t(),a=t(),u=t(),l=t(),p=t(),d=t();return U(e[2],s),N(e[1],r),z(a,e[1]),j(u,a,c),L(a,a,e[2]),P(u,e[2],u),z(l,u),z(p,l),j(d,p,l),j(n,d,a),j(n,n,u),M(n,n),j(n,n,a),j(n,n,u),j(n,n,u),j(e[0],n,u),z(i,e[0]),j(i,i,u),D(i,a)&&j(e[0],e[0],h),z(i,e[0]),j(i,i,u),D(i,a)?-1:(O(e[0])===r[31]>>7&&L(e[0],o,e[0]),j(e[3],e[0],e[1]),0)}(d,i))return-1;for(a=0;a<n;a++)e[a]=r[a];for(a=0;a<32;a++)e[a+32]=i[a];if(X(l,e,n),oe(l),ee(p,d,l),te(d,r.subarray(32)),Y(p,d),Q(u,p),n-=64,m(r,0,u,0)){for(a=0;a<n;a++)e[a]=0;return-1}for(a=0;a<n;a++)e[a]=r[a+64];return n}var ce=64,ue=32,le=64;function pe(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function he(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function de(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:_,crypto_stream:x,crypto_stream_salsa20_xor:v,crypto_stream_salsa20:A,crypto_onetimeauth:E,crypto_onetimeauth_verify:B,crypto_verify_16:g,crypto_verify_32:m,crypto_secretbox:T,crypto_secretbox_open:k,crypto_scalarmult:q,crypto_scalarmult_base:H,crypto_box_beforenm:G,crypto_box_afternm:K,crypto_box:function(e,t,r,n,i,o){var s=new Uint8Array(32);return G(s,i,o),K(e,t,r,n,s)},crypto_box_open:function(e,t,r,n,i,o){var s=new Uint8Array(32);return G(s,i,o),V(e,t,r,n,s)},crypto_box_keypair:$,crypto_hash:X,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:ae,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:ue,crypto_sign_SECRETKEYBYTES:le,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:ne,pack25519:C,unpack25519:N,M:j,A:P,S:z,Z:L,pow2523:M,add:Y,set25519:U,modL:ie,scalarmult:ee,scalarbase:te},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(32+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+32]=e[o];return T(i,n,n.length,t,r),i.subarray(16)},e.secretbox.open=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(16+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+16]=e[o];return n.length<32||0!==k(i,n,n.length,t,r)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(he(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return q(r,e,t),r},e.scalarMult.base=function(e){if(he(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return H(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox(t,r,o)},e.box.before=function(e,t){he(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return G(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox.open(t,r,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return $(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(he(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return H(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(he(e,t),t.length!==le)throw new Error("bad secret key size");var r=new Uint8Array(ce+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(he(e,t),t.length!==ue)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ae(r,e,e.length,t);if(n<0)return null;for(var i=new Uint8Array(n),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached=function(t,r){for(var n=e.sign(t,r),i=new Uint8Array(ce),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached.verify=function(e,t,r){if(he(e,t,r),t.length!==ce)throw new Error("bad signature size");if(r.length!==ue)throw new Error("bad public key size");var n,i=new Uint8Array(ce+e.length),o=new Uint8Array(ce+e.length);for(n=0;n<ce;n++)i[n]=t[n];for(n=0;n<e.length;n++)i[n+ce]=e[n];return ae(o,i,i.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(ue),t=new Uint8Array(le);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(he(e),e.length!==le)throw new Error("bad secret key size");for(var t=new Uint8Array(ue),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(he(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(ue),r=new Uint8Array(le),n=0;n<32;n++)r[n]=e[n];return re(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=ue,e.sign.secretKeyLength=le,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){he(e);var t=new Uint8Array(64);return X(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return he(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===f(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;t&&t.getRandomValues?e.setPRNG((function(e,r){var n,i=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(i.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=i[n];de(i)})):(t=__webpack_require__(518))&&t.randomBytes&&e.setPRNG((function(e,r){var n,i=t.randomBytes(r);for(n=0;n<r;n++)e[n]=i[n];de(i)}))}()}(void 0!==e&&e.exports?e.exports:self.nacl=self.nacl||{})},5922:(e,t,r)=>{var n=r(2486).Buffer;const{default:i}=r(1113),{setSendTransactionHeaders:o}=r(5180);e.exports={Algod:function(e="",t="http://r2.algorand.network",r=4180,s={}){let a=e;"string"==typeof a&&(a={"X-Algo-API-Token":a});const c=new i(a,t,r,s);function u(e){return void 0!==e.noteb64&&null!==e.noteb64&&(e.note=n.from(e.noteb64,"base64")),e}this.status=async(e={})=>(await c.get("/v1/status",{},e)).body,this.healthCheck=async(e={})=>{const t=await c.get("/health",{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}},this.statusAfterBlock=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");return(await c.get(`/v1/status/wait-for-block-after/${e}`,{},t)).body},this.pendingTransactions=async(e,t={})=>{if(!Number.isInteger(e))throw Error("maxTxns should be an integer");const r=await c.get("/v1/transactions/pending",{max:e},t);if(200===r.statusCode&&void 0!==r.body.truncatedTxns.transactions)for(let e=0;e<r.body.truncatedTxns.transactions.length;e++)r.body.truncatedTxns.transactions[e]=u(r.body.truncatedTxns.transactions[e]);return r.body},this.versions=async(e={})=>(await c.get("/versions",{},e)).body,this.ledgerSupply=async(e={})=>(await c.get("/v1/ledger/supply",{},e)).body,this.transactionByAddress=async(e,t=null,r=null,n=null,i={})=>{if(null!==t&&!Number.isInteger(t))throw Error("first round should be an integer");if(null!==r&&!Number.isInteger(r))throw Error("last round should be an integer");const o=await c.get(`/v1/account/${e}/transactions`,{firstRound:t,lastRound:r,max:n},i);if(200===o.statusCode&&void 0!==o.body.transactions)for(let e=0;e<o.body.transactions.length;e++)o.body.transactions[e]=u(o.body.transactions[e]);return o.body},this.transactionByAddressAndDate=async(e,t,r,n=null,i={})=>{const o=await c.get(`/v1/account/${e}/transactions`,{fromDate:t,toDate:r,max:n},i);if(200===o.statusCode&&void 0!==o.body.transactions)for(let e=0;e<o.body.transactions.length;e++)o.body.transactions[e]=u(o.body.transactions[e]);return o.body},this.transactionById=async(e,t={})=>{const r=await c.get(`/v1/transaction/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.transactionInformation=async(e,t,r={})=>{const n=await c.get(`/v1/account/${e}/transaction/${t}`,{},r);return 200===n.statusCode&&(n.body=u(n.body)),n.body},this.pendingTransactionInformation=async(e,t={})=>{const r=await c.get(`/v1/transactions/pending/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.accountInformation=async(e,t={})=>(await c.get(`/v1/account/${e}`,{},t)).body,this.assetInformation=async(e,t={})=>(await c.get(`/v1/asset/${e}`,{},t)).body,this.suggestedFee=async(e={})=>(await c.get("/v1/transactions/fee",{},e)).body,this.sendRawTransaction=async(e,t={})=>{const r=o(t);return(await c.post("/v1/transactions",n.from(e),r)).body},this.sendRawTransactions=async(e,t={})=>{const r=o(t),i=Array.prototype.concat(...e.map((e=>Array.from(e))));return(await c.post("/v1/transactions",n.from(i),r)).body},this.getTransactionParams=async(e={})=>(await c.get("/v1/transactions/params",{},e)).body,this.suggestParams=async(e={})=>{const t=await this.getTransactionParams(e);return{flatFee:!1,fee:t.fee,firstRound:t.lastRound,lastRound:t.lastRound+1e3,genesisID:t.genesisID,genesisHash:t.genesishashb64}},this.block=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");const r=await c.get(`/v1/block/${e}`,{},t);if(200===r.statusCode&&void 0!==r.body.txns.transactions)for(let e=0;e<r.body.txns.transactions.length;e++)r.body.txns.transactions[e]=u(r.body.txns.transactions[e]);return r.body}}}},1834:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(3033),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(9417);e.exports={DynamicFee:class{constructor(e,t,r,o,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("firstValid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("lastValid must be a positive number and smaller than 2^53-1");if(void 0===s&&(s=i.ALGORAND_ZERO_ADDRESS_STRING),void 0===a){const e=u.randomBytes(32);a=n.from(e).toString("base64")}const p=n.from("ASAFAgEHBgUmAyD+vKC7FEpaTqe0OKRoGsgObKEFvLYH/FZTJclWlfaiEyDmmpYeby1feshmB5JlUr6YI17TM2PKiJGLuck4qRW2+SB/g7Flf/H8U7ktwYFIodZd/C1LH6PWdyhK3dIAEm2QaTIEIhIzABAjEhAzAAcxABIQMwAIMQESEDEWIxIQMRAjEhAxBygSEDEJKRIQMQgkEhAxAiUSEDEEIQQSEDEGKhIQ","base64"),h=[t,r,o,e,s,a],d=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS,l.valTypes.ADDRESS,l.valTypes.BASE64],f=l.inject(p,[5,6,7,11,44,76],h,d);this.programBytes=f;const g=new c.LogicSig(f,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getDynamicFeeTransactions:function(e,t,r,n){if(!t.verify(i.decodeAddress(e.from).publicKey))throw new Error("invalid signature");e.fee=n,e.fee<p.ALGORAND_MIN_TX_FEE&&(e.fee=p.ALGORAND_MIN_TX_FEE);const a=u.keyPairFromSecretKey(r),c=i.encodeAddress(a.publicKey),{lease:l}=e;delete e.lease;const h=new p.Transaction(e);h.addLease(l,n);const d={from:c,to:e.from,fee:n,amount:h.fee,firstRound:e.firstRound,lastRound:e.lastRound,genesisHash:e.genesisHash,type:"pay"},f=new p.Transaction(d);f.addLease(l,n);const g=s.assignGroupID([f,h],void 0),m=g[0],y=g[1],b={lsig:t.get_obj_for_encoding(),txn:y.get_obj_for_encoding()},w=m.signTxn(r),v=o.encode(b),A=new Uint8Array(w.length+v.length);return A.set(w),A.set(v,w.length),A},signDynamicFee:function(e,t,r){const n=a.readProgram(e,void 0),o=n[0],s=n[1],l=u.keyPairFromSecretKey(t),p={from:i.encodeAddress(l.publicKey),to:i.encodeAddress(s[0]),fee:0,amount:o[2],closeRemainderTo:i.encodeAddress(s[1]),firstRound:o[3],lastRound:o[4],genesisHash:r,type:"pay",lease:new Uint8Array(s[2])},h=new c.LogicSig(e,void 0);return h.sign(t),{txn:p,lsig:h}}}},1786:(e,t,r)=>{var n=r(2486).Buffer;const i=r(3477),{keccak256:o}=r(583),s=r(5583),a=r(8800),c=r(2514),u=r(9417);e.exports={HTLC:class{constructor(e,t,r,i,o,s){if(!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");let u="";if("sha256"===r)u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQEpEhAxCSoSMQIlDRAREA==";else{if("keccak256"!==r)throw Error("hash function unrecognized");u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQIpEhAxCSoSMQIlDRAREA=="}if(32!==n.from(i,"base64").length)throw Error("hash image must be 32 bytes");const l=n.from(u,"base64"),p=[s,o,t,i,e],h=[c.valTypes.INT,c.valTypes.INT,c.valTypes.ADDRESS,c.valTypes.BASE64,c.valTypes.ADDRESS],d=c.inject(l,[3,6,10,42,76],p,h);this.programBytes=d;const f=new a.LogicSig(d,void 0);this.address=f.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},signTransactionWithHTLCUnlock:function(e,t,r){const c=n.from(r,"base64"),l=s.readProgram(e,void 0),p=l[0],h=l[1][1],d=e[e.length-15];if(1===d){const e=i.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("sha256 hash of preimage did not match stored contract hash")}else{if(2!==d)throw new Error("hash function in contract unrecognized");{const e=o.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("keccak256 hash of preimage did not match stored contract hash")}}const f=[c],g=new a.LogicSig(e,f);delete t.to;const m=p[0],y=new u.Transaction(t);if(y.fee>m)throw new Error(`final fee of payment transaction${y.fee.toString()}greater than transaction max fee${m.toString()}`);return a.signLogicSigTransaction(t,g)}}},8886:(e,t,r)=>{const n=r(1834),i=r(1786),o=r(4748),s=r(3758),a=r(2200);e.exports={DynamicFee:n.DynamicFee,getDynamicFeeTransactions:n.getDynamicFeeTransactions,signDynamicFee:n.signDynamicFee,HTLC:i.HTLC,signTransactionWithHTLCUnlock:i.signTransactionWithHTLCUnlock,LimitOrder:o.LimitOrder,getSwapAssetsTransaction:o.getSwapAssetsTransaction,Split:s.Split,getSplitFundsTransaction:s.getSplitFundsTransaction,PeriodicPayment:a.PeriodicPayment,getPeriodicPaymentWithdrawalTransaction:a.getPeriodicPaymentWithdrawalTransaction}},4748:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(1988),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(413);e.exports={LimitOrder:class{constructor(e,t,r,i,o,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("assetid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("ratn must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("ratd must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("minTrade must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(a)||a<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const u=n.from("ASAKAAEFAgYEBwgJCiYBIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMRYiEjEQIxIQMQEkDhAyBCMSQABVMgQlEjEIIQQNEDEJMgMSEDMBECEFEhAzAREhBhIQMwEUKBIQMwETMgMSEDMBEiEHHTUCNQExCCEIHTUENQM0ATQDDUAAJDQBNAMSNAI0BA8QQAAWADEJKBIxAiEJDRAxBzIDEhAxCCISEBA=","base64"),p=[a,s,t,i,r,o,e],h=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS],d=l.inject(u,[5,7,9,10,11,12,16],p,h);this.programBytes=d;const f=new c.LogicSig(d,void 0);this.address=f.address(),this.owner=e,this.assetid=t}getProgram(){return this.programBytes}getAddress(){return this.address}},getSwapAssetsTransaction:function(e,t,r,n,l,h,d,f){const g=u.keyPairFromSecretKey(n),m=i.encodeAddress(g.publicKey),y=a.readProgram(e,void 0),b=y[0],w=y[1];let v;const A=b[6],x=i.encodeAddress(w[0]),_=c.makeLogicSig(e,void 0),S=_.address(),E=[o.makePaymentTxn(S,m,l,r,v,h,d,void 0,f,void 0),o.makeAssetTransferTxn(m,x,v,void 0,l,t,h,d,void 0,f,void 0,A)],B=s.assignGroupID(E),T=b[7],k=b[8];if(t*T<r*k)throw new Error(`bad payment ratio, ${t.toString()}*${T.toString()} !>= ${r.toString()}*${k.toString()}`);const U=b[4];if(r<U)throw new Error(`payment amount ${r.toString()} less than minimum trade ${U.toString()}`);const I=b[2];if(B[0].fee>I)throw new Error(`final fee of payment transaction ${B[0].fee.toString()} greater than transaction max fee ${I.toString()}`);if(B[1].fee>I)throw new Error(`final fee of asset transaction ${B[1].fee.toString()} greater than transaction max fee ${I.toString()}`);const R=c.signLogicSigTransactionObject(B[0],_),C=B[1].signTxn(n);return p.concatArrays(R.blob,C)}}},2200:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(1988),s=r(5583),a=r(8800),c=r(9404),u=r(2514);e.exports={PeriodicPayment:class{constructor(e,t,r,i,o,s,u){if(this.receiver=e,!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(this.amount=t,!Number.isSafeInteger(r)||r<0)throw Error("withdrawalWindow must be a positive number and smaller than 2^53-1");if(this.withdrawalWindow=r,!Number.isSafeInteger(i)||i<0)throw Error("period must be a positive number and smaller than 2^53-1");if(this.period=i,!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(this.expiryRound=o,!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");if(this.maxFee=s,void 0===u){const e=c.randomBytes(32);this.lease=n.from(e).toString("base64")}else this.lease=u;this.programBytes=this.getProgram();const l=new a.LogicSig(this.programBytes,void 0);this.address=l.address()}getProgram(){const e=n.from("ASAHAQYFAAQDByYCIAECAwQFBgcIAQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIIJKvkYTkEzwJf2arzJOxERsSogG9nQzKPkpIoc4TzPTFMRAiEjEBIw4QMQIkGCUSEDEEIQQxAggSEDEGKBIQMQkyAxIxBykSEDEIIQUSEDEJKRIxBzIDEhAxAiEGDRAxCCUSEBEQ","base64"),t=[this.maxFee,this.period,this.withdrawalWindow,this.amount,this.expiryRound,this.lease,this.receiver],r=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.BASE64,u.valTypes.ADDRESS];return u.inject(e,[4,5,7,8,9,12,46],t,r)}getAddress(){return this.address}},getPeriodicPaymentWithdrawalTransaction:function(e,t,r,n){const c=s.readProgram(e,void 0),u=c[0],l=c[1],p=u[2],h=u[4],d=u[5];if(r%p!=0)throw new Error(`firstValid round ${r.toString()} was not a multiple of contract period ${p.toString()}`);const f=l[1],g=i.encodeAddress(f),m=l[0],y=new Uint8Array(m),b=r+h,w=g;let v,A;const x=a.makeLogicSig(e,void 0),_=x.address(),S={from:_,to:w,fee:t,amount:d,closeRemainderTo:v,firstRound:r,lastRound:b,note:A,genesisHash:n,genesisID:"",type:"pay",lease:y},E=o.makePaymentTxn(_,w,t,d,v,r,b,A,n,"");if(E.fee>u[1])throw new Error(`final fee of payment transaction${E.fee.toString()}greater than transaction max fee${u[1].toString()}`);return a.signLogicSigTransaction(S,x)}}},3758:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(1988),s=r(1063),a=r(8800),c=r(5583),u=r(2514),l=r(413);e.exports={Split:class{constructor(e,t,r,i,o,s,c,l){if(!Number.isSafeInteger(o)||o<0)throw Error("rat2 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("rat1 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(c)||c<0)throw Error("minPay must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(l)||l<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const p=n.from("ASAIAQUCAAYHCAkmAyCztwQn0+DycN+vsk+vJWcsoz/b7NDS6i33HOkvTpf+YiC3qUpIgHGWE8/1LPh9SGCalSN7IaITeeWSXbfsS5wsXyC4kBQ38Z8zcwWVAym4S8vpFB/c0XC6R4mnPi9EBADsPDEQIhIxASMMEDIEJBJAABkxCSgSMQcyAxIQMQglEhAxAiEEDRAiQAAuMwAAMwEAEjEJMgMSEDMABykSEDMBByoSEDMACCEFCzMBCCEGCxIQMwAIIQcPEBA=","base64"),h=[l,s,o,i,c,e,t,r],d=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.ADDRESS,u.valTypes.ADDRESS,u.valTypes.ADDRESS],f=u.inject(p,[4,7,8,9,10,14,47,80],h,d);this.programBytes=f;const g=a.makeLogicSig(f,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getSplitFundsTransaction:function(e,t,r,n,u,p){const h=c.readProgram(e,void 0),d=h[0],f=h[1];let g=d[6],m=d[5],y=0;const b=(e,t)=>{if("number"!=typeof e||"number"!=typeof t)throw new Error("gcd operates only on positive integers");return t?b(t,e%t):e},w=b(g,m);g=Math.floor(g/w),m=Math.floor(m/w);const v=m/g;y=Math.round(t/(1+v));const A=t-y;if(m*y!=g*A)throw Error("could not split funds in a way that satisfied the contract ratio");const x=a.makeLogicSig(e,void 0).address(),_=i.encodeAddress(f[1]),S=i.encodeAddress(f[2]),E=[o.makePaymentTxn(x,_,u,y,void 0,r,n,void 0,p),o.makePaymentTxn(x,S,u,A,void 0,r,n,void 0,p)],B=s.assignGroupID(E).map((e=>a.signLogicSigTransactionObject(e,a).blob));return l.concatArrays(B[0],B[1])}}},2514:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116);function o(e,t){let r=0;for(;t>128;)e.push(255&t|128),t>>=7,r+=1;return e.push(255&t),r+1}const s={INT:1,ADDRESS:2,BASE64:3};e.exports={inject:function(e,t,r,a){if(t.length!==r.length||t.length!==a.length)throw new Error("Lengths do not match");let c=e;function u(e,t,r,i){const o=e.slice(0,r),s=e.slice(r+i,e.length),a=[o,n.from(t),s];return n.concat(a)}for(let e=0;e<t.length;e++){let l=0,p=r[e];switch(a[e]){case s.INT:const r=[];l=o(r,p),c=u(c,r,t[e],1);break;case s.ADDRESS:p=i.decodeAddress(p),c=u(c,p.publicKey,t[e],32);break;case s.BASE64:const a=[];p=n.from(p,"base64"),o(a,p.length),p=n.concat([n.from(a),p]),c=u(c,p,t[e],33);break;default:throw new Error("unrecognized value type")}if(0!==l)for(let e=0;e<t.length;e++)t[e]+=l-1}return c},valTypes:s}},7677:(e,t,r)=>{"use strict";r.d(t,{JQ:()=>y,_4:()=>x,X3:()=>A,R0:()=>b,jD:()=>w,Yh:()=>O,bL:()=>N,Ls:()=>C,UV:()=>T,Ax:()=>v,A9:()=>B,w1:()=>_,NK:()=>f,RY:()=>m,Pu:()=>g,Vk:()=>c,nh:()=>p,kG:()=>a,qH:()=>l,JH:()=>u,vJ:()=>I,o5:()=>R,AE:()=>U,I5:()=>D});var n=r(7116),i=r(8922),o=r(413),s=r(2486).Buffer;const a=65535,c=32,u=1,l=1,p=2,h=/^([a-z\d[\](),]+)\[([1-9][\d]*)]$/,d=/^ufixed([1-9][\d]*)x([1-9][\d]*)$/;class f{static from(e){if(e.endsWith("[]")){const t=f.from(e.slice(0,e.length-2));return new x(t)}if(e.endsWith("]")){const t=e.match(h);if(3!==t.length)throw new Error(`malformed static array string: ${e}`);const r=t[2],n=parseInt(r,10);if(n>a)throw new Error(`array length exceeds limit ${a}`);const i=f.from(t[1]);return new A(i,n)}if(e.startsWith("uint")){const t=e=>[...e].every((e=>"0123456789".includes(e))),r=e.slice(4,e.length);if(!t(r))throw new Error(`malformed uint string: ${r}`);const n=parseInt(r,10);if(n>a)throw new Error(`malformed uint string: ${n}`);return new g(n)}if("byte"===e)return new w;if(e.startsWith("ufixed")){const t=e.match(d);if(3!==t.length)throw new Error(`malformed ufixed type: ${e}`);const r=parseInt(t[1],10),n=parseInt(t[2],10);return new m(r,n)}if("bool"===e)return new b;if("address"===e)return new y;if("string"===e)return new v;if(e.length>=2&&"("===e[0]&&")"===e[e.length-1]){const t=_.parseTupleContent(e.slice(1,e.length-1)),r=[];for(let e=0;e<t.length;e++){const n=f.from(t[e]);r.push(n)}return new _(r)}throw new Error(`cannot convert a string ${e} to an ABI type`)}}class g extends f{constructor(e){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported uint type bitSize: ${e}`);this.bitSize=e}toString(){return`uint${this.bitSize}`}equals(e){return e instanceof g&&this.bitSize===e.bitSize}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as uint${this.bitSize}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size uint${this.bitSize}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,i.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a uint${this.bitSize}`);return(0,i.v)(e)}}class m extends f{constructor(e,t){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported ufixed type bitSize: ${e}`);if(t>160||t<1)throw new Error(`unsupported ufixed type precision: ${t}`);this.bitSize=e,this.precision=t}toString(){return`ufixed${this.bitSize}x${this.precision}`}equals(e){return e instanceof m&&this.bitSize===e.bitSize&&this.precision===e.precision}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size ${this.toString()}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,i.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a ${this.toString()}`);return(0,i.v)(e)}}class y extends f{toString(){return"address"}equals(e){return e instanceof y}isDynamic(){return!1}byteLen(){return c}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if("string"==typeof e)return(0,n.decodeAddress)(e).publicKey;if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return e}decode(e){if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return(0,n.encodeAddress)(e)}}class b extends f{toString(){return"bool"}equals(e){return e instanceof b}isDynamic(){return!1}byteLen(){return l}encode(e){if("boolean"!=typeof e)throw new Error(`Cannot encode value as bool: ${e}`);return e?new Uint8Array([128]):new Uint8Array([0])}decode(e){if(1!==e.byteLength)throw new Error("bool string must be 1 byte long");const t=e[0];if(128===t)return!0;if(0===t)return!1;throw new Error("boolean could not be decoded from the byte string")}}class w extends f{toString(){return"byte"}equals(e){return e instanceof w}isDynamic(){return!1}byteLen(){return u}encode(e){if("number"!=typeof e&&"bigint"!=typeof e)throw new Error(`Cannot encode value as byte: ${e}`);if("bigint"==typeof e&&(e=Number(e)),e<0||e>255)throw new Error(`${e} cannot be encoded into a byte`);return new Uint8Array([e])}decode(e){if(1!==e.byteLength)throw new Error("byte string must be 1 byte long");return e[0]}}class v extends f{toString(){return"string"}equals(e){return e instanceof v}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as string: ${e}`);const t=s.from(e),r=(0,i.j)(e.length,p),n=new Uint8Array(e.length+p);return n.set(r),n.set(t,p),n}decode(e){if(e.length<p)throw new Error(`byte string is too short to be decoded. Actual length is ${e.length}, but expected at least ${p}`);const t=s.from(e).readUIntBE(0,p),r=e.slice(p,e.length);if(t!==r.length)throw new Error(`string length bytes do not match the actual length of string. Expected ${t}, got ${r.length}`);return s.from(r).toString("utf-8")}}class A extends f{constructor(e,t){if(super(),t<1)throw new Error(`static array must have a length greater than 0: ${t}`);this.childType=e,this.staticLength=t}toString(){return`${this.childType.toString()}[${this.staticLength}]`}equals(e){return e instanceof A&&this.staticLength===e.staticLength&&this.childType.equals(e.childType)}isDynamic(){return this.childType.isDynamic()}byteLen(){return this.childType.constructor===b?Math.ceil(this.staticLength/8):this.staticLength*this.childType.byteLen()}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e.length!==this.staticLength)throw new Error(`Value array does not match static array length. Expected ${this.staticLength}, got ${e.length}`);return this.toABITupleType().encode(e)}decode(e){return this.toABITupleType().decode(e)}toABITupleType(){return new _(Array(this.staticLength).fill(this.childType))}}class x extends f{constructor(e){super(),this.childType=e}toString(){return`${this.childType.toString()}[]`}equals(e){return e instanceof x&&this.childType.equals(e.childType)}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=this.toABITupleType(e.length),r=t.encode(e),n=(0,i.j)(t.childTypes.length,p);return(0,o.concatArrays)(n,r)}decode(e){const t=s.from(e).readUIntBE(0,p);return this.toABITupleType(t).decode(e.slice(p,e.length))}toABITupleType(e){return new _(Array(e).fill(this.childType))}}class _ extends f{constructor(e){if(super(),e.length>=a)throw new Error("tuple type child type number larger than maximum uint16 error");this.childTypes=e}toString(){const e=[];for(let t=0;t<this.childTypes.length;t++)e[t]=this.childTypes[t].toString();return`(${e.join(",")})`}equals(e){return e instanceof _&&this.childTypes.length===e.childTypes.length&&this.childTypes.every(((t,r)=>t.equals(e.childTypes[r])))}isDynamic(){return this.childTypes.some((e=>e.isDynamic()))}byteLen(){let e=0;for(let t=0;t<this.childTypes.length;t++)if(this.childTypes[t].constructor===b){const r=E(this.childTypes,t,1),n=r+1;t+=r,e+=Math.trunc((n+7)/8)}else e+=this.childTypes[t].byteLen();return e}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=Array.from(e);if(e.length>a)throw new Error("length of tuple array should not exceed a uint16");const r=this.childTypes,n=[],s=[],c=new Map;let u=0;for(;u<r.length;){const e=r[u];if(e.isDynamic())c.set(n.length,!0),n.push(new Uint8Array([0,0])),s.push(e.encode(t[u]));else{if(e.constructor===b){const e=E(r,u,-1);let o=E(r,u,1);if(e%8!=0)throw new Error("expected before index should have number of bool mod 8 equal 0");o=Math.min(7,o);const s=S(t.slice(u,u+o+1));n.push((0,i.j)(s,1)),u+=o}else{const r=e.encode(t[u]);n.push(r)}c.set(u,!1),s.push(new Uint8Array)}u+=1}let l=0;for(const e of n)l+=e.length;let h=0;for(let e=0;e<n.length;e++){if(c.get(e)){const t=l+h;if(t>a)throw new Error(`byte length of ${t} should not exceed a uint16`);n[e]=(0,i.j)(t,p)}h+=s[e].length}return(0,o.concatArrays)(...n,...s)}decode(e){const t=this.childTypes,r=[],n=[];let i=0,o=0;const a=s.from(e);for(;i<t.length;){const s=t[i];if(s.isDynamic()){if(e.slice(o,e.length).length<p)throw new Error("dynamic type in tuple is too short to be decoded");const t=a.readUIntBE(o,p);if(r.length>0&&(r[r.length-1].right=t,t<r[r.length-1].left))throw new Error("dynamic index segment miscalculation: left is greater than right index");const i={left:t,right:-1};r.push(i),n.push(null),o+=p}else if(s.constructor===b){const t=E(this.childTypes,i,-1);let r=E(this.childTypes,i,1);if(t%8!=0)throw new Error("expected before bool number mod 8 === 0");r=Math.min(7,r);for(let t=0;t<=r;t++){const r=128>>t;(e[o]&r)>0?n.push(new Uint8Array([128])):n.push(new Uint8Array([0]))}i+=r,o+=1}else{const t=s.byteLen();n.push(e.slice(o,o+t)),o+=t}if(i!==t.length-1&&o>=e.length)throw new Error("input byte not enough to decode");i+=1}if(r.length>0&&(r[r.length-1].right=e.length,o=e.length),o<e.length)throw new Error("input byte not fully consumed");for(let e=0;e<r.length;e++){const t=r[e];if(t.left>t.right)throw new Error("dynamic segment should display a [l, r] space with l <= r");if(e!==r.length-1&&t.right!==r[e+1].left)throw new Error("dynamic segment should be consecutive")}let c=0;for(let i=0;i<t.length;i++)t[i].isDynamic()&&(n[i]=e.slice(r[c].left,r[c].right),c+=1);const u=[];for(let e=0;e<t.length;e++){const r=t[e].decode(n[e]);u.push(r)}return u}static parseTupleContent(e){if(0===e.length)return[];if(e.endsWith(",")||e.startsWith(","))throw new Error("tuple string should not start with comma");if(e.includes(",,"))throw new Error("tuple string should not have consecutive commas");const t=[];let r=0,n="";for(const i of e)n+=i,"("===i?r+=1:")"===i?r-=1:","===i&&0===r&&(t.push(n.slice(0,n.length-1)),n="");if(0!==n.length&&t.push(n),0!==r)throw new Error("tuple string has mismatched parentheses");return t}}function S(e){let t=0;if(e.length>8)throw new Error("value list passed in should be no greater than length 8");for(let r=0;r<e.length;r++){const n=e[r];if("boolean"!=typeof n)throw new Error("non-boolean values cannot be compressed into a byte");n&&(t|=1<<7-r)}return t}function E(e,t,r){let n=0;for(;;){const i=t+r*n;if(e[i].constructor!==b){n-=1;break}if(i!==e.length-1&&1===r)n+=1;else{if(!(i>0&&-1===r))break;n+=1}}return n}var B,T,k=r(9404);function U(e){return e===B.any||e===B.pay||e===B.keyreg||e===B.acfg||e===B.axfer||e===B.afrz||e===B.appl}function I(e,t){return e===B.any||t.type&&t.type.toString()===e.toString()}function R(e){return e===T.account||e===T.application||e===T.asset}!function(e){e.any="txn",e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(B||(B={})),function(e){e.account="account",e.application="application",e.asset="asset"}(T||(T={}));class C{constructor(e){if("string"!=typeof e.name||"object"!=typeof e.returns||!Array.isArray(e.args))throw new Error("Invalid ABIMethod parameters");this.name=e.name,this.description=e.desc,this.args=e.args.map((({type:e,name:t,desc:r})=>U(e)||R(e)?{type:e,name:t,description:r}:{type:f.from(e),name:t,description:r})),this.returns={type:"void"===e.returns.type?e.returns.type:f.from(e.returns.type),description:e.returns.desc}}getSignature(){const e=this.args.map((e=>e.type.toString())).join(","),t=this.returns.type.toString();return`${this.name}(${e})${t}`}getSelector(){const e=(0,k.genericHash)(this.getSignature());return new Uint8Array(e.slice(0,4))}txnCount(){let e=1;for(const t of this.args)"string"==typeof t.type&&U(t.type)&&(e+=1);return e}toJSON(){return{name:this.name,desc:this.description,args:this.args.map((({type:e,name:t,description:r})=>({type:e.toString(),name:t,desc:r}))),returns:{type:this.returns.type.toString(),desc:this.returns.description}}}static fromSignature(e){const{name:t,args:r,returns:n}=function(e){const t=e.indexOf("(");if(-1===t)throw new Error(`Invalid method signature: ${e}`);let r=-1,n=0;for(let i=t;i<e.length;i++){const t=e[i];if("("===t)n+=1;else if(")"===t){if(0===n)break;if(n-=1,0===n){r=i;break}}}if(-1===r)throw new Error(`Invalid method signature: ${e}`);return{name:e.slice(0,t),args:_.parseTupleContent(e.slice(t+1,r)),returns:e.slice(r+1)}}(e);return new C({name:t,args:r.map((e=>({type:e}))),returns:{type:n}})}}function D(e,t){if(null===e||!Array.isArray(e)||!e.every((e=>e instanceof C)))throw new Error("Methods list provided is null or not the correct type");const r=e.filter((e=>e.name===t));if(r.length>1)throw new Error(`found ${r.length} methods with the same name ${r.map((e=>e.getSignature())).join(",")}`);if(0===r.length)throw new Error(`found 0 methods with the name ${t}`);return r[0]}class O{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods)||e.networks&&"object"!=typeof e.networks)throw new Error("Invalid ABIContract parameters");this.name=e.name,this.description=e.desc,this.networks=e.networks?{...e.networks}:{},this.methods=e.methods.map((e=>new C(e)))}toJSON(){return{name:this.name,desc:this.description,networks:this.networks,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return D(this.methods,e)}}class N{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods))throw new Error("Invalid ABIInterface parameters");this.name=e.name,this.description=e.desc,this.methods=e.methods.map((e=>new C(e)))}toJSON(){return{name:this.name,desc:this.description,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return D(this.methods,e)}}},7988:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(9404),i=r(7116);function o(){const e=n.keyPair();return{addr:i.encodeAddress(e.publicKey),sk:e.secretKey}}},2691:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(7116),i=r(3033),o=r(9404),s=r(413),a=r(2486).Buffer;class c{constructor({bidderKey:e,bidAmount:t,bidID:r,auctionKey:i,auctionID:o,maxPrice:s}){this.name="Bid",this.tag=a.from([97,66]);const c=n.decodeAddress(e),u=n.decodeAddress(i);if(!Number.isSafeInteger(t)||t<0)throw Error("Bid amount must be positive and 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("BidID must be positive and 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("auctionID must be positive");Object.assign(this,{bidderKey:c,bidAmount:t,bidID:r,auctionKey:u,auctionID:o,maxPrice:s})}get_obj_for_encoding(){return{bidder:a.from(this.bidderKey.publicKey),cur:this.bidAmount,price:this.maxPrice,id:this.bidID,auc:a.from(this.auctionKey.publicKey),aid:this.auctionID}}signBid(e){const t=i.encode(this.get_obj_for_encoding()),r=a.from(s.concatArrays(this.tag,t)),n=o.sign(r,e),c={t:"b",b:{sig:a.from(n),bid:this.get_obj_for_encoding()}};return new Uint8Array(i.encode(c))}}},1113:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>u});var n=r(413),i=r(5391),o=r(2486).Buffer;class s{constructor(e,t,r,n={}){this.defaultHeaders=n;const i=t.endsWith("/")?t:`${t}/`,o=new URL(i);if(void 0!==r&&(o.port=r.toString()),0===o.protocol.length)throw new Error("Invalid base server URL, protocol must be defined.");this.baseURL=o,this.tokenHeader=e}addressWithPath(e){let t;return t=e.startsWith("./")?e:e.startsWith("/")?`.${e}`:`./${e}`,new URL(t,this.baseURL).toString()}static superagentToHTTPClientResponse(e){return e.body instanceof ArrayBuffer&&(e.body=new Uint8Array(e.body)),e}static formatSuperagentError(e){if(e.response)try{const t=JSON.parse(o.from(e.response.body).toString());e.message=`Network request error. Received status ${e.response.status}: ${t.message}`}catch(e){}return e}async get(e,t,r={}){const n=i.get(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(r).responseType("arraybuffer").query(t);try{const e=await n;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}async post(e,t,r,n={}){const a=i.post(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(n).query(r).serialize((e=>e)).responseType("arraybuffer").send(o.from(t));try{const e=await a;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}async delete(e,t,r,n={}){const a=i.delete(this.addressWithPath(e)).set(this.tokenHeader).set(this.defaultHeaders).set(n).query(r).serialize((e=>e)).responseType("arraybuffer").send(o.from(t));try{const e=await a;return s.superagentToHTTPClientResponse(e)}catch(e){throw s.formatSuperagentError(e)}}}var a=r(2486).Buffer;function c(e){return Object.keys(e).reduce(((t,r)=>(t[r.toLowerCase()]=e[r],t)),{})}class u{constructor(e,t,r,n={}){this.bc=void 0!==t?new s(e,t,r,n):e}static parseJSON(e,t,r={}){try{return 0===Object.keys(r).length?e&&JSON.parse(e):e&&n.parseJSON(e,r)}catch(r){const n=r;throw n.rawResponse=e||null,n.statusCode=t,n}}static serializeData(e,t){if(!e)return new Uint8Array(0);if("application/json"===t["content-type"])return new Uint8Array(a.from(JSON.stringify(e)));if("string"==typeof e)return new Uint8Array(a.from(e));if(e instanceof Uint8Array)return e;throw new Error("provided data is neither a string nor a Uint8Array and content-type is not application/json")}static prepareResponse(e,t,r={}){let n,{body:i}=e;return"application/msgpack"!==t&&(n=i&&a.from(i).toString()||""),"application/json"===t&&(i=u.parseJSON(n,e.status,r)),{...e,body:i,text:n,ok:2===Math.trunc(e.status/100)}}static prepareResponseError(e){return e.response&&(e.response=u.prepareResponse(e.response,"application/json"),e.status=e.response.status),e}async get(e,t,r={},n={}){const i=function(e){return void 0!==e&&Object.prototype.hasOwnProperty.call(e,"format")&&"msgpack"===e.format?"application/msgpack":"application/json"}(t),o={...r,accept:i};try{const r=await this.bc.get(e,function(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(e[t]&&0!==e[t].length||delete e[t]);return e}(t),o);return u.prepareResponse(r,i,n)}catch(e){throw u.prepareResponseError(e)}}async post(e,t,r={}){const n={"content-type":"application/json",...c(r)};try{const r=await this.bc.post(e,u.serializeData(t,n),void 0,n);return u.prepareResponse(r,"application/json")}catch(e){throw u.prepareResponseError(e)}}async delete(e,t,r={}){const n={"content-type":"application/json",...c(r)},i=await this.bc.delete(e,u.serializeData(t,n),void 0,n);return u.prepareResponse(i,"application/json")}}},6477:(e,t,r)=>{"use strict";r.d(t,{Z:()=>s});var n=r(3480),i=r(9417),o=r(2486).Buffer;class s extends n.Z{constructor(e,t="http://127.0.0.1",r=7833,n={}){super("X-KMD-API-Token",e,t,r,n)}async versions(){return(await this.c.get("/versions")).body}async listWallets(){return(await this.c.get("/v1/wallets")).body}async createWallet(e,t,r=new Uint8Array,n="sqlite"){const i={wallet_name:e,wallet_driver_name:n,wallet_password:t,master_derivation_key:o.from(r).toString("base64")};return(await this.c.post("/v1/wallet",i)).body}async initWalletHandle(e,t){const r={wallet_id:e,wallet_password:t};return(await this.c.post("/v1/wallet/init",r)).body}async releaseWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/release",t)).body}async renewWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/renew",t)).body}async renameWallet(e,t,r){const n={wallet_id:e,wallet_password:t,wallet_name:r};return(await this.c.post("/v1/wallet/rename",n)).body}async getWallet(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/info",t)).body}async exportMasterDerivationKey(e,t){const r={wallet_handle_token:e,wallet_password:t},n=await this.c.post("/v1/master-key/export",r);return{master_derivation_key:o.from(n.body.master_derivation_key,"base64")}}async importKey(e,t){const r={wallet_handle_token:e,private_key:o.from(t).toString("base64")};return(await this.c.post("/v1/key/import",r)).body}async exportKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t},i=await this.c.post("/v1/key/export",n);return{private_key:o.from(i.body.private_key,"base64")}}async generateKey(e){const t={wallet_handle_token:e,display_mnemonic:!1};return(await this.c.post("/v1/key",t)).body}async deleteKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/key",n)).body}async listKeys(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/key/list",t)).body}async signTransaction(e,t,r){const n=i.instantiateTxnIfNeeded(r),s={wallet_handle_token:e,wallet_password:t,transaction:o.from(n.toByte()).toString("base64")},a=await this.c.post("/v1/transaction/sign",s);return 200===a.status?o.from(a.body.signed_transaction,"base64"):a.body}async signTransactionWithSpecificPublicKey(e,t,r,n){const s=i.instantiateTxnIfNeeded(r),a={wallet_handle_token:e,wallet_password:t,transaction:o.from(s.toByte()).toString("base64"),public_key:o.from(n).toString("base64")},c=await this.c.post("/v1/transaction/sign",a);return 200===c.status?o.from(c.body.signed_transaction,"base64"):c.body}async listMultisig(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/multisig/list",t)).body}async importMultisig(e,t,r,n){const i={wallet_handle_token:e,multisig_version:t,threshold:r,pks:n};return(await this.c.post("/v1/multisig/import",i)).body}async exportMultisig(e,t){const r={wallet_handle_token:e,address:t};return(await this.c.post("/v1/multisig/export",r)).body}async signMultisigTransaction(e,t,r,n,s){const a=i.instantiateTxnIfNeeded(r),c={wallet_handle_token:e,transaction:o.from(a.toByte()).toString("base64"),public_key:o.from(n).toString("base64"),partial_multisig:s,wallet_password:t};return(await this.c.post("/v1/multisig/sign",c)).body}async deleteMultisig(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/multisig",n)).body}}},1663:(e,t,r)=>{"use strict";r.d(t,{Z:()=>U});var n=r(3480),i=r(8680);class o extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}exclude(e){return this.query.exclude=e,this}}class s extends i.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.assetID=n,this.account=r,this.assetID=n}path(){return`/v2/accounts/${this.account}/assets/${this.assetID}`}}class a extends i.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.applicationID=n,this.account=r,this.applicationID=n}path(){return`/v2/accounts/${this.account}/applications/${this.applicationID}`}}var c=r(3033);class u extends i.Z{constructor(e,t){if(super(e),!Number.isInteger(t))throw Error("roundNumber should be an integer");this.round=t,this.query={format:"msgpack"}}path(){return`/v2/blocks/${this.round}`}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}}var l=r(2486).Buffer;function p(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="text/plain"),t}class h extends i.Z{constructor(e,t){super(e),this.source=t,this.source=t}path(){return"/v2/teal/compile"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),l.from(this.source),t)).body}}var d=r(2486).Buffer;class f extends i.Z{constructor(e,t){super(e),this.blob=c.encode(t.get_obj_for_encoding(!0))}path(){return"/v2/teal/dryrun"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),d.from(this.blob),t)).body}}class g extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}}class m extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}}class y extends i.Z{path(){return"/health"}async do(e={}){const t=await this.c.get(this.path(),{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}}}class b extends i.Z{constructor(e,t){super(e),this.txid=t,this.txid=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/transactions/pending/${this.txid}`}max(e){return this.query.max=e,this}}class w extends i.Z{constructor(e){super(e),this.query.format="msgpack"}path(){return"/v2/transactions/pending"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}max(e){return this.query.max=e,this}}class v extends i.Z{constructor(e,t){super(e),this.address=t,this.address=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/accounts/${this.address}/transactions/pending`}max(e){return this.query.max=e,this}}var A=r(5180);class x extends i.Z{path(){return"/v2/status"}}class _ extends i.Z{constructor(e,t,r){if(super(e,t),this.round=r,!Number.isInteger(r))throw Error("round should be an integer");this.round=r}path(){return`/v2/status/wait-for-block-after/${this.round}`}}class S extends i.Z{path(){return"/v2/transactions/params"}prepare(e){return{flatFee:!1,fee:e.fee,firstRound:e["last-round"],lastRound:e["last-round"]+1e3,genesisID:e["genesis-id"],genesisHash:e["genesis-hash"]}}}class E extends i.Z{path(){return"/v2/ledger/supply"}}class B extends i.Z{path(){return"/versions"}}class T extends i.Z{path(){return"/genesis"}}class k extends i.Z{constructor(e,t,r,n){super(e,t),this.round=r,this.txID=n,this.round=r,this.txID=n}path(){return`/v2/blocks/${this.round}/transactions/${this.txID}/proof`}}class U extends n.Z{constructor(e,t="http://r2.algorand.network",r=4180,n={}){super("X-Algo-API-Token",e,t,r,n)}healthCheck(){return new y(this.c)}versionsCheck(){return new B(this.c)}sendRawTransaction(e){return new A.default(this.c,e)}accountInformation(e){return new o(this.c,this.intDecoding,e)}accountAssetInformation(e,t){return new s(this.c,this.intDecoding,e,t)}accountApplicationInformation(e,t){return new a(this.c,this.intDecoding,e,t)}block(e){return new u(this.c,e)}pendingTransactionInformation(e){return new b(this.c,e)}pendingTransactionsInformation(){return new w(this.c)}pendingTransactionByAddress(e){return new v(this.c,e)}status(){return new x(this.c,this.intDecoding)}statusAfterBlock(e){return new _(this.c,this.intDecoding,e)}getTransactionParams(){return new S(this.c)}supply(){return new E(this.c,this.intDecoding)}compile(e){return new h(this.c,e)}dryrun(e){return new f(this.c,e)}getAssetByID(e){return new g(this.c,this.intDecoding,e)}getApplicationByID(e){return new m(this.c,this.intDecoding,e)}genesis(){return new T(this.c,this.intDecoding)}getProof(e,t){return new k(this.c,this.intDecoding,e,t)}}},227:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Account:()=>a,AccountApplicationResponse:()=>c,AccountAssetResponse:()=>u,AccountParticipation:()=>l,AccountStateDelta:()=>p,Application:()=>h,ApplicationLocalState:()=>d,ApplicationParams:()=>f,ApplicationStateSchema:()=>g,Asset:()=>m,AssetHolding:()=>y,AssetParams:()=>b,BlockResponse:()=>w,BuildVersion:()=>v,CatchpointAbortResponse:()=>A,CatchpointStartResponse:()=>x,CompileResponse:()=>_,DisassembleResponse:()=>S,DryrunRequest:()=>E,DryrunResponse:()=>B,DryrunSource:()=>T,DryrunState:()=>k,DryrunTxnResult:()=>U,ErrorResponse:()=>I,EvalDelta:()=>R,EvalDeltaKeyValue:()=>C,NodeStatusResponse:()=>D,PendingTransactionResponse:()=>O,PendingTransactionsResponse:()=>N,PostTransactionsResponse:()=>P,ProofResponse:()=>L,SupplyResponse:()=>j,TealKeyValue:()=>z,TealValue:()=>F,TransactionParametersResponse:()=>M,Version:()=>q});var n=r(2486).Buffer;function i(e,t){let r;if(e instanceof Uint8Array)r=t?e:n.from(e).toString("base64");else if("function"==typeof e.get_obj_for_encoding)r=e.get_obj_for_encoding(t);else if(Array.isArray(e)){r=[];for(const n of e)r.push(i(n,t))}else if("object"==typeof e){const n={};for(const r of Object.keys(e))n[r]=i(e[r],t);r=n}else{if(!function(e){return void 0===e||null==e||"object"!=typeof e&&"function"!=typeof e}(e))throw new Error(`Unsupported value: ${String(e)}`);r=e}return r}class o{get_obj_for_encoding(e=!1){const t={};for(const r of Object.keys(this.attribute_map)){const n=this.attribute_map[r],o=this[r];void 0!==o&&(t[n]=null===o?null:i(o,e))}return t}}var s=r(2486).Buffer;class a extends o{constructor({address:e,amount:t,amountWithoutPendingRewards:r,minBalance:n,pendingRewards:i,rewards:o,round:s,status:a,totalAppsOptedIn:c,totalAssetsOptedIn:u,totalCreatedApps:l,totalCreatedAssets:p,appsLocalState:h,appsTotalExtraPages:d,appsTotalSchema:f,assets:g,authAddr:m,createdApps:y,createdAssets:b,participation:w,rewardBase:v,sigType:A}){super(),this.address=e,this.amount=t,this.amountWithoutPendingRewards=r,this.minBalance=n,this.pendingRewards=i,this.rewards=o,this.round=s,this.status=a,this.totalAppsOptedIn=c,this.totalAssetsOptedIn=u,this.totalCreatedApps=l,this.totalCreatedAssets=p,this.appsLocalState=h,this.appsTotalExtraPages=d,this.appsTotalSchema=f,this.assets=g,this.authAddr=m,this.createdApps=y,this.createdAssets=b,this.participation=w,this.rewardBase=v,this.sigType=A,this.attribute_map={address:"address",amount:"amount",amountWithoutPendingRewards:"amount-without-pending-rewards",minBalance:"min-balance",pendingRewards:"pending-rewards",rewards:"rewards",round:"round",status:"status",totalAppsOptedIn:"total-apps-opted-in",totalAssetsOptedIn:"total-assets-opted-in",totalCreatedApps:"total-created-apps",totalCreatedAssets:"total-created-assets",appsLocalState:"apps-local-state",appsTotalExtraPages:"apps-total-extra-pages",appsTotalSchema:"apps-total-schema",assets:"assets",authAddr:"auth-addr",createdApps:"created-apps",createdAssets:"created-assets",participation:"participation",rewardBase:"reward-base",sigType:"sig-type"}}}class c extends o{constructor(e,t,r){super(),this.round=e,this.appLocalState=t,this.createdApp=r,this.attribute_map={round:"round",appLocalState:"app-local-state",createdApp:"created-app"}}}class u extends o{constructor(e,t,r){super(),this.round=e,this.assetHolding=t,this.createdAsset=r,this.attribute_map={round:"round",assetHolding:"asset-holding",createdAsset:"created-asset"}}}class l extends o{constructor({selectionParticipationKey:e,voteFirstValid:t,voteKeyDilution:r,voteLastValid:n,voteParticipationKey:i,stateProofKey:o}){super(),this.selectionParticipationKey="string"==typeof e?new Uint8Array(s.from(e,"base64")):e,this.voteFirstValid=t,this.voteKeyDilution=r,this.voteLastValid=n,this.voteParticipationKey="string"==typeof i?new Uint8Array(s.from(i,"base64")):i,this.stateProofKey="string"==typeof o?new Uint8Array(s.from(o,"base64")):o,this.attribute_map={selectionParticipationKey:"selection-participation-key",voteFirstValid:"vote-first-valid",voteKeyDilution:"vote-key-dilution",voteLastValid:"vote-last-valid",voteParticipationKey:"vote-participation-key",stateProofKey:"state-proof-key"}}}class p extends o{constructor(e,t){super(),this.address=e,this.delta=t,this.attribute_map={address:"address",delta:"delta"}}}class h extends o{constructor(e,t){super(),this.id=e,this.params=t,this.attribute_map={id:"id",params:"params"}}}class d extends o{constructor(e,t,r){super(),this.id=e,this.schema=t,this.keyValue=r,this.attribute_map={id:"id",schema:"schema",keyValue:"key-value"}}}class f extends o{constructor({approvalProgram:e,clearStateProgram:t,creator:r,extraProgramPages:n,globalState:i,globalStateSchema:o,localStateSchema:a}){super(),this.approvalProgram="string"==typeof e?new Uint8Array(s.from(e,"base64")):e,this.clearStateProgram="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.creator=r,this.extraProgramPages=n,this.globalState=i,this.globalStateSchema=o,this.localStateSchema=a,this.attribute_map={approvalProgram:"approval-program",clearStateProgram:"clear-state-program",creator:"creator",extraProgramPages:"extra-program-pages",globalState:"global-state",globalStateSchema:"global-state-schema",localStateSchema:"local-state-schema"}}}class g extends o{constructor(e,t){super(),this.numUint=e,this.numByteSlice=t,this.attribute_map={numUint:"num-uint",numByteSlice:"num-byte-slice"}}}class m extends o{constructor(e,t){super(),this.index=e,this.params=t,this.attribute_map={index:"index",params:"params"}}}class y extends o{constructor(e,t,r){super(),this.amount=e,this.assetId=t,this.isFrozen=r,this.attribute_map={amount:"amount",assetId:"asset-id",isFrozen:"is-frozen"}}}class b extends o{constructor({creator:e,decimals:t,total:r,clawback:n,defaultFrozen:i,freeze:o,manager:a,metadataHash:c,name:u,nameB64:l,reserve:p,unitName:h,unitNameB64:d,url:f,urlB64:g}){super(),this.creator=e,this.decimals=t,this.total=r,this.clawback=n,this.defaultFrozen=i,this.freeze=o,this.manager=a,this.metadataHash="string"==typeof c?new Uint8Array(s.from(c,"base64")):c,this.name=u,this.nameB64="string"==typeof l?new Uint8Array(s.from(l,"base64")):l,this.reserve=p,this.unitName=h,this.unitNameB64="string"==typeof d?new Uint8Array(s.from(d,"base64")):d,this.url=f,this.urlB64="string"==typeof g?new Uint8Array(s.from(g,"base64")):g,this.attribute_map={creator:"creator",decimals:"decimals",total:"total",clawback:"clawback",defaultFrozen:"default-frozen",freeze:"freeze",manager:"manager",metadataHash:"metadata-hash",name:"name",nameB64:"name-b64",reserve:"reserve",unitName:"unit-name",unitNameB64:"unit-name-b64",url:"url",urlB64:"url-b64"}}}class w extends o{constructor(e,t){super(),this.block=e,this.cert=t,this.attribute_map={block:"block",cert:"cert"}}}class v extends o{constructor({branch:e,buildNumber:t,channel:r,commitHash:n,major:i,minor:o}){super(),this.branch=e,this.buildNumber=t,this.channel=r,this.commitHash=n,this.major=i,this.minor=o,this.attribute_map={branch:"branch",buildNumber:"build_number",channel:"channel",commitHash:"commit_hash",major:"major",minor:"minor"}}}class A extends o{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}}class x extends o{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}}class _ extends o{constructor(e,t,r){super(),this.hash=e,this.result=t,this.sourcemap=r,this.attribute_map={hash:"hash",result:"result",sourcemap:"sourcemap"}}}class S extends o{constructor(e){super(),this.result=e,this.attribute_map={result:"result"}}}class E extends o{constructor({accounts:e,apps:t,latestTimestamp:r,protocolVersion:n,round:i,sources:o,txns:s}){super(),this.accounts=e,this.apps=t,this.latestTimestamp=r,this.protocolVersion=n,this.round=i,this.sources=o,this.txns=s,this.attribute_map={accounts:"accounts",apps:"apps",latestTimestamp:"latest-timestamp",protocolVersion:"protocol-version",round:"round",sources:"sources",txns:"txns"}}}class B extends o{constructor(e,t,r){super(),this.error=e,this.protocolVersion=t,this.txns=r,this.attribute_map={error:"error",protocolVersion:"protocol-version",txns:"txns"}}}class T extends o{constructor(e,t,r,n){super(),this.fieldName=e,this.source=t,this.txnIndex=r,this.appIndex=n,this.attribute_map={fieldName:"field-name",source:"source",txnIndex:"txn-index",appIndex:"app-index"}}}class k extends o{constructor({line:e,pc:t,stack:r,error:n,scratch:i}){super(),this.line=e,this.pc=t,this.stack=r,this.error=n,this.scratch=i,this.attribute_map={line:"line",pc:"pc",stack:"stack",error:"error",scratch:"scratch"}}}class U extends o{constructor({disassembly:e,appCallMessages:t,appCallTrace:r,budgetAdded:n,budgetConsumed:i,cost:o,globalDelta:s,localDeltas:a,logicSigDisassembly:c,logicSigMessages:u,logicSigTrace:l,logs:p}){super(),this.disassembly=e,this.appCallMessages=t,this.appCallTrace=r,this.budgetAdded=n,this.budgetConsumed=i,this.cost=o,this.globalDelta=s,this.localDeltas=a,this.logicSigDisassembly=c,this.logicSigMessages=u,this.logicSigTrace=l,this.logs=p,this.attribute_map={disassembly:"disassembly",appCallMessages:"app-call-messages",appCallTrace:"app-call-trace",budgetAdded:"budget-added",budgetConsumed:"budget-consumed",cost:"cost",globalDelta:"global-delta",localDeltas:"local-deltas",logicSigDisassembly:"logic-sig-disassembly",logicSigMessages:"logic-sig-messages",logicSigTrace:"logic-sig-trace",logs:"logs"}}}class I extends o{constructor(e,t){super(),this.message=e,this.data=t,this.attribute_map={message:"message",data:"data"}}}class R extends o{constructor(e,t,r){super(),this.action=e,this.bytes=t,this.uint=r,this.attribute_map={action:"action",bytes:"bytes",uint:"uint"}}}class C extends o{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}}class D extends o{constructor({catchupTime:e,lastRound:t,lastVersion:r,nextVersion:n,nextVersionRound:i,nextVersionSupported:o,stoppedAtUnsupportedRound:s,timeSinceLastRound:a,catchpoint:c,catchpointAcquiredBlocks:u,catchpointProcessedAccounts:l,catchpointTotalAccounts:p,catchpointTotalBlocks:h,catchpointVerifiedAccounts:d,lastCatchpoint:f}){super(),this.catchupTime=e,this.lastRound=t,this.lastVersion=r,this.nextVersion=n,this.nextVersionRound=i,this.nextVersionSupported=o,this.stoppedAtUnsupportedRound=s,this.timeSinceLastRound=a,this.catchpoint=c,this.catchpointAcquiredBlocks=u,this.catchpointProcessedAccounts=l,this.catchpointTotalAccounts=p,this.catchpointTotalBlocks=h,this.catchpointVerifiedAccounts=d,this.lastCatchpoint=f,this.attribute_map={catchupTime:"catchup-time",lastRound:"last-round",lastVersion:"last-version",nextVersion:"next-version",nextVersionRound:"next-version-round",nextVersionSupported:"next-version-supported",stoppedAtUnsupportedRound:"stopped-at-unsupported-round",timeSinceLastRound:"time-since-last-round",catchpoint:"catchpoint",catchpointAcquiredBlocks:"catchpoint-acquired-blocks",catchpointProcessedAccounts:"catchpoint-processed-accounts",catchpointTotalAccounts:"catchpoint-total-accounts",catchpointTotalBlocks:"catchpoint-total-blocks",catchpointVerifiedAccounts:"catchpoint-verified-accounts",lastCatchpoint:"last-catchpoint"}}}class O extends o{constructor({poolError:e,txn:t,applicationIndex:r,assetClosingAmount:n,assetIndex:i,closeRewards:o,closingAmount:s,confirmedRound:a,globalStateDelta:c,innerTxns:u,localStateDelta:l,logs:p,receiverRewards:h,senderRewards:d}){super(),this.poolError=e,this.txn=t,this.applicationIndex=r,this.assetClosingAmount=n,this.assetIndex=i,this.closeRewards=o,this.closingAmount=s,this.confirmedRound=a,this.globalStateDelta=c,this.innerTxns=u,this.localStateDelta=l,this.logs=p,this.receiverRewards=h,this.senderRewards=d,this.attribute_map={poolError:"pool-error",txn:"txn",applicationIndex:"application-index",assetClosingAmount:"asset-closing-amount",assetIndex:"asset-index",closeRewards:"close-rewards",closingAmount:"closing-amount",confirmedRound:"confirmed-round",globalStateDelta:"global-state-delta",innerTxns:"inner-txns",localStateDelta:"local-state-delta",logs:"logs",receiverRewards:"receiver-rewards",senderRewards:"sender-rewards"}}}class N extends o{constructor(e,t){super(),this.topTransactions=e,this.totalTransactions=t,this.attribute_map={topTransactions:"top-transactions",totalTransactions:"total-transactions"}}}class P extends o{constructor(e){super(),this.txid=e,this.attribute_map={txid:"txId"}}}class L extends o{constructor({idx:e,proof:t,stibhash:r,treedepth:n,hashtype:i}){super(),this.idx=e,this.proof="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.stibhash="string"==typeof r?new Uint8Array(s.from(r,"base64")):r,this.treedepth=n,this.hashtype=i,this.attribute_map={idx:"idx",proof:"proof",stibhash:"stibhash",treedepth:"treedepth",hashtype:"hashtype"}}}class j extends o{constructor(e,t,r){super(),this.currentRound=e,this.onlineMoney=t,this.totalMoney=r,this.attribute_map={currentRound:"current_round",onlineMoney:"online-money",totalMoney:"total-money"}}}class z extends o{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}}class F extends o{constructor(e,t,r){super(),this.type=e,this.bytes=t,this.uint=r,this.attribute_map={type:"type",bytes:"bytes",uint:"uint"}}}class M extends o{constructor({consensusVersion:e,fee:t,genesisHash:r,genesisId:n,lastRound:i,minFee:o}){super(),this.consensusVersion=e,this.fee=t,this.genesisHash="string"==typeof r?new Uint8Array(s.from(r,"base64")):r,this.genesisId=n,this.lastRound=i,this.minFee=o,this.attribute_map={consensusVersion:"consensus-version",fee:"fee",genesisHash:"genesis-hash",genesisId:"genesis-id",lastRound:"last-round",minFee:"min-fee"}}}class q extends o{constructor(e,t,r,n){super(),this.build=e,this.genesisHashB64="string"==typeof t?new Uint8Array(s.from(t,"base64")):t,this.genesisId=r,this.versions=n,this.attribute_map={build:"build",genesisHashB64:"genesis_hash_b64",genesisId:"genesis_id",versions:"versions"}}}},5180:(e,t,r)=>{"use strict";r.r(t),r.d(t,{setSendTransactionHeaders:()=>s,default:()=>c});var n=r(8680),i=r(413),o=r(2486).Buffer;function s(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="application/x-binary"),t}function a(e){return e&&void 0!==e.byteLength}class c extends n.Z{constructor(e,t){super(e);let r=t;if(Array.isArray(t)){if(!t.every(a))throw new TypeError("Array elements must be byte arrays");r=(0,i.concatArrays)(...t)}else if(!a(r))throw new TypeError("Argument must be byte array");this.txnBytesToPost=r}path(){return"/v2/transactions"}async do(e={}){const t=s(e);return(await this.c.post(this.path(),o.from(this.txnBytesToPost),t)).body}}},9582:(e,t,r)=>{"use strict";r.d(t,{Z:()=>E});var n=r(3480),i=r(8680);class o extends i.Z{path(){return"/health"}}class s extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/balances`}limit(e){return this.query.limit=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}var a=r(2486).Buffer;function c(e){return"string"==typeof e?e:a.from(e).toString("base64")}class u extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class l extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class p extends i.Z{constructor(e,t,r){super(e,t),this.round=r,this.round=r}path(){return`/v2/blocks/${this.round}`}}class h extends i.Z{constructor(e,t,r){super(e,t),this.txID=r,this.txID=r}path(){return`/v2/transactions/${this.txID}`}}class d extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}round(e){return this.query.round=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class f extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetId(e){return this.query["asset-id"]=e,this}}class g extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetID(e){return this.query["asset-id"]=e,this}}class m extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/apps-local-state`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class y extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-applications`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class b extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class w extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class v extends i.Z{constructor(e,t,r){super(e,t),this.appID=r,this.appID=r}path(){return`/v2/applications/${this.appID}/logs`}limit(e){return this.query.limit=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}nextToken(e){return this.query.next=e,this}sender(e){return this.query["sender-address"]=e,this}txid(e){return this.query.txid=e,this}}class A extends i.Z{path(){return"/v2/accounts"}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}limit(e){return this.query.limit=e,this}assetID(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}round(e){return this.query.round=e,this}authAddr(e){return this.query["auth-addr"]=e,this}applicationID(e){return this.query["application-id"]=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class x extends i.Z{path(){return"/v2/transactions"}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class _ extends i.Z{path(){return"/v2/assets"}limit(e){return this.query.limit=e,this}creator(e){return this.query.creator=e,this}name(e){return this.query.name=e,this}unit(e){return this.query.unit=e,this}index(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class S extends i.Z{path(){return"/v2/applications"}index(e){return this.query["application-id"]=e,this}creator(e){return this.query.creator=e,this}nextToken(e){return this.query.next=e,this}limit(e){return this.query.limit=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class E extends n.Z{constructor(e,t="http://127.0.0.1",r=8080,n={}){super("X-Indexer-API-Token",e,t,r,n)}makeHealthCheck(){return new o(this.c,this.intDecoding)}lookupAssetBalances(e){return new s(this.c,this.intDecoding,e)}lookupAssetTransactions(e){return new l(this.c,this.intDecoding,e)}lookupAccountTransactions(e){return new u(this.c,this.intDecoding,e)}lookupBlock(e){return new p(this.c,this.intDecoding,e)}lookupTransactionByID(e){return new h(this.c,this.intDecoding,e)}lookupAccountByID(e){return new d(this.c,this.intDecoding,e)}lookupAccountAssets(e){return new f(this.c,this.intDecoding,e)}lookupAccountCreatedAssets(e){return new g(this.c,this.intDecoding,e)}lookupAccountAppLocalStates(e){return new m(this.c,this.intDecoding,e)}lookupAccountCreatedApplications(e){return new y(this.c,this.intDecoding,e)}lookupAssetByID(e){return new b(this.c,this.intDecoding,e)}lookupApplications(e){return new w(this.c,this.intDecoding,e)}lookupApplicationLogs(e){return new v(this.c,this.intDecoding,e)}searchAccounts(){return new A(this.c,this.intDecoding)}searchForTransactions(){return new x(this.c,this.intDecoding)}searchForAssets(){return new _(this.c,this.intDecoding)}searchForApplications(){return new S(this.c,this.intDecoding)}}},8680:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(7197);class i{constructor(e,t){this.c=e,this.query={},this.intDecoding=t||n.Z.DEFAULT}prepare(e){return e}async do(e={}){const t={};"default"!==this.intDecoding&&(t.intDecoding=this.intDecoding);const r=await this.c.get(this.path(),this.query,e,t);return this.prepare(r.body)}setIntDecoding(e){if("default"!==e&&"safe"!==e&&"mixed"!==e&&"bigint"!==e)throw new Error(`Invalid method for int decoding: ${e}`);return this.intDecoding=e,this}}},3480:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(1113),i=r(7197);class o{constructor(e,t,r,o,s={}){if("function"==typeof t.get)this.c=new n.default(t);else{let i;i="string"==typeof t?function(e="",t){const r={};return r[t]=e,r}(t,e):t,this.c=new n.default(i,r,o,s)}this.intDecoding=i.Z.DEFAULT}setIntEncoding(e){this.intDecoding=e}getIntEncoding(){return this.intDecoding}}},3458:(e,t,r)=>{"use strict";r.d(t,{b:()=>h,A:()=>f});var n=r(7677),i=r(9417),o=r(1988),s=r(1063),a=r(5062),c=r(834),u=r(1624),l=r(2486).Buffer;const p=l.from([21,31,124,117]);var h;function d(e,t,r){if(null!=r&&e===r)return 0;const n=null==r?0:1;for(let r=0;r<t.length;r++)if(e===t[r])return r+n;return t.push(e),t.length-1+n}!function(e){e[e.BUILDING=0]="BUILDING",e[e.BUILT=1]="BUILT",e[e.SIGNED=2]="SIGNED",e[e.SUBMITTED=3]="SUBMITTED",e[e.COMMITTED=4]="COMMITTED"}(h||(h={}));class f{constructor(){this.status=h.BUILDING,this.transactions=[],this.methodCalls=new Map,this.signedTxns=[],this.txIDs=[]}getStatus(){return this.status}count(){return this.transactions.length}clone(){const e=new f;return e.transactions=this.transactions.map((({txn:e,signer:t})=>({txn:i.Transaction.from_obj_for_encoding({...e.get_obj_for_encoding(),grp:void 0}),signer:t}))),e.methodCalls=new Map(this.methodCalls),e}addTransaction(e){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length===f.MAX_GROUP_SIZE)throw new Error(`Adding an additional transaction exceeds the maximum atomic group size of ${f.MAX_GROUP_SIZE}`);if(e.txn.group&&e.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");this.transactions.push(e)}addMethodCall({appID:e,method:t,methodArgs:r,sender:i,suggestedParams:s,onComplete:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:m,numLocalInts:y,numLocalByteSlices:b,extraPages:w,note:v,lease:A,rekeyTo:x,signer:_}){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length+t.txnCount()>f.MAX_GROUP_SIZE)throw new Error(`Adding additional transactions exceeds the maximum atomic group size of ${f.MAX_GROUP_SIZE}`);if(0===e){if(null==l||null==p||null==g||null==m||null==y||null==b)throw new Error("One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices")}else if(a===u.hq.UpdateApplicationOC){if(null==l||null==p)throw new Error("One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram");if(null!=g||null!=m||null!=y||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages")}else if(null!=l||null!=p||null!=g||null!=m||null!=y||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages");if(null==r&&(r=[]),r.length!==t.args.length)throw new Error(`Incorrect number of method arguments. Expected ${t.args.length}, got ${r.length}`);let S=[],E=[];const B=[],T=[],k=[],U=new Map;for(let e=0;e<r.length;e++){let i=t.args[e].type;const o=r[e];if((0,n.AE)(i)){if(!(0,c.Xw)(o)||!(0,n.vJ)(i,o.txn))throw new Error(`Expected ${i} transaction for argument at index ${e}`);if(o.txn.group&&o.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");B.push(o)}else{if((0,c.Xw)(o))throw new Error(`Expected non-transaction value for argument at index ${e}`);if((0,n.o5)(i)&&(U.set(T.length,S.length),T.push(i),k.push(o),i=new n.Pu(8)),"string"==typeof i)throw new Error(`Unknown ABI type: ${i}`);S.push(i),E.push(o)}}const I=[],R=[],C=[],D=[];for(let t=0;t<T.length;t++){const r=T[t],o=k[t];let s=0;switch(r){case n.UV.account:{const e=new n.JQ;s=d(e.decode(e.encode(o)),R,i);break}case n.UV.application:{const t=new n.Pu(64),r=t.decode(t.encode(o));if(r>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for application value, got ${r}`);s=d(Number(r),C,e);break}case n.UV.asset:{const e=new n.Pu(64),t=e.decode(e.encode(o));if(t>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for asset value, got ${t}`);s=d(Number(t),D);break}default:throw new Error(`Unknown reference type: ${r}`)}I.push(s)}for(let e=0;e<I.length;e++)E[U.get(e)]=I[e];if(S.length>15){const e=S.slice(14),t=E.slice(14);S=S.slice(0,14),E=E.slice(0,14),S.push(new n.w1(e)),E.push(t)}const O=[t.getSelector()];for(let e=0;e<S.length;e++)O.push(S[e].encode(E[e]));const N={txn:(0,o.makeApplicationCallTxnFromObject)({from:i,appIndex:e,appArgs:O,accounts:R,foreignApps:C,foreignAssets:D,onComplete:null==a?u.hq.NoOpOC:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:m,numLocalInts:y,numLocalByteSlices:b,extraPages:w,lease:A,note:v,rekeyTo:x,suggestedParams:s}),signer:_};this.transactions.push(...B,N),this.methodCalls.set(this.transactions.length-1,t)}buildGroup(){if(this.status===h.BUILDING){if(0===this.transactions.length)throw new Error("Cannot build a group with 0 transactions");this.transactions.length>1&&(0,s.assignGroupID)(this.transactions.map((e=>e.txn))),this.status=h.BUILT}return this.transactions}async gatherSignatures(){if(this.status>=h.SIGNED)return this.signedTxns;const e=this.buildGroup(),t=e.map((e=>e.txn)),r=new Map;for(let t=0;t<e.length;t++){const{signer:n}=e[t];r.has(n)||r.set(n,[]),r.get(n).push(t)}const n=Array.from(r),o=await Promise.all(n.map((([e,r])=>e(t,r)))),s=e.map((()=>null));for(let e=0;e<n.length;e++){const t=n[e][1],r=o[e];for(let e=0;e<t.length;e++)s[t[e]]=r[e]}if(!s.every((e=>null!=e)))throw new Error(`Missing signatures. Got ${s}`);const a=s.map(((e,t)=>{try{return(0,i.decodeSignedTransaction)(e).txn.txID()}catch(e){throw new Error(`Cannot decode signed transaction at index ${t}. ${e}`)}}));return this.signedTxns=s,this.txIDs=a,this.status=h.SIGNED,s}async submit(e){if(this.status>h.SUBMITTED)throw new Error("Transaction group cannot be resubmitted");const t=await this.gatherSignatures();return await e.sendRawTransaction(t).do(),this.status=h.SUBMITTED,this.txIDs}async execute(e,t){if(this.status===h.COMMITTED)throw new Error("Transaction group has already been executed successfully");const r=await this.submit(e);this.status=h.SUBMITTED;const n=this.transactions.findIndex(((e,t)=>this.methodCalls.has(t))),i=-1===n?0:n,o=await(0,a.K)(e,r[i],t);this.status=h.COMMITTED;const s=o["confirmed-round"],c=[];for(const[t,i]of this.methodCalls){const s=r[t],a={txID:s,rawReturnValue:new Uint8Array,method:i};try{const r=t===n?o:await e.pendingTransactionInformation(s).do();if(a.txInfo=r,"void"!==i.returns.type){const e=r.logs||[];if(0===e.length)throw new Error("App call transaction did not log a return value");const t=l.from(e[e.length-1],"base64");if(t.byteLength<4||!t.slice(0,4).equals(p))throw new Error("App call transaction did not log a return value");a.rawReturnValue=new Uint8Array(t.slice(4)),a.returnValue=i.returns.type.decode(a.rawReturnValue)}}catch(e){a.decodeError=e}c.push(a)}return{confirmedRound:s,txIDs:r,methodResults:c}}}f.MAX_GROUP_SIZE=16},9070:(e,t,r)=>{"use strict";r.d(t,{rD:()=>i,_:()=>o,HN:()=>s});const n=1e6,i="Microalgos should be positive and less than 2^53 - 1.";function o(e){if(e<0||!Number.isSafeInteger(e))throw new Error(i);return e/n}function s(e){const t=e*n;return Math.round(t)}},4383:(e,t,r)=>{"use strict";r.d(t,{P:()=>c,x:()=>m});var n=r(227),i=r(1824),o=r(7116),s=r(2486).Buffer;function a(e){return e.params["approval-program"]=s.from(e.params["approval-program"].toString(),"base64"),e.params["clear-state-program"]=s.from(e.params["clear-state-program"].toString(),"base64"),e}async function c({client:e,txns:t,protocolVersion:r,latestTimestamp:s,round:c,sources:u}){const l=[],p=[],h=[],d=[],f=[];for(const e of t)e.txn.type===i.i.appl&&(f.push((0,o.encodeAddress)(e.txn.from.publicKey)),e.txn.appAccounts&&f.push(...e.txn.appAccounts.map((e=>(0,o.encodeAddress)(e.publicKey)))),e.txn.appForeignApps&&(h.push(...e.txn.appForeignApps),f.push(...e.txn.appForeignApps.map((e=>(0,o.getApplicationAddress)(e))))),e.txn.appForeignAssets&&d.push(...e.txn.appForeignAssets),void 0===e.txn.appIndex||0===e.txn.appIndex?l.push(new n.Application(1380011588,new n.ApplicationParams({creator:(0,o.encodeAddress)(e.txn.from.publicKey),approvalProgram:e.txn.appApprovalProgram,clearStateProgram:e.txn.appClearProgram,localStateSchema:new n.ApplicationStateSchema(e.txn.appLocalInts,e.txn.appLocalByteSlices),globalStateSchema:new n.ApplicationStateSchema(e.txn.appGlobalInts,e.txn.appGlobalByteSlices)}))):(h.push(e.txn.appIndex),f.push((0,o.getApplicationAddress)(e.txn.appIndex))));const g=[];for(const t of[...new Set(d)])g.push(e.getAssetByID(t).do().then((e=>{f.push(e.params.creator)})));await Promise.all(g);const m=[];for(const t of[...new Set(h)])m.push(e.getApplicationByID(t).do().then((e=>{const t=a(e);l.push(t),f.push(t.params.creator)})));await Promise.all(m);const y=[];for(const t of[...new Set(f)])y.push(e.accountInformation(t).do().then((e=>{"created-apps"in e&&(e["created-apps"]=e["created-apps"].map((e=>a(e)))),p.push(e)})));return await Promise.all(y),new n.DryrunRequest({txns:t.map((e=>({...e,txn:e.txn.get_obj_for_encoding()}))),accounts:p,apps:l,latestTimestamp:s,round:c,protocolVersion:r,sources:u})}class u{constructor(e){this.type=0,this.bytes="",this.uint=0,this.type=e.type,this.bytes=e.bytes,this.uint=e.uint}toString(){return 1===this.type?`0x${s.from(this.bytes,"base64").toString("hex")}`:this.uint.toString()}}class l{constructor(e){this.error="",this.line=0,this.pc=0,this.scratch=[],this.stack=[],this.error=void 0===e.error?"":e.error,this.line=e.line,this.pc=e.pc,this.scratch=e.scratch,this.stack=e.stack.map((e=>new u(e)))}}class p{constructor(e){this.trace=[],void 0!==e&&(this.trace=e.map((e=>new l(e))))}}function h(e,t){return e.length>t&&t>0?`${e.slice(0,t)}...`:e}function d(e,t){if(0===t.length)return"";let r=null;for(let n=0;n<t.length;n++)(n>e.length||JSON.stringify(e[n])!==JSON.stringify(t[n]))&&(r=n);if(null==r)return"";const n=t[r];return n.bytes.length>0?`${r} = 0x${s.from(n.bytes,"base64").toString("hex")}`:`${r} = ${n.uint.toString()}`}function f(e,t){return`[${(t?e.reverse():e).map((e=>{switch(e.type){case 1:return`0x${s.from(e.bytes,"base64").toString("hex")}`;case 2:return`${e.uint.toString()}`;default:return""}})).join(", ")}]`}class g{constructor(e){this.disassembly=[],this.appCallMessages=[],this.localDeltas=[],this.globalDelta=[],this.cost=0,this.logicSigMessages=[],this.logicSigDisassembly=[],this.logs=[],this.appCallTrace=void 0,this.logicSigTrace=void 0,this.required=["disassembly"],this.optionals=["app-call-messages","local-deltas","global-delta","cost","logic-sig-messages","logic-sig-disassembly","logs"],this.traces=["app-call-trace","logic-sig-trace"],this.disassembly=e.disassembly,this.appCallMessages=e["app-call-messages"],this.localDeltas=e["local-deltas"],this.globalDelta=e["global-delta"],this.cost=e.cost,this.logicSigMessages=e["logic-sig-messages"],this.logicSigDisassembly=e["logic-sig-disassembly"],this.logs=e.logs,this.appCallTrace=new p(e["app-call-trace"]),this.logicSigTrace=new p(e["logic-sig-trace"])}appCallRejected(){return void 0!==this.appCallMessages&&this.appCallMessages.includes("REJECT")}logicSigRejected(){return void 0!==this.logicSigMessages&&this.logicSigMessages.includes("REJECT")}static trace(e,t,r){const n=r.maxValueWidth||30,i=[["pc#","ln#","source","scratch","stack"]];for(let o=0;o<e.trace.length;o++){const{line:s,error:a,pc:c,scratch:u,stack:l}=e.trace[o],p=void 0!==u?u:[],g=o>0&&void 0!==e.trace[o-1].scratch?e.trace[o-1].scratch:[],m=""===a?t[s]:`!! ${a} !!`;i.push([c.toString().padEnd(3," "),s.toString().padEnd(3," "),h(m,n),h(d(g,p),n),h(f(l,r.topOfStackFirst),n)])}const o=i.reduce(((e,t)=>{const r=new Array(i[0].length).fill(0);for(let n=0;n<e.length;n++)r[n]=t[n].length>e[n]?t[n].length:e[n];return r}),new Array(i[0].length).fill(0));return`${i.map((e=>e.map(((e,t)=>e.padEnd(o[t]+1," "))).join("|").trim())).join("\n")}\n`}appTrace(e){if(void 0===this.appCallTrace||!this.disassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!1}),g.trace(this.appCallTrace,this.disassembly,t)}lsigTrace(e){if(void 0===this.logicSigTrace||void 0===this.logicSigDisassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!0}),g.trace(this.logicSigTrace,this.logicSigDisassembly,t)}}class m{constructor(e){this.error="",this.protocolVersion="",this.txns=[],this.error=e.error,this.protocolVersion=e["protocol-version"],this.txns=e.txns.map((e=>new g(e)))}}},7116:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_ZERO_ADDRESS_STRING:()=>u,MALFORMED_ADDRESS_ERROR_MSG:()=>h,CHECKSUM_ADDRESS_ERROR_MSG:()=>d,INVALID_MSIG_VERSION_ERROR_MSG:()=>f,INVALID_MSIG_THRESHOLD_ERROR_MSG:()=>g,INVALID_MSIG_PK_ERROR_MSG:()=>m,UNEXPECTED_PK_LEN_ERROR_MSG:()=>y,decodeAddress:()=>b,isValidAddress:()=>w,encodeAddress:()=>v,fromMultisigPreImg:()=>A,fromMultisigPreImgAddrs:()=>x,getApplicationAddress:()=>_});var n=r(7267),i=r.n(n),o=r(9404),s=r(413),a=r(6963),c=r(2486).Buffer;const u="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",l=new Uint8Array([77,117,108,116,105,115,105,103,65,100,100,114]),p=c.from("appID"),h="address seems to be malformed",d="wrong checksum for address",f="invalid multisig version",g="bad multisig threshold",m="bad multisig public key - wrong length",y="nacl public key length is not 32 bytes";function b(e){if("string"!=typeof e||58!==e.length)throw new Error(h);const t=i().decode.asBytes(e.toString());if(36!==t.length)throw new Error(h);const r=new Uint8Array(t.slice(0,32)),n=new Uint8Array(t.slice(o.PUBLIC_KEY_LENGTH,36)),a=o.genericHash(r).slice(o.HASH_BYTES_LENGTH-4,o.HASH_BYTES_LENGTH);if(!s.arrayEqual(a,n))throw new Error(d);return{publicKey:r,checksum:n}}function w(e){try{b(e)}catch(e){return!1}return!0}function v(e){const t=o.genericHash(e).slice(o.PUBLIC_KEY_LENGTH-4,o.PUBLIC_KEY_LENGTH);return i().encode(s.concatArrays(e,t)).toString().slice(0,58)}function A({version:e,threshold:t,pks:r}){if(1!==e||e>255||e<0)throw new Error(f);if(0===t||0===r.length||t>r.length||t>255)throw new Error(g);if(32!==o.PUBLIC_KEY_LENGTH)throw new Error(y);const n=new Uint8Array(l.length+2+32*r.length);n.set(l,0),n.set([e],l.length),n.set([t],l.length+1);for(let e=0;e<r.length;e++){if(32!==r[e].length)throw new Error(m);n.set(r[e],l.length+2+32*e)}return new Uint8Array(o.genericHash(n))}function x({version:e,threshold:t,addrs:r}){return v(A({version:e,threshold:t,pks:r.map((e=>b(e).publicKey))}))}function _(e){const t=s.concatArrays(p,(0,a.T)(e)),r=o.genericHash(t);return v(new Uint8Array(r))}},8922:(e,t,r)=>{"use strict";r.d(t,{j:()=>i,v:()=>o});var n=r(2486).Buffer;function i(e,t){let r=e.toString(16);r.length!==2*t&&(r=r.padStart(2*t,"0"));const n=new Uint8Array(r.length/2);for(let e=0,t=0;e<r.length/2;e++,t+=2)n[e]=parseInt(r.slice(t,t+2),16);return n}function o(e){let t=BigInt(0);const r=n.from(e);for(let n=0;n<e.length;n++)t=BigInt(Number(r.readUIntBE(n,1)))+t*BigInt(256);return t}},3033:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ERROR_CONTAINS_EMPTY_STRING:()=>i,encode:()=>o,decode:()=>s});var n=r(5406);const i="The object contains empty or 0 values. First empty or 0 value encountered during encoding: ";function o(e){const t=function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&(!e[t]||0===e[t].length))return{containsEmpty:!0,firstEmptyKey:t};return{containsEmpty:!1,firstEmptyKey:void 0}}(e);if(t.containsEmpty)throw new Error(i+t.firstEmptyKey);return n.encode(e,{sortKeys:!0})}function s(e){return n.decode(e)}},6963:(e,t,r)=>{"use strict";r.d(t,{T:()=>i,u:()=>o});var n=r(2486).Buffer;function i(e){if("bigint"!=typeof e&&!Number.isInteger(e)||e<0||e>BigInt("0xffffffffffffffff"))throw new Error("Input is not a 64-bit unsigned integer");const t=n.allocUnsafe(8);return t.writeBigUInt64BE(BigInt(e)),new Uint8Array(t)}function o(e,t="safe"){if("safe"!==t&&"mixed"!==t&&"bigint"!==t)throw new Error(`Unknown decodingMode option: ${t}`);if(0===e.byteLength||e.byteLength>8)throw new Error(`Data has unacceptable length. Expected length is between 1 and 8, got ${e.byteLength}`);const r=n.allocUnsafe(8-e.byteLength);r.fill(0);const i=n.concat([r,n.from(e)]).readBigUInt64BE(),o=i>Number.MAX_SAFE_INTEGER;if("safe"===t){if(o)throw new Error(`Integer exceeds maximum safe integer: ${i.toString()}. Try decoding with "mixed" or "safe" decodingMode.`);return Number(i)}return"mixed"!==t||o?i:Number(i)}},1063:(e,t,r)=>{"use strict";r.r(t),r.d(t,{TxGroup:()=>u,computeGroupID:()=>l,assignGroupID:()=>p,default:()=>h});var n=r(9417),i=r(9404),o=r(3033),s=r(7116),a=r(413),c=r(2486).Buffer;class u{constructor(e){if(this.name="Transaction group",this.tag=c.from("TG"),e.length>16){const t=`${e.length.toString()} transactions grouped together but max group size is ${16..toString()}`;throw Error(t)}this.txGroupHashes=e}get_obj_for_encoding(){return{txlist:this.txGroupHashes}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);t.name="Transaction group",t.tag=c.from("TG"),t.txGroupHashes=[];for(const r of e.txlist)t.txGroupHashes.push(c.from(r));return t}toByte(){return o.encode(this.get_obj_for_encoding())}}function l(e){const t=[];for(const r of e){const e=n.instantiateTxnIfNeeded(r);t.push(e.rawTxID())}const r=new u(t),o=r.toByte(),s=c.from(a.concatArrays(r.tag,o)),l=i.genericHash(s);return c.from(l)}function p(e,t){const r=l(e),i=[];for(const o of e){const e=n.instantiateTxnIfNeeded(o);t&&s.encodeAddress(e.from.publicKey)!==t||(e.group=r,i.push(e))}return i}const h=u},5583:(e,t,r)=>{"use strict";r.r(t),r.d(t,{checkByteConstBlock:()=>d,checkIntConstBlock:()=>h,checkProgram:()=>p,checkPushByteOp:()=>g,checkPushIntOp:()=>f,langspecEvalMaxVersion:()=>m,langspecLogicSigVersion:()=>y,parseUvarint:()=>o,readProgram:()=>l});const n=JSON.parse('{"z_":6,"BV":5,"AP":[{"Opcode":0,"Name":"err","Cost":1,"Size":1,"Doc":"Fail immediately.","Groups":["Flow Control"]},{"Opcode":1,"Name":"sha256","Args":"B","Returns":"B","Cost":35,"Size":1,"Doc":"SHA256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":2,"Name":"keccak256","Args":"B","Returns":"B","Cost":130,"Size":1,"Doc":"Keccak256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":3,"Name":"sha512_256","Args":"B","Returns":"B","Cost":45,"Size":1,"Doc":"SHA512_256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":4,"Name":"ed25519verify","Args":"BBB","Returns":"U","Cost":1900,"Size":1,"Doc":"for (data A, signature B, pubkey C) verify the signature of (\\"ProgData\\" || program_hash || data) against the pubkey => {0 or 1}","DocExtra":"The 32 byte public key is the last element on the stack, preceded by the 64 byte signature at the second-to-last element on the stack, preceded by the data which was signed at the third-to-last element on the stack.","Groups":["Arithmetic"]},{"Opcode":5,"Name":"ecdsa_verify","Args":"BBBBB","Returns":"U","Cost":1700,"Size":2,"Doc":"for (data A, signature B, C and pubkey D, E) verify the signature of the data against the pubkey => {0 or 1}","DocExtra":"The 32 byte Y-component of a public key is the last element on the stack, preceded by X-component of a pubkey, preceded by S and R components of a signature, preceded by the data that is fifth element on the stack. All values are big-endian encoded. The signed data must be 32 bytes long, and signatures in lower-S form are only accepted.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":6,"Name":"ecdsa_pk_decompress","Args":"B","Returns":"BB","Cost":650,"Size":2,"Doc":"decompress pubkey A into components X, Y","DocExtra":"The 33 byte public key in a compressed form to be decompressed into X and Y (top) components. All values are big-endian encoded.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":7,"Name":"ecdsa_pk_recover","Args":"BUBB","Returns":"BB","Cost":2000,"Size":2,"Doc":"for (data A, recovery id B, signature C, D) recover a public key","DocExtra":"S (top) and R elements of a signature, recovery id and data (bottom) are expected on the stack and used to deriver a public key. All values are big-endian encoded. The signed data must be 32 bytes long.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":8,"Name":"+","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A plus B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `addw`.","Groups":["Arithmetic"]},{"Opcode":9,"Name":"-","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A minus B. Fail if B > A.","Groups":["Arithmetic"]},{"Opcode":10,"Name":"/","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by B (truncated division). Fail if B == 0.","DocExtra":"`divmodw` is available to divide the two-element values produced by `mulw` and `addw`.","Groups":["Arithmetic"]},{"Opcode":11,"Name":"*","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `mulw`.","Groups":["Arithmetic"]},{"Opcode":12,"Name":"<","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":13,"Name":">","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":14,"Name":"<=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":15,"Name":">=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":16,"Name":"&&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero and B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":17,"Name":"||","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero or B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":18,"Name":"==","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":19,"Name":"!=","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is not equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":20,"Name":"!","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"A == 0 yields 1; else 0","Groups":["Arithmetic"]},{"Opcode":21,"Name":"len","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"yields length of byte value A","Groups":["Arithmetic"]},{"Opcode":22,"Name":"itob","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"converts uint64 A to big endian bytes","Groups":["Arithmetic"]},{"Opcode":23,"Name":"btoi","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"converts bytes A as big endian to uint64","DocExtra":"`btoi` fails if the input is longer than 8 bytes.","Groups":["Arithmetic"]},{"Opcode":24,"Name":"%","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A modulo B. Fail if B == 0.","Groups":["Arithmetic"]},{"Opcode":25,"Name":"|","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-or B","Groups":["Arithmetic"]},{"Opcode":26,"Name":"&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-and B","Groups":["Arithmetic"]},{"Opcode":27,"Name":"^","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-xor B","Groups":["Arithmetic"]},{"Opcode":28,"Name":"~","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"bitwise invert value A","Groups":["Arithmetic"]},{"Opcode":29,"Name":"mulw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A times B as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low","Groups":["Arithmetic"]},{"Opcode":30,"Name":"addw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A plus B as a 128-bit result. X is the carry-bit, Y is the low-order 64 bits.","Groups":["Arithmetic"]},{"Opcode":31,"Name":"divmodw","Args":"UUUU","Returns":"UUUU","Cost":20,"Size":1,"Doc":"W,X = (A,B / C,D); Y,Z = (A,B modulo C,D)","DocExtra":"The notation J,K indicates that two uint64 values J and K are interpreted as a uint128 value, with J as the high uint64 and K the low.","Groups":["Arithmetic"]},{"Opcode":32,"Name":"intcblock","Cost":1,"Size":0,"Doc":"prepare block of uint64 constants for use by intc","DocExtra":"`intcblock` loads following program bytes into an array of integer constants in the evaluator. These integer constants can be referred to by `intc` and `intc_*` which will push the value onto the stack. Subsequent calls to `intcblock` reset and replace the integer constants available to the script.","ImmediateNote":"{varuint length} [{varuint value}, ...]","Groups":["Loading Values"]},{"Opcode":33,"Name":"intc","Returns":"U","Cost":1,"Size":2,"Doc":"Ith constant from intcblock","ImmediateNote":"{uint8 int constant index}","Groups":["Loading Values"]},{"Opcode":34,"Name":"intc_0","Returns":"U","Cost":1,"Size":1,"Doc":"constant 0 from intcblock","Groups":["Loading Values"]},{"Opcode":35,"Name":"intc_1","Returns":"U","Cost":1,"Size":1,"Doc":"constant 1 from intcblock","Groups":["Loading Values"]},{"Opcode":36,"Name":"intc_2","Returns":"U","Cost":1,"Size":1,"Doc":"constant 2 from intcblock","Groups":["Loading Values"]},{"Opcode":37,"Name":"intc_3","Returns":"U","Cost":1,"Size":1,"Doc":"constant 3 from intcblock","Groups":["Loading Values"]},{"Opcode":38,"Name":"bytecblock","Cost":1,"Size":0,"Doc":"prepare block of byte-array constants for use by bytec","DocExtra":"`bytecblock` loads the following program bytes into an array of byte-array constants in the evaluator. These constants can be referred to by `bytec` and `bytec_*` which will push the value onto the stack. Subsequent calls to `bytecblock` reset and replace the bytes constants available to the script.","ImmediateNote":"{varuint length} [({varuint value length} bytes), ...]","Groups":["Loading Values"]},{"Opcode":39,"Name":"bytec","Returns":"B","Cost":1,"Size":2,"Doc":"Ith constant from bytecblock","ImmediateNote":"{uint8 byte constant index}","Groups":["Loading Values"]},{"Opcode":40,"Name":"bytec_0","Returns":"B","Cost":1,"Size":1,"Doc":"constant 0 from bytecblock","Groups":["Loading Values"]},{"Opcode":41,"Name":"bytec_1","Returns":"B","Cost":1,"Size":1,"Doc":"constant 1 from bytecblock","Groups":["Loading Values"]},{"Opcode":42,"Name":"bytec_2","Returns":"B","Cost":1,"Size":1,"Doc":"constant 2 from bytecblock","Groups":["Loading Values"]},{"Opcode":43,"Name":"bytec_3","Returns":"B","Cost":1,"Size":1,"Doc":"constant 3 from bytecblock","Groups":["Loading Values"]},{"Opcode":44,"Name":"arg","Returns":"B","Cost":1,"Size":2,"Doc":"Nth LogicSig argument","ImmediateNote":"{uint8 arg index N}","Groups":["Loading Values"]},{"Opcode":45,"Name":"arg_0","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 0","Groups":["Loading Values"]},{"Opcode":46,"Name":"arg_1","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 1","Groups":["Loading Values"]},{"Opcode":47,"Name":"arg_2","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 2","Groups":["Loading Values"]},{"Opcode":48,"Name":"arg_3","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 3","Groups":["Loading Values"]},{"Opcode":49,"Name":"txn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of current transaction","DocExtra":"FirstValidTime causes the program to fail. The field is reserved for future use.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":50,"Name":"global","Returns":".","Cost":1,"Size":2,"Doc":"global field F","ImmediateNote":"{uint8 global field index}","Groups":["Loading Values"]},{"Opcode":51,"Name":"gtxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If this transaction is _i_ in the group, `gtxn i field` is equivalent to `txn field`.","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":52,"Name":"load","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value. All scratch spaces are 0 at program start.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":53,"Name":"store","Args":".","Cost":1,"Size":2,"Doc":"store A to the Ith scratch space","ImmediateNote":"{uint8 position in scratch space to store to}","Groups":["Loading Values"]},{"Opcode":54,"Name":"txna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":55,"Name":"gtxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":56,"Name":"gtxns","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Ath transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If top of stack is _i_, `gtxns field` is equivalent to `gtxn _i_ field`. gtxns exists so that _i_ can be calculated, often based on the index of the current transaction.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":57,"Name":"gtxnsa","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":58,"Name":"gload","Returns":".","Cost":1,"Size":3,"Doc":"Ith scratch space value of the Tth transaction in the current group","DocExtra":"`gload` fails unless the requested transaction is an ApplicationCall and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index} {uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":59,"Name":"gloads","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value of the Ath transaction in the current group","DocExtra":"`gloads` fails unless the requested transaction is an ApplicationCall and A < GroupIndex.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":60,"Name":"gaid","Returns":"U","Cost":1,"Size":2,"Doc":"ID of the asset or application created in the Tth transaction of the current group","DocExtra":"`gaid` fails unless the requested transaction created an asset or application and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index}","Groups":["Loading Values"]},{"Opcode":61,"Name":"gaids","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"ID of the asset or application created in the Ath transaction of the current group","DocExtra":"`gaids` fails unless the requested transaction created an asset or application and A < GroupIndex.","Groups":["Loading Values"]},{"Opcode":62,"Name":"loads","Args":"U","Returns":".","Cost":1,"Size":1,"Doc":"Ath scratch space value.  All scratch spaces are 0 at program start.","Groups":["Loading Values"]},{"Opcode":63,"Name":"stores","Args":"U.","Cost":1,"Size":1,"Doc":"store B to the Ath scratch space","Groups":["Loading Values"]},{"Opcode":64,"Name":"bnz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is not zero","DocExtra":"The `bnz` instruction opcode 0x40 is followed by two immediate data bytes which are a high byte first and low byte second which together form a 16 bit offset which the instruction may branch to. For a bnz instruction at `pc`, if the last element of the stack is not zero then branch to instruction at `pc + 3 + N`, else proceed to next instruction at `pc + 3`. Branch targets must be aligned instructions. (e.g. Branching to the second byte of a 2 byte op will be rejected.) Starting at v4, the offset is treated as a signed 16 bit integer allowing for backward branches and looping. In prior version (v1 to v3), branch offsets are limited to forward branches only, 0-0x7fff.\\n\\nAt v2 it became allowed to branch to the end of the program exactly after the last instruction: bnz to byte N (with 0-indexing) was illegal for a TEAL program with N bytes before v2, and is legal after it. This change eliminates the need for a last instruction of no-op as a branch target at the end. (Branching beyond the end--in other words, to a byte larger than N--is still illegal and will cause the program to fail.)","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":65,"Name":"bz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is zero","DocExtra":"See `bnz` for details on how branches work. `bz` inverts the behavior of `bnz`.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":66,"Name":"b","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET","DocExtra":"See `bnz` for details on how branches work. `b` always jumps to the offset.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":67,"Name":"return","Args":"U","Cost":1,"Size":1,"Doc":"use A as success value; end","Groups":["Flow Control"]},{"Opcode":68,"Name":"assert","Args":"U","Cost":1,"Size":1,"Doc":"immediately fail unless A is a non-zero number","Groups":["Flow Control"]},{"Opcode":72,"Name":"pop","Args":".","Cost":1,"Size":1,"Doc":"discard A","Groups":["Flow Control"]},{"Opcode":73,"Name":"dup","Args":".","Returns":"..","Cost":1,"Size":1,"Doc":"duplicate A","Groups":["Flow Control"]},{"Opcode":74,"Name":"dup2","Args":"..","Returns":"....","Cost":1,"Size":1,"Doc":"duplicate A and B","Groups":["Flow Control"]},{"Opcode":75,"Name":"dig","Args":".","Returns":"..","Cost":1,"Size":2,"Doc":"Nth value from the top of the stack. dig 0 is equivalent to dup","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":76,"Name":"swap","Args":"..","Returns":"..","Cost":1,"Size":1,"Doc":"swaps A and B on stack","Groups":["Flow Control"]},{"Opcode":77,"Name":"select","Args":"..U","Returns":".","Cost":1,"Size":1,"Doc":"selects one of two values based on top-of-stack: B if C != 0, else A","Groups":["Flow Control"]},{"Opcode":78,"Name":"cover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove top of stack, and place it deeper in the stack such that N elements are above it. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":79,"Name":"uncover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove the value at depth N in the stack and shift above items down so the Nth deep value is on top of the stack. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":80,"Name":"concat","Args":"BB","Returns":"B","Cost":1,"Size":1,"Doc":"join A and B","DocExtra":"`concat` fails if the result would be greater than 4096 bytes.","Groups":["Arithmetic"]},{"Opcode":81,"Name":"substring","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including E. If E < S, or either is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 end position}","Groups":["Byte Array Manipulation"]},{"Opcode":82,"Name":"substring3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including C. If C < B, or either is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":83,"Name":"getbit","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"Bth bit of (byte-array or integer) A.","DocExtra":"see explanation of bit ordering in setbit","Groups":["Arithmetic"]},{"Opcode":84,"Name":"setbit","Args":".UU","Returns":".","Cost":1,"Size":1,"Doc":"Copy of (byte-array or integer) A, with the Bth bit set to (0 or 1) C","DocExtra":"When A is a uint64, index 0 is the least significant bit. Setting bit 3 to 1 on the integer 0 yields 8, or 2^3. When A is a byte array, index 0 is the leftmost bit of the leftmost byte. Setting bits 0 through 11 to 1 in a 4-byte-array of 0s yields the byte array 0xfff00000. Setting bit 3 to 1 on the 1-byte-array 0x00 yields the byte array 0x10.","Groups":["Arithmetic"]},{"Opcode":85,"Name":"getbyte","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"Bth byte of A, as an integer","Groups":["Arithmetic"]},{"Opcode":86,"Name":"setbyte","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"Copy of A with the Bth byte set to small integer (between 0..255) C","Groups":["Arithmetic"]},{"Opcode":87,"Name":"extract","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including S+L. If L is 0, then extract to the end of the string. If S or S+L is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 length}","Groups":["Byte Array Manipulation"]},{"Opcode":88,"Name":"extract3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including B+C. If B+C is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":89,"Name":"extract_uint16","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint16 formed from a range of big-endian bytes from A starting at B up to but not including B+2. If B+2 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":90,"Name":"extract_uint32","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint32 formed from a range of big-endian bytes from A starting at B up to but not including B+4. If B+4 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":91,"Name":"extract_uint64","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint64 formed from a range of big-endian bytes from A starting at B up to but not including B+8. If B+8 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":96,"Name":"balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get balance for account A, in microalgos. The balance is observed after the effects of previous transactions in the group, and after the fee for the current transaction is deducted.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":97,"Name":"app_opted_in","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"1 if account A is opted in to application B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: 1 if opted in and 0 otherwise.","Groups":["State Access"]},{"Opcode":98,"Name":"app_local_get","Args":".B","Returns":".","Cost":1,"Size":1,"Doc":"local state of the key B in the current application in account A","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":99,"Name":"app_local_get_ex","Args":".UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the local state of application B, key C in account A. Y is 1 if key existed, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":100,"Name":"app_global_get","Args":"B","Returns":".","Cost":1,"Size":1,"Doc":"global state of the key A in the current application","DocExtra":"params: state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":101,"Name":"app_global_get_ex","Args":"UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the global state of application A, key B. Y is 1 if key existed, else 0","DocExtra":"params: Txn.ForeignApps offset (or, since v4, an _available_ application id), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":102,"Name":"app_local_put","Args":".B.","Cost":1,"Size":1,"Doc":"write C to key B in account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key, value.","Groups":["State Access"]},{"Opcode":103,"Name":"app_global_put","Args":"B.","Cost":1,"Size":1,"Doc":"write B to key A in the global state of the current application","Groups":["State Access"]},{"Opcode":104,"Name":"app_local_del","Args":".B","Cost":1,"Size":1,"Doc":"delete key B from account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key.\\n\\nDeleting a key which is already absent has no effect on the application local state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":105,"Name":"app_global_del","Args":"B","Cost":1,"Size":1,"Doc":"delete key A from the global state of the current application","DocExtra":"params: state key.\\n\\nDeleting a key which is already absent has no effect on the application global state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":112,"Name":"asset_holding_get","Args":".U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetBalance","AssetFrozen"],"ArgEnumTypes":"UU","Doc":"X is field F from account A\'s holding of asset B. Y is 1 if A is opted into B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ address), asset id (or, since v4, a Txn.ForeignAssets offset). Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset holding field index}","Groups":["State Access"]},{"Opcode":113,"Name":"asset_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetTotal","AssetDecimals","AssetDefaultFrozen","AssetUnitName","AssetName","AssetURL","AssetMetadataHash","AssetManager","AssetReserve","AssetFreeze","AssetClawback","AssetCreator"],"ArgEnumTypes":"UUUBBBBBBBBB","Doc":"X is field F from asset A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignAssets offset (or, since v4, an _available_ asset id. Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset params field index}","Groups":["State Access"]},{"Opcode":114,"Name":"app_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AppApprovalProgram","AppClearStateProgram","AppGlobalNumUint","AppGlobalNumByteSlice","AppLocalNumUint","AppLocalNumByteSlice","AppExtraProgramPages","AppCreator","AppAddress"],"ArgEnumTypes":"BBUUUUUBB","Doc":"X is field F from app A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignApps offset or an _available_ app id. Return: did_exist flag (1 if the application existed and 0 otherwise), value.","ImmediateNote":"{uint8 app params field index}","Groups":["State Access"]},{"Opcode":115,"Name":"acct_params_get","Args":".","Returns":".U","Cost":1,"Size":2,"Doc":"X is field F from account A. Y is 1 if A owns positive algos, else 0","ImmediateNote":"{uint8 account params field index}","Groups":["State Access"]},{"Opcode":120,"Name":"min_balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get minimum required balance for account A, in microalgos. Required balance is affected by [ASA](https://developer.algorand.org/docs/features/asa/#assets-overview) and [App](https://developer.algorand.org/docs/features/asc1/stateful/#minimum-balance-requirement-for-a-smart-contract) usage. When creating or opting into an app, the minimum balance grows before the app code runs, therefore the increase is visible there. When deleting or closing out, the minimum balance decreases after the app executes.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":128,"Name":"pushbytes","Returns":"B","Cost":1,"Size":0,"Doc":"immediate BYTES","DocExtra":"pushbytes args are not added to the bytecblock during assembly processes","ImmediateNote":"{varuint length} {bytes}","Groups":["Loading Values"]},{"Opcode":129,"Name":"pushint","Returns":"U","Cost":1,"Size":0,"Doc":"immediate UINT","DocExtra":"pushint args are not added to the intcblock during assembly processes","ImmediateNote":"{varuint int}","Groups":["Loading Values"]},{"Opcode":136,"Name":"callsub","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET, saving the next instruction on the call stack","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":137,"Name":"retsub","Cost":1,"Size":1,"Doc":"pop the top instruction from the call stack and branch to it","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","Groups":["Flow Control"]},{"Opcode":144,"Name":"shl","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times 2^B, modulo 2^64","Groups":["Arithmetic"]},{"Opcode":145,"Name":"shr","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by 2^B","Groups":["Arithmetic"]},{"Opcode":146,"Name":"sqrt","Args":"U","Returns":"U","Cost":4,"Size":1,"Doc":"The largest integer I such that I^2 <= A","Groups":["Arithmetic"]},{"Opcode":147,"Name":"bitlen","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"The highest set bit in A. If A is a byte-array, it is interpreted as a big-endian unsigned integer. bitlen of 0 is 0, bitlen of 8 is 4","DocExtra":"bitlen interprets arrays as big-endian integers, unlike setbit/getbit","Groups":["Arithmetic"]},{"Opcode":148,"Name":"exp","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A raised to the Bth power. Fail if A == B == 0 and on overflow","Groups":["Arithmetic"]},{"Opcode":149,"Name":"expw","Args":"UU","Returns":"UU","Cost":10,"Size":1,"Doc":"A raised to the Bth power as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low. Fail if A == B == 0 or if the results exceeds 2^128-1","Groups":["Arithmetic"]},{"Opcode":150,"Name":"bsqrt","Args":"B","Returns":"B","Cost":40,"Size":1,"Doc":"The largest integer I such that I^2 <= A. A and I are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":151,"Name":"divw","Args":"UUU","Returns":"U","Cost":1,"Size":1,"Doc":"A,B / C. Fail if C == 0 or if result overflows.","DocExtra":"The notation A,B indicates that A and B are interpreted as a uint128 value, with A as the high uint64 and B the low.","Groups":["Arithmetic"]},{"Opcode":160,"Name":"b+","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A plus B. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":161,"Name":"b-","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A minus B. A and B are interpreted as big-endian unsigned integers. Fail on underflow.","Groups":["Byte Array Arithmetic"]},{"Opcode":162,"Name":"b/","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A divided by B (truncated division). A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":163,"Name":"b*","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A times B. A and B are interpreted as big-endian unsigned integers.","Groups":["Byte Array Arithmetic"]},{"Opcode":164,"Name":"b<","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":165,"Name":"b>","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":166,"Name":"b<=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":167,"Name":"b>=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":168,"Name":"b==","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":169,"Name":"b!=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"0 if A is equal to B, else 1. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":170,"Name":"b%","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A modulo B. A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":171,"Name":"b|","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-or B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":172,"Name":"b&","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-and B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":173,"Name":"b^","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-xor B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":174,"Name":"b~","Args":"B","Returns":"B","Cost":4,"Size":1,"Doc":"A with all bits inverted","Groups":["Byte Array Logic"]},{"Opcode":175,"Name":"bzero","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"zero filled byte-array of length A","Groups":["Loading Values"]},{"Opcode":176,"Name":"log","Args":"B","Cost":1,"Size":1,"Doc":"write A to log state of the current application","DocExtra":"`log` fails if called more than MaxLogCalls times in a program, or if the sum of logged bytes exceeds 1024 bytes.","Groups":["State Access"]},{"Opcode":177,"Name":"itxn_begin","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in a new transaction group","DocExtra":"`itxn_begin` initializes Sender to the application address; Fee to the minimum allowable, taking into account MinTxnFee and credit from overpaying in earlier transactions; FirstValid/LastValid to the values in the invoking transaction, and all other fields to zero or empty values.","Groups":["Inner Transactions"]},{"Opcode":178,"Name":"itxn_field","Args":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"set field F of the current inner transaction to A","DocExtra":"`itxn_field` fails if A is of the wrong type for F, including a byte array of the wrong size for use as an address when F is an address field. `itxn_field` also fails if A is an account, asset, or app that is not _available_, or an attempt is made extend an array field beyond the limit imposed by consensus parameters. (Addresses set into asset params of acfg transactions need not be _available_.)","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":179,"Name":"itxn_submit","Cost":1,"Size":1,"Doc":"execute the current inner transaction group. Fail if executing this group would exceed the inner transaction limit, or if any transaction in the group fails.","DocExtra":"`itxn_submit` resets the current transaction so that it can not be resubmitted. A new `itxn_begin` is required to prepare another inner transaction.","Groups":["Inner Transactions"]},{"Opcode":180,"Name":"itxn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":181,"Name":"itxna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":182,"Name":"itxn_next","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in the same transaction group","DocExtra":"`itxn_next` initializes the transaction exactly as `itxn_begin` does","Groups":["Inner Transactions"]},{"Opcode":183,"Name":"gitxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":184,"Name":"gitxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":192,"Name":"txnas","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":193,"Name":"gtxnas","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":194,"Name":"gtxnsas","Args":"UU","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Bth value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":195,"Name":"args","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"Ath LogicSig argument","Groups":["Loading Values"]},{"Opcode":196,"Name":"gloadss","Args":"UU","Returns":".","Cost":1,"Size":1,"Doc":"Bth scratch space value of the Ath transaction in the current group","Groups":["Loading Values"]},{"Opcode":197,"Name":"itxnas","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ath value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":198,"Name":"gitxnas","Args":"U","Returns":".","Cost":1,"Size":3,"Doc":"Ath value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]}]}');let i;function o(e){let t=0,r=0;for(let n=0;n<e.length;n++){const i=e[n];if(i<128)return n>9||9===n&&i>1?[0,-(n+1)]:[t|i<<r,n+1];t+=(127&i)<<r,r+=7}return[0,0]}function s(e,t){let r=1;const n=o(e.slice(t+r)),i=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode int const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<i;n++){if(t+r>=e.length)throw new Error("intcblock ran past end of program");let i;if([i,s]=o(e.slice(t+r)),s<=0)throw new Error(`could not decode int const[${n}] block size at pc=${t+r}`);a.push(i),r+=s}return[r,a]}function a(e,t){let r=1;const n=o(e.slice(t+r)),i=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode []byte const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<i;n++){if(t+r>=e.length)throw new Error("bytecblock ran past end of program");let i;if([i,s]=o(e.slice(t+r)),s<=0)throw new Error(`could not decode []byte] const[${n}] block size at pc=${t+r}`);if(r+=s,t+r+i>e.length)throw new Error("bytecblock ran past end of program");const c=e.slice(t+r,t+r+i);a.push(c),r+=i}return[r,a]}function c(e,t){let r=1;const[n,i]=o(e.slice(t+r));if(i<=0)throw new Error(`could not decode push int const at pc=${t+r}`);return r+=i,[r,n]}function u(e,t){let r=1;const[n,i]=o(e.slice(t+r));if(i<=0)throw new Error(`could not decode push []byte const size at pc=${t+r}`);if(r+=i,t+r+n>e.length)throw new Error("pushbytes ran past end of program");const s=e.slice(t+r,t+r+n);return r+=n,[r,s]}function l(e,t){if(!e)throw new Error("empty program");if(void 0===t&&(t=[]),!Array.isArray(t))throw new Error("invalid arguments");const[r,l]=o(e);if(l<=0)throw new Error("version parsing error");if(r>n.z_)throw new Error("unsupported version");let p=0,{length:h}=e;for(const e of t)h+=e.length;if(h>1e3)throw new Error("program too long");if(!i){i={};for(const e of n.AP)i[e.Opcode]=e}let d=l,f=[],g=[];for(;d<e.length;){const t=i[e[d]];if(void 0===t)throw new Error("invalid instruction");p+=t.Cost;let r=t.Size;if(0===r)switch(t.Opcode){case 32:{let t;[r,t]=s(e,d),f=f.concat(t);break}case 38:{let t;[r,t]=a(e,d),g=g.concat(t);break}case 129:{let t;[r,t]=c(e,d),f.push(t);break}case 128:{let t;[r,t]=u(e,d),g.push(t);break}default:throw new Error("invalid instruction")}d+=r}if(r<4&&p>2e4)throw new Error("program too costly for Teal version < 4. consider using v4.");return[f,g,!0]}function p(e,t){const[,,r]=l(e,t);return r}function h(e,t){const[r]=s(e,t);return r}function d(e,t){const[r]=a(e,t);return r}function f(e,t){const[r]=c(e,t);return r}function g(e,t){const[r]=u(e,t);return r}const m=n.z_,y=n.BV},8800:(e,t,r)=>{"use strict";r.r(t),r.d(t,{LogicSig:()=>p,LogicSigAccount:()=>h,makeLogicSig:()=>d,signLogicSigTransactionObject:()=>f,signLogicSigTransaction:()=>g,logicSigFromByte:()=>m,tealSign:()=>b,tealSignFromProgram:()=>w});var n=r(9404),i=r(7116),o=r(3033),s=r(5583),a=r(4158),c=r(413),u=r(9417),l=r(2486).Buffer;class p{constructor(e,t){if(this.tag=l.from("Program"),t&&(!Array.isArray(t)||!t.every((e=>e.constructor===Uint8Array||l.isBuffer(e)))))throw new TypeError("Invalid arguments");let r;if(null!=t&&(r=t.map((e=>new Uint8Array(e)))),!s.checkProgram(e,r))throw new Error("Invalid program");this.logic=e,this.args=r,this.sig=void 0,this.msig=void 0}get_obj_for_encoding(){const e={l:this.logic};return this.args&&(e.arg=this.args),this.sig?e.sig=this.sig:this.msig&&(e.msig=this.msig),e}static from_obj_for_encoding(e){const t=new p(e.l,e.arg);return t.sig=e.sig,t.msig=e.msig,t}verify(e){if(this.sig&&this.msig)return!1;try{s.checkProgram(this.logic,this.args)}catch(e){return!1}const t=c.concatArrays(this.tag,this.logic);if(!this.sig&&!this.msig){const r=n.genericHash(t);return c.arrayEqual(r,e)}return this.sig?n.verify(t,this.sig,e):(0,a.F2)(t,this.msig,e)}address(){const e=c.concatArrays(this.tag,this.logic),t=n.genericHash(e);return i.encodeAddress(new Uint8Array(t))}sign(e,t){if(null==t)this.sig=this.signProgram(e);else{const r=t.addrs.map((e=>({pk:i.decodeAddress(e).publicKey})));this.msig={v:t.version,thr:t.threshold,subsig:r};const[n,o]=this.singleSignMultisig(e,this.msig);this.msig.subsig[o].s=n}}appendToMultisig(e){if(void 0===this.msig)throw new Error("no multisig present");const[t,r]=this.singleSignMultisig(e,this.msig);this.msig.subsig[r].s=t}signProgram(e){const t=c.concatArrays(this.tag,this.logic);return n.sign(t,e)}singleSignMultisig(e,t){let r=-1;const i=n.keyPairFromSecretKey(e).publicKey;for(let e=0;e<t.subsig.length;e++){const{pk:n}=t.subsig[e];if(c.arrayEqual(n,i)){r=e;break}}if(-1===r)throw new Error("invalid secret key");return[this.signProgram(e),r]}toByte(){return o.encode(this.get_obj_for_encoding())}static fromByte(e){const t=o.decode(e);return p.from_obj_for_encoding(t)}}class h{constructor(e,t){this.lsig=new p(e,t),this.sigkey=void 0}get_obj_for_encoding(){const e={lsig:this.lsig.get_obj_for_encoding()};return this.sigkey&&(e.sigkey=this.sigkey),e}static from_obj_for_encoding(e){const t=new h(e.lsig.l,e.lsig.arg);return t.lsig=p.from_obj_for_encoding(e.lsig),t.sigkey=e.sigkey,t}toByte(){return o.encode(this.get_obj_for_encoding())}static fromByte(e){const t=o.decode(e);return h.from_obj_for_encoding(t)}isDelegated(){return!(!this.lsig.sig&&!this.lsig.msig)}verify(){const e=this.address();return this.lsig.verify(i.decodeAddress(e).publicKey)}address(){if(this.lsig.sig&&this.lsig.msig)throw new Error("LogicSig has too many signatures. At most one of sig or msig may be present");if(this.lsig.sig){if(!this.sigkey)throw new Error("Signing key for delegated account is missing");return i.encodeAddress(this.sigkey)}if(this.lsig.msig){const e={version:this.lsig.msig.v,threshold:this.lsig.msig.thr,pks:this.lsig.msig.subsig.map((e=>e.pk))};return i.encodeAddress(i.fromMultisigPreImg(e))}return this.lsig.address()}signMultisig(e,t){this.lsig.sign(t,e)}appendToMultisig(e){this.lsig.appendToMultisig(e)}sign(e){this.lsig.sign(e),this.sigkey=n.keyPairFromSecretKey(e).publicKey}}function d(e,t){return new p(e,t)}function f(e,t){let r,s;if(t instanceof h)r=t.lsig,s=i.decodeAddress(t.address()).publicKey;else if(r=t,r.sig)s=e.from.publicKey;else if(r.msig){const e={version:r.msig.v,threshold:r.msig.thr,pks:r.msig.subsig.map((e=>e.pk))};s=i.fromMultisigPreImg(e)}else s=i.decodeAddress(r.address()).publicKey;return function(e,t,r){if(!t.verify(r))throw new Error("Logic signature verification failed. Ensure the program and signature are valid.");const i={lsig:t.get_obj_for_encoding(),txn:e.get_obj_for_encoding()};return n.bytesEqual(r,e.from.publicKey)||(i.sgnr=l.from(r)),{txID:e.txID().toString(),blob:o.encode(i)}}(e,r,s)}function g(e,t){return f(u.instantiateTxnIfNeeded(e),t)}function m(e){return p.fromByte(e)}const y=l.from("ProgData");function b(e,t,r){const o=c.concatArrays(i.decodeAddress(r).publicKey,t),s=l.from(c.concatArrays(y,o));return n.sign(s,e)}function w(e,t,r){return b(e,t,new p(r).address())}},6608:(e,t,r)=>{"use strict";r.r(t),r.d(t,{MULTISIG_BAD_SENDER_ERROR_MSG:()=>N,signTransaction:()=>P,signBid:()=>L,signBytes:()=>j,verifyBytes:()=>z,encodeObj:()=>F,decodeObj:()=>M,ERROR_MULTISIG_BAD_SENDER:()=>q,ERROR_INVALID_MICROALGOS:()=>H,Algodv2:()=>f.Z,Kmd:()=>g.Z,IntDecoding:()=>m.Z,Indexer:()=>y.Z,waitForConfirmation:()=>b.K,isValidAddress:()=>i.isValidAddress,encodeAddress:()=>i.encodeAddress,decodeAddress:()=>i.decodeAddress,getApplicationAddress:()=>i.getApplicationAddress,bytesToBigInt:()=>w.v,bigIntToBytes:()=>w.j,encodeUint64:()=>v.T,decodeUint64:()=>v.u,generateAccount:()=>A.Z,modelsv2:()=>x,mnemonicToMasterDerivationKey:()=>_.OF,masterDerivationKeyToMnemonic:()=>_.vC,secretKeyToMnemonic:()=>_.QX,mnemonicToSecretKey:()=>_.Ch,seedFromMnemonic:()=>_.mE,mnemonicFromSeed:()=>_.w3,microalgosToAlgos:()=>l._,algosToMicroalgos:()=>l.HN,INVALID_MICROALGOS_ERROR_MSG:()=>l.rD,computeGroupID:()=>S.computeGroupID,assignGroupID:()=>S.assignGroupID,LogicSigAccount:()=>E.LogicSigAccount,makeLogicSig:()=>E.makeLogicSig,signLogicSigTransaction:()=>E.signLogicSigTransaction,signLogicSigTransactionObject:()=>E.signLogicSigTransactionObject,logicSigFromByte:()=>E.logicSigFromByte,tealSign:()=>E.tealSign,tealSignFromProgram:()=>E.tealSignFromProgram,signMultisigTransaction:()=>B.PU,mergeMultisigTransactions:()=>B.J6,appendSignMultisigTransaction:()=>B.PO,multisigAddress:()=>B.vH,LogicTemplates:()=>$,DryrunResult:()=>T.x,createDryrun:()=>T.P,OnApplicationComplete:()=>k.OnApplicationComplete,makeApplicationCallTxnFromObject:()=>k.makeApplicationCallTxnFromObject,makeApplicationClearStateTxn:()=>k.makeApplicationClearStateTxn,makeApplicationClearStateTxnFromObject:()=>k.makeApplicationClearStateTxnFromObject,makeApplicationCloseOutTxn:()=>k.makeApplicationCloseOutTxn,makeApplicationCloseOutTxnFromObject:()=>k.makeApplicationCloseOutTxnFromObject,makeApplicationCreateTxn:()=>k.makeApplicationCreateTxn,makeApplicationCreateTxnFromObject:()=>k.makeApplicationCreateTxnFromObject,makeApplicationDeleteTxn:()=>k.makeApplicationDeleteTxn,makeApplicationDeleteTxnFromObject:()=>k.makeApplicationDeleteTxnFromObject,makeApplicationNoOpTxn:()=>k.makeApplicationNoOpTxn,makeApplicationNoOpTxnFromObject:()=>k.makeApplicationNoOpTxnFromObject,makeApplicationOptInTxn:()=>k.makeApplicationOptInTxn,makeApplicationOptInTxnFromObject:()=>k.makeApplicationOptInTxnFromObject,makeApplicationUpdateTxn:()=>k.makeApplicationUpdateTxn,makeApplicationUpdateTxnFromObject:()=>k.makeApplicationUpdateTxnFromObject,makeAssetConfigTxn:()=>k.makeAssetConfigTxn,makeAssetConfigTxnWithSuggestedParams:()=>k.makeAssetConfigTxnWithSuggestedParams,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>k.makeAssetConfigTxnWithSuggestedParamsFromObject,makeAssetCreateTxn:()=>k.makeAssetCreateTxn,makeAssetCreateTxnWithSuggestedParams:()=>k.makeAssetCreateTxnWithSuggestedParams,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>k.makeAssetCreateTxnWithSuggestedParamsFromObject,makeAssetDestroyTxn:()=>k.makeAssetDestroyTxn,makeAssetDestroyTxnWithSuggestedParams:()=>k.makeAssetDestroyTxnWithSuggestedParams,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>k.makeAssetDestroyTxnWithSuggestedParamsFromObject,makeAssetFreezeTxn:()=>k.makeAssetFreezeTxn,makeAssetFreezeTxnWithSuggestedParams:()=>k.makeAssetFreezeTxnWithSuggestedParams,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>k.makeAssetFreezeTxnWithSuggestedParamsFromObject,makeAssetTransferTxn:()=>k.makeAssetTransferTxn,makeAssetTransferTxnWithSuggestedParams:()=>k.makeAssetTransferTxnWithSuggestedParams,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>k.makeAssetTransferTxnWithSuggestedParamsFromObject,makeKeyRegistrationTxn:()=>k.makeKeyRegistrationTxn,makeKeyRegistrationTxnWithSuggestedParams:()=>k.makeKeyRegistrationTxnWithSuggestedParams,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>k.makeKeyRegistrationTxnWithSuggestedParamsFromObject,makePaymentTxn:()=>k.makePaymentTxn,makePaymentTxnWithSuggestedParams:()=>k.makePaymentTxnWithSuggestedParams,makePaymentTxnWithSuggestedParamsFromObject:()=>k.makePaymentTxnWithSuggestedParamsFromObject,ALGORAND_MIN_TX_FEE:()=>s.ALGORAND_MIN_TX_FEE,Transaction:()=>s.Transaction,decodeSignedTransaction:()=>s.decodeSignedTransaction,decodeUnsignedTransaction:()=>s.decodeUnsignedTransaction,encodeUnsignedTransaction:()=>s.encodeUnsignedTransaction,instantiateTxnIfNeeded:()=>s.instantiateTxnIfNeeded,isTransactionWithSigner:()=>U.Xw,makeBasicAccountTransactionSigner:()=>U.x7,makeLogicSigAccountTransactionSigner:()=>U.i1,makeMultiSigAccountTransactionSigner:()=>U.Vj,AtomicTransactionComposer:()=>I.A,AtomicTransactionComposerStatus:()=>I.b,TransactionType:()=>R.i,ABIAddressType:()=>C.JQ,ABIArrayDynamicType:()=>C._4,ABIArrayStaticType:()=>C.X3,ABIBoolType:()=>C.R0,ABIByteType:()=>C.jD,ABIContract:()=>C.Yh,ABIInterface:()=>C.bL,ABIMethod:()=>C.Ls,ABIReferenceType:()=>C.UV,ABIStringType:()=>C.Ax,ABITransactionType:()=>C.A9,ABITupleType:()=>C.w1,ABIType:()=>C.NK,ABIUfixedType:()=>C.RY,ABIUintType:()=>C.Pu,ADDR_BYTE_SIZE:()=>C.Vk,LENGTH_ENCODE_BYTE_SIZE:()=>C.nh,MAX_LEN:()=>C.kG,SINGLE_BOOL_SIZE:()=>C.qH,SINGLE_BYTE_SIZE:()=>C.JH,abiCheckTransactionType:()=>C.vJ,abiTypeIsReference:()=>C.o5,abiTypeIsTransaction:()=>C.AE,getMethodByName:()=>C.I5});var n=r(9404),i=r(7116),o=r(3033),s=r(9417),a=r(8886),c=r.n(a),u=r(2691),l=r(9070),p=r(413),h=r(5922),d={};for(const e in h)["default","MULTISIG_BAD_SENDER_ERROR_MSG","signTransaction","signBid","signBytes","verifyBytes","encodeObj","decodeObj","ERROR_MULTISIG_BAD_SENDER","ERROR_INVALID_MICROALGOS","Algodv2","Kmd","IntDecoding","Indexer","waitForConfirmation","isValidAddress","encodeAddress","decodeAddress","getApplicationAddress","bytesToBigInt","bigIntToBytes","encodeUint64","decodeUint64","generateAccount","modelsv2","mnemonicToMasterDerivationKey","masterDerivationKeyToMnemonic","secretKeyToMnemonic","mnemonicToSecretKey","seedFromMnemonic","mnemonicFromSeed","microalgosToAlgos","algosToMicroalgos","INVALID_MICROALGOS_ERROR_MSG","computeGroupID","assignGroupID","LogicSigAccount","makeLogicSig","signLogicSigTransaction","signLogicSigTransactionObject","logicSigFromByte","tealSign","tealSignFromProgram","signMultisigTransaction","mergeMultisigTransactions","appendSignMultisigTransaction","multisigAddress","LogicTemplates"].indexOf(e)<0&&(d[e]=()=>h[e]);r.d(t,d);var f=r(1663),g=r(6477),m=r(7197),y=r(9582),b=r(5062),w=r(8922),v=r(6963),A=r(7988),x=r(227),_=r(3510),S=r(1063),E=r(8800),B=r(4158),T=r(4383),k=r(1988),U=r(834),I=r(3458),R=r(2380),C=r(7677),D=r(2486).Buffer;const O=D.from([77,88]),N="The transaction sender address and multisig preimage do not match.";function P(e,t){if(void 0===e.from){const r=n.keyPairFromSecretKey(t);e.from=i.encodeAddress(r.publicKey)}const r=s.instantiateTxnIfNeeded(e);return{txID:r.txID().toString(),blob:r.signTxn(t)}}function L(e,t){return new u.Z(e).signBid(t)}function j(e,t){const r=D.from(p.concatArrays(O,e));return n.sign(r,t)}function z(e,t,r){const o=D.from(p.concatArrays(O,e)),s=i.decodeAddress(r).publicKey;return n.verify(o,t,s)}function F(e){return new Uint8Array(o.encode(e))}function M(e){return o.decode(e)}const q=new Error(N),H=new Error(l.rD),$=c()},1988:(e,t,r)=>{"use strict";r.r(t),r.d(t,{makePaymentTxnWithSuggestedParams:()=>s,makePaymentTxn:()=>a,makePaymentTxnWithSuggestedParamsFromObject:()=>c,makeKeyRegistrationTxnWithSuggestedParams:()=>u,makeKeyRegistrationTxn:()=>l,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>p,makeAssetCreateTxnWithSuggestedParams:()=>h,makeAssetCreateTxn:()=>d,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>f,makeAssetConfigTxnWithSuggestedParams:()=>g,makeAssetConfigTxn:()=>m,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>y,makeAssetDestroyTxnWithSuggestedParams:()=>b,makeAssetDestroyTxn:()=>w,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>v,makeAssetFreezeTxnWithSuggestedParams:()=>A,makeAssetFreezeTxn:()=>x,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>_,makeAssetTransferTxnWithSuggestedParams:()=>S,makeAssetTransferTxn:()=>E,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>B,makeApplicationCreateTxn:()=>T,makeApplicationCreateTxnFromObject:()=>k,makeApplicationUpdateTxn:()=>U,makeApplicationUpdateTxnFromObject:()=>I,makeApplicationDeleteTxn:()=>R,makeApplicationDeleteTxnFromObject:()=>C,makeApplicationOptInTxn:()=>D,makeApplicationOptInTxnFromObject:()=>O,makeApplicationCloseOutTxn:()=>N,makeApplicationCloseOutTxnFromObject:()=>P,makeApplicationClearStateTxn:()=>L,makeApplicationClearStateTxnFromObject:()=>j,makeApplicationNoOpTxn:()=>z,makeApplicationNoOpTxnFromObject:()=>F,OnApplicationComplete:()=>i.hq,makeApplicationCallTxnFromObject:()=>M});var n=r(9417),i=r(1624),o=r(1824);function s(e,t,r,i,s,a,c){const u={from:e,to:t,amount:r,closeRemainderTo:i,note:s,suggestedParams:a,type:o.i.pay,reKeyTo:c};return new n.Transaction(u)}function a(e,t,r,n,i,o,a,c,u,l,p){return s(e,t,n,i,c,{genesisHash:u,genesisID:l,firstRound:o,lastRound:a,fee:r},p)}function c(e){return s(e.from,e.to,e.amount,e.closeRemainderTo,e.note,e.suggestedParams,e.rekeyTo)}function u(e,t,r,i,s,a,c,u,l,p=!1,h){const d={from:e,note:t,voteKey:r,selectionKey:i,voteFirst:s,voteLast:a,voteKeyDilution:c,suggestedParams:u,type:o.i.keyreg,reKeyTo:l,nonParticipation:p,stateProofKey:h};return new n.Transaction(d)}function l(e,t,r,n,i,o,s,a,c,l,p,h,d,f=!1,g){return u(e,i,a,c,l,p,h,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},d,f,g)}function p(e){return u(e.from,e.note,e.voteKey,e.selectionKey,e.voteFirst,e.voteLast,e.voteKeyDilution,e.suggestedParams,e.rekeyTo,e.nonParticipation,e.stateProofKey)}function h(e,t,r,i,s,a,c,u,l,p,h,d,f,g,m){const y={from:e,note:t,suggestedParams:g,assetTotal:r,assetDecimals:i,assetDefaultFrozen:s,assetUnitName:p,assetName:h,assetURL:d,assetMetadataHash:f,assetManager:a,assetReserve:c,assetFreeze:u,assetClawback:l,type:o.i.acfg,reKeyTo:m};return new n.Transaction(y)}function d(e,t,r,n,i,o,s,a,c,u,l,p,d,f,g,m,y,b,w){return h(e,i,a,c,u,l,p,d,f,g,m,y,b,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},w)}function f(e){return h(e.from,e.note,e.total,e.decimals,e.defaultFrozen,e.manager,e.reserve,e.freeze,e.clawback,e.unitName,e.assetName,e.assetURL,e.assetMetadataHash,e.suggestedParams,e.rekeyTo)}function g(e,t,r,i,s,a,c,u,l=!0,p){if(l&&(void 0===i||void 0===s||void 0===a||void 0===c))throw Error("strict empty address checking was turned on, but at least one empty address was provided");const h={from:e,suggestedParams:u,assetIndex:r,assetManager:i,assetReserve:s,assetFreeze:a,assetClawback:c,type:o.i.acfg,note:t,reKeyTo:p};return new n.Transaction(h)}function m(e,t,r,n,i,o,s,a,c,u,l,p,h=!0,d){return g(e,i,a,c,u,l,p,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},h,d)}function y(e){return g(e.from,e.note,e.assetIndex,e.manager,e.reserve,e.freeze,e.clawback,e.suggestedParams,e.strictEmptyAddressChecking,e.rekeyTo)}function b(e,t,r,i,s){const a={from:e,suggestedParams:i,assetIndex:r,type:o.i.acfg,note:t,reKeyTo:s};return new n.Transaction(a)}function w(e,t,r,n,i,o,s,a,c){return b(e,i,a,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},c)}function v(e){return b(e.from,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function A(e,t,r,i,s,a,c){const u={from:e,type:o.i.afrz,freezeAccount:i,assetIndex:r,freezeState:s,note:t,suggestedParams:a,reKeyTo:c};return new n.Transaction(u)}function x(e,t,r,n,i,o,s,a,c,u,l){return A(e,i,a,c,u,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},l)}function _(e){return A(e.from,e.note,e.assetIndex,e.freezeTarget,e.freezeState,e.suggestedParams,e.rekeyTo)}function S(e,t,r,i,s,a,c,u,l){const p={type:o.i.axfer,from:e,to:t,amount:s,suggestedParams:u,assetIndex:c,note:a,assetRevocationTarget:i,closeRemainderTo:r,reKeyTo:l};return new n.Transaction(p)}function E(e,t,r,n,i,o,s,a,c,u,l,p,h){return S(e,t,r,n,o,c,p,{genesisHash:u,genesisID:l,firstRound:s,lastRound:a,fee:i},h)}function B(e){return S(e.from,e.to,e.closeRemainderTo,e.revocationTarget,e.amount,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function T(e,t,r,i,s,a,c,u,l,p,h,d,f,g,m,y,b){const w={type:o.i.appl,from:e,suggestedParams:t,appIndex:0,appOnComplete:r,appLocalInts:a,appLocalByteSlices:c,appGlobalInts:u,appGlobalByteSlices:l,appApprovalProgram:i,appClearProgram:s,appArgs:p,appAccounts:h,appForeignApps:d,appForeignAssets:f,note:g,lease:m,reKeyTo:y,extraPages:b};return new n.Transaction(w)}function k(e){return T(e.from,e.suggestedParams,e.onComplete,e.approvalProgram,e.clearProgram,e.numLocalInts,e.numLocalByteSlices,e.numGlobalInts,e.numGlobalByteSlices,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.extraPages)}function U(e,t,r,s,a,c,u,l,p,h,d,f){const g={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appApprovalProgram:s,appOnComplete:i.hq.UpdateApplicationOC,appClearProgram:a,appArgs:c,appAccounts:u,appForeignApps:l,appForeignAssets:p,note:h,lease:d,reKeyTo:f};return new n.Transaction(g)}function I(e){return U(e.from,e.suggestedParams,e.appIndex,e.approvalProgram,e.clearProgram,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function R(e,t,r,s,a,c,u,l,p,h){const d={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.DeleteApplicationOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(d)}function C(e){return R(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function D(e,t,r,s,a,c,u,l,p,h){const d={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.OptInOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(d)}function O(e){return D(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function N(e,t,r,s,a,c,u,l,p,h){const d={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.CloseOutOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(d)}function P(e){return N(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function L(e,t,r,s,a,c,u,l,p,h){const d={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.ClearStateOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(d)}function j(e){return L(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function z(e,t,r,s,a,c,u,l,p,h){const d={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.NoOpOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,note:l,lease:p,reKeyTo:h};return new n.Transaction(d)}function F(e){return z(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo)}function M(e){const t={type:o.i.appl,from:e.from,suggestedParams:e.suggestedParams,appIndex:e.appIndex,appOnComplete:e.onComplete,appLocalInts:e.numLocalInts,appLocalByteSlices:e.numLocalByteSlices,appGlobalInts:e.numGlobalInts,appGlobalByteSlices:e.numGlobalByteSlices,appApprovalProgram:e.approvalProgram,appClearProgram:e.clearProgram,appArgs:e.appArgs,appAccounts:e.accounts,appForeignApps:e.foreignApps,appForeignAssets:e.foreignAssets,note:e.note,lease:e.lease,reKeyTo:e.rekeyTo,extraPages:e.extraPages};return new n.Transaction(t)}},3510:(e,t,r)=>{"use strict";r.d(t,{vC:()=>g,w3:()=>l,OF:()=>f,Ch:()=>h,QX:()=>d,mE:()=>p});const n=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var i=r(9404),o=r(7116);const s="failed to decode mnemonic";function a(e){const t=[];let r=0,n=0;return e.forEach((function(e){r|=e<<n,n+=8,n>=11&&(t.push(2047&r),r>>=11,n-=11)})),n&&t.push(r),t}function c(e){return e.map((e=>n[e]))}function u(e){return c(a(i.genericHash(e)))[0]}function l(e){if(e.length!==i.SEED_BTYES_LENGTH)throw new RangeError(`Seed length must be ${i.SEED_BTYES_LENGTH}`);const t=c(a(e)),r=u(e);return`${t.join(" ")} ${r}`}function p(e){const t=e.split(" "),r=t.slice(0,24);for(const e of r)if(-1===n.indexOf(e))throw new Error("the mnemonic contains a word that is not in the wordlist");const i=t[t.length-1];let o=function(e){const t=[];let r=0,n=0;return e.forEach((function(e){for(r|=e<<n,n+=11;n>=8;)t.push(255&r),r>>=8,n-=8})),n&&t.push(r),new Uint8Array(t)}(r.map((e=>n.indexOf(e))));if(33!==o.length)throw new Error(s);if(0!==o[o.length-1])throw new Error(s);if(o=o.slice(0,o.length-1),u(o)===i)return o;throw new Error(s)}function h(e){const t=p(e),r=i.keyPairFromSeed(t);return{addr:o.encodeAddress(r.publicKey),sk:r.secretKey}}function d(e){return l(e.slice(0,i.SEED_BTYES_LENGTH))}function f(e){return p(e)}function g(e){return l(e)}},4158:(e,t,r)=>{"use strict";r.d(t,{J6:()=>h,F2:()=>d,PU:()=>f,PO:()=>g,vH:()=>m});var n=r(9404),i=r(7116),o=r(3033),s=r(9417),a=r(413),c=r(2486).Buffer;const u="Cannot merge txs. Multisig preimages differ",l="Cannot mutate a multisig field as it would invalidate all existing signatures.";class p extends s.Transaction{addLease(){throw new Error(l)}addRekey(){throw new Error(l)}signTxn(e){throw new Error("Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.")}partialSignTxn({version:e,threshold:t,pks:r},s){const a=n.keyPairFromSecretKey(s).publicKey;return function(e,{rawSig:t,myPk:r},{version:s,threshold:a,pks:u}){let l=!1;const p=u.map((e=>n.bytesEqual(e,r)?(l=!0,{pk:c.from(e),s:t}):{pk:c.from(e)}));if(!1===l)throw new Error("Key does not exist");const h={msig:{v:s,thr:a,subsig:p},txn:e},d=i.fromMultisigPreImg({version:s,threshold:a,pks:u});return i.encodeAddress(e.snd)!==i.encodeAddress(d)&&(h.sgnr=c.from(d)),new Uint8Array(o.encode(h))}(this.get_obj_for_encoding(),{rawSig:this.rawSignTxn(s),myPk:a},{version:e,threshold:t,pks:r})}static from_obj_for_encoding(e){return super.from_obj_for_encoding(e)}}function h(e){if(e.length<2)throw new Error("Not enough multisig transactions to merge. Need at least two");const t=o.decode(e[0]),r=p.from_obj_for_encoding(t.txn).txID(),n=t.sgnr?i.encodeAddress(t.sgnr):void 0,s={version:t.msig.v,threshold:t.msig.thr,pks:t.msig.subsig.map((e=>e.pk))},a=i.encodeAddress(i.fromMultisigPreImg(s));let l=t.msig.subsig;for(let s=0;s<e.length;s++){const h=o.decode(e[s]);if(p.from_obj_for_encoding(h.txn).txID()!==r)throw new Error("Cannot merge txs. txIDs differ");if(n!==(h.sgnr?i.encodeAddress(h.sgnr):void 0))throw new Error("Cannot merge txs. Auth addrs differ");if(h.msig.subsig.length!==t.msig.subsig.length)throw new Error(u);const d={version:h.msig.v,threshold:h.msig.thr,pks:h.msig.subsig.map((e=>e.pk))};if(a!==i.encodeAddress(i.fromMultisigPreImg(d)))throw new Error(u);l=h.msig.subsig.map(((e,r)=>{const n=t.msig.subsig[r];if(n.s){if(e.s&&0!==c.compare(c.from(e.s),c.from(n.s)))throw new Error("Cannot merge txs. subsigs are mismatched.");return{pk:n.pk,s:n.s}}return e.s?{pk:n.pk,s:e.s}:n}))}const h={msig:{v:t.msig.v,thr:t.msig.thr,subsig:l},txn:t.txn};return void 0!==n&&(h.sgnr=c.from(i.decodeAddress(n).publicKey)),new Uint8Array(o.encode(h))}function d(e,t,r){const o=t.v,s=t.thr,c=t.subsig,u=c.map((e=>e.pk));if(t.subsig.length<s)return!1;let l;try{l=i.fromMultisigPreImg({version:o,threshold:s,pks:u})}catch(e){return!1}if(!a.arrayEqual(l,r))return!1;let p=0;for(const e of c)void 0!==e.s&&(p+=1);if(p<s)return!1;let h=0;for(const t of c)void 0!==t.s&&n.verify(e,t.s,t.pk)&&(h+=1);return!(h<s)}function f(e,{version:t,threshold:r,addrs:n},o){const a=i.fromMultisigPreImgAddrs({version:t,threshold:r,addrs:n});Object.prototype.hasOwnProperty.call(e,"from")||(e.from=a);const c=n.map((e=>i.decodeAddress(e).publicKey));let u,l;return e instanceof s.Transaction?(u=e,l=p.prototype.partialSignTxn.call(u,{version:t,threshold:r,pks:c},o)):(u=new p(e),l=u.partialSignTxn({version:t,threshold:r,pks:c},o)),{txID:u.txID().toString(),blob:l}}function g(e,{version:t,threshold:r,addrs:n},s){const a=n.map((e=>i.decodeAddress(e).publicKey)),c=o.decode(e),u=p.from_obj_for_encoding(c.txn),l=u.partialSignTxn({version:t,threshold:r,pks:a},s);return{txID:u.txID().toString(),blob:h([e,l])}}function m({version:e,threshold:t,addrs:r}){return i.fromMultisigPreImgAddrs({version:e,threshold:t,addrs:r})}},9404:(e,t,r)=>{"use strict";r.r(t),r.d(t,{genericHash:()=>a,randomBytes:()=>c,keyPairFromSeed:()=>u,keyPair:()=>l,keyPairFromSecretKey:()=>p,sign:()=>h,bytesEqual:()=>d,verify:()=>f,PUBLIC_KEY_LENGTH:()=>g,SECRET_KEY_LENGTH:()=>m,HASH_BYTES_LENGTH:()=>y,SEED_BTYES_LENGTH:()=>b});var n=r(7765),i=r.n(n),o=r(9757),s=r.n(o);function a(e){return s().sha512_256.array(e)}function c(e){return i().randomBytes(e)}function u(e){return i().sign.keyPair.fromSeed(e)}function l(){return u(c(i().box.secretKeyLength))}function p(e){return i().sign.keyPair.fromSecretKey(e)}function h(e,t){return i().sign.detached(e,t)}function d(e,t){return i().verify(e,t)}function f(e,t,r){return i().sign.detached.verify(e,t,r)}const g=i().sign.publicKeyLength,m=i().sign.secretKeyLength,y=32,b=32},834:(e,t,r)=>{"use strict";r.d(t,{x7:()=>o,i1:()=>s,Vj:()=>a,Xw:()=>c});var n=r(8800),i=r(4158);function o(e){return(t,r)=>{const n=[];for(const i of r)n.push(t[i].signTxn(e.sk));return Promise.resolve(n)}}function s(e){return(t,r)=>{const i=[];for(const o of r){const{blob:r}=(0,n.signLogicSigTransactionObject)(t[o],e);i.push(r)}return Promise.resolve(i)}}function a(e,t){return(r,n)=>{const o=[];for(const s of n){const n=r[s],a=[];for(const r of t){const{blob:t}=(0,i.PU)(n,e,r);a.push(t)}o.push((0,i.J6)(a))}return Promise.resolve(o)}}function c(e){return"object"==typeof e&&2===Object.keys(e).length&&"object"==typeof e.txn&&"function"==typeof e.signer}},9417:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_MIN_TX_FEE:()=>p,Transaction:()=>d,encodeUnsignedTransaction:()=>f,decodeUnsignedTransaction:()=>g,decodeSignedTransaction:()=>m,instantiateTxnIfNeeded:()=>y,default:()=>b});var n=r(7267),i=r.n(n),o=r(7116),s=r(3033),a=r(9404),c=r(413),u=r(1624),l=r(2486).Buffer;const p=1e3;function h(e,t,r){if(null==e)return;let n;if("string"==typeof e?n=l.from(e,"base64"):e.constructor===Uint8Array?n=l.from(e):l.isBuffer(e)&&(n=e),null==n||n.byteLength!==r)throw Error(`${t} must be a ${r} byte Uint8Array or Buffer or base64 string.`);return n}class d{constructor({...e}){this.name="Transaction",this.tag=l.from("TX");const t={type:u.iU.pay,flatFee:!1,nonParticipation:!1};if(void 0===e.type&&(e.type=t.type),void 0===e.flatFee&&(e.flatFee=t.flatFee),e.type===u.iU.keyreg&&void 0!==e.voteKey&&void 0===e.nonParticipation&&(e.nonParticipation=t.nonParticipation),void 0!==e.suggestedParams){const t=e;t.genesisHash=t.suggestedParams.genesisHash,t.fee=t.suggestedParams.fee,void 0!==t.suggestedParams.flatFee&&(t.flatFee=t.suggestedParams.flatFee),t.firstRound=t.suggestedParams.firstRound,t.lastRound=t.suggestedParams.lastRound,t.genesisID=t.suggestedParams.genesisID}const r=e;if(r.from=o.decodeAddress(r.from),void 0!==r.to&&(r.to=o.decodeAddress(r.to)),void 0!==r.closeRemainderTo&&(r.closeRemainderTo=o.decodeAddress(r.closeRemainderTo)),void 0!==r.assetManager&&(r.assetManager=o.decodeAddress(r.assetManager)),void 0!==r.assetReserve&&(r.assetReserve=o.decodeAddress(r.assetReserve)),void 0!==r.assetFreeze&&(r.assetFreeze=o.decodeAddress(r.assetFreeze)),void 0!==r.assetClawback&&(r.assetClawback=o.decodeAddress(r.assetClawback)),void 0!==r.assetRevocationTarget&&(r.assetRevocationTarget=o.decodeAddress(r.assetRevocationTarget)),void 0!==r.freezeAccount&&(r.freezeAccount=o.decodeAddress(r.freezeAccount)),void 0!==r.reKeyTo&&(r.reKeyTo=o.decodeAddress(r.reKeyTo)),void 0===r.genesisHash)throw Error("genesis hash must be specified and in a base64 string.");if(r.genesisHash=l.from(r.genesisHash,"base64"),void 0!==r.amount&&(!(Number.isSafeInteger(r.amount)||"bigint"==typeof r.amount&&r.amount<=BigInt("0xffffffffffffffff"))||r.amount<0))throw Error("Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(!Number.isSafeInteger(r.fee)||r.fee<0)throw Error("fee must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r.firstRound)||r.firstRound<0)throw Error("firstRound must be a positive number");if(!Number.isSafeInteger(r.lastRound)||r.lastRound<0)throw Error("lastRound must be a positive number");if(void 0!==r.extraPages&&(!Number.isInteger(r.extraPages)||r.extraPages<0||r.extraPages>3))throw Error("extraPages must be an Integer between and including 0 to 3");if(void 0!==r.assetTotal&&(!(Number.isSafeInteger(r.assetTotal)||"bigint"==typeof r.assetTotal&&r.assetTotal<=BigInt("0xffffffffffffffff"))||r.assetTotal<0))throw Error("Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(void 0!==r.assetDecimals&&(!Number.isSafeInteger(r.assetDecimals)||r.assetDecimals<0||r.assetDecimals>19))throw Error(`assetDecimals must be a positive number and smaller than ${19..toString()}`);if(void 0!==r.assetIndex&&(!Number.isSafeInteger(r.assetIndex)||r.assetIndex<0))throw Error("Asset index must be a positive number and smaller than 2^53-1");if(void 0!==r.appIndex&&(!Number.isSafeInteger(r.appIndex)||r.appIndex<0))throw Error("Application index must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalInts&&(!Number.isSafeInteger(r.appLocalInts)||r.appLocalInts<0))throw Error("Application local ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalByteSlices&&(!Number.isSafeInteger(r.appLocalByteSlices)||r.appLocalByteSlices<0))throw Error("Application local byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalInts&&(!Number.isSafeInteger(r.appGlobalInts)||r.appGlobalInts<0))throw Error("Application global ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalByteSlices&&(!Number.isSafeInteger(r.appGlobalByteSlices)||r.appGlobalByteSlices<0))throw Error("Application global byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appApprovalProgram&&r.appApprovalProgram.constructor!==Uint8Array)throw Error("appApprovalProgram must be a Uint8Array.");if(void 0!==r.appClearProgram&&r.appClearProgram.constructor!==Uint8Array)throw Error("appClearProgram must be a Uint8Array.");if(void 0!==r.appArgs){if(!Array.isArray(r.appArgs))throw Error("appArgs must be an Array of Uint8Array.");r.appArgs=r.appArgs.slice(),r.appArgs.forEach((e=>{if(e.constructor!==Uint8Array)throw Error("each element of AppArgs must be a Uint8Array.")}))}else r.appArgs=[];if(void 0!==r.appAccounts){if(!Array.isArray(r.appAccounts))throw Error("appAccounts must be an Array of addresses.");r.appAccounts=r.appAccounts.map((e=>o.decodeAddress(e)))}if(void 0!==r.appForeignApps){if(!Array.isArray(r.appForeignApps))throw Error("appForeignApps must be an Array of integers.");r.appForeignApps=r.appForeignApps.slice(),r.appForeignApps.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign application index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.appForeignAssets){if(!Array.isArray(r.appForeignAssets))throw Error("appForeignAssets must be an Array of integers.");r.appForeignAssets=r.appForeignAssets.slice(),r.appForeignAssets.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign asset index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.assetMetadataHash&&0!==r.assetMetadataHash.length){if("string"==typeof r.assetMetadataHash&&(r.assetMetadataHash=new Uint8Array(l.from(r.assetMetadataHash))),r.assetMetadataHash.constructor!==Uint8Array||32!==r.assetMetadataHash.byteLength)throw Error("assetMetadataHash must be a 32 byte Uint8Array or string.");r.assetMetadataHash.every((e=>0===e))&&(r.assetMetadataHash=void 0)}else r.assetMetadataHash=void 0;if(void 0!==r.note){if(r.note.constructor!==Uint8Array)throw Error("note must be a Uint8Array.")}else r.note=new Uint8Array(0);if(void 0!==r.lease){if(r.lease.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==r.lease.length)throw Error(`lease must be of length ${32..toString()}.`);r.lease.every((e=>0===e))&&(r.lease=new Uint8Array(0))}else r.lease=new Uint8Array(0);if(r.voteKey=h(r.voteKey,"voteKey",32),r.selectionKey=h(r.selectionKey,"selectionKey",32),r.stateProofKey=h(r.stateProofKey,"stateProofKey",64),r.nonParticipation&&(r.voteKey||r.selectionKey||r.voteFirst||r.stateProofKey||r.voteLast||r.voteKeyDilution))throw new Error("nonParticipation is true but participation params are present.");if(!r.nonParticipation&&(r.voteKey||r.selectionKey||r.stateProofKey||r.voteFirst||r.voteLast||r.voteKeyDilution)&&!(r.voteKey&&r.selectionKey&&r.voteFirst&&r.voteLast&&r.voteKeyDilution))throw new Error("online key registration missing at least one of the following fields: voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution");delete r.suggestedParams,Object.assign(this,c.removeUndefinedProperties(r)),r.flatFee||(this.fee*=this.estimateSize(),this.fee<p&&(this.fee=p)),this.group=void 0}get_obj_for_encoding(){if("pay"===this.type){const e={amt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:"pay",gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group};return void 0!==this.closeRemainderTo&&o.encodeAddress(this.closeRemainderTo.publicKey)!==o.ALGORAND_ZERO_ADDRESS_STRING&&(e.close=l.from(this.closeRemainderTo.publicKey)),void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.to&&(e.rcv=l.from(this.to.publicKey)),e.note.length||delete e.note,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.lx.length||delete e.lx,e.rekey||delete e.rekey,e}if("keyreg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,votekey:this.voteKey,selkey:this.selectionKey,sprfkey:this.stateProofKey,votefst:this.voteFirst,votelst:this.voteLast,votekd:this.voteKeyDilution};return e.note.length||delete e.note,e.lx.length||delete e.lx,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),this.nonParticipation&&(e.nonpart=!0),e.selkey||delete e.selkey,e.votekey||delete e.votekey,e.sprfkey||delete e.sprfkey,e.votefst||delete e.votefst,e.votelst||delete e.votelst,e.votekd||delete e.votekd,e}if("acfg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,caid:this.assetIndex,apar:{t:this.assetTotal,df:this.assetDefaultFrozen,dc:this.assetDecimals}};return void 0!==this.assetManager&&(e.apar.m=l.from(this.assetManager.publicKey)),void 0!==this.assetReserve&&(e.apar.r=l.from(this.assetReserve.publicKey)),void 0!==this.assetFreeze&&(e.apar.f=l.from(this.assetFreeze.publicKey)),void 0!==this.assetClawback&&(e.apar.c=l.from(this.assetClawback.publicKey)),void 0!==this.assetName&&(e.apar.an=this.assetName),void 0!==this.assetUnitName&&(e.apar.un=this.assetUnitName),void 0!==this.assetURL&&(e.apar.au=this.assetURL),void 0!==this.assetMetadataHash&&(e.apar.am=l.from(this.assetMetadataHash)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e.caid||delete e.caid,e.apar.t||e.apar.un||e.apar.an||e.apar.df||e.apar.m||e.apar.r||e.apar.f||e.apar.c||e.apar.au||e.apar.am||e.apar.dc?(e.apar.t||delete e.apar.t,e.apar.dc||delete e.apar.dc,e.apar.un||delete e.apar.un,e.apar.an||delete e.apar.an,e.apar.df||delete e.apar.df,e.apar.m||delete e.apar.m,e.apar.r||delete e.apar.r,e.apar.f||delete e.apar.f,e.apar.c||delete e.apar.c,e.apar.au||delete e.apar.au,e.apar.am||delete e.apar.am):delete e.apar,void 0===e.grp&&delete e.grp,e}if("axfer"===this.type){const e={aamt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),arcv:l.from(this.to.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,xaid:this.assetIndex};return void 0!==this.closeRemainderTo&&(e.aclose=l.from(this.closeRemainderTo.publicKey)),void 0!==this.assetRevocationTarget&&(e.asnd=l.from(this.assetRevocationTarget.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.aamt||delete e.aamt,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.aclose||delete e.aclose,e.asnd||delete e.asnd,e.rekey||delete e.rekey,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("afrz"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,faid:this.assetIndex,afrz:this.freezeState};return void 0!==this.freezeAccount&&(e.fadd=l.from(this.freezeAccount.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.afrz||delete e.afrz,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("appl"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,apid:this.appIndex,apan:this.appOnComplete,apls:{nui:this.appLocalInts,nbs:this.appLocalByteSlices},apgs:{nui:this.appGlobalInts,nbs:this.appGlobalByteSlices},apfa:this.appForeignApps,apas:this.appForeignAssets,apep:this.extraPages};return void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.appApprovalProgram&&(e.apap=l.from(this.appApprovalProgram)),void 0!==this.appClearProgram&&(e.apsu=l.from(this.appClearProgram)),void 0!==this.appArgs&&(e.apaa=this.appArgs.map((e=>l.from(e)))),void 0!==this.appAccounts&&(e.apat=this.appAccounts.map((e=>l.from(e.publicKey)))),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.apid||delete e.apid,e.apls.nui||delete e.apls.nui,e.apls.nbs||delete e.apls.nbs,e.apls.nui||e.apls.nbs||delete e.apls,e.apgs.nui||delete e.apgs.nui,e.apgs.nbs||delete e.apgs.nbs,e.apaa&&e.apaa.length||delete e.apaa,e.apgs.nui||e.apgs.nbs||delete e.apgs,e.apap||delete e.apap,e.apsu||delete e.apsu,e.apan||delete e.apan,e.apfa&&e.apfa.length||delete e.apfa,e.apas&&e.apas.length||delete e.apas,e.apat&&e.apat.length||delete e.apat,e.apep||delete e.apep,void 0===e.grp&&delete e.grp,e}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);if(t.name="Transaction",t.tag=l.from("TX"),t.genesisID=e.gen,t.genesisHash=l.from(e.gh),!(0,u.v8)(e.type))throw new Error(`Unrecognized transaction type: ${e.type}`);return t.type=e.type,t.fee=e.fee,t.firstRound=e.fv,t.lastRound=e.lv,t.note=new Uint8Array(e.note),t.lease=new Uint8Array(e.lx),t.from=o.decodeAddress(o.encodeAddress(new Uint8Array(e.snd))),void 0!==e.grp&&(t.group=l.from(e.grp)),void 0!==e.rekey&&(t.reKeyTo=o.decodeAddress(o.encodeAddress(new Uint8Array(e.rekey)))),"pay"===e.type?(t.amount=e.amt,t.to=o.decodeAddress(o.encodeAddress(new Uint8Array(e.rcv))),void 0!==e.close&&(t.closeRemainderTo=o.decodeAddress(o.encodeAddress(e.close)))):"keyreg"===e.type?(void 0!==e.votekey&&(t.voteKey=l.from(e.votekey)),void 0!==e.selkey&&(t.selectionKey=l.from(e.selkey)),void 0!==e.sprfkey&&(t.stateProofKey=l.from(e.sprfkey)),void 0!==e.votekd&&(t.voteKeyDilution=e.votekd),void 0!==e.votefst&&(t.voteFirst=e.votefst),void 0!==e.votelst&&(t.voteLast=e.votelst),void 0!==e.nonpart&&(t.nonParticipation=e.nonpart)):"acfg"===e.type?(void 0!==e.caid&&(t.assetIndex=e.caid),void 0!==e.apar&&(t.assetTotal=e.apar.t,t.assetDefaultFrozen=e.apar.df,void 0!==e.apar.dc&&(t.assetDecimals=e.apar.dc),void 0!==e.apar.m&&(t.assetManager=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.m)))),void 0!==e.apar.r&&(t.assetReserve=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.r)))),void 0!==e.apar.f&&(t.assetFreeze=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.f)))),void 0!==e.apar.c&&(t.assetClawback=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.c)))),void 0!==e.apar.un&&(t.assetUnitName=e.apar.un),void 0!==e.apar.an&&(t.assetName=e.apar.an),void 0!==e.apar.au&&(t.assetURL=e.apar.au),void 0!==e.apar.am&&(t.assetMetadataHash=e.apar.am))):"axfer"===e.type?(void 0!==e.xaid&&(t.assetIndex=e.xaid),void 0!==e.aamt&&(t.amount=e.aamt),void 0!==e.aclose&&(t.closeRemainderTo=o.decodeAddress(o.encodeAddress(new Uint8Array(e.aclose)))),void 0!==e.asnd&&(t.assetRevocationTarget=o.decodeAddress(o.encodeAddress(new Uint8Array(e.asnd)))),t.to=o.decodeAddress(o.encodeAddress(new Uint8Array(e.arcv)))):"afrz"===e.type?(void 0!==e.afrz&&(t.freezeState=e.afrz),void 0!==e.faid&&(t.assetIndex=e.faid),t.freezeAccount=o.decodeAddress(o.encodeAddress(new Uint8Array(e.fadd)))):"appl"===e.type&&(void 0!==e.apid&&(t.appIndex=e.apid),void 0!==e.apan&&(t.appOnComplete=e.apan),void 0!==e.apls&&(void 0!==e.apls.nui&&(t.appLocalInts=e.apls.nui),void 0!==e.apls.nbs&&(t.appLocalByteSlices=e.apls.nbs)),void 0!==e.apgs&&(void 0!==e.apgs.nui&&(t.appGlobalInts=e.apgs.nui),void 0!==e.apgs.nbs&&(t.appGlobalByteSlices=e.apgs.nbs)),void 0!==e.apep&&(t.extraPages=e.apep),void 0!==e.apap&&(t.appApprovalProgram=new Uint8Array(e.apap)),void 0!==e.apsu&&(t.appClearProgram=new Uint8Array(e.apsu)),void 0!==e.apaa&&(t.appArgs=e.apaa.map((e=>new Uint8Array(e)))),void 0!==e.apat&&(t.appAccounts=e.apat.map((e=>o.decodeAddress(o.encodeAddress(new Uint8Array(e)))))),void 0!==e.apfa&&(t.appForeignApps=e.apfa),void 0!==e.apas&&(t.appForeignAssets=e.apas)),t}estimateSize(){return this.toByte().length+75}bytesToSign(){const e=this.toByte();return l.from(c.concatArrays(this.tag,e))}toByte(){return s.encode(this.get_obj_for_encoding())}rawSignTxn(e){const t=this.bytesToSign(),r=a.sign(t,e);return l.from(r)}signTxn(e){const t={sig:this.rawSignTxn(e),txn:this.get_obj_for_encoding()},r=a.keyPairFromSecretKey(e).publicKey;return o.encodeAddress(r)!==o.encodeAddress(this.from.publicKey)&&(t.sgnr=l.from(r)),new Uint8Array(s.encode(t))}rawTxID(){const e=this.toByte(),t=l.from(c.concatArrays(this.tag,e));return l.from(a.genericHash(t))}txID(){const e=this.rawTxID();return i().encode(e).slice(0,52)}addLease(e,t=0){let r;if(void 0!==e){if(e.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==e.length)throw Error(`lease must be of length ${32..toString()}.`);r=new Uint8Array(e)}else r=new Uint8Array(0);this.lease=r,0!==t&&(this.fee+=37*t)}addRekey(e,t=0){void 0!==e&&(this.reKeyTo=o.decodeAddress(e)),0!==t&&(this.fee+=37*t)}_getDictForDisplay(){const e={...this};return e.tag=e.tag.toString(),e.from=o.encodeAddress(e.from.publicKey),void 0!==e.to&&(e.to=o.encodeAddress(e.to.publicKey)),void 0!==e.freezeAccount&&(e.freezeAccount=o.encodeAddress(e.freezeAccount.publicKey)),void 0!==e.closeRemainderTo&&(e.closeRemainderTo=o.encodeAddress(e.closeRemainderTo.publicKey)),void 0!==e.assetManager&&(e.assetManager=o.encodeAddress(e.assetManager.publicKey)),void 0!==e.assetReserve&&(e.assetReserve=o.encodeAddress(e.assetReserve.publicKey)),void 0!==e.assetFreeze&&(e.assetFreeze=o.encodeAddress(e.assetFreeze.publicKey)),void 0!==e.assetClawback&&(e.assetClawback=o.encodeAddress(e.assetClawback.publicKey)),void 0!==e.assetRevocationTarget&&(e.assetRevocationTarget=o.encodeAddress(e.assetRevocationTarget.publicKey)),void 0!==e.reKeyTo&&(e.reKeyTo=o.encodeAddress(e.reKeyTo.publicKey)),e.genesisHash=e.genesisHash.toString("base64"),e}prettyPrint(){console.log(this._getDictForDisplay())}toString(){return JSON.stringify(this._getDictForDisplay())}}function f(e){const t=e.get_obj_for_encoding();return s.encode(t)}function g(e){const t=s.decode(e);return d.from_obj_for_encoding(t)}function m(e){const t=s.decode(e);return{...t,txn:d.from_obj_for_encoding(t.txn)}}function y(e){return e instanceof d?e:new d(e)}const b=d},2380:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.i});var n=r(1824)},7197:(e,t,r)=>{"use strict";var n;r.d(t,{Z:()=>i}),function(e){e.DEFAULT="default",e.SAFE="safe",e.MIXED="mixed",e.BIGINT="bigint"}(n||(n={}));const i=n},1624:(e,t,r)=>{"use strict";var n,i;function o(e){return e===n.pay||e===n.keyreg||e===n.acfg||e===n.axfer||e===n.afrz||e===n.appl}r.d(t,{iU:()=>n,v8:()=>o,hq:()=>i}),function(e){e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(n||(n={})),function(e){e[e.NoOpOC=0]="NoOpOC",e[e.OptInOC=1]="OptInOC",e[e.CloseOutOC=2]="CloseOutOC",e[e.ClearStateOC=3]="ClearStateOC",e[e.UpdateApplicationOC=4]="UpdateApplicationOC",e[e.DeleteApplicationOC=5]="DeleteApplicationOC"}(i||(i={}))},1824:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.iU});var n=r(1624)},413:(e,t,r)=>{"use strict";r.r(t),r.d(t,{parseJSON:()=>a,arrayEqual:()=>c,concatArrays:()=>u,removeUndefinedProperties:()=>l,isNode:()=>p});var n=r(4360),i=r.n(n),o=r(7197);const s=i()({useNativeBigInt:!0,strict:!0});function a(e,t){const r=t&&t.intDecoding?t.intDecoding:o.Z.DEFAULT;return s.parse(e,((e,t)=>{if(null!=t&&"object"==typeof t&&null==Object.getPrototypeOf(t)&&Object.setPrototypeOf(t,Object.prototype),"bigint"==typeof t){if("safe"===r&&t>Number.MAX_SAFE_INTEGER)throw new Error(`Integer exceeds maximum safe integer: ${t.toString()}. Try parsing with a different intDecoding option.`);return"bigint"===r||"mixed"===r&&t>Number.MAX_SAFE_INTEGER?t:Number(t)}return"number"==typeof t&&"bigint"===r&&Number.isInteger(t)?BigInt(t):t}))}function c(e,t){return e.length===t.length&&Array.from(e).every(((e,r)=>e===t[r]))}function u(...e){const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);let n=0;for(let t=0;t<e.length;t++)r.set(e[t],n),n+=e[t].length;return r}function l(e){const t={...e};return Object.keys(t).forEach((e=>{void 0===t[e]&&delete t[e]})),t}function p(){return"object"==typeof process&&"object"==typeof process.versions&&void 0!==process.versions.node}},5062:(e,t,r)=>{"use strict";async function n(e,t,r){const n=await e.status().do();if(void 0===n)throw new Error("Unable to get node status");const i=n["last-round"]+1;let o=i;for(;o<i+r;){let r=!1;try{const n=await e.pendingTransactionInformation(t).do();if(n["confirmed-round"])return n;if(n["pool-error"])throw r=!0,new Error(`Transaction Rejected: ${n["pool-error"]}`)}catch(e){if(r)throw e}await e.statusAfterBlock(o).do(),o+=1}throw new Error(`Transaction not confirmed after ${r} rounds`)}r.d(t,{K:()=>n})},4654:()=>{}},__webpack_module_cache__={};function __nested_webpack_require_407828__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__nested_webpack_require_407828__),r.exports}__nested_webpack_require_407828__.amdO={},__nested_webpack_require_407828__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_407828__.d(t,{a:t}),t},__nested_webpack_require_407828__.d=(e,t)=>{for(var r in t)__nested_webpack_require_407828__.o(t,r)&&!__nested_webpack_require_407828__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_407828__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__nested_webpack_require_407828__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_407828__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_407828__.r(__webpack_exports__),__nested_webpack_require_407828__.d(__webpack_exports__,{default:()=>r});var e=__nested_webpack_require_407828__(6608),t={};for(const r in e)"default"!==r&&(t[r]=()=>e[r]);__nested_webpack_require_407828__.d(__webpack_exports__,t);const r=e})(),__webpack_exports__})()},module.exports=t()},257:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,o=c(e),s=o[0],a=o[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,p=a>0?s-4:s;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[l++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,i=n%3,o=[],s=16383,a=0,c=n-i;a<c;a+=s)o.push(u(e,a,a+s>c?c:a+s));return 1===i?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),o.join("")};for(var r=[],n=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=o.length;s<a;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var i,o,s=[],a=t;a<n;a+=3)i=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},169:(e,t,r)=>{"use strict";const n=r(257),i=r(869),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.lW=c,t.h2=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=a(r);const i=n.write(e,t);return i!==r&&(n=n.slice(0,i)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Z(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Z(e,ArrayBuffer)||e&&Z(e.buffer,ArrayBuffer))return d(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(Z(e,SharedArrayBuffer)||e&&Z(e.buffer,SharedArrayBuffer)))return d(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,r);const i=function(e){if(c.isBuffer(e)){const t=0|f(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||X(e.length)?a(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return l(e),a(e<0?0:0|f(e))}function h(e){const t=e.length<0?0:0|f(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,c.prototype),n}function f(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Z(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return K(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(i)return n?-1:K(e).length;t=(""+t).toLowerCase(),i=!0}}function m(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return B(this,t,r);case"ascii":return k(this,t,r);case"latin1":case"binary":return U(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function y(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function b(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),X(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,i){let o,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let n=-1;for(o=r;o<a;o++)if(u(e,o)===u(t,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===c)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+c>a&&(r=a-c),o=r;o>=0;o--){let r=!0;for(let n=0;n<c;n++)if(u(e,o+n)!==u(t,n)){r=!1;break}if(r)return o}return-1}function v(e,t,r,n){r=Number(r)||0;const i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=t.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(X(n))return s;e[r+s]=n}return s}function A(e,t,r,n){return W(K(t,e.length-r),e,r,n)}function x(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function _(e,t,r,n){return W(V(t),e,r,n)}function S(e,t,r,n){return W(function(e,t){let r,n,i;const o=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function B(e,t,r){r=Math.min(e.length,r);const n=[];let i=t;for(;i<r;){const t=e[i];let o=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=r){let r,n,a,c;switch(s){case 1:t<128&&(o=t);break;case 2:r=e[i+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(o=c));break;case 3:r=e[i+1],n=e[i+2],128==(192&r)&&128==(192&n)&&(c=(15&t)<<12|(63&r)<<6|63&n,c>2047&&(c<55296||c>57343)&&(o=c));break;case 4:r=e[i+1],n=e[i+2],a=e[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(o=c))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(e){const t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=T));return r}(n)}c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},c.allocUnsafe=function(e){return p(e)},c.allocUnsafeSlow=function(e){return p(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(Z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),Z(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=c.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if(Z(t,Uint8Array))i+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,i)}i+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)y(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?B(this,0,e):m.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const r=t.h2;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},o&&(c.prototype[o]=c.prototype.inspect),c.prototype.compare=function(e,t,r,n,i){if(Z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(o,s),u=this.slice(n,i),l=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==l[e]){o=u[e],s=l[e];break}return o<s?-1:s<o?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return b(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return b(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let o=!1;for(;;)switch(n){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":case"latin1":case"binary":return x(this,e,t,r);case"base64":return _(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function k(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function U(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function I(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i="";for(let n=t;n<r;++n)i+=Y[e[n]];return i}function R(e,t,r){const n=e.slice(t,r);let i="";for(let e=0;e<n.length-1;e+=2)i+=String.fromCharCode(n[e]+256*n[e+1]);return i}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,r,n,i,o){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function O(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function N(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r+7]=o,o>>=8,e[r+6]=o,o>>=8,e[r+5]=o,o>>=8,e[r+4]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function P(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(e,t,r,n,o){return t=+t,r>>>=0,o||P(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,o){return t=+t,r>>>=0,o||P(e,0,r,8),i.write(e,t,r,n,52,8),r+8}c.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),c.prototype.readBigUInt64BE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=t,i=1,o=this[e+--n];for(;n>0&&(i*=256);)o+=this[e+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},c.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=J((function(e,t=0){return O(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=J((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);D(this,e,t,r,n-1,-n)}let i=0,o=1,s=0;for(this[t]=255&e;++i<r&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);D(this,e,t,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=J((function(e,t=0){return O(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=J((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{const o=c.isBuffer(e)?e:c.from(e,n),s=o.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=o[i%s]}return this};const z={};function F(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function M(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function q(e,t,r,n,i,o){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new z.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,r){H(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||$(t,e.length-(r+1))}(n,i,o)}function H(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function $(e,t,r){if(Math.floor(e)!==e)throw H(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=M(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=M(i)),i+="n"),n+=` It must be ${t}. Received ${i}`,n}),RangeError);const G=/[^+/0-9A-Za-z-_]/g;function K(e,t){let r;t=t||1/0;const n=e.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(G,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function Z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function X(e){return e!=e}const Y=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i]}return t}();function J(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},856:function(e,t){var r="undefined"!=typeof self?self:this,n=function(){function e(){this.fetch=!1,this.DOMException=r.DOMException}return e.prototype=r,new e}();!function(e){!function(t){var r="URLSearchParams"in e,n="Symbol"in e&&"iterator"in Symbol,i="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),o="FormData"in e,s="ArrayBuffer"in e;if(s)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(e){return e&&a.indexOf(Object.prototype.toString.call(e))>-1};function u(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function l(e){return"string"!=typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return n&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function d(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function f(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function g(e){var t=new FileReader,r=f(t);return t.readAsArrayBuffer(e),r}function m(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function y(){return this.bodyUsed=!1,this._initBody=function(e){var t;this._bodyInit=e,e?"string"==typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:o&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:r&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():s&&i&&(t=e)&&DataView.prototype.isPrototypeOf(t)?(this._bodyArrayBuffer=m(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):s&&(ArrayBuffer.prototype.isPrototypeOf(e)||c(e))?this._bodyArrayBuffer=m(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):r&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=d(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?d(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var e,t,r,n=d(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,r=f(t=new FileReader),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=u(e),t=l(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[u(e)]},h.prototype.get=function(e){return e=u(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(u(e))},h.prototype.set=function(e,t){this.map[u(e)]=l(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},n&&(h.prototype[Symbol.iterator]=h.prototype.entries);var b=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function w(e,t){var r,n,i=(t=t||{}).body;if(e instanceof w){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,i||null==e._bodyInit||(i=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(n=(r=t.method||this.method||"GET").toUpperCase(),b.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&i)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(i)}function v(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\+/g," "),i=r.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(i))}})),t}function A(e,t){t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},y.call(w.prototype),y.call(A.prototype),A.prototype.clone=function(){return new A(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},A.error=function(){var e=new A(null,{status:0,statusText:""});return e.type="error",e};var x=[301,302,303,307,308];A.redirect=function(e,t){if(-1===x.indexOf(t))throw new RangeError("Invalid status code");return new A(null,{status:t,headers:{location:e}})},t.DOMException=e.DOMException;try{new t.DOMException}catch(e){t.DOMException=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack},t.DOMException.prototype=Object.create(Error.prototype),t.DOMException.prototype.constructor=t.DOMException}function _(e,r){return new Promise((function(n,o){var s=new w(e,r);if(s.signal&&s.signal.aborted)return o(new t.DOMException("Aborted","AbortError"));var a=new XMLHttpRequest;function c(){a.abort()}a.onload=function(){var e,t,r={status:a.status,statusText:a.statusText,headers:(e=a.getAllResponseHeaders()||"",t=new h,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var i=r.join(":").trim();t.append(n,i)}})),t)};r.url="responseURL"in a?a.responseURL:r.headers.get("X-Request-URL");var i="response"in a?a.response:a.responseText;n(new A(i,r))},a.onerror=function(){o(new TypeError("Network request failed"))},a.ontimeout=function(){o(new TypeError("Network request failed"))},a.onabort=function(){o(new t.DOMException("Aborted","AbortError"))},a.open(s.method,s.url,!0),"include"===s.credentials?a.withCredentials=!0:"omit"===s.credentials&&(a.withCredentials=!1),"responseType"in a&&i&&(a.responseType="blob"),s.headers.forEach((function(e,t){a.setRequestHeader(t,e)})),s.signal&&(s.signal.addEventListener("abort",c),a.onreadystatechange=function(){4===a.readyState&&s.signal.removeEventListener("abort",c)}),a.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,e.fetch||(e.fetch=_,e.Headers=h,e.Request=w,e.Response=A),t.Headers=h,t.Request=w,t.Response=A,t.fetch=_,Object.defineProperty(t,"__esModule",{value:!0})}({})}(n),n.fetch.ponyfill=!0,delete n.fetch.polyfill;var i=n;(t=i.fetch).default=i.fetch,t.fetch=i.fetch,t.Headers=i.Headers,t.Request=i.Request,t.Response=i.Response,e.exports=t},869:(e,t)=>{t.read=function(e,t,r,n,i){var o,s,a=8*i-n-1,c=(1<<a)-1,u=c>>1,l=-7,p=r?i-1:0,h=r?-1:1,d=e[t+p];for(p+=h,o=d&(1<<-l)-1,d>>=-l,l+=a;l>0;o=256*o+e[t+p],p+=h,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=n;l>0;s=256*s+e[t+p],p+=h,l-=8);if(0===o)o=1-u;else{if(o===c)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),o-=u}return(d?-1:1)*s*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var s,a,c,u=8*o-i-1,l=(1<<u)-1,p=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,f=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+p>=1?h/c:h*Math.pow(2,1-p))*c>=2&&(s++,c/=2),s+p>=l?(a=0,s=l):s+p>=1?(a=(t*c-1)*Math.pow(2,i),s+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,i),s=0));i>=8;e[r+d]=255&a,d+=f,a/=256,i-=8);for(s=s<<i|a,u+=i;u>0;e[r+d]=255&s,d+=f,s/=256,u-=8);e[r+d-f]|=128*g}},200:e=>{"use strict";function t(){this._types=Object.create(null),this._extensions=Object.create(null);for(let e=0;e<arguments.length;e++)this.define(arguments[e]);this.define=this.define.bind(this),this.getType=this.getType.bind(this),this.getExtension=this.getExtension.bind(this)}t.prototype.define=function(e,t){for(let r in e){let n=e[r].map((function(e){return e.toLowerCase()}));r=r.toLowerCase();for(let e=0;e<n.length;e++){const i=n[e];if("*"!==i[0]){if(!t&&i in this._types)throw new Error('Attempt to change mapping for "'+i+'" extension from "'+this._types[i]+'" to "'+r+'". Pass `force=true` to allow this, otherwise remove "'+i+'" from the list of extensions for "'+r+'".');this._types[i]=r}}if(t||!this._extensions[r]){const e=n[0];this._extensions[r]="*"!==e[0]?e:e.substr(1)}}},t.prototype.getType=function(e){let t=(e=String(e)).replace(/^.*[/\\]/,"").toLowerCase(),r=t.replace(/^.*\./,"").toLowerCase(),n=t.length<e.length;return(r.length<t.length-1||!n)&&this._types[r]||null},t.prototype.getExtension=function(e){return(e=/^\s*([^;\s]*)/.test(e)&&RegExp.$1)&&this._extensions[e.toLowerCase()]||null},e.exports=t},419:(e,t,r)=>{"use strict";let n=r(200);e.exports=new n(r(596),r(380))},380:e=>{e.exports={"application/prs.cww":["cww"],"application/vnd.1000minds.decision-model+xml":["1km"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.keynote":["key"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.numbers":["numbers"],"application/vnd.apple.pages":["pages"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.balsamiq.bmml+xml":["bmml"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.citationstyles.style+xml":["csl"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dbf":["dbf"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mapbox-vector-tile":["mvt"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["*stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.ac+xml":["*ac"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openblox.game+xml":["obgx"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openstreetmap.data+xml":["osm"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.rar":["rar"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.software602.filler.form+xml":["fo"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.syncml.dmddf+xml":["ddf"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":["*dmg"],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":["*bdoc"],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["*deb","udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":["*iso"],"application/x-iwork-keynote-sffkey":["*key"],"application/x-iwork-numbers-sffnumbers":["*numbers"],"application/x-iwork-pages-sffpages":["*pages"],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-keepass2":["kdbx"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":["*exe"],"application/x-msdownload":["*exe","*dll","com","bat","*msi"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["*wmf","*wmz","*emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":["*prc","*pdb"],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["*rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["*obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["*xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":["*m4a"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":["*ra"],"audio/x-wav":["*wav"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"image/prs.btif":["btif"],"image/prs.pti":["pti"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.airzip.accelerator.azv":["azv"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":["*sub"],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.microsoft.icon":["ico"],"image/vnd.ms-dds":["dds"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.pco.b16":["b16"],"image/vnd.tencent.tap":["tap"],"image/vnd.valve.source.texture":["vtf"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/vnd.zbrush.pcx":["pcx"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["*ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":["*bmp"],"image/x-pcx":["*pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/vnd.wfa.wsc":["wsc"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.opengex":["ogex"],"model/vnd.parasolid.transmit.binary":["x_b"],"model/vnd.parasolid.transmit.text":["x_t"],"model/vnd.sap.vds":["vds"],"model/vnd.usdz+zip":["usdz"],"model/vnd.valve.source.compiled-map":["bsp"],"model/vnd.vtu":["vtu"],"text/prs.lines.tag":["dsc"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":["*org"],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}},596:e=>{e.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomdeleted+xml":["atomdeleted"],"application/atomsvc+xml":["atomsvc"],"application/atsc-dwd+xml":["dwd"],"application/atsc-held+xml":["held"],"application/atsc-rsat+xml":["rsat"],"application/bdoc":["bdoc"],"application/calendar+xml":["xcs"],"application/ccxml+xml":["ccxml"],"application/cdfx+xml":["cdfx"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["es","ecma"],"application/emma+xml":["emma"],"application/emotionml+xml":["emotionml"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/express":["exp"],"application/fdt+xml":["fdt"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/its+xml":["its"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lgr+xml":["lgr"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mmt-aei+xml":["maei"],"application/mmt-usd+xml":["musd"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/node":["cjs"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/p2p-overlay+xml":["relo"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/provenance+xml":["provx"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/route-apd+xml":["rapd"],"application/route-s-tsid+xml":["sls"],"application/route-usd+xml":["rusd"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/senml+xml":["senmlx"],"application/sensml+xml":["sensmlx"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/swid+xml":["swidtag"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/toml":["toml"],"application/trig":["trig"],"application/ttml+xml":["ttml"],"application/ubjson":["ubj"],"application/urc-ressheet+xml":["rsheet"],"application/urc-targetdesc+xml":["td"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-att+xml":["xav"],"application/xcap-caps+xml":["xca"],"application/xcap-diff+xml":["xdf"],"application/xcap-el+xml":["xel"],"application/xcap-ns+xml":["xns"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xliff+xml":["xlf"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["*xsl","xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/amr":["amr"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mobile-xmf":["mxmf"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx","opus"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/avif":["avif"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/hej2k":["hej2"],"image/hsj2":["hsj2"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jph":["jph"],"image/jphc":["jhc"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/jxra":["jxra"],"image/jxrs":["jxrs"],"image/jxs":["jxs"],"image/jxsc":["jxsc"],"image/jxsi":["jxsi"],"image/jxss":["jxss"],"image/ktx":["ktx"],"image/ktx2":["ktx2"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/mtl":["mtl"],"model/obj":["obj"],"model/step+xml":["stpx"],"model/step+zip":["stpz"],"model/step-xml+zip":["stpxz"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/spdx":["spdx"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/iso.segment":["m4s"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]}},50:(module,__unused_webpack_exports,__webpack_require__)=>{var t;self,t=function(){return(()=>{var __webpack_modules__={5406:function(e){e.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t),r.d(t,"encode",(function(){return k})),r.d(t,"decode",(function(){return q})),r.d(t,"decodeAsync",(function(){return W})),r.d(t,"decodeArrayStream",(function(){return Z})),r.d(t,"decodeStream",(function(){return X})),r.d(t,"Decoder",(function(){return F})),r.d(t,"Encoder",(function(){return B})),r.d(t,"ExtensionCodec",(function(){return _})),r.d(t,"ExtData",(function(){return d})),r.d(t,"EXT_TIMESTAMP",(function(){return m})),r.d(t,"encodeDateToTimeSpec",(function(){return b})),r.d(t,"encodeTimeSpecToTimestamp",(function(){return y})),r.d(t,"decodeTimestampToTimeSpec",(function(){return v})),r.d(t,"encodeTimestampExtension",(function(){return w})),r.d(t,"decodeTimestampExtension",(function(){return A}));var n=function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,i,o=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)s.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return s},i=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(n(arguments[t]));return e},o="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function s(e){for(var t=e.length,r=0,n=0;n<t;){var i=e.charCodeAt(n++);if(0!=(4294967168&i))if(0==(4294965248&i))r+=2;else{if(i>=55296&&i<=56319&&n<t){var o=e.charCodeAt(n);56320==(64512&o)&&(++n,i=((1023&i)<<10)+(1023&o)+65536)}r+=0==(4294901760&i)?3:4}else r++}return r}var a=o?new TextEncoder:void 0,c="undefined"!=typeof process?200:0,u=(null==a?void 0:a.encodeInto)?function(e,t,r){a.encodeInto(e,t.subarray(r))}:function(e,t,r){t.set(a.encode(e),r)};function l(e,t,r){for(var n=t,o=n+r,s=[],a="";n<o;){var c=e[n++];if(0==(128&c))s.push(c);else if(192==(224&c)){var u=63&e[n++];s.push((31&c)<<6|u)}else if(224==(240&c)){u=63&e[n++];var l=63&e[n++];s.push((31&c)<<12|u<<6|l)}else if(240==(248&c)){var p=(7&c)<<18|(u=63&e[n++])<<12|(l=63&e[n++])<<6|63&e[n++];p>65535&&(p-=65536,s.push(p>>>10&1023|55296),p=56320|1023&p),s.push(p)}else s.push(c);s.length>=4096&&(a+=String.fromCharCode.apply(String,i(s)),s.length=0)}return s.length>0&&(a+=String.fromCharCode.apply(String,i(s))),a}var p=o?new TextDecoder:null,h="undefined"!=typeof process?200:0,d=function(e,t){this.type=e,this.data=t};function f(e,t,r){var n=Math.floor(r/4294967296),i=r;e.setUint32(t,n),e.setUint32(t+4,i)}function g(e,t){var r=e.getInt32(t),n=e.getUint32(t+4),i=r<Math.floor(Number.MIN_SAFE_INTEGER/4294967296)||r===Math.floor(Number.MIN_SAFE_INTEGER/4294967296)&&0===n,o=r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296);return i||o?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n}var m=-1;function y(e){var t,r=e.sec,n=e.nsec;if(r>=0&&n>=0&&r<=17179869183){if(0===n&&r<=4294967295){var i=new Uint8Array(4);return(t=new DataView(i.buffer)).setUint32(0,r),i}var o=r/4294967296,s=4294967295&r;return i=new Uint8Array(8),(t=new DataView(i.buffer)).setUint32(0,n<<2|3&o),t.setUint32(4,s),i}return i=new Uint8Array(12),(t=new DataView(i.buffer)).setUint32(0,n),f(t,4,r),i}function b(e){var t=e.getTime(),r=Math.floor(t/1e3),n=1e6*(t-1e3*r),i=Math.floor(n/1e9);return{sec:r+i,nsec:n-1e9*i}}function w(e){return e instanceof Date?y(b(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var r=t.getUint32(0);return{sec:4294967296*(3&r)+t.getUint32(4),nsec:r>>>2};case 12:return{sec:g(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function A(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var x={type:m,encode:w,decode:A},_=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(x)}return e.prototype.register=function(e){var t=e.type,r=e.encode,n=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=n;else{var i=1+t;this.builtInEncoders[i]=r,this.builtInDecoders[i]=n}},e.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++)if(null!=(n=this.builtInEncoders[r])&&null!=(i=n(e,t)))return new d(-1-r,i);for(r=0;r<this.encoders.length;r++){var n,i;if(null!=(n=this.encoders[r])&&null!=(i=n(e,t)))return new d(r,i)}return e instanceof d?e:null},e.prototype.decode=function(e,t,r){var n=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return n?n(e,t,r):new d(t,e)},e.defaultCodec=new e,e}();function S(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var E=function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},B=function(){function e(e,t,r,n,i,o,s,a){void 0===e&&(e=_.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=100),void 0===n&&(n=2048),void 0===i&&(i=!1),void 0===o&&(o=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=n,this.sortKeys=i,this.forceFloat32=o,this.ignoreUndefined=s,this.forceIntegerToFloat=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.getUint8Array()},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):"bigint"==typeof e?this.encodebigint(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),n=new DataView(t);r.set(this.bytes),this.view=n,this.bytes=r},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.encodebigint=function(e){e>=BigInt(0)?e<BigInt(128)?this.writeU8(Number(e)):e<BigInt(256)?(this.writeU8(204),this.writeU8(Number(e))):e<BigInt(65536)?(this.writeU8(205),this.writeU16(Number(e))):e<BigInt(4294967296)?(this.writeU8(206),this.writeU32(Number(e))):(this.writeU8(207),this.writeBig64(e)):e>=BigInt(-32)?this.writeU8(224|Number(e)+32):e>=BigInt(-128)?(this.writeU8(208),this.writeI8(Number(e))):e>=BigInt(-32768)?(this.writeU8(209),this.writeI16(Number(e))):e>=BigInt(-2147483648)?(this.writeU8(210),this.writeI32(Number(e))):(this.writeU8(211),this.writeBig64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(o&&t>c){var r=s(e);this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),u(e,this.bytes,this.pos),this.pos+=r}else r=s(e),this.ensureBufferSizeToWrite(5+r),this.writeStringHeader(r),function(e,t,r){for(var n=e.length,i=r,o=0;o<n;){var s=e.charCodeAt(o++);if(0!=(4294967168&s)){if(0==(4294965248&s))t[i++]=s>>6&31|192;else{if(s>=55296&&s<=56319&&o<n){var a=e.charCodeAt(o);56320==(64512&a)&&(++o,s=((1023&s)<<10)+(1023&a)+65536)}0==(4294901760&s)?(t[i++]=s>>12&15|224,t[i++]=s>>6&63|128):(t[i++]=s>>18&7|240,t[i++]=s>>12&63|128,t[i++]=s>>6&63|128)}t[i++]=63&s|128}else t[i++]=s}}(e,this.bytes,this.pos),this.pos+=r},e.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(null!=r)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var r=S(e);this.writeU8a(r)},e.prototype.encodeArray=function(e,t){var r,n,i=e.length;if(i<16)this.writeU8(144+i);else if(i<65536)this.writeU8(220),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large array: "+i);this.writeU8(221),this.writeU32(i)}try{for(var o=E(e),s=o.next();!s.done;s=o.next()){var a=s.value;this.doEncode(a,t+1)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}},e.prototype.countWithoutUndefined=function(e,t){var r,n,i=0;try{for(var o=E(t),s=o.next();!s.done;s=o.next())void 0!==e[s.value]&&i++}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return i},e.prototype.encodeMap=function(e,t){var r,n,i=Object.keys(e);this.sortKeys&&i.sort();var o=this.ignoreUndefined?this.countWithoutUndefined(e,i):i.length;if(o<16)this.writeU8(128+o);else if(o<65536)this.writeU8(222),this.writeU16(o);else{if(!(o<4294967296))throw new Error("Too large map object: "+o);this.writeU8(223),this.writeU32(o)}try{for(var s=E(i),a=s.next();!a.done;a=s.next()){var c=a.value,u=e[c];this.ignoreUndefined&&void 0===u||(this.encodeString(c),this.doEncode(u,t+1))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=r/4294967296,i=r;e.setUint32(t,n),e.setUint32(t+4,i)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e.prototype.writeBig64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var n=Number(r/BigInt(4294967296)),i=Number(r%BigInt(4294967296));n<0&&0!==i&&(n-=1),e.setUint32(t,n),e.setUint32(t+4,i)}(this.view,this.pos,e),this.pos+=8},e}(),T={};function k(e,t){return void 0===t&&(t=T),new B(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encode(e)}function U(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var I=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,r){var n=this.caches[r-1],i=n.length;e:for(var o=0;o<i;o++){for(var s=n[o],a=s.bytes,c=0;c<r;c++)if(a[c]!==e[t+c])continue e;return s.value}return null},e.prototype.store=function(e,t){var r=this.caches[e.length-1],n={bytes:e,value:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=n:r.push(n)},e.prototype.decode=function(e,t,r){var n=this.get(e,t,r);if(null!=n)return this.hit++,n;this.miss++;var i=l(e,t,r),o=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(o,i),i},e}(),R=function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},C=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,i){!function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r})}),t)}(n,i,(t=e[r](t)).done,t.value)}))}}},D=function(e){return this instanceof D?(this.v=e,this):new D(e)},O=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=i[e](t)).value instanceof D?Promise.resolve(r.value.v).then(c,u):l(o[0][2],r)}catch(e){l(o[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}},N=new DataView(new ArrayBuffer(0)),P=new Uint8Array(N.buffer),L=function(){try{N.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),j=new L("Insufficient data"),z=new I,F=function(){function e(e,t,r,n,i,o,s,a){void 0===e&&(e=_.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=4294967295),void 0===n&&(n=4294967295),void 0===i&&(i=4294967295),void 0===o&&(o=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=z),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=n,this.maxArrayLength=i,this.maxMapLength=o,this.maxExtLength=s,this.keyDecoder=a,this.totalPos=0,this.pos=0,this.view=N,this.bytes=P,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1},e.prototype.setBuffer=function(e){this.bytes=S(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=S(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),r=S(e),n=new Uint8Array(t.length+r.length);n.set(t),n.set(r,t.length),this.setBuffer(n)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,r=this.pos;return new RangeError("Extra "+(t.byteLength-r)+" of "+t.byteLength+" byte(s) found at buffer["+e+"]")},e.prototype.decode=function(e){return this.reinitializeState(),this.setBuffer(e),this.doDecodeSingleSync()},e.prototype.doDecodeSingleSync=function(){var e=this.doDecodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeAsync=function(e){var t,r,n,i;return function(e,t,r,n){return new(r||(r=Promise))((function(t,i){function o(e){try{a(n.next(e))}catch(e){i(e)}}function s(e){try{a(n.throw(e))}catch(e){i(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(o,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var o,s,a,c,u,l,p,h;return R(this,(function(d){switch(d.label){case 0:o=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),t=C(e),d.label=2;case 2:return[4,t.next()];case 3:if((r=d.sent()).done)return[3,5];if(a=r.value,o)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a);try{s=this.doDecodeSync(),o=!0}catch(e){if(!(e instanceof L))throw e}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=d.sent(),n={error:c},[3,12];case 7:return d.trys.push([7,,10,11]),r&&!r.done&&(i=t.return)?[4,i.call(t)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(n)throw n.error;return[7];case 11:return[7];case 12:if(o){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,s]}throw l=(u=this).headByte,p=u.pos,h=u.totalPos,new RangeError("Insufficient data in parcing "+U(l)+" at "+h+" ("+p+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return O(this,arguments,(function(){var r,n,i,o,s,a,c,u,l;return R(this,(function(p){switch(p.label){case 0:r=t,n=-1,p.label=1;case 1:p.trys.push([1,13,14,19]),i=C(e),p.label=2;case 2:return[4,D(i.next())];case 3:if((o=p.sent()).done)return[3,12];if(s=o.value,t&&0===n)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(s),r&&(n=this.readArraySize(),r=!1,this.complete()),p.label=4;case 4:p.trys.push([4,9,,10]),p.label=5;case 5:return[4,D(this.doDecodeSync())];case 6:return[4,p.sent()];case 7:return p.sent(),0==--n?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((a=p.sent())instanceof L))throw a;return[3,10];case 10:this.totalPos+=this.pos,p.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=p.sent(),u={error:c},[3,19];case 14:return p.trys.push([14,,17,18]),o&&!o.done&&(l=i.return)?[4,D(l.call(i))]:[3,16];case 15:p.sent(),p.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(n=e-128)){this.pushMapState(n),this.complete();continue e}t={}}else if(e<160){if(0!=(n=e-144)){this.pushArrayState(n),this.complete();continue e}t=[]}else{var r=e-160;t=this.decodeUtf8String(r,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)r=this.lookU8(),t=this.decodeUtf8String(r,1);else if(218===e)r=this.lookU16(),t=this.decodeUtf8String(r,2);else if(219===e)r=this.lookU32(),t=this.decodeUtf8String(r,4);else if(220===e){if(0!==(n=this.readU16())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(221===e){if(0!==(n=this.readU32())){this.pushArrayState(n),this.complete();continue e}t=[]}else if(222===e){if(0!==(n=this.readU16())){this.pushMapState(n),this.complete();continue e}t={}}else if(223===e){if(0!==(n=this.readU32())){this.pushMapState(n),this.complete();continue e}t={}}else if(196===e){var n=this.lookU8();t=this.decodeBinary(n,1)}else if(197===e)n=this.lookU16(),t=this.decodeBinary(n,2);else if(198===e)n=this.lookU32(),t=this.decodeBinary(n,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)n=this.lookU8(),t=this.decodeExtension(n,1);else if(200===e)n=this.lookU16(),t=this.decodeExtension(n,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+U(e));n=this.lookU32(),t=this.decodeExtension(n,4)}this.complete();for(var i=this.stack;i.length>0;){var o=i[i.length-1];if(0===o.type){if(o.array[o.position]=t,o.position++,o.position!==o.size)continue e;i.pop(),t=o.array}else{if(1===o.type){if("string"!=(s=typeof t)&&"number"!==s)throw new Error("The type of key must be string or number but "+typeof t);o.key=t,o.type=2;continue e}if(o.map[o.key]=t,o.readCount++,o.readCount!==o.size){o.key=null,o.type=1;continue e}i.pop(),t=o.map}}return t}var s},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+U(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw j;var n,i=this.pos+t;return n=this.stateIsMapKey()&&(null===(r=this.keyDecoder)||void 0===r?void 0:r.canBeCached(e))?this.keyDecoder.decode(this.bytes,i,e):o&&e>h?function(e,t,r){var n=e.subarray(t,t+r);return p.decode(n)}(this.bytes,i,e):l(this.bytes,i,e),this.pos+=t+e,n},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw j;var r=this.pos+t,n=this.bytes.subarray(r,r+e);return this.pos+=t+e,n},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var r=this.view.getInt8(this.pos+t),n=this.decodeBinary(e,t+1);return this.extensionCodec.decode(n,r,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,r,n,i=(e=this.view,t=this.pos,r=e.getUint32(t),n=e.getUint32(t+4),r>Math.floor(Number.MAX_SAFE_INTEGER/4294967296)?BigInt(r)*BigInt(4294967296)+BigInt(n):4294967296*r+n);return this.pos+=8,i},e.prototype.readI64=function(){var e=g(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),M={};function q(e,t){return void 0===t&&(t=M),new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}var H=function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},$=function(e){return this instanceof $?(this.v=e,this):new $(e)},G=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){i[e]&&(n[e]=function(t){return new Promise((function(r,n){o.push([e,t,r,n])>1||a(e,t)}))})}function a(e,t){try{(r=i[e](t)).value instanceof $?Promise.resolve(r.value.v).then(c,u):l(o[0][2],r)}catch(e){l(o[0][3],e)}var r}function c(e){a("next",e)}function u(e){a("throw",e)}function l(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}};function K(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function V(e){return null!=e[Symbol.asyncIterator]?e:function(e){return G(this,arguments,(function(){var t,r,n,i;return H(this,(function(o){switch(o.label){case 0:t=e.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,$(t.read())];case 3:return r=o.sent(),n=r.done,i=r.value,n?[4,$(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return K(i),[4,$(i)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function W(e,t){return void 0===t&&(t=M),function(e,t,r,n){return new(r||(r=Promise))((function(t,i){function o(e){try{a(n.next(e))}catch(e){i(e)}}function s(e){try{a(n.throw(e))}catch(e){i(e)}}function a(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(e){e(n)}))).then(o,s)}a((n=n.apply(e,[])).next())}))}(this,0,void 0,(function(){var r;return function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}(this,(function(n){return r=V(e),[2,new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeAsync(r)]}))}))}function Z(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(r)}function X(e,t){void 0===t&&(t=M);var r=V(e);return new F(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(r)}}])},5155:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,o=c(e),s=o[0],a=o[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,p=a>0?s-4:s;for(r=0;r<p;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[l++]=255&t),1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,n=e.length,i=n%3,o=[],s=16383,a=0,c=n-i;a<c;a+=s)o.push(u(e,a,a+s>c?c:a+s));return 1===i?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),o.join("")};for(var r=[],n=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,a=o.length;s<a;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,n){for(var i,o,s=[],a=t;a<n;a+=3)i=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},5117:function(e,t,r){var n;!function(i){"use strict";var o,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,a=Math.ceil,c=Math.floor,u="[BigNumber Error] ",l=u+"Number primitive has more than 15 significant digits: ",p=1e14,h=14,d=9007199254740991,f=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],g=1e7,m=1e9;function y(e){var t=0|e;return e>0||e===t?t:t-1}function b(e){for(var t,r,n=1,i=e.length,o=e[0]+"";n<i;){for(t=e[n++]+"",r=h-t.length;r--;t="0"+t);o+=t}for(i=o.length;48===o.charCodeAt(--i););return o.slice(0,i+1||1)}function w(e,t){var r,n,i=e.c,o=t.c,s=e.s,a=t.s,c=e.e,u=t.e;if(!s||!a)return null;if(r=i&&!i[0],n=o&&!o[0],r||n)return r?n?0:-a:s;if(s!=a)return s;if(r=s<0,n=c==u,!i||!o)return n?0:!i^r?1:-1;if(!n)return c>u^r?1:-1;for(a=(c=i.length)<(u=o.length)?c:u,s=0;s<a;s++)if(i[s]!=o[s])return i[s]>o[s]^r?1:-1;return c==u?0:c>u^r?1:-1}function v(e,t,r,n){if(e<t||e>r||e!==c(e))throw Error(u+(n||"Argument")+("number"==typeof e?e<t||e>r?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function A(e){var t=e.c.length-1;return y(e.e/h)==t&&e.c[t]%2!=0}function x(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function _(e,t,r){var n,i;if(t<0){for(i=r+".";++t;i+=r);e=i+e}else if(++t>(n=e.length)){for(i=r,t-=n;--t;i+=r);e+=i}else t<n&&(e=e.slice(0,t)+"."+e.slice(t));return e}(o=function e(t){var r,n,i,o,S,E,B,T,k,U,I=H.prototype={constructor:H,toString:null,valueOf:null},R=new H(1),C=20,D=4,O=-7,N=21,P=-1e7,L=1e7,j=!1,z=1,F=0,M={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},q="0123456789abcdefghijklmnopqrstuvwxyz";function H(e,t){var r,o,a,u,p,f,g,m,y=this;if(!(y instanceof H))return new H(e,t);if(null==t){if(e&&!0===e._isBigNumber)return y.s=e.s,void(!e.c||e.e>L?y.c=y.e=null:e.e<P?y.c=[y.e=0]:(y.e=e.e,y.c=e.c.slice()));if((f="number"==typeof e)&&0*e==0){if(y.s=1/e<0?(e=-e,-1):1,e===~~e){for(u=0,p=e;p>=10;p/=10,u++);return void(u>L?y.c=y.e=null:(y.e=u,y.c=[e]))}m=String(e)}else{if(!s.test(m=String(e)))return i(y,m,f);y.s=45==m.charCodeAt(0)?(m=m.slice(1),-1):1}(u=m.indexOf("."))>-1&&(m=m.replace(".","")),(p=m.search(/e/i))>0?(u<0&&(u=p),u+=+m.slice(p+1),m=m.substring(0,p)):u<0&&(u=m.length)}else{if(v(t,2,q.length,"Base"),10==t)return V(y=new H(e),C+y.e+1,D);if(m=String(e),f="number"==typeof e){if(0*e!=0)return i(y,m,f,t);if(y.s=1/e<0?(m=m.slice(1),-1):1,H.DEBUG&&m.replace(/^0\.0*|\./,"").length>15)throw Error(l+e)}else y.s=45===m.charCodeAt(0)?(m=m.slice(1),-1):1;for(r=q.slice(0,t),u=p=0,g=m.length;p<g;p++)if(r.indexOf(o=m.charAt(p))<0){if("."==o){if(p>u){u=g;continue}}else if(!a&&(m==m.toUpperCase()&&(m=m.toLowerCase())||m==m.toLowerCase()&&(m=m.toUpperCase()))){a=!0,p=-1,u=0;continue}return i(y,String(e),f,t)}f=!1,(u=(m=n(m,t,10,y.s)).indexOf("."))>-1?m=m.replace(".",""):u=m.length}for(p=0;48===m.charCodeAt(p);p++);for(g=m.length;48===m.charCodeAt(--g););if(m=m.slice(p,++g)){if(g-=p,f&&H.DEBUG&&g>15&&(e>d||e!==c(e)))throw Error(l+y.s*e);if((u=u-p-1)>L)y.c=y.e=null;else if(u<P)y.c=[y.e=0];else{if(y.e=u,y.c=[],p=(u+1)%h,u<0&&(p+=h),p<g){for(p&&y.c.push(+m.slice(0,p)),g-=h;p<g;)y.c.push(+m.slice(p,p+=h));p=h-(m=m.slice(p)).length}else p-=g;for(;p--;m+="0");y.c.push(+m)}}else y.c=[y.e=0]}function $(e,t,r,n){var i,o,s,a,c;if(null==r?r=D:v(r,0,8),!e.c)return e.toString();if(i=e.c[0],s=e.e,null==t)c=b(e.c),c=1==n||2==n&&(s<=O||s>=N)?x(c,s):_(c,s,"0");else if(o=(e=V(new H(e),t,r)).e,a=(c=b(e.c)).length,1==n||2==n&&(t<=o||o<=O)){for(;a<t;c+="0",a++);c=x(c,o)}else if(t-=s,c=_(c,o,"0"),o+1>a){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=o-a)>0)for(o+1==a&&(c+=".");t--;c+="0");return e.s<0&&i?"-"+c:c}function G(e,t){for(var r,n=1,i=new H(e[0]);n<e.length;n++){if(!(r=new H(e[n])).s){i=r;break}t.call(i,r)&&(i=r)}return i}function K(e,t,r){for(var n=1,i=t.length;!t[--i];t.pop());for(i=t[0];i>=10;i/=10,n++);return(r=n+r*h-1)>L?e.c=e.e=null:r<P?e.c=[e.e=0]:(e.e=r,e.c=t),e}function V(e,t,r,n){var i,o,s,u,l,d,g,m=e.c,y=f;if(m){e:{for(i=1,u=m[0];u>=10;u/=10,i++);if((o=t-i)<0)o+=h,s=t,g=(l=m[d=0])/y[i-s-1]%10|0;else if((d=a((o+1)/h))>=m.length){if(!n)break e;for(;m.length<=d;m.push(0));l=g=0,i=1,s=(o%=h)-h+1}else{for(l=u=m[d],i=1;u>=10;u/=10,i++);g=(s=(o%=h)-h+i)<0?0:l/y[i-s-1]%10|0}if(n=n||t<0||null!=m[d+1]||(s<0?l:l%y[i-s-1]),n=r<4?(g||n)&&(0==r||r==(e.s<0?3:2)):g>5||5==g&&(4==r||n||6==r&&(o>0?s>0?l/y[i-s]:0:m[d-1])%10&1||r==(e.s<0?8:7)),t<1||!m[0])return m.length=0,n?(t-=e.e+1,m[0]=y[(h-t%h)%h],e.e=-t||0):m[0]=e.e=0,e;if(0==o?(m.length=d,u=1,d--):(m.length=d+1,u=y[h-o],m[d]=s>0?c(l/y[i-s]%y[s])*u:0),n)for(;;){if(0==d){for(o=1,s=m[0];s>=10;s/=10,o++);for(s=m[0]+=u,u=1;s>=10;s/=10,u++);o!=u&&(e.e++,m[0]==p&&(m[0]=1));break}if(m[d]+=u,m[d]!=p)break;m[d--]=0,u=1}for(o=m.length;0===m[--o];m.pop());}e.e>L?e.c=e.e=null:e.e<P&&(e.c=[e.e=0])}return e}function W(e){var t,r=e.e;return null===r?e.toString():(t=b(e.c),t=r<=O||r>=N?x(t,r):_(t,r,"0"),e.s<0?"-"+t:t)}return H.clone=e,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(e){var t,r;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(v(r=e[t],0,m,t),C=r),e.hasOwnProperty(t="ROUNDING_MODE")&&(v(r=e[t],0,8,t),D=r),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((r=e[t])&&r.pop?(v(r[0],-m,0,t),v(r[1],0,m,t),O=r[0],N=r[1]):(v(r,-m,m,t),O=-(N=r<0?-r:r))),e.hasOwnProperty(t="RANGE"))if((r=e[t])&&r.pop)v(r[0],-m,-1,t),v(r[1],1,m,t),P=r[0],L=r[1];else{if(v(r,-m,m,t),!r)throw Error(u+t+" cannot be zero: "+r);P=-(L=r<0?-r:r)}if(e.hasOwnProperty(t="CRYPTO")){if((r=e[t])!==!!r)throw Error(u+t+" not true or false: "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw j=!r,Error(u+"crypto unavailable");j=r}else j=r}if(e.hasOwnProperty(t="MODULO_MODE")&&(v(r=e[t],0,9,t),z=r),e.hasOwnProperty(t="POW_PRECISION")&&(v(r=e[t],0,m,t),F=r),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(r=e[t]))throw Error(u+t+" not an object: "+r);M=r}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(r=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(r))throw Error(u+t+" invalid: "+r);q=r}}return{DECIMAL_PLACES:C,ROUNDING_MODE:D,EXPONENTIAL_AT:[O,N],RANGE:[P,L],CRYPTO:j,MODULO_MODE:z,POW_PRECISION:F,FORMAT:M,ALPHABET:q}},H.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!H.DEBUG)return!0;var t,r,n=e.c,i=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(n)){if((1===o||-1===o)&&i>=-m&&i<=m&&i===c(i)){if(0===n[0]){if(0===i&&1===n.length)return!0;break e}if((t=(i+1)%h)<1&&(t+=h),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=p||r!==c(r))break e;if(0!==r)return!0}}}else if(null===n&&null===i&&(null===o||1===o||-1===o))return!0;throw Error(u+"Invalid BigNumber: "+e)},H.maximum=H.max=function(){return G(arguments,I.lt)},H.minimum=H.min=function(){return G(arguments,I.gt)},H.random=(o=9007199254740992,S=Math.random()*o&2097151?function(){return c(Math.random()*o)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,i,o,s=0,l=[],p=new H(R);if(null==e?e=C:v(e,0,m),i=a(e/h),j)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(i*=2));s<i;)(o=131072*t[s]+(t[s+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[s]=r[0],t[s+1]=r[1]):(l.push(o%1e14),s+=2);s=i/2}else{if(!crypto.randomBytes)throw j=!1,Error(u+"crypto unavailable");for(t=crypto.randomBytes(i*=7);s<i;)(o=281474976710656*(31&t[s])+1099511627776*t[s+1]+4294967296*t[s+2]+16777216*t[s+3]+(t[s+4]<<16)+(t[s+5]<<8)+t[s+6])>=9e15?crypto.randomBytes(7).copy(t,s):(l.push(o%1e14),s+=7);s=i/7}if(!j)for(;s<i;)(o=S())<9e15&&(l[s++]=o%1e14);for(i=l[--s],e%=h,i&&e&&(o=f[h-e],l[s]=c(i/o)*o);0===l[s];l.pop(),s--);if(s<0)l=[n=0];else{for(n=-1;0===l[0];l.splice(0,1),n-=h);for(s=1,o=l[0];o>=10;o/=10,s++);s<h&&(n-=h-s)}return p.e=n,p.c=l,p}),H.sum=function(){for(var e=1,t=arguments,r=new H(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e="0123456789";function t(e,t,r,n){for(var i,o,s=[0],a=0,c=e.length;a<c;){for(o=s.length;o--;s[o]*=t);for(s[0]+=n.indexOf(e.charAt(a++)),i=0;i<s.length;i++)s[i]>r-1&&(null==s[i+1]&&(s[i+1]=0),s[i+1]+=s[i]/r|0,s[i]%=r)}return s.reverse()}return function(n,i,o,s,a){var c,u,l,p,h,d,f,g,m=n.indexOf("."),y=C,w=D;for(m>=0&&(p=F,F=0,n=n.replace(".",""),d=(g=new H(i)).pow(n.length-m),F=p,g.c=t(_(b(d.c),d.e,"0"),10,o,e),g.e=g.c.length),l=p=(f=t(n,i,o,a?(c=q,e):(c=e,q))).length;0==f[--p];f.pop());if(!f[0])return c.charAt(0);if(m<0?--l:(d.c=f,d.e=l,d.s=s,f=(d=r(d,g,y,w,o)).c,h=d.r,l=d.e),m=f[u=l+y+1],p=o/2,h=h||u<0||null!=f[u+1],h=w<4?(null!=m||h)&&(0==w||w==(d.s<0?3:2)):m>p||m==p&&(4==w||h||6==w&&1&f[u-1]||w==(d.s<0?8:7)),u<1||!f[0])n=h?_(c.charAt(1),-y,c.charAt(0)):c.charAt(0);else{if(f.length=u,h)for(--o;++f[--u]>o;)f[u]=0,u||(++l,f=[1].concat(f));for(p=f.length;!f[--p];);for(m=0,n="";m<=p;n+=c.charAt(f[m++]));n=_(n,l,c.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,i,o,s,a=0,c=e.length,u=t%g,l=t/g|0;for(e=e.slice();c--;)a=((i=u*(o=e[c]%g)+(n=l*o+(s=e[c]/g|0)*u)%g*g+a)/r|0)+(n/g|0)+l*s,e[c]=i%r;return a&&(e=[a].concat(e)),e}function t(e,t,r,n){var i,o;if(r!=n)o=r>n?1:-1;else for(i=o=0;i<r;i++)if(e[i]!=t[i]){o=e[i]>t[i]?1:-1;break}return o}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,i,o,s,a){var u,l,d,f,g,m,b,w,v,A,x,_,S,E,B,T,k,U=n.s==i.s?1:-1,I=n.c,R=i.c;if(!(I&&I[0]&&R&&R[0]))return new H(n.s&&i.s&&(I?!R||I[0]!=R[0]:R)?I&&0==I[0]||!R?0*U:U/0:NaN);for(v=(w=new H(U)).c=[],U=o+(l=n.e-i.e)+1,a||(a=p,l=y(n.e/h)-y(i.e/h),U=U/h|0),d=0;R[d]==(I[d]||0);d++);if(R[d]>(I[d]||0)&&l--,U<0)v.push(1),f=!0;else{for(E=I.length,T=R.length,d=0,U+=2,(g=c(a/(R[0]+1)))>1&&(R=e(R,g,a),I=e(I,g,a),T=R.length,E=I.length),S=T,x=(A=I.slice(0,T)).length;x<T;A[x++]=0);k=R.slice(),k=[0].concat(k),B=R[0],R[1]>=a/2&&B++;do{if(g=0,(u=t(R,A,T,x))<0){if(_=A[0],T!=x&&(_=_*a+(A[1]||0)),(g=c(_/B))>1)for(g>=a&&(g=a-1),b=(m=e(R,g,a)).length,x=A.length;1==t(m,A,b,x);)g--,r(m,T<b?k:R,b,a),b=m.length,u=1;else 0==g&&(u=g=1),b=(m=R.slice()).length;if(b<x&&(m=[0].concat(m)),r(A,m,x,a),x=A.length,-1==u)for(;t(R,A,T,x)<1;)g++,r(A,T<x?k:R,x,a),x=A.length}else 0===u&&(g++,A=[0]);v[d++]=g,A[0]?A[x++]=I[S]||0:(A=[I[S]],x=1)}while((S++<E||null!=A[0])&&U--);f=null!=A[0],v[0]||v.splice(0,1)}if(a==p){for(d=1,U=v[0];U>=10;U/=10,d++);V(w,o+(w.e=d+l*h-1)+1,s,f)}else w.e=l,w.r=+f;return w}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,B=/^([^.]+)\.$/,T=/^\.([^.]+)$/,k=/^-?(Infinity|NaN)$/,U=/^\s*\+(?=[\w.])|^\s+|\s+$/g,i=function(e,t,r,n){var i,o=r?t:t.replace(U,"");if(k.test(o))e.s=isNaN(o)?null:o<0?-1:1;else{if(!r&&(o=o.replace(E,(function(e,t,r){return i="x"==(r=r.toLowerCase())?16:"b"==r?2:8,n&&n!=i?e:t})),n&&(i=n,o=o.replace(B,"$1").replace(T,"0.$1")),t!=o))return new H(o,i);if(H.DEBUG)throw Error(u+"Not a"+(n?" base "+n:"")+" number: "+t);e.s=null}e.c=e.e=null},I.absoluteValue=I.abs=function(){var e=new H(this);return e.s<0&&(e.s=1),e},I.comparedTo=function(e,t){return w(this,new H(e,t))},I.decimalPlaces=I.dp=function(e,t){var r,n,i,o=this;if(null!=e)return v(e,0,m),null==t?t=D:v(t,0,8),V(new H(o),e+o.e+1,t);if(!(r=o.c))return null;if(n=((i=r.length-1)-y(this.e/h))*h,i=r[i])for(;i%10==0;i/=10,n--);return n<0&&(n=0),n},I.dividedBy=I.div=function(e,t){return r(this,new H(e,t),C,D)},I.dividedToIntegerBy=I.idiv=function(e,t){return r(this,new H(e,t),0,1)},I.exponentiatedBy=I.pow=function(e,t){var r,n,i,o,s,l,p,d,f=this;if((e=new H(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+W(e));if(null!=t&&(t=new H(t)),s=e.e>14,!f.c||!f.c[0]||1==f.c[0]&&!f.e&&1==f.c.length||!e.c||!e.c[0])return d=new H(Math.pow(+W(f),s?2-A(e):+W(e))),t?d.mod(t):d;if(l=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new H(NaN);(n=!l&&f.isInteger()&&t.isInteger())&&(f=f.mod(t))}else{if(e.e>9&&(f.e>0||f.e<-1||(0==f.e?f.c[0]>1||s&&f.c[1]>=24e7:f.c[0]<8e13||s&&f.c[0]<=9999975e7)))return o=f.s<0&&A(e)?-0:0,f.e>-1&&(o=1/o),new H(l?1/o:o);F&&(o=a(F/h+2))}for(s?(r=new H(.5),l&&(e.s=1),p=A(e)):p=(i=Math.abs(+W(e)))%2,d=new H(R);;){if(p){if(!(d=d.times(f)).c)break;o?d.c.length>o&&(d.c.length=o):n&&(d=d.mod(t))}if(i){if(0===(i=c(i/2)))break;p=i%2}else if(V(e=e.times(r),e.e+1,1),e.e>14)p=A(e);else{if(0==(i=+W(e)))break;p=i%2}f=f.times(f),o?f.c&&f.c.length>o&&(f.c.length=o):n&&(f=f.mod(t))}return n?d:(l&&(d=R.div(d)),t?d.mod(t):o?V(d,F,D,void 0):d)},I.integerValue=function(e){var t=new H(this);return null==e?e=D:v(e,0,8),V(t,t.e+1,e)},I.isEqualTo=I.eq=function(e,t){return 0===w(this,new H(e,t))},I.isFinite=function(){return!!this.c},I.isGreaterThan=I.gt=function(e,t){return w(this,new H(e,t))>0},I.isGreaterThanOrEqualTo=I.gte=function(e,t){return 1===(t=w(this,new H(e,t)))||0===t},I.isInteger=function(){return!!this.c&&y(this.e/h)>this.c.length-2},I.isLessThan=I.lt=function(e,t){return w(this,new H(e,t))<0},I.isLessThanOrEqualTo=I.lte=function(e,t){return-1===(t=w(this,new H(e,t)))||0===t},I.isNaN=function(){return!this.s},I.isNegative=function(){return this.s<0},I.isPositive=function(){return this.s>0},I.isZero=function(){return!!this.c&&0==this.c[0]},I.minus=function(e,t){var r,n,i,o,s=this,a=s.s;if(t=(e=new H(e,t)).s,!a||!t)return new H(NaN);if(a!=t)return e.s=-t,s.plus(e);var c=s.e/h,u=e.e/h,l=s.c,d=e.c;if(!c||!u){if(!l||!d)return l?(e.s=-t,e):new H(d?s:NaN);if(!l[0]||!d[0])return d[0]?(e.s=-t,e):new H(l[0]?s:3==D?-0:0)}if(c=y(c),u=y(u),l=l.slice(),a=c-u){for((o=a<0)?(a=-a,i=l):(u=c,i=d),i.reverse(),t=a;t--;i.push(0));i.reverse()}else for(n=(o=(a=l.length)<(t=d.length))?a:t,a=t=0;t<n;t++)if(l[t]!=d[t]){o=l[t]<d[t];break}if(o&&(i=l,l=d,d=i,e.s=-e.s),(t=(n=d.length)-(r=l.length))>0)for(;t--;l[r++]=0);for(t=p-1;n>a;){if(l[--n]<d[n]){for(r=n;r&&!l[--r];l[r]=t);--l[r],l[n]+=p}l[n]-=d[n]}for(;0==l[0];l.splice(0,1),--u);return l[0]?K(e,l,u):(e.s=3==D?-1:1,e.c=[e.e=0],e)},I.modulo=I.mod=function(e,t){var n,i,o=this;return e=new H(e,t),!o.c||!e.s||e.c&&!e.c[0]?new H(NaN):!e.c||o.c&&!o.c[0]?new H(o):(9==z?(i=e.s,e.s=1,n=r(o,e,0,3),e.s=i,n.s*=i):n=r(o,e,0,z),(e=o.minus(n.times(e))).c[0]||1!=z||(e.s=o.s),e)},I.multipliedBy=I.times=function(e,t){var r,n,i,o,s,a,c,u,l,d,f,m,b,w,v,A=this,x=A.c,_=(e=new H(e,t)).c;if(!(x&&_&&x[0]&&_[0]))return!A.s||!e.s||x&&!x[0]&&!_||_&&!_[0]&&!x?e.c=e.e=e.s=null:(e.s*=A.s,x&&_?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=y(A.e/h)+y(e.e/h),e.s*=A.s,(c=x.length)<(d=_.length)&&(b=x,x=_,_=b,i=c,c=d,d=i),i=c+d,b=[];i--;b.push(0));for(w=p,v=g,i=d;--i>=0;){for(r=0,f=_[i]%v,m=_[i]/v|0,o=i+(s=c);o>i;)r=((u=f*(u=x[--s]%v)+(a=m*u+(l=x[s]/v|0)*f)%v*v+b[o]+r)/w|0)+(a/v|0)+m*l,b[o--]=u%w;b[o]=r}return r?++n:b.splice(0,1),K(e,b,n)},I.negated=function(){var e=new H(this);return e.s=-e.s||null,e},I.plus=function(e,t){var r,n=this,i=n.s;if(t=(e=new H(e,t)).s,!i||!t)return new H(NaN);if(i!=t)return e.s=-t,n.minus(e);var o=n.e/h,s=e.e/h,a=n.c,c=e.c;if(!o||!s){if(!a||!c)return new H(i/0);if(!a[0]||!c[0])return c[0]?e:new H(a[0]?n:0*i)}if(o=y(o),s=y(s),a=a.slice(),i=o-s){for(i>0?(s=o,r=c):(i=-i,r=a),r.reverse();i--;r.push(0));r.reverse()}for((i=a.length)-(t=c.length)<0&&(r=c,c=a,a=r,t=i),i=0;t;)i=(a[--t]=a[t]+c[t]+i)/p|0,a[t]=p===a[t]?0:a[t]%p;return i&&(a=[i].concat(a),++s),K(e,a,s)},I.precision=I.sd=function(e,t){var r,n,i,o=this;if(null!=e&&e!==!!e)return v(e,1,m),null==t?t=D:v(t,0,8),V(new H(o),e,t);if(!(r=o.c))return null;if(n=(i=r.length-1)*h+1,i=r[i]){for(;i%10==0;i/=10,n--);for(i=r[0];i>=10;i/=10,n++);}return e&&o.e+1>n&&(n=o.e+1),n},I.shiftedBy=function(e){return v(e,-9007199254740991,d),this.times("1e"+e)},I.squareRoot=I.sqrt=function(){var e,t,n,i,o,s=this,a=s.c,c=s.s,u=s.e,l=C+4,p=new H("0.5");if(1!==c||!a||!a[0])return new H(!c||c<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(c=Math.sqrt(+W(s)))||c==1/0?(((t=b(a)).length+u)%2==0&&(t+="0"),c=Math.sqrt(+t),u=y((u+1)/2)-(u<0||u%2),n=new H(t=c==1/0?"5e"+u:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+u)):n=new H(c+""),n.c[0])for((c=(u=n.e)+l)<3&&(c=0);;)if(o=n,n=p.times(o.plus(r(s,o,l,1))),b(o.c).slice(0,c)===(t=b(n.c)).slice(0,c)){if(n.e<u&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(V(n,n.e+C+2,1),e=!n.times(n).eq(s));break}if(!i&&(V(o,o.e+C+2,0),o.times(o).eq(s))){n=o;break}l+=4,c+=4,i=1}return V(n,n.e+C+1,D,e)},I.toExponential=function(e,t){return null!=e&&(v(e,0,m),e++),$(this,e,t,1)},I.toFixed=function(e,t){return null!=e&&(v(e,0,m),e=e+this.e+1),$(this,e,t)},I.toFormat=function(e,t,r){var n,i=this;if(null==r)null!=e&&t&&"object"==typeof t?(r=t,t=null):e&&"object"==typeof e?(r=e,e=t=null):r=M;else if("object"!=typeof r)throw Error(u+"Argument not an object: "+r);if(n=i.toFixed(e,t),i.c){var o,s=n.split("."),a=+r.groupSize,c=+r.secondaryGroupSize,l=r.groupSeparator||"",p=s[0],h=s[1],d=i.s<0,f=d?p.slice(1):p,g=f.length;if(c&&(o=a,a=c,c=o,g-=o),a>0&&g>0){for(o=g%a||a,p=f.substr(0,o);o<g;o+=a)p+=l+f.substr(o,a);c>0&&(p+=l+f.slice(o)),d&&(p="-"+p)}n=h?p+(r.decimalSeparator||"")+((c=+r.fractionGroupSize)?h.replace(new RegExp("\\d{"+c+"}\\B","g"),"$&"+(r.fractionGroupSeparator||"")):h):p}return(r.prefix||"")+n+(r.suffix||"")},I.toFraction=function(e){var t,n,i,o,s,a,c,l,p,d,g,m,y=this,w=y.c;if(null!=e&&(!(c=new H(e)).isInteger()&&(c.c||1!==c.s)||c.lt(R)))throw Error(u+"Argument "+(c.isInteger()?"out of range: ":"not an integer: ")+W(c));if(!w)return new H(y);for(t=new H(R),p=n=new H(R),i=l=new H(R),m=b(w),s=t.e=m.length-y.e-1,t.c[0]=f[(a=s%h)<0?h+a:a],e=!e||c.comparedTo(t)>0?s>0?t:p:c,a=L,L=1/0,c=new H(m),l.c[0]=0;d=r(c,t,0,1),1!=(o=n.plus(d.times(i))).comparedTo(e);)n=i,i=o,p=l.plus(d.times(o=p)),l=o,t=c.minus(d.times(o=t)),c=o;return o=r(e.minus(n),i,0,1),l=l.plus(o.times(p)),n=n.plus(o.times(i)),l.s=p.s=y.s,g=r(p,i,s*=2,D).minus(y).abs().comparedTo(r(l,n,s,D).minus(y).abs())<1?[p,i]:[l,n],L=a,g},I.toNumber=function(){return+W(this)},I.toPrecision=function(e,t){return null!=e&&v(e,1,m),$(this,e,t,2)},I.toString=function(e){var t,r=this,i=r.s,o=r.e;return null===o?i?(t="Infinity",i<0&&(t="-"+t)):t="NaN":(null==e?t=o<=O||o>=N?x(b(r.c),o):_(b(r.c),o,"0"):10===e?t=_(b((r=V(new H(r),C+o+1,D)).c),r.e,"0"):(v(e,2,q.length,"Base"),t=n(_(b(r.c),o,"0"),10,e,i,!0)),i<0&&r.c[0]&&(t="-"+t)),t},I.valueOf=I.toJSON=function(){return W(this)},I._isBigNumber=!0,null!=t&&H.set(t),H}()).default=o.BigNumber=o,void 0===(n=function(){return o}.call(t,r,t,e))||(e.exports=n)}()},2486:(e,t,r)=>{"use strict";const n=r(5155),i=r(4525),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const s=2147483647;function a(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=a(r);const i=n.write(e,t);return i!==r&&(n=n.slice(0,i)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Z(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Z(e,ArrayBuffer)||e&&Z(e.buffer,ArrayBuffer))return d(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(Z(e,SharedArrayBuffer)||e&&Z(e.buffer,SharedArrayBuffer)))return d(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,r);const i=function(e){if(c.isBuffer(e)){const t=0|f(e.length),r=a(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||X(e.length)?a(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return l(e),a(e<0?0:0|f(e))}function h(e){const t=e.length<0?0:0|f(e.length),r=a(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,c.prototype),n}function f(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Z(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return K(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(i)return n?-1:K(e).length;t=(""+t).toLowerCase(),i=!0}}function m(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return B(this,t,r);case"ascii":return k(this,t,r);case"latin1":case"binary":return U(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function y(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function b(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),X(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,i){let o,s=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let n=-1;for(o=r;o<a;o++)if(u(e,o)===u(t,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===c)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+c>a&&(r=a-c),o=r;o>=0;o--){let r=!0;for(let n=0;n<c;n++)if(u(e,o+n)!==u(t,n)){r=!1;break}if(r)return o}return-1}function v(e,t,r,n){r=Number(r)||0;const i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=t.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(X(n))return s;e[r+s]=n}return s}function A(e,t,r,n){return W(K(t,e.length-r),e,r,n)}function x(e,t,r,n){return W(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function _(e,t,r,n){return W(V(t),e,r,n)}function S(e,t,r,n){return W(function(e,t){let r,n,i;const o=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function B(e,t,r){r=Math.min(e.length,r);const n=[];let i=t;for(;i<r;){const t=e[i];let o=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=r){let r,n,a,c;switch(s){case 1:t<128&&(o=t);break;case 2:r=e[i+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(o=c));break;case 3:r=e[i+1],n=e[i+2],128==(192&r)&&128==(192&n)&&(c=(15&t)<<12|(63&r)<<6|63&n,c>2047&&(c<55296||c>57343)&&(o=c));break;case 4:r=e[i+1],n=e[i+2],a=e[i+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(o=c))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(e){const t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=T));return r}(n)}t.kMaxLength=s,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,r){return function(e,t,r){return l(e),e<=0?a(e):void 0!==t?"string"==typeof r?a(e).fill(t,r):a(e).fill(t):a(e)}(e,t,r)},c.allocUnsafe=function(e){return p(e)},c.allocUnsafeSlow=function(e){return p(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(Z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),Z(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=c.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if(Z(t,Uint8Array))i+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,i)}i+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)y(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?B(this,0,e):m.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},o&&(c.prototype[o]=c.prototype.inspect),c.prototype.compare=function(e,t,r,n,i){if(Z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const a=Math.min(o,s),u=this.slice(n,i),l=e.slice(t,r);for(let e=0;e<a;++e)if(u[e]!==l[e]){o=u[e],s=l[e];break}return o<s?-1:s<o?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return b(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return b(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let o=!1;for(;;)switch(n){case"hex":return v(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":case"latin1":case"binary":return x(this,e,t,r);case"base64":return _(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function k(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function U(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function I(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i="";for(let n=t;n<r;++n)i+=Y[e[n]];return i}function R(e,t,r){const n=e.slice(t,r);let i="";for(let e=0;e<n.length-1;e+=2)i+=String.fromCharCode(n[e]+256*n[e+1]);return i}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,r,n,i,o){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function O(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function N(e,t,r,n,i){q(t,n,i,e,r,7);let o=Number(t&BigInt(4294967295));e[r+7]=o,o>>=8,e[r+6]=o,o>>=8,e[r+5]=o,o>>=8,e[r+4]=o;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function P(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(e,t,r,n,o){return t=+t,r>>>=0,o||P(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function j(e,t,r,n,o){return t=+t,r>>>=0,o||P(e,0,r,8),i.write(e,t,r,n,52,8),r+8}c.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),c.prototype.readBigUInt64BE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),c.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=this[e],i=1,o=0;for(;++o<t&&(i*=256);)n+=this[e+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let n=t,i=1,o=this[e+--n];for(;n>0&&(i*=256);)o+=this[e+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},c.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=J((function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||$(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=J((function(e,t=0){return O(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=J((function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);D(this,e,t,r,n-1,-n)}let i=0,o=1,s=0;for(this[t]=255&e;++i<r&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);D(this,e,t,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=J((function(e,t=0){return O(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=J((function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return j(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return j(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{const o=c.isBuffer(e)?e:c.from(e,n),s=o.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=o[i%s]}return this};const z={};function F(e,t,r){z[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function M(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function q(e,t,r,n,i,o){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new z.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,r){H(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||$(t,e.length-(r+1))}(n,i,o)}function H(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function $(e,t,r){if(Math.floor(e)!==e)throw H(e,r),new z.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=M(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=M(i)),i+="n"),n+=` It must be ${t}. Received ${i}`,n}),RangeError);const G=/[^+/0-9A-Za-z-_]/g;function K(e,t){let r;t=t||1/0;const n=e.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(G,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function Z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function X(e){return e!=e}const Y=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i]}return t}();function J(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},7297:function(e,t){var r="undefined"!=typeof self?self:this,n=function(){function e(){this.fetch=!1,this.DOMException=r.DOMException}return e.prototype=r,new e}();!function(e){!function(t){var r="URLSearchParams"in e,n="Symbol"in e&&"iterator"in Symbol,i="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),o="FormData"in e,s="ArrayBuffer"in e;if(s)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(e){return e&&a.indexOf(Object.prototype.toString.call(e))>-1};function u(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function l(e){return"string"!=typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return n&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function d(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function f(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function g(e){var t=new FileReader,r=f(t);return t.readAsArrayBuffer(e),r}function m(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function y(){return this.bodyUsed=!1,this._initBody=function(e){var t;this._bodyInit=e,e?"string"==typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:o&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:r&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():s&&i&&(t=e)&&DataView.prototype.isPrototypeOf(t)?(this._bodyArrayBuffer=m(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):s&&(ArrayBuffer.prototype.isPrototypeOf(e)||c(e))?this._bodyArrayBuffer=m(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):r&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=d(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?d(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var e,t,r,n=d(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,r=f(t=new FileReader),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=u(e),t=l(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[u(e)]},h.prototype.get=function(e){return e=u(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(u(e))},h.prototype.set=function(e,t){this.map[u(e)]=l(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},n&&(h.prototype[Symbol.iterator]=h.prototype.entries);var b=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function w(e,t){var r,n,i=(t=t||{}).body;if(e instanceof w){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,i||null==e._bodyInit||(i=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(n=(r=t.method||this.method||"GET").toUpperCase(),b.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&i)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(i)}function v(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\+/g," "),i=r.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(i))}})),t}function A(e,t){t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},y.call(w.prototype),y.call(A.prototype),A.prototype.clone=function(){return new A(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},A.error=function(){var e=new A(null,{status:0,statusText:""});return e.type="error",e};var x=[301,302,303,307,308];A.redirect=function(e,t){if(-1===x.indexOf(t))throw new RangeError("Invalid status code");return new A(null,{status:t,headers:{location:e}})},t.DOMException=e.DOMException;try{new t.DOMException}catch(e){t.DOMException=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack},t.DOMException.prototype=Object.create(Error.prototype),t.DOMException.prototype.constructor=t.DOMException}function _(e,r){return new Promise((function(n,o){var s=new w(e,r);if(s.signal&&s.signal.aborted)return o(new t.DOMException("Aborted","AbortError"));var a=new XMLHttpRequest;function c(){a.abort()}a.onload=function(){var e,t,r={status:a.status,statusText:a.statusText,headers:(e=a.getAllResponseHeaders()||"",t=new h,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var i=r.join(":").trim();t.append(n,i)}})),t)};r.url="responseURL"in a?a.responseURL:r.headers.get("X-Request-URL");var i="response"in a?a.response:a.responseText;n(new A(i,r))},a.onerror=function(){o(new TypeError("Network request failed"))},a.ontimeout=function(){o(new TypeError("Network request failed"))},a.onabort=function(){o(new t.DOMException("Aborted","AbortError"))},a.open(s.method,s.url,!0),"include"===s.credentials?a.withCredentials=!0:"omit"===s.credentials&&(a.withCredentials=!1),"responseType"in a&&i&&(a.responseType="blob"),s.headers.forEach((function(e,t){a.setRequestHeader(t,e)})),s.signal&&(s.signal.addEventListener("abort",c),a.onreadystatechange=function(){4===a.readyState&&s.signal.removeEventListener("abort",c)}),a.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,e.fetch||(e.fetch=_,e.Headers=h,e.Request=w,e.Response=A),t.Headers=h,t.Request=w,t.Response=A,t.fetch=_,Object.defineProperty(t,"__esModule",{value:!0})}({})}(n),n.fetch.ponyfill=!0,delete n.fetch.polyfill;var i=n;(t=i.fetch).default=i.fetch,t.fetch=i.fetch,t.Headers=i.Headers,t.Request=i.Request,t.Response=i.Response,e.exports=t},7267:(e,t,r)=>{var n;!function(){"use strict";var t="object"==typeof window?window:{};!t.HI_BASE32_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(t=r.g);var i=!t.HI_BASE32_NO_COMMON_JS&&e.exports,o=r.amdO,s="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),a={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,2:26,3:27,4:28,5:29,6:30,7:31},c=[0,0,0,0,0,0,0,0],u=function(e,t){t.length>10&&(t="..."+t.substr(-10));var r=new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading "+e+" bytes: "+t+" <-");throw r.position=e,r},l=function(e){if(""===e)return[];if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");for(var t,r,n,i,o,s,c,u,l=[],p=0,h=(e=e.replace(/=/g,"")).length,d=0,f=h>>3<<3;d<f;)t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],o=a[e.charAt(d++)],s=a[e.charAt(d++)],c=a[e.charAt(d++)],u=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4),l[p++]=255&(i<<4|o>>>1),l[p++]=255&(o<<7|s<<2|c>>>3),l[p++]=255&(c<<5|u);var g=h-f;return 2===g?(t=a[e.charAt(d++)],r=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2)):4===g?(t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4)):5===g?(t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],o=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4),l[p++]=255&(i<<4|o>>>1)):7===g&&(t=a[e.charAt(d++)],r=a[e.charAt(d++)],n=a[e.charAt(d++)],i=a[e.charAt(d++)],o=a[e.charAt(d++)],s=a[e.charAt(d++)],c=a[e.charAt(d++)],l[p++]=255&(t<<3|r>>>2),l[p++]=255&(r<<6|n<<1|i>>>4),l[p++]=255&(i<<4|o>>>1),l[p++]=255&(o<<7|s<<2|c>>>3)),l},p=function(e,t){if(!t)return function(e){for(var t,r,n="",i=e.length,o=0,s=0;o<i;)if((t=e[o++])<=127)n+=String.fromCharCode(t);else{t>191&&t<=223?(r=31&t,s=1):t<=239?(r=15&t,s=2):t<=247?(r=7&t,s=3):u(o,n);for(var a=0;a<s;++a)((t=e[o++])<128||t>191)&&u(o,n),r<<=6,r+=63&t;r>=55296&&r<=57343&&u(o,n),r>1114111&&u(o,n),r<=65535?n+=String.fromCharCode(r):(r-=65536,n+=String.fromCharCode(55296+(r>>10)),n+=String.fromCharCode(56320+(1023&r)))}return n}(l(e));if(""===e)return"";if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");var r,n,i,o,s,c,p,h,d="",f=e.indexOf("=");-1===f&&(f=e.length);for(var g=0,m=f>>3<<3;g<m;)r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],h=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))+String.fromCharCode(255&(o<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))+String.fromCharCode(255&(p<<5|h));var y=f-m;return 2===y?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))):4===y?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))):5===y?(r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],s=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))+String.fromCharCode(255&(o<<4|s>>>1))):7===y&&(r=a[e.charAt(g++)],n=a[e.charAt(g++)],i=a[e.charAt(g++)],o=a[e.charAt(g++)],s=a[e.charAt(g++)],c=a[e.charAt(g++)],p=a[e.charAt(g++)],d+=String.fromCharCode(255&(r<<3|n>>>2))+String.fromCharCode(255&(n<<6|i<<1|o>>>4))+String.fromCharCode(255&(o<<4|s>>>1))+String.fromCharCode(255&(s<<7|c<<2|p>>>3))),d},h={encode:function(e,t){var r="string"!=typeof e;return r&&e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),r?function(e){for(var t,r,n,i,o,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e[u++],r=e[u++],n=e[u++],i=e[u++],o=e[u++],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[31&(i<<3|o>>>5)]+s[31&o];var p=c-l;return 1===p?(t=e[u],a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e[u++],r=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e[u++],r=e[u++],n=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e[u++],r=e[u++],n=e[u++],i=e[u],a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[i<<3&31]+"="),a}(e):t?function(e){for(var t,r,n,i,o,a="",c=e.length,u=0,l=5*parseInt(c/5);u<l;)t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),i=e.charCodeAt(u++),o=e.charCodeAt(u++),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[31&(i<<3|o>>>5)]+s[31&o];var p=c-l;return 1===p?(t=e.charCodeAt(u),a+=s[t>>>3]+s[t<<2&31]+"======"):2===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===p?(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):4===p&&(t=e.charCodeAt(u++),r=e.charCodeAt(u++),n=e.charCodeAt(u++),i=e.charCodeAt(u),a+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[i<<3&31]+"="),a}(e):function(e){var t,r,n,i,o,a,u,l=!1,p="",h=0,d=0,f=e.length;if(""===e)return p;do{for(c[0]=c[5],c[1]=c[6],c[2]=c[7],u=d;h<f&&u<5;++h)(a=e.charCodeAt(h))<128?c[u++]=a:a<2048?(c[u++]=192|a>>6,c[u++]=128|63&a):a<55296||a>=57344?(c[u++]=224|a>>12,c[u++]=128|a>>6&63,c[u++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++h)),c[u++]=240|a>>18,c[u++]=128|a>>12&63,c[u++]=128|a>>6&63,c[u++]=128|63&a);d=u-5,h===f&&++h,h>f&&u<6&&(l=!0),t=c[0],u>4?(r=c[1],n=c[2],i=c[3],o=c[4],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[31&(i<<3|o>>>5)]+s[31&o]):1===u?p+=s[t>>>3]+s[t<<2&31]+"======":2===u?(r=c[1],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[r<<4&31]+"===="):3===u?(r=c[1],n=c[2],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[n<<1&31]+"==="):(r=c[1],n=c[2],i=c[3],p+=s[t>>>3]+s[31&(t<<2|r>>>6)]+s[r>>>1&31]+s[31&(r<<4|n>>>4)]+s[31&(n<<1|i>>>7)]+s[i>>>2&31]+s[i<<3&31]+"=")}while(!l);return p}(e)},decode:p};p.asBytes=l,i?e.exports=h:(t.base32=h,o&&(void 0===(n=function(){return h}.call(h,r,h,e))||(e.exports=n)))}()},4525:(e,t)=>{t.read=function(e,t,r,n,i){var o,s,a=8*i-n-1,c=(1<<a)-1,u=c>>1,l=-7,p=r?i-1:0,h=r?-1:1,d=e[t+p];for(p+=h,o=d&(1<<-l)-1,d>>=-l,l+=a;l>0;o=256*o+e[t+p],p+=h,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=n;l>0;s=256*s+e[t+p],p+=h,l-=8);if(0===o)o=1-u;else{if(o===c)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),o-=u}return(d?-1:1)*s*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var s,a,c,u=8*o-i-1,l=(1<<u)-1,p=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,f=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+p>=1?h/c:h*Math.pow(2,1-p))*c>=2&&(s++,c/=2),s+p>=l?(a=0,s=l):s+p>=1?(a=(t*c-1)*Math.pow(2,i),s+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,i),s=0));i>=8;e[r+d]=255&a,d+=f,a/=256,i-=8);for(s=s<<i|a,u+=i;u>0;e[r+d]=255&s,d+=f,s/=256,u-=8);e[r+d-f]|=128*g}},3477:(module,exports,__nested_webpack_require_91320__)=>{var __WEBPACK_AMD_DEFINE_RESULT__;(function(){"use strict";var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=__nested_webpack_require_91320__.g:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD=__nested_webpack_require_91320__.amdO,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(r){return new Sha256(t,!0).update(r)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(r,n){return new HmacSha256(r,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createHmacOutputMethod(n,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function HmacSha256(e,t,r){var n,i=typeof e;if("string"===i){var o,s=[],a=e.length,c=0;for(n=0;n<a;++n)(o=e.charCodeAt(n))<128?s[c++]=o:o<2048?(s[c++]=192|o>>6,s[c++]=128|63&o):o<55296||o>=57344?(s[c++]=224|o>>12,s[c++]=128|o>>6&63,s[c++]=128|63&o):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++n)),s[c++]=240|o>>18,s[c++]=128|o>>12&63,s[c++]=128|o>>6&63,s[c++]=128|63&o);e=s}else{if("object"!==i)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var u=[],l=[];for(n=0;n<64;++n){var p=e[n]||0;u[n]=92^p,l[n]=54^p}Sha256.call(this,t,r),this.update(l),this.oKeyPad=u,this.inner=!0,this.sharedMemory=r}Sha256.prototype.update=function(e){if(!this.finalized){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,i,o=0,s=e.length,a=this.blocks;o<s;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),t)for(i=this.start;o<s&&i<64;++o)a[i>>2]|=e[o]<<SHIFT[3&i++];else for(i=this.start;o<s&&i<64;++o)(n=e.charCodeAt(o))<128?a[i>>2]|=n<<SHIFT[3&i++]:n<2048?(a[i>>2]|=(192|n>>6)<<SHIFT[3&i++],a[i>>2]|=(128|63&n)<<SHIFT[3&i++]):n<55296||n>=57344?(a[i>>2]|=(224|n>>12)<<SHIFT[3&i++],a[i>>2]|=(128|n>>6&63)<<SHIFT[3&i++],a[i>>2]|=(128|63&n)<<SHIFT[3&i++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++o)),a[i>>2]|=(240|n>>18)<<SHIFT[3&i++],a[i>>2]|=(128|n>>12&63)<<SHIFT[3&i++],a[i>>2]|=(128|n>>6&63)<<SHIFT[3&i++],a[i>>2]|=(128|63&n)<<SHIFT[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=64?(this.block=a[16],this.start=i-64,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,r,n,i,o,s,a,c,u=this.h0,l=this.h1,p=this.h2,h=this.h3,d=this.h4,f=this.h5,g=this.h6,m=this.h7,y=this.blocks;for(e=16;e<64;++e)t=((i=y[e-15])>>>7|i<<25)^(i>>>18|i<<14)^i>>>3,r=((i=y[e-2])>>>17|i<<15)^(i>>>19|i<<13)^i>>>10,y[e]=y[e-16]+t+y[e-7]+r<<0;for(c=l&p,e=0;e<64;e+=4)this.first?(this.is224?(o=300032,m=(i=y[0]-1413257819)-150054599<<0,h=i+24177077<<0):(o=704751109,m=(i=y[0]-210244248)-1521486534<<0,h=i+143694565<<0),this.first=!1):(t=(u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),n=(o=u&l)^u&p^c,m=h+(i=m+(r=(d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+(d&f^~d&g)+K[e]+y[e])<<0,h=i+(t+n)<<0),t=(h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10),n=(s=h&u)^h&l^o,g=p+(i=g+(r=(m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(m&d^~m&f)+K[e+1]+y[e+1])<<0,t=((p=i+(t+n)<<0)>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10),n=(a=p&h)^p&u^s,f=l+(i=f+(r=(g>>>6|g<<26)^(g>>>11|g<<21)^(g>>>25|g<<7))+(g&m^~g&d)+K[e+2]+y[e+2])<<0,t=((l=i+(t+n)<<0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(c=l&p)^l&h^a,d=u+(i=d+(r=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+(f&g^~f&m)+K[e+3]+y[e+3])<<0,u=i+(t+n)<<0;this.h0=this.h0+u<<0,this.h1=this.h1+l<<0,this.h2=this.h2+p<<0,this.h3=this.h3+h<<0,this.h4=this.h4+d<<0,this.h5=this.h5+f<<0,this.h6=this.h6+g<<0,this.h7=this.h7+m<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,i=this.h4,o=this.h5,s=this.h6,a=this.h7,c=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[15&s];return this.is224||(c+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]),c},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,i=this.h4,o=this.h5,s=this.h6,a=this.h7,c=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,i>>24&255,i>>16&255,i>>8&255,255&i,o>>24&255,o>>16&255,o>>8&255,255&o,s>>24&255,s>>16&255,s>>8&255,255&s];return this.is224||c.push(a>>24&255,a>>16&255,a>>8&255,255&a),c},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__nested_webpack_require_91320__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))})()},583:(e,t,r)=>{var n;!function(){"use strict";var i="input is invalid type",o="object"==typeof window,s=o?window:{};s.JS_SHA3_NO_WINDOW&&(o=!1);var a=!o&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=r.g:a&&(s=self);var c=!s.JS_SHA3_NO_COMMON_JS&&e.exports,u=r.amdO,l=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,p="0123456789abcdef".split(""),h=[4,1024,262144,67108864],d=[0,8,16,24],f=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],g=[224,256,384,512],m=[128,256],y=["hex","buffer","arrayBuffer","array","digest"],b={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!l||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var w=function(e,t,r){return function(n){return new O(e,t,e).update(n)[r]()}},v=function(e,t,r){return function(n,i){return new O(e,t,i).update(n)[r]()}},A=function(e,t,r){return function(t,n,i,o){return B["cshake"+e].update(t,n,i,o)[r]()}},x=function(e,t,r){return function(t,n,i,o){return B["kmac"+e].update(t,n,i,o)[r]()}},_=function(e,t,r,n){for(var i=0;i<y.length;++i){var o=y[i];e[o]=t(r,n,o)}return e},S=function(e,t){var r=w(e,t,"hex");return r.create=function(){return new O(e,t,e)},r.update=function(e){return r.create().update(e)},_(r,w,e,t)},E=[{name:"keccak",padding:[1,256,65536,16777216],bits:g,createMethod:S},{name:"sha3",padding:[6,1536,393216,100663296],bits:g,createMethod:S},{name:"shake",padding:[31,7936,2031616,520093696],bits:m,createMethod:function(e,t){var r=v(e,t,"hex");return r.create=function(r){return new O(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},_(r,v,e,t)}},{name:"cshake",padding:h,bits:m,createMethod:function(e,t){var r=b[e],n=A(e,0,"hex");return n.create=function(n,i,o){return i||o?new O(e,t,n).bytepad([i,o],r):B["shake"+e].create(n)},n.update=function(e,t,r,i){return n.create(t,r,i).update(e)},_(n,A,e,t)}},{name:"kmac",padding:h,bits:m,createMethod:function(e,t){var r=b[e],n=x(e,0,"hex");return n.create=function(n,i,o){return new N(e,t,i).bytepad(["KMAC",o],r).bytepad([n],r)},n.update=function(e,t,r,i){return n.create(e,r,i).update(t)},_(n,x,e,t)}}],B={},T=[],k=0;k<E.length;++k)for(var U=E[k],I=U.bits,R=0;R<I.length;++R){var C=U.name+"_"+I[R];if(T.push(C),B[C]=U.createMethod(I[R],U.padding),"sha3"!==U.name){var D=U.name+I[R];T.push(D),B[D]=B[C]}}function O(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function N(e,t,r){O.call(this,e,t,r)}O.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(i);if(null===e)throw new Error(i);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(i);t=!0}for(var n,o,s=this.blocks,a=this.byteCount,c=e.length,u=this.blockCount,p=0,h=this.s;p<c;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<u+1;++n)s[n]=0;if(t)for(n=this.start;p<c&&n<a;++p)s[n>>2]|=e[p]<<d[3&n++];else for(n=this.start;p<c&&n<a;++p)(o=e.charCodeAt(p))<128?s[n>>2]|=o<<d[3&n++]:o<2048?(s[n>>2]|=(192|o>>6)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):o<55296||o>=57344?(s[n>>2]|=(224|o>>12)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++p)),s[n>>2]|=(240|o>>18)<<d[3&n++],s[n>>2]|=(128|o>>12&63)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[u],n=0;n<u;++n)h[n]^=s[n];P(h),this.reset=!0}else this.start=n}return this},O.prototype.encode=function(e,t){var r=255&e,n=1,i=[r];for(r=255&(e>>=8);r>0;)i.unshift(r),r=255&(e>>=8),++n;return t?i.push(n):i.unshift(n),this.update(i),i.length},O.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(i);if(null===e)throw new Error(i);if(l&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||l&&ArrayBuffer.isView(e)))throw new Error(i);t=!0}var n=0,o=e.length;if(t)n=o;else for(var s=0;s<e.length;++s){var a=e.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++s)),n+=4)}return n+=this.encode(8*n),this.update(e),n},O.prototype.bytepad=function(e,t){for(var r=this.encode(t),n=0;n<e.length;++n)r+=this.encodeString(e[n]);var i=t-r%t,o=[];return o.length=i,this.update(o),this},O.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)n[t]^=e[t];P(n)}},O.prototype.toString=O.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a="";s<n;){for(o=0;o<t&&s<n;++o,++s)e=r[o],a+=p[e>>4&15]+p[15&e]+p[e>>12&15]+p[e>>8&15]+p[e>>20&15]+p[e>>16&15]+p[e>>28&15]+p[e>>24&15];s%t==0&&(P(r),o=0)}return i&&(e=r[o],a+=p[e>>4&15]+p[15&e],i>1&&(a+=p[e>>12&15]+p[e>>8&15]),i>2&&(a+=p[e>>20&15]+p[e>>16&15])),a},O.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;e=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var c=new Uint32Array(e);s<n;){for(o=0;o<t&&s<n;++o,++s)c[s]=r[o];s%t==0&&P(r)}return i&&(c[o]=r[o],e=e.slice(0,a)),e},O.prototype.buffer=O.prototype.arrayBuffer,O.prototype.digest=O.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,c=[];a<i;){for(s=0;s<r&&a<i;++s,++a)e=a<<2,t=n[s],c[e]=255&t,c[e+1]=t>>8&255,c[e+2]=t>>16&255,c[e+3]=t>>24&255;a%r==0&&P(n)}return o&&(e=a<<2,t=n[s],c[e]=255&t,o>1&&(c[e+1]=t>>8&255),o>2&&(c[e+2]=t>>16&255)),c},N.prototype=new O,N.prototype.finalize=function(){return this.encode(this.outputBits,!0),O.prototype.finalize.call(this)};var P=function(e){var t,r,n,i,o,s,a,c,u,l,p,h,d,g,m,y,b,w,v,A,x,_,S,E,B,T,k,U,I,R,C,D,O,N,P,L,j,z,F,M,q,H,$,G,K,V,W,Z,X,Y,J,Q,ee,te,re,ne,ie,oe,se,ae,ce,ue,le;for(n=0;n<48;n+=2)i=e[0]^e[10]^e[20]^e[30]^e[40],o=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],c=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],l=e[6]^e[16]^e[26]^e[36]^e[46],p=e[7]^e[17]^e[27]^e[37]^e[47],t=(h=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|a>>>31),r=(d=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|s>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=i^(c<<1|u>>>31),r=o^(u<<1|c>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=s^(l<<1|p>>>31),r=a^(p<<1|l>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=c^(h<<1|d>>>31),r=u^(d<<1|h>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=l^(i<<1|o>>>31),r=p^(o<<1|i>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,g=e[0],m=e[1],V=e[11]<<4|e[10]>>>28,W=e[10]<<4|e[11]>>>28,U=e[20]<<3|e[21]>>>29,I=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,ce=e[30]<<9|e[31]>>>23,H=e[40]<<18|e[41]>>>14,$=e[41]<<18|e[40]>>>14,N=e[2]<<1|e[3]>>>31,P=e[3]<<1|e[2]>>>31,y=e[13]<<12|e[12]>>>20,b=e[12]<<12|e[13]>>>20,Z=e[22]<<10|e[23]>>>22,X=e[23]<<10|e[22]>>>22,R=e[33]<<13|e[32]>>>19,C=e[32]<<13|e[33]>>>19,ue=e[42]<<2|e[43]>>>30,le=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,L=e[14]<<6|e[15]>>>26,j=e[15]<<6|e[14]>>>26,w=e[25]<<11|e[24]>>>21,v=e[24]<<11|e[25]>>>21,Y=e[34]<<15|e[35]>>>17,J=e[35]<<15|e[34]>>>17,D=e[45]<<29|e[44]>>>3,O=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,B=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,ie=e[16]<<23|e[17]>>>9,z=e[26]<<25|e[27]>>>7,F=e[27]<<25|e[26]>>>7,A=e[36]<<21|e[37]>>>11,x=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,G=e[8]<<27|e[9]>>>5,K=e[9]<<27|e[8]>>>5,T=e[18]<<20|e[19]>>>12,k=e[19]<<20|e[18]>>>12,oe=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,M=e[38]<<8|e[39]>>>24,q=e[39]<<8|e[38]>>>24,_=e[48]<<14|e[49]>>>18,S=e[49]<<14|e[48]>>>18,e[0]=g^~y&w,e[1]=m^~b&v,e[10]=E^~T&U,e[11]=B^~k&I,e[20]=N^~L&z,e[21]=P^~j&F,e[30]=G^~V&Z,e[31]=K^~W&X,e[40]=te^~ne&oe,e[41]=re^~ie&se,e[2]=y^~w&A,e[3]=b^~v&x,e[12]=T^~U&R,e[13]=k^~I&C,e[22]=L^~z&M,e[23]=j^~F&q,e[32]=V^~Z&Y,e[33]=W^~X&J,e[42]=ne^~oe&ae,e[43]=ie^~se&ce,e[4]=w^~A&_,e[5]=v^~x&S,e[14]=U^~R&D,e[15]=I^~C&O,e[24]=z^~M&H,e[25]=F^~q&$,e[34]=Z^~Y&Q,e[35]=X^~J&ee,e[44]=oe^~ae&ue,e[45]=se^~ce&le,e[6]=A^~_&g,e[7]=x^~S&m,e[16]=R^~D&E,e[17]=C^~O&B,e[26]=M^~H&N,e[27]=q^~$&P,e[36]=Y^~Q&G,e[37]=J^~ee&K,e[46]=ae^~ue&te,e[47]=ce^~le&re,e[8]=_^~g&y,e[9]=S^~m&b,e[18]=D^~E&T,e[19]=O^~B&k,e[28]=H^~N&L,e[29]=$^~P&j,e[38]=Q^~G&V,e[39]=ee^~K&W,e[48]=ue^~te&ne,e[49]=le^~re&ie,e[0]^=f[n],e[1]^=f[n+1]};if(c)e.exports=B;else{for(k=0;k<T.length;++k)s[T[k]]=B[T[k]];u&&(void 0===(n=function(){return B}.call(t,r,t,e))||(e.exports=n))}}()},9757:(e,t,r)=>{var n;!function(){"use strict";var t="input is invalid type",i="object"==typeof window,o=i?window:{};o.JS_SHA512_NO_WINDOW&&(i=!1);var s=!i&&"object"==typeof self;!o.JS_SHA512_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?o=r.g:s&&(o=self);var a=!o.JS_SHA512_NO_COMMON_JS&&e.exports,c=r.amdO,u=!o.JS_SHA512_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,l="0123456789abcdef".split(""),p=[-2147483648,8388608,32768,128],h=[24,16,8,0],d=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],f=["hex","array","digest","arrayBuffer"],g=[];!o.JS_SHA512_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!u||!o.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var m=function(e,t){return function(r){return new v(t,!0).update(r)[e]()}},y=function(e){var t=m("hex",e);t.create=function(){return new v(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<f.length;++r){var n=f[r];t[n]=m(n,e)}return t},b=function(e,t){return function(r,n){return new A(r,t,!0).update(n)[e]()}},w=function(e){var t=b("hex",e);t.create=function(t){return new A(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<f.length;++r){var n=f[r];t[n]=b(n,e)}return t};function v(e,t){t?(g[0]=g[1]=g[2]=g[3]=g[4]=g[5]=g[6]=g[7]=g[8]=g[9]=g[10]=g[11]=g[12]=g[13]=g[14]=g[15]=g[16]=g[17]=g[18]=g[19]=g[20]=g[21]=g[22]=g[23]=g[24]=g[25]=g[26]=g[27]=g[28]=g[29]=g[30]=g[31]=g[32]=0,this.blocks=g):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],384==e?(this.h0h=3418070365,this.h0l=3238371032,this.h1h=1654270250,this.h1l=914150663,this.h2h=2438529370,this.h2l=812702999,this.h3h=355462360,this.h3l=4144912697,this.h4h=1731405415,this.h4l=4290775857,this.h5h=2394180231,this.h5l=1750603025,this.h6h=3675008525,this.h6l=1694076839,this.h7h=1203062813,this.h7l=3204075428):256==e?(this.h0h=573645204,this.h0l=4230739756,this.h1h=2673172387,this.h1l=3360449730,this.h2h=596883563,this.h2l=1867755857,this.h3h=2520282905,this.h3l=1497426621,this.h4h=2519219938,this.h4l=2827943907,this.h5h=3193839141,this.h5l=1401305490,this.h6h=721525244,this.h6l=746961066,this.h7h=246885852,this.h7l=2177182882):224==e?(this.h0h=2352822216,this.h0l=424955298,this.h1h=1944164710,this.h1l=2312950998,this.h2h=502970286,this.h2l=855612546,this.h3h=1738396948,this.h3l=1479516111,this.h4h=258812777,this.h4l=2077511080,this.h5h=2011393907,this.h5l=79989058,this.h6h=1067287976,this.h6l=1780299464,this.h7h=286451373,this.h7l=2446758561):(this.h0h=1779033703,this.h0l=4089235720,this.h1h=3144134277,this.h1l=2227873595,this.h2h=1013904242,this.h2l=4271175723,this.h3h=2773480762,this.h3l=1595750129,this.h4h=1359893119,this.h4l=2917565137,this.h5h=2600822924,this.h5l=725511199,this.h6h=528734635,this.h6l=4215389547,this.h7h=1541459225,this.h7l=327033209),this.bits=e,this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1}function A(e,r,n){var i,o=typeof e;if("string"!==o){if("object"!==o)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);i=!0}var s=e.length;if(!i){for(var a,c=[],l=(s=e.length,0),p=0;p<s;++p)(a=e.charCodeAt(p))<128?c[l++]=a:a<2048?(c[l++]=192|a>>6,c[l++]=128|63&a):a<55296||a>=57344?(c[l++]=224|a>>12,c[l++]=128|a>>6&63,c[l++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++p)),c[l++]=240|a>>18,c[l++]=128|a>>12&63,c[l++]=128|a>>6&63,c[l++]=128|63&a);e=c}e.length>128&&(e=new v(r,!0).update(e).array());var h=[],d=[];for(p=0;p<128;++p){var f=e[p]||0;h[p]=92^f,d[p]=54^f}v.call(this,r,n),this.update(d),this.oKeyPad=h,this.inner=!0,this.sharedMemory=n}v.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var r,n=typeof e;if("string"!==n){if("object"!==n)throw new Error(t);if(null===e)throw new Error(t);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(t);r=!0}for(var i,o,s=0,a=e.length,c=this.blocks;s<a;){if(this.hashed&&(this.hashed=!1,c[0]=this.block,c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=c[16]=c[17]=c[18]=c[19]=c[20]=c[21]=c[22]=c[23]=c[24]=c[25]=c[26]=c[27]=c[28]=c[29]=c[30]=c[31]=c[32]=0),r)for(o=this.start;s<a&&o<128;++s)c[o>>2]|=e[s]<<h[3&o++];else for(o=this.start;s<a&&o<128;++s)(i=e.charCodeAt(s))<128?c[o>>2]|=i<<h[3&o++]:i<2048?(c[o>>2]|=(192|i>>6)<<h[3&o++],c[o>>2]|=(128|63&i)<<h[3&o++]):i<55296||i>=57344?(c[o>>2]|=(224|i>>12)<<h[3&o++],c[o>>2]|=(128|i>>6&63)<<h[3&o++],c[o>>2]|=(128|63&i)<<h[3&o++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++s)),c[o>>2]|=(240|i>>18)<<h[3&o++],c[o>>2]|=(128|i>>12&63)<<h[3&o++],c[o>>2]|=(128|i>>6&63)<<h[3&o++],c[o>>2]|=(128|63&i)<<h[3&o++]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=128?(this.block=c[32],this.start=o-128,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this},v.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[32]=this.block,e[t>>2]|=p[3&t],this.block=e[32],t>=112&&(this.hashed||this.hash(),e[0]=this.block,e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=e[16]=e[17]=e[18]=e[19]=e[20]=e[21]=e[22]=e[23]=e[24]=e[25]=e[26]=e[27]=e[28]=e[29]=e[30]=e[31]=e[32]=0),e[30]=this.hBytes<<3|this.bytes>>>29,e[31]=this.bytes<<3,this.hash()}},v.prototype.hash=function(){var e,t,r,n,i,o,s,a,c,u,l,p,h,f,g,m,y,b,w,v,A,x,_,S,E,B=this.h0h,T=this.h0l,k=this.h1h,U=this.h1l,I=this.h2h,R=this.h2l,C=this.h3h,D=this.h3l,O=this.h4h,N=this.h4l,P=this.h5h,L=this.h5l,j=this.h6h,z=this.h6l,F=this.h7h,M=this.h7l,q=this.blocks;for(e=32;e<160;e+=2)t=((v=q[e-30])>>>1|(A=q[e-29])<<31)^(v>>>8|A<<24)^v>>>7,r=(A>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25),n=((v=q[e-4])>>>19|(A=q[e-3])<<13)^(A>>>29|v<<3)^v>>>6,i=(A>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26),v=q[e-32],A=q[e-31],c=((x=q[e-14])>>>16)+(v>>>16)+(t>>>16)+(n>>>16)+((a=(65535&x)+(65535&v)+(65535&t)+(65535&n)+((s=((_=q[e-13])>>>16)+(A>>>16)+(r>>>16)+(i>>>16)+((o=(65535&_)+(65535&A)+(65535&r)+(65535&i))>>>16))>>>16))>>>16),q[e]=c<<16|65535&a,q[e+1]=s<<16|65535&o;var H=B,$=T,G=k,K=U,V=I,W=R,Z=C,X=D,Y=O,J=N,Q=P,ee=L,te=j,re=z,ne=F,ie=M;for(m=G&V,y=K&W,e=0;e<160;e+=8)t=(H>>>28|$<<4)^($>>>2|H<<30)^($>>>7|H<<25),r=($>>>28|H<<4)^(H>>>2|$<<30)^(H>>>7|$<<25),n=(Y>>>14|J<<18)^(Y>>>18|J<<14)^(J>>>9|Y<<23),i=(J>>>14|Y<<18)^(J>>>18|Y<<14)^(Y>>>9|J<<23),b=(u=H&G)^H&V^m,w=(l=$&K)^$&W^y,S=Y&Q^~Y&te,E=J&ee^~J&re,v=q[e],A=q[e+1],v=(c=((x=d[e])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(ne>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&ne)+((s=((_=d[e+1])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(ie>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&ie))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,ne=(c=(Z>>>16)+(v>>>16)+((a=(65535&Z)+(65535&v)+((s=(X>>>16)+(A>>>16)+((o=(65535&X)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,ie=s<<16|65535&o,t=((Z=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(X=s<<16|65535&o)<<4)^(X>>>2|Z<<30)^(X>>>7|Z<<25),r=(X>>>28|Z<<4)^(Z>>>2|X<<30)^(Z>>>7|X<<25),n=(ne>>>14|ie<<18)^(ne>>>18|ie<<14)^(ie>>>9|ne<<23),i=(ie>>>14|ne<<18)^(ie>>>18|ne<<14)^(ne>>>9|ie<<23),b=(p=Z&H)^Z&G^u,w=(h=X&$)^X&K^l,S=ne&Y^~ne&Q,E=ie&J^~ie&ee,v=q[e+2],A=q[e+3],v=(c=((x=d[e+2])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(te>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&te)+((s=((_=d[e+3])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(re>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&re))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,te=(c=(V>>>16)+(v>>>16)+((a=(65535&V)+(65535&v)+((s=(W>>>16)+(A>>>16)+((o=(65535&W)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,re=s<<16|65535&o,t=((V=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(W=s<<16|65535&o)<<4)^(W>>>2|V<<30)^(W>>>7|V<<25),r=(W>>>28|V<<4)^(V>>>2|W<<30)^(V>>>7|W<<25),n=(te>>>14|re<<18)^(te>>>18|re<<14)^(re>>>9|te<<23),i=(re>>>14|te<<18)^(re>>>18|te<<14)^(te>>>9|re<<23),b=(f=V&Z)^V&H^p,w=(g=W&X)^W&$^h,S=te&ne^~te&Y,E=re&ie^~re&J,v=q[e+4],A=q[e+5],v=(c=((x=d[e+4])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(Q>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&Q)+((s=((_=d[e+5])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(ee>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&ee))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,Q=(c=(G>>>16)+(v>>>16)+((a=(65535&G)+(65535&v)+((s=(K>>>16)+(A>>>16)+((o=(65535&K)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,ee=s<<16|65535&o,t=((G=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a)>>>28|(K=s<<16|65535&o)<<4)^(K>>>2|G<<30)^(K>>>7|G<<25),r=(K>>>28|G<<4)^(G>>>2|K<<30)^(G>>>7|K<<25),n=(Q>>>14|ee<<18)^(Q>>>18|ee<<14)^(ee>>>9|Q<<23),i=(ee>>>14|Q<<18)^(ee>>>18|Q<<14)^(Q>>>9|ee<<23),b=(m=G&V)^G&Z^f,w=(y=K&W)^K&X^g,S=Q&te^~Q&ne,E=ee&re^~ee&ie,v=q[e+6],A=q[e+7],v=(c=((x=d[e+6])>>>16)+(v>>>16)+(S>>>16)+(n>>>16)+(Y>>>16)+((a=(65535&x)+(65535&v)+(65535&S)+(65535&n)+(65535&Y)+((s=((_=d[e+7])>>>16)+(A>>>16)+(E>>>16)+(i>>>16)+(J>>>16)+((o=(65535&_)+(65535&A)+(65535&E)+(65535&i)+(65535&J))>>>16))>>>16))>>>16))<<16|65535&a,A=s<<16|65535&o,x=(c=(b>>>16)+(t>>>16)+((a=(65535&b)+(65535&t)+((s=(w>>>16)+(r>>>16)+((o=(65535&w)+(65535&r))>>>16))>>>16))>>>16))<<16|65535&a,_=s<<16|65535&o,Y=(c=(H>>>16)+(v>>>16)+((a=(65535&H)+(65535&v)+((s=($>>>16)+(A>>>16)+((o=(65535&$)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,J=s<<16|65535&o,H=(c=(x>>>16)+(v>>>16)+((a=(65535&x)+(65535&v)+((s=(_>>>16)+(A>>>16)+((o=(65535&_)+(65535&A))>>>16))>>>16))>>>16))<<16|65535&a,$=s<<16|65535&o;c=(B>>>16)+(H>>>16)+((a=(65535&B)+(65535&H)+((s=(T>>>16)+($>>>16)+((o=(65535&T)+(65535&$))>>>16))>>>16))>>>16),this.h0h=c<<16|65535&a,this.h0l=s<<16|65535&o,c=(k>>>16)+(G>>>16)+((a=(65535&k)+(65535&G)+((s=(U>>>16)+(K>>>16)+((o=(65535&U)+(65535&K))>>>16))>>>16))>>>16),this.h1h=c<<16|65535&a,this.h1l=s<<16|65535&o,c=(I>>>16)+(V>>>16)+((a=(65535&I)+(65535&V)+((s=(R>>>16)+(W>>>16)+((o=(65535&R)+(65535&W))>>>16))>>>16))>>>16),this.h2h=c<<16|65535&a,this.h2l=s<<16|65535&o,c=(C>>>16)+(Z>>>16)+((a=(65535&C)+(65535&Z)+((s=(D>>>16)+(X>>>16)+((o=(65535&D)+(65535&X))>>>16))>>>16))>>>16),this.h3h=c<<16|65535&a,this.h3l=s<<16|65535&o,c=(O>>>16)+(Y>>>16)+((a=(65535&O)+(65535&Y)+((s=(N>>>16)+(J>>>16)+((o=(65535&N)+(65535&J))>>>16))>>>16))>>>16),this.h4h=c<<16|65535&a,this.h4l=s<<16|65535&o,c=(P>>>16)+(Q>>>16)+((a=(65535&P)+(65535&Q)+((s=(L>>>16)+(ee>>>16)+((o=(65535&L)+(65535&ee))>>>16))>>>16))>>>16),this.h5h=c<<16|65535&a,this.h5l=s<<16|65535&o,c=(j>>>16)+(te>>>16)+((a=(65535&j)+(65535&te)+((s=(z>>>16)+(re>>>16)+((o=(65535&z)+(65535&re))>>>16))>>>16))>>>16),this.h6h=c<<16|65535&a,this.h6l=s<<16|65535&o,c=(F>>>16)+(ne>>>16)+((a=(65535&F)+(65535&ne)+((s=(M>>>16)+(ie>>>16)+((o=(65535&M)+(65535&ie))>>>16))>>>16))>>>16),this.h7h=c<<16|65535&a,this.h7l=s<<16|65535&o},v.prototype.hex=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,i=this.h2h,o=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,p=this.h5h,h=this.h5l,d=this.h6h,f=this.h6l,g=this.h7h,m=this.h7l,y=this.bits,b=l[e>>28&15]+l[e>>24&15]+l[e>>20&15]+l[e>>16&15]+l[e>>12&15]+l[e>>8&15]+l[e>>4&15]+l[15&e]+l[t>>28&15]+l[t>>24&15]+l[t>>20&15]+l[t>>16&15]+l[t>>12&15]+l[t>>8&15]+l[t>>4&15]+l[15&t]+l[r>>28&15]+l[r>>24&15]+l[r>>20&15]+l[r>>16&15]+l[r>>12&15]+l[r>>8&15]+l[r>>4&15]+l[15&r]+l[n>>28&15]+l[n>>24&15]+l[n>>20&15]+l[n>>16&15]+l[n>>12&15]+l[n>>8&15]+l[n>>4&15]+l[15&n]+l[i>>28&15]+l[i>>24&15]+l[i>>20&15]+l[i>>16&15]+l[i>>12&15]+l[i>>8&15]+l[i>>4&15]+l[15&i]+l[o>>28&15]+l[o>>24&15]+l[o>>20&15]+l[o>>16&15]+l[o>>12&15]+l[o>>8&15]+l[o>>4&15]+l[15&o]+l[s>>28&15]+l[s>>24&15]+l[s>>20&15]+l[s>>16&15]+l[s>>12&15]+l[s>>8&15]+l[s>>4&15]+l[15&s];return y>=256&&(b+=l[a>>28&15]+l[a>>24&15]+l[a>>20&15]+l[a>>16&15]+l[a>>12&15]+l[a>>8&15]+l[a>>4&15]+l[15&a]),y>=384&&(b+=l[c>>28&15]+l[c>>24&15]+l[c>>20&15]+l[c>>16&15]+l[c>>12&15]+l[c>>8&15]+l[c>>4&15]+l[15&c]+l[u>>28&15]+l[u>>24&15]+l[u>>20&15]+l[u>>16&15]+l[u>>12&15]+l[u>>8&15]+l[u>>4&15]+l[15&u]+l[p>>28&15]+l[p>>24&15]+l[p>>20&15]+l[p>>16&15]+l[p>>12&15]+l[p>>8&15]+l[p>>4&15]+l[15&p]+l[h>>28&15]+l[h>>24&15]+l[h>>20&15]+l[h>>16&15]+l[h>>12&15]+l[h>>8&15]+l[h>>4&15]+l[15&h]),512==y&&(b+=l[d>>28&15]+l[d>>24&15]+l[d>>20&15]+l[d>>16&15]+l[d>>12&15]+l[d>>8&15]+l[d>>4&15]+l[15&d]+l[f>>28&15]+l[f>>24&15]+l[f>>20&15]+l[f>>16&15]+l[f>>12&15]+l[f>>8&15]+l[f>>4&15]+l[15&f]+l[g>>28&15]+l[g>>24&15]+l[g>>20&15]+l[g>>16&15]+l[g>>12&15]+l[g>>8&15]+l[g>>4&15]+l[15&g]+l[m>>28&15]+l[m>>24&15]+l[m>>20&15]+l[m>>16&15]+l[m>>12&15]+l[m>>8&15]+l[m>>4&15]+l[15&m]),b},v.prototype.toString=v.prototype.hex,v.prototype.digest=function(){this.finalize();var e=this.h0h,t=this.h0l,r=this.h1h,n=this.h1l,i=this.h2h,o=this.h2l,s=this.h3h,a=this.h3l,c=this.h4h,u=this.h4l,l=this.h5h,p=this.h5l,h=this.h6h,d=this.h6l,f=this.h7h,g=this.h7l,m=this.bits,y=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,i>>24&255,i>>16&255,i>>8&255,255&i,o>>24&255,o>>16&255,o>>8&255,255&o,s>>24&255,s>>16&255,s>>8&255,255&s];return m>=256&&y.push(a>>24&255,a>>16&255,a>>8&255,255&a),m>=384&&y.push(c>>24&255,c>>16&255,c>>8&255,255&c,u>>24&255,u>>16&255,u>>8&255,255&u,l>>24&255,l>>16&255,l>>8&255,255&l,p>>24&255,p>>16&255,p>>8&255,255&p),512==m&&y.push(h>>24&255,h>>16&255,h>>8&255,255&h,d>>24&255,d>>16&255,d>>8&255,255&d,f>>24&255,f>>16&255,f>>8&255,255&f,g>>24&255,g>>16&255,g>>8&255,255&g),y},v.prototype.array=v.prototype.digest,v.prototype.arrayBuffer=function(){this.finalize();var e=this.bits,t=new ArrayBuffer(e/8),r=new DataView(t);return r.setUint32(0,this.h0h),r.setUint32(4,this.h0l),r.setUint32(8,this.h1h),r.setUint32(12,this.h1l),r.setUint32(16,this.h2h),r.setUint32(20,this.h2l),r.setUint32(24,this.h3h),e>=256&&r.setUint32(28,this.h3l),e>=384&&(r.setUint32(32,this.h4h),r.setUint32(36,this.h4l),r.setUint32(40,this.h5h),r.setUint32(44,this.h5l)),512==e&&(r.setUint32(48,this.h6h),r.setUint32(52,this.h6l),r.setUint32(56,this.h7h),r.setUint32(60,this.h7l)),t},v.prototype.clone=function(){var e=new v(this.bits,!1);return this.copyTo(e),e},v.prototype.copyTo=function(e){var t=0,r=["h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","start","bytes","hBytes","finalized","hashed","lastByteIndex"];for(t=0;t<r.length;++t)e[r[t]]=this[r[t]];for(t=0;t<this.blocks.length;++t)e.blocks[t]=this.blocks[t]},A.prototype=new v,A.prototype.finalize=function(){if(v.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();v.call(this,this.bits,this.sharedMemory),this.update(this.oKeyPad),this.update(e),v.prototype.finalize.call(this)}},A.prototype.clone=function(){var e=new A([],this.bits,!1);this.copyTo(e),e.inner=this.inner;for(var t=0;t<this.oKeyPad.length;++t)e.oKeyPad[t]=this.oKeyPad[t];return e};var x=y(512);x.sha512=x,x.sha384=y(384),x.sha512_256=y(256),x.sha512_224=y(224),x.sha512.hmac=w(512),x.sha384.hmac=w(384),x.sha512_256.hmac=w(256),x.sha512_224.hmac=w(224),a?e.exports=x:(o.sha512=x.sha512,o.sha384=x.sha384,o.sha512_256=x.sha512_256,o.sha512_224=x.sha512_224,c&&(void 0===(n=function(){return x}.call(x,r,x,e))||(e.exports=n)))}()},4360:(e,t,r)=>{var n=r(592).stringify,i=r(9385);e.exports=function(e){return{parse:i(e),stringify:n}},e.exports.parse=i(),e.exports.stringify=n},9385:(e,t,r)=>{var n=null;const i=/(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/,o=/(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;e.exports=function(e){"use strict";var t={strict:!1,storeAsString:!1,alwaysParseAsBig:!1,useNativeBigInt:!1,protoAction:"error",constructorAction:"error"};if(null!=e){if(!0===e.strict&&(t.strict=!0),!0===e.storeAsString&&(t.storeAsString=!0),t.alwaysParseAsBig=!0===e.alwaysParseAsBig&&e.alwaysParseAsBig,t.useNativeBigInt=!0===e.useNativeBigInt&&e.useNativeBigInt,void 0!==e.constructorAction){if("error"!==e.constructorAction&&"ignore"!==e.constructorAction&&"preserve"!==e.constructorAction)throw new Error(`Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${e.constructorAction}`);t.constructorAction=e.constructorAction}if(void 0!==e.protoAction){if("error"!==e.protoAction&&"ignore"!==e.protoAction&&"preserve"!==e.protoAction)throw new Error(`Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${e.protoAction}`);t.protoAction=e.protoAction}}var s,a,c,u,l={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},p=function(e){throw{name:"SyntaxError",message:e,at:s,text:c}},h=function(e){return e&&e!==a&&p("Expected '"+e+"' instead of '"+a+"'"),a=c.charAt(s),s+=1,a},d=function(){var e,i="";for("-"===a&&(i="-",h("-"));a>="0"&&a<="9";)i+=a,h();if("."===a)for(i+=".";h()&&a>="0"&&a<="9";)i+=a;if("e"===a||"E"===a)for(i+=a,h(),"-"!==a&&"+"!==a||(i+=a,h());a>="0"&&a<="9";)i+=a,h();if(e=+i,isFinite(e))return null==n&&(n=r(5117)),i.length>15?t.storeAsString?i:t.useNativeBigInt?BigInt(i):new n(i):t.alwaysParseAsBig?t.useNativeBigInt?BigInt(e):new n(e):e;p("Bad number")},f=function(){var e,t,r,n="";if('"'===a)for(var i=s;h();){if('"'===a)return s-1>i&&(n+=c.substring(i,s-1)),h(),n;if("\\"===a){if(s-1>i&&(n+=c.substring(i,s-1)),h(),"u"===a){for(r=0,t=0;t<4&&(e=parseInt(h(),16),isFinite(e));t+=1)r=16*r+e;n+=String.fromCharCode(r)}else{if("string"!=typeof l[a])break;n+=l[a]}i=s}}p("Bad string")},g=function(){for(;a&&a<=" ";)h()};return u=function(){switch(g(),a){case"{":return function(){var e,r=Object.create(null);if("{"===a){if(h("{"),g(),"}"===a)return h("}"),r;for(;a;){if(e=f(),g(),h(":"),!0===t.strict&&Object.hasOwnProperty.call(r,e)&&p('Duplicate key "'+e+'"'),!0===i.test(e)?"error"===t.protoAction?p("Object contains forbidden prototype property"):"ignore"===t.protoAction?u():r[e]=u():!0===o.test(e)?"error"===t.constructorAction?p("Object contains forbidden constructor property"):"ignore"===t.constructorAction?u():r[e]=u():r[e]=u(),g(),"}"===a)return h("}"),r;h(","),g()}}p("Bad object")}();case"[":return function(){var e=[];if("["===a){if(h("["),g(),"]"===a)return h("]"),e;for(;a;){if(e.push(u()),g(),"]"===a)return h("]"),e;h(","),g()}}p("Bad array")}();case'"':return f();case"-":return d();default:return a>="0"&&a<="9"?d():function(){switch(a){case"t":return h("t"),h("r"),h("u"),h("e"),!0;case"f":return h("f"),h("a"),h("l"),h("s"),h("e"),!1;case"n":return h("n"),h("u"),h("l"),h("l"),null}p("Unexpected '"+a+"'")}()}},function(e,t){var r;return c=e+"",s=0,a=" ",r=u(),g(),a&&p("Syntax error"),"function"==typeof t?function e(r,n){var i,o=r[n];return o&&"object"==typeof o&&Object.keys(o).forEach((function(t){void 0!==(i=e(o,t))?o[t]=i:delete o[t]})),t.call(r,n,o)}({"":r},""):r}}},592:(e,t,r)=>{var n=r(5117),i=e.exports;!function(){"use strict";var e,t,r,o=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,s={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function a(e){return o.lastIndex=0,o.test(e)?'"'+e.replace(o,(function(e){var t=s[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}function c(i,o){var s,u,l,p,h,d=e,f=o[i],g=null!=f&&(f instanceof n||n.isBigNumber(f));switch(f&&"object"==typeof f&&"function"==typeof f.toJSON&&(f=f.toJSON(i)),"function"==typeof r&&(f=r.call(o,i,f)),typeof f){case"string":return g?f:a(f);case"number":return isFinite(f)?String(f):"null";case"boolean":case"null":case"bigint":return String(f);case"object":if(!f)return"null";if(e+=t,h=[],"[object Array]"===Object.prototype.toString.apply(f)){for(p=f.length,s=0;s<p;s+=1)h[s]=c(s,f)||"null";return l=0===h.length?"[]":e?"[\n"+e+h.join(",\n"+e)+"\n"+d+"]":"["+h.join(",")+"]",e=d,l}if(r&&"object"==typeof r)for(p=r.length,s=0;s<p;s+=1)"string"==typeof r[s]&&(l=c(u=r[s],f))&&h.push(a(u)+(e?": ":":")+l);else Object.keys(f).forEach((function(t){var r=c(t,f);r&&h.push(a(t)+(e?": ":":")+r)}));return l=0===h.length?"{}":e?"{\n"+e+h.join(",\n"+e)+"\n"+d+"}":"{"+h.join(",")+"}",e=d,l}}"function"!=typeof i.stringify&&(i.stringify=function(n,i,o){var s;if(e="",t="","number"==typeof o)for(s=0;s<o;s+=1)t+=" ";else"string"==typeof o&&(t=o);if(r=i,i&&"function"!=typeof i&&("object"!=typeof i||"number"!=typeof i.length))throw new Error("JSON.stringify");return c("",{"":n})})}()},7765:function(e,t){!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var o=t(),s=t([1]),a=t([56129,1]),c=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),u=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),p=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function d(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function f(e,t,r,n,i){var o,s=0;for(o=0;o<i;o++)s|=e[t+o]^r[n+o];return(1&s-1>>>8)-1}function g(e,t,r,n){return f(e,t,r,n,16)}function m(e,t,r,n){return f(e,t,r,n,32)}function y(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,f=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,y=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=o,x=s,_=a,S=c,E=u,B=l,T=p,k=h,U=d,I=f,R=g,C=m,D=y,O=b,N=w,P=v,L=0;L<20;L+=2)A^=(i=(D^=(i=(U^=(i=(E^=(i=A+D|0)<<7|i>>>25)+A|0)<<9|i>>>23)+E|0)<<13|i>>>19)+U|0)<<18|i>>>14,B^=(i=(x^=(i=(O^=(i=(I^=(i=B+x|0)<<7|i>>>25)+B|0)<<9|i>>>23)+I|0)<<13|i>>>19)+O|0)<<18|i>>>14,R^=(i=(T^=(i=(_^=(i=(N^=(i=R+T|0)<<7|i>>>25)+R|0)<<9|i>>>23)+N|0)<<13|i>>>19)+_|0)<<18|i>>>14,P^=(i=(C^=(i=(k^=(i=(S^=(i=P+C|0)<<7|i>>>25)+P|0)<<9|i>>>23)+S|0)<<13|i>>>19)+k|0)<<18|i>>>14,A^=(i=(S^=(i=(_^=(i=(x^=(i=A+S|0)<<7|i>>>25)+A|0)<<9|i>>>23)+x|0)<<13|i>>>19)+_|0)<<18|i>>>14,B^=(i=(E^=(i=(k^=(i=(T^=(i=B+E|0)<<7|i>>>25)+B|0)<<9|i>>>23)+T|0)<<13|i>>>19)+k|0)<<18|i>>>14,R^=(i=(I^=(i=(U^=(i=(C^=(i=R+I|0)<<7|i>>>25)+R|0)<<9|i>>>23)+C|0)<<13|i>>>19)+U|0)<<18|i>>>14,P^=(i=(N^=(i=(O^=(i=(D^=(i=P+N|0)<<7|i>>>25)+P|0)<<9|i>>>23)+D|0)<<13|i>>>19)+O|0)<<18|i>>>14;A=A+o|0,x=x+s|0,_=_+a|0,S=S+c|0,E=E+u|0,B=B+l|0,T=T+p|0,k=k+h|0,U=U+d|0,I=I+f|0,R=R+g|0,C=C+m|0,D=D+y|0,O=O+b|0,N=N+w|0,P=P+v|0,e[0]=A>>>0&255,e[1]=A>>>8&255,e[2]=A>>>16&255,e[3]=A>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=_>>>0&255,e[9]=_>>>8&255,e[10]=_>>>16&255,e[11]=_>>>24&255,e[12]=S>>>0&255,e[13]=S>>>8&255,e[14]=S>>>16&255,e[15]=S>>>24&255,e[16]=E>>>0&255,e[17]=E>>>8&255,e[18]=E>>>16&255,e[19]=E>>>24&255,e[20]=B>>>0&255,e[21]=B>>>8&255,e[22]=B>>>16&255,e[23]=B>>>24&255,e[24]=T>>>0&255,e[25]=T>>>8&255,e[26]=T>>>16&255,e[27]=T>>>24&255,e[28]=k>>>0&255,e[29]=k>>>8&255,e[30]=k>>>16&255,e[31]=k>>>24&255,e[32]=U>>>0&255,e[33]=U>>>8&255,e[34]=U>>>16&255,e[35]=U>>>24&255,e[36]=I>>>0&255,e[37]=I>>>8&255,e[38]=I>>>16&255,e[39]=I>>>24&255,e[40]=R>>>0&255,e[41]=R>>>8&255,e[42]=R>>>16&255,e[43]=R>>>24&255,e[44]=C>>>0&255,e[45]=C>>>8&255,e[46]=C>>>16&255,e[47]=C>>>24&255,e[48]=D>>>0&255,e[49]=D>>>8&255,e[50]=D>>>16&255,e[51]=D>>>24&255,e[52]=O>>>0&255,e[53]=O>>>8&255,e[54]=O>>>16&255,e[55]=O>>>24&255,e[56]=N>>>0&255,e[57]=N>>>8&255,e[58]=N>>>16&255,e[59]=N>>>24&255,e[60]=P>>>0&255,e[61]=P>>>8&255,e[62]=P>>>16&255,e[63]=P>>>24&255}(e,t,r,n)}function b(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,u=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,p=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,f=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,g=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,y=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,w=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,v=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,A=0;A<20;A+=2)o^=(i=(y^=(i=(d^=(i=(u^=(i=o+y|0)<<7|i>>>25)+o|0)<<9|i>>>23)+u|0)<<13|i>>>19)+d|0)<<18|i>>>14,l^=(i=(s^=(i=(b^=(i=(f^=(i=l+s|0)<<7|i>>>25)+l|0)<<9|i>>>23)+f|0)<<13|i>>>19)+b|0)<<18|i>>>14,g^=(i=(p^=(i=(a^=(i=(w^=(i=g+p|0)<<7|i>>>25)+g|0)<<9|i>>>23)+w|0)<<13|i>>>19)+a|0)<<18|i>>>14,v^=(i=(m^=(i=(h^=(i=(c^=(i=v+m|0)<<7|i>>>25)+v|0)<<9|i>>>23)+c|0)<<13|i>>>19)+h|0)<<18|i>>>14,o^=(i=(c^=(i=(a^=(i=(s^=(i=o+c|0)<<7|i>>>25)+o|0)<<9|i>>>23)+s|0)<<13|i>>>19)+a|0)<<18|i>>>14,l^=(i=(u^=(i=(h^=(i=(p^=(i=l+u|0)<<7|i>>>25)+l|0)<<9|i>>>23)+p|0)<<13|i>>>19)+h|0)<<18|i>>>14,g^=(i=(f^=(i=(d^=(i=(m^=(i=g+f|0)<<7|i>>>25)+g|0)<<9|i>>>23)+m|0)<<13|i>>>19)+d|0)<<18|i>>>14,v^=(i=(w^=(i=(b^=(i=(y^=(i=v+w|0)<<7|i>>>25)+v|0)<<9|i>>>23)+y|0)<<13|i>>>19)+b|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=g>>>0&255,e[9]=g>>>8&255,e[10]=g>>>16&255,e[11]=g>>>24&255,e[12]=v>>>0&255,e[13]=v>>>8&255,e[14]=v>>>16&255,e[15]=v>>>24&255,e[16]=p>>>0&255,e[17]=p>>>8&255,e[18]=p>>>16&255,e[19]=p>>>24&255,e[20]=h>>>0&255,e[21]=h>>>8&255,e[22]=h>>>16&255,e[23]=h>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=f>>>0&255,e[29]=f>>>8&255,e[30]=f>>>16&255,e[31]=f>>>24&255}(e,t,r,n)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function v(e,t,r,n,i,o,s){var a,c,u=new Uint8Array(16),l=new Uint8Array(64);for(c=0;c<16;c++)u[c]=0;for(c=0;c<8;c++)u[c]=o[c];for(;i>=64;){for(y(l,u,s,w),c=0;c<64;c++)e[t+c]=r[n+c]^l[c];for(a=1,c=8;c<16;c++)a=a+(255&u[c])|0,u[c]=255&a,a>>>=8;i-=64,t+=64,n+=64}if(i>0)for(y(l,u,s,w),c=0;c<i;c++)e[t+c]=r[n+c]^l[c];return 0}function A(e,t,r,n,i){var o,s,a=new Uint8Array(16),c=new Uint8Array(64);for(s=0;s<16;s++)a[s]=0;for(s=0;s<8;s++)a[s]=n[s];for(;r>=64;){for(y(c,a,i,w),s=0;s<64;s++)e[t+s]=c[s];for(o=1,s=8;s<16;s++)o=o+(255&a[s])|0,a[s]=255&o,o>>>=8;r-=64,t+=64}if(r>0)for(y(c,a,i,w),s=0;s<r;s++)e[t+s]=c[s];return 0}function x(e,t,r,n,i){var o=new Uint8Array(32);b(o,n,i,w);for(var s=new Uint8Array(8),a=0;a<8;a++)s[a]=n[a+16];return A(e,t,r,s,o)}function _(e,t,r,n,i,o,s){var a=new Uint8Array(32);b(a,o,s,w);for(var c=new Uint8Array(8),u=0;u<8;u++)c[u]=o[u+16];return v(e,t,r,n,i,c,a)}var S=function(e){var t,r,n,i,o,s,a,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,s=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|s<<2),a=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(s>>>11|a<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(a>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function E(e,t,r,n,i,o){var s=new S(o);return s.update(r,n,i),s.finish(e,t),0}function B(e,t,r,n,i,o){var s=new Uint8Array(16);return E(s,0,r,n,i,o),g(e,t,s,0)}function T(e,t,r,n,i){var o;if(r<32)return-1;for(_(e,0,t,0,r,n,i),E(e,16,e,32,r-32,e),o=0;o<16;o++)e[o]=0;return 0}function k(e,t,r,n,i){var o,s=new Uint8Array(32);if(r<32)return-1;if(x(s,0,32,n,i),0!==B(t,16,t,32,r-32,s))return-1;for(_(e,0,t,0,r,n,i),o=0;o<32;o++)e[o]=0;return 0}function U(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function I(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function R(e,t,r){for(var n,i=~(r-1),o=0;o<16;o++)n=i&(e[o]^t[o]),e[o]^=n,t[o]^=n}function C(e,r){var n,i,o,s=t(),a=t();for(n=0;n<16;n++)a[n]=r[n];for(I(a),I(a),I(a),i=0;i<2;i++){for(s[0]=a[0]-65517,n=1;n<15;n++)s[n]=a[n]-65535-(s[n-1]>>16&1),s[n-1]&=65535;s[15]=a[15]-32767-(s[14]>>16&1),o=s[15]>>16&1,s[14]&=65535,R(a,s,1-o)}for(n=0;n<16;n++)e[2*n]=255&a[n],e[2*n+1]=a[n]>>8}function D(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return C(r,e),C(n,t),m(r,0,n,0)}function O(e){var t=new Uint8Array(32);return C(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function P(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function L(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function j(e,t,r){var n,i,o=0,s=0,a=0,c=0,u=0,l=0,p=0,h=0,d=0,f=0,g=0,m=0,y=0,b=0,w=0,v=0,A=0,x=0,_=0,S=0,E=0,B=0,T=0,k=0,U=0,I=0,R=0,C=0,D=0,O=0,N=0,P=r[0],L=r[1],j=r[2],z=r[3],F=r[4],M=r[5],q=r[6],H=r[7],$=r[8],G=r[9],K=r[10],V=r[11],W=r[12],Z=r[13],X=r[14],Y=r[15];o+=(n=t[0])*P,s+=n*L,a+=n*j,c+=n*z,u+=n*F,l+=n*M,p+=n*q,h+=n*H,d+=n*$,f+=n*G,g+=n*K,m+=n*V,y+=n*W,b+=n*Z,w+=n*X,v+=n*Y,s+=(n=t[1])*P,a+=n*L,c+=n*j,u+=n*z,l+=n*F,p+=n*M,h+=n*q,d+=n*H,f+=n*$,g+=n*G,m+=n*K,y+=n*V,b+=n*W,w+=n*Z,v+=n*X,A+=n*Y,a+=(n=t[2])*P,c+=n*L,u+=n*j,l+=n*z,p+=n*F,h+=n*M,d+=n*q,f+=n*H,g+=n*$,m+=n*G,y+=n*K,b+=n*V,w+=n*W,v+=n*Z,A+=n*X,x+=n*Y,c+=(n=t[3])*P,u+=n*L,l+=n*j,p+=n*z,h+=n*F,d+=n*M,f+=n*q,g+=n*H,m+=n*$,y+=n*G,b+=n*K,w+=n*V,v+=n*W,A+=n*Z,x+=n*X,_+=n*Y,u+=(n=t[4])*P,l+=n*L,p+=n*j,h+=n*z,d+=n*F,f+=n*M,g+=n*q,m+=n*H,y+=n*$,b+=n*G,w+=n*K,v+=n*V,A+=n*W,x+=n*Z,_+=n*X,S+=n*Y,l+=(n=t[5])*P,p+=n*L,h+=n*j,d+=n*z,f+=n*F,g+=n*M,m+=n*q,y+=n*H,b+=n*$,w+=n*G,v+=n*K,A+=n*V,x+=n*W,_+=n*Z,S+=n*X,E+=n*Y,p+=(n=t[6])*P,h+=n*L,d+=n*j,f+=n*z,g+=n*F,m+=n*M,y+=n*q,b+=n*H,w+=n*$,v+=n*G,A+=n*K,x+=n*V,_+=n*W,S+=n*Z,E+=n*X,B+=n*Y,h+=(n=t[7])*P,d+=n*L,f+=n*j,g+=n*z,m+=n*F,y+=n*M,b+=n*q,w+=n*H,v+=n*$,A+=n*G,x+=n*K,_+=n*V,S+=n*W,E+=n*Z,B+=n*X,T+=n*Y,d+=(n=t[8])*P,f+=n*L,g+=n*j,m+=n*z,y+=n*F,b+=n*M,w+=n*q,v+=n*H,A+=n*$,x+=n*G,_+=n*K,S+=n*V,E+=n*W,B+=n*Z,T+=n*X,k+=n*Y,f+=(n=t[9])*P,g+=n*L,m+=n*j,y+=n*z,b+=n*F,w+=n*M,v+=n*q,A+=n*H,x+=n*$,_+=n*G,S+=n*K,E+=n*V,B+=n*W,T+=n*Z,k+=n*X,U+=n*Y,g+=(n=t[10])*P,m+=n*L,y+=n*j,b+=n*z,w+=n*F,v+=n*M,A+=n*q,x+=n*H,_+=n*$,S+=n*G,E+=n*K,B+=n*V,T+=n*W,k+=n*Z,U+=n*X,I+=n*Y,m+=(n=t[11])*P,y+=n*L,b+=n*j,w+=n*z,v+=n*F,A+=n*M,x+=n*q,_+=n*H,S+=n*$,E+=n*G,B+=n*K,T+=n*V,k+=n*W,U+=n*Z,I+=n*X,R+=n*Y,y+=(n=t[12])*P,b+=n*L,w+=n*j,v+=n*z,A+=n*F,x+=n*M,_+=n*q,S+=n*H,E+=n*$,B+=n*G,T+=n*K,k+=n*V,U+=n*W,I+=n*Z,R+=n*X,C+=n*Y,b+=(n=t[13])*P,w+=n*L,v+=n*j,A+=n*z,x+=n*F,_+=n*M,S+=n*q,E+=n*H,B+=n*$,T+=n*G,k+=n*K,U+=n*V,I+=n*W,R+=n*Z,C+=n*X,D+=n*Y,w+=(n=t[14])*P,v+=n*L,A+=n*j,x+=n*z,_+=n*F,S+=n*M,E+=n*q,B+=n*H,T+=n*$,k+=n*G,U+=n*K,I+=n*V,R+=n*W,C+=n*Z,D+=n*X,O+=n*Y,v+=(n=t[15])*P,s+=38*(x+=n*j),a+=38*(_+=n*z),c+=38*(S+=n*F),u+=38*(E+=n*M),l+=38*(B+=n*q),p+=38*(T+=n*H),h+=38*(k+=n*$),d+=38*(U+=n*G),f+=38*(I+=n*K),g+=38*(R+=n*V),m+=38*(C+=n*W),y+=38*(D+=n*Z),b+=38*(O+=n*X),w+=38*(N+=n*Y),o=(n=(o+=38*(A+=n*L))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),o=(n=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=s,e[2]=a,e[3]=c,e[4]=u,e[5]=l,e[6]=p,e[7]=h,e[8]=d,e[9]=f,e[10]=g,e[11]=m,e[12]=y,e[13]=b,e[14]=w,e[15]=v}function z(e,t){j(e,t,t)}function F(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)z(i,i),2!==n&&4!==n&&j(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function M(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)z(i,i),1!==n&&j(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function q(e,r,n){var i,o,s=new Uint8Array(32),c=new Float64Array(80),u=t(),l=t(),p=t(),h=t(),d=t(),f=t();for(o=0;o<31;o++)s[o]=r[o];for(s[31]=127&r[31]|64,s[0]&=248,N(c,n),o=0;o<16;o++)l[o]=c[o],h[o]=u[o]=p[o]=0;for(u[0]=h[0]=1,o=254;o>=0;--o)R(u,l,i=s[o>>>3]>>>(7&o)&1),R(p,h,i),P(d,u,p),L(u,u,p),P(p,l,h),L(l,l,h),z(h,d),z(f,u),j(u,p,u),j(p,l,d),P(d,u,p),L(u,u,p),z(l,u),L(p,h,f),j(u,p,a),P(u,u,h),j(p,p,u),j(u,h,f),j(h,l,c),z(l,d),R(u,l,i),R(p,h,i);for(o=0;o<16;o++)c[o+16]=u[o],c[o+32]=p[o],c[o+48]=l[o],c[o+64]=h[o];var g=c.subarray(32),m=c.subarray(16);return F(g,g),j(m,m,g),C(e,m),0}function H(e,t){return q(e,t,i)}function $(e,t){return r(t,32),H(e,t)}function G(e,t,r){var i=new Uint8Array(32);return q(i,r,t),b(e,n,i,w)}S.prototype.blocks=function(e,t,r){for(var n,i,o,s,a,c,u,l,p,h,d,f,g,m,y,b,w,v,A,x=this.fin?0:2048,_=this.h[0],S=this.h[1],E=this.h[2],B=this.h[3],T=this.h[4],k=this.h[5],U=this.h[6],I=this.h[7],R=this.h[8],C=this.h[9],D=this.r[0],O=this.r[1],N=this.r[2],P=this.r[3],L=this.r[4],j=this.r[5],z=this.r[6],F=this.r[7],M=this.r[8],q=this.r[9];r>=16;)h=p=0,h+=(_+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*D,h+=(S+=8191&(n>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*q),h+=(E+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*M),h+=(B+=8191&(o>>>7|(s=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),p=(h+=(T+=8191&(s>>>4|(a=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*z))>>>13,h&=8191,h+=(k+=a>>>1&8191)*(5*j),h+=(U+=8191&(a>>>14|(c=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*L),h+=(I+=8191&(c>>>11|(u=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*P),h+=(R+=8191&(u>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*N),d=p+=(h+=(C+=l>>>5|x)*(5*O))>>>13,d+=_*O,d+=S*D,d+=E*(5*q),d+=B*(5*M),p=(d+=T*(5*F))>>>13,d&=8191,d+=k*(5*z),d+=U*(5*j),d+=I*(5*L),d+=R*(5*P),p+=(d+=C*(5*N))>>>13,d&=8191,f=p,f+=_*N,f+=S*O,f+=E*D,f+=B*(5*q),p=(f+=T*(5*M))>>>13,f&=8191,f+=k*(5*F),f+=U*(5*z),f+=I*(5*j),f+=R*(5*L),g=p+=(f+=C*(5*P))>>>13,g+=_*P,g+=S*N,g+=E*O,g+=B*D,p=(g+=T*(5*q))>>>13,g&=8191,g+=k*(5*M),g+=U*(5*F),g+=I*(5*z),g+=R*(5*j),m=p+=(g+=C*(5*L))>>>13,m+=_*L,m+=S*P,m+=E*N,m+=B*O,p=(m+=T*D)>>>13,m&=8191,m+=k*(5*q),m+=U*(5*M),m+=I*(5*F),m+=R*(5*z),y=p+=(m+=C*(5*j))>>>13,y+=_*j,y+=S*L,y+=E*P,y+=B*N,p=(y+=T*O)>>>13,y&=8191,y+=k*D,y+=U*(5*q),y+=I*(5*M),y+=R*(5*F),b=p+=(y+=C*(5*z))>>>13,b+=_*z,b+=S*j,b+=E*L,b+=B*P,p=(b+=T*N)>>>13,b&=8191,b+=k*O,b+=U*D,b+=I*(5*q),b+=R*(5*M),w=p+=(b+=C*(5*F))>>>13,w+=_*F,w+=S*z,w+=E*j,w+=B*L,p=(w+=T*P)>>>13,w&=8191,w+=k*N,w+=U*O,w+=I*D,w+=R*(5*q),v=p+=(w+=C*(5*M))>>>13,v+=_*M,v+=S*F,v+=E*z,v+=B*j,p=(v+=T*L)>>>13,v&=8191,v+=k*P,v+=U*N,v+=I*O,v+=R*D,A=p+=(v+=C*(5*q))>>>13,A+=_*q,A+=S*M,A+=E*F,A+=B*z,p=(A+=T*j)>>>13,A&=8191,A+=k*L,A+=U*P,A+=I*N,A+=R*O,_=h=8191&(p=(p=((p+=(A+=C*D)>>>13)<<2)+p|0)+(h&=8191)|0),S=d+=p>>>=13,E=f&=8191,B=g&=8191,T=m&=8191,k=y&=8191,U=b&=8191,I=w&=8191,R=v&=8191,C=A&=8191,t+=16,r-=16;this.h[0]=_,this.h[1]=S,this.h[2]=E,this.h[3]=B,this.h[4]=T,this.h[5]=k,this.h[6]=U,this.h[7]=I,this.h[8]=R,this.h[9]=C},S.prototype.finish=function(e,t){var r,n,i,o,s=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=r,r=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,s[0]=this.h[0]+5,r=s[0]>>>13,s[0]&=8191,o=1;o<10;o++)s[o]=this.h[o]+r,r=s[o]>>>13,s[o]&=8191;for(s[9]-=8192,n=(1^r)-1,o=0;o<10;o++)s[o]&=n;for(n=~n,o=0;o<10;o++)this.h[o]=this.h[o]&n|s[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},S.prototype.update=function(e,t,r){var n,i;if(this.leftover){for((i=16-this.leftover)>r&&(i=r),n=0;n<i;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(i=r-r%16,this.blocks(e,t,i),t+=i,r-=i),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var K=T,V=k,W=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Z(e,t,r,n){for(var i,o,s,a,c,u,l,p,h,d,f,g,m,y,b,w,v,A,x,_,S,E,B,T,k,U,I=new Int32Array(16),R=new Int32Array(16),C=e[0],D=e[1],O=e[2],N=e[3],P=e[4],L=e[5],j=e[6],z=e[7],F=t[0],M=t[1],q=t[2],H=t[3],$=t[4],G=t[5],K=t[6],V=t[7],Z=0;n>=128;){for(x=0;x<16;x++)_=8*x+Z,I[x]=r[_+0]<<24|r[_+1]<<16|r[_+2]<<8|r[_+3],R[x]=r[_+4]<<24|r[_+5]<<16|r[_+6]<<8|r[_+7];for(x=0;x<80;x++)if(i=C,o=D,s=O,a=N,c=P,u=L,l=j,h=F,d=M,f=q,g=H,m=$,y=G,b=K,B=65535&(E=V),T=E>>>16,k=65535&(S=z),U=S>>>16,B+=65535&(E=($>>>14|P<<18)^($>>>18|P<<14)^(P>>>9|$<<23)),T+=E>>>16,k+=65535&(S=(P>>>14|$<<18)^(P>>>18|$<<14)^($>>>9|P<<23)),U+=S>>>16,B+=65535&(E=$&G^~$&K),T+=E>>>16,k+=65535&(S=P&L^~P&j),U+=S>>>16,B+=65535&(E=W[2*x+1]),T+=E>>>16,k+=65535&(S=W[2*x]),U+=S>>>16,S=I[x%16],T+=(E=R[x%16])>>>16,k+=65535&S,U+=S>>>16,k+=(T+=(B+=65535&E)>>>16)>>>16,B=65535&(E=A=65535&B|T<<16),T=E>>>16,k=65535&(S=v=65535&k|(U+=k>>>16)<<16),U=S>>>16,B+=65535&(E=(F>>>28|C<<4)^(C>>>2|F<<30)^(C>>>7|F<<25)),T+=E>>>16,k+=65535&(S=(C>>>28|F<<4)^(F>>>2|C<<30)^(F>>>7|C<<25)),U+=S>>>16,T+=(E=F&M^F&q^M&q)>>>16,k+=65535&(S=C&D^C&O^D&O),U+=S>>>16,p=65535&(k+=(T+=(B+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,w=65535&B|T<<16,B=65535&(E=g),T=E>>>16,k=65535&(S=a),U=S>>>16,T+=(E=A)>>>16,k+=65535&(S=v),U+=S>>>16,D=i,O=o,N=s,P=a=65535&(k+=(T+=(B+=65535&E)>>>16)>>>16)|(U+=k>>>16)<<16,L=c,j=u,z=l,C=p,M=h,q=d,H=f,$=g=65535&B|T<<16,G=m,K=y,V=b,F=w,x%16==15)for(_=0;_<16;_++)S=I[_],B=65535&(E=R[_]),T=E>>>16,k=65535&S,U=S>>>16,S=I[(_+9)%16],B+=65535&(E=R[(_+9)%16]),T+=E>>>16,k+=65535&S,U+=S>>>16,v=I[(_+1)%16],B+=65535&(E=((A=R[(_+1)%16])>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25)),T+=E>>>16,k+=65535&(S=(v>>>1|A<<31)^(v>>>8|A<<24)^v>>>7),U+=S>>>16,v=I[(_+14)%16],T+=(E=((A=R[(_+14)%16])>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26))>>>16,k+=65535&(S=(v>>>19|A<<13)^(A>>>29|v<<3)^v>>>6),U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,I[_]=65535&k|U<<16,R[_]=65535&B|T<<16;B=65535&(E=F),T=E>>>16,k=65535&(S=C),U=S>>>16,S=e[0],T+=(E=t[0])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[0]=C=65535&k|U<<16,t[0]=F=65535&B|T<<16,B=65535&(E=M),T=E>>>16,k=65535&(S=D),U=S>>>16,S=e[1],T+=(E=t[1])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[1]=D=65535&k|U<<16,t[1]=M=65535&B|T<<16,B=65535&(E=q),T=E>>>16,k=65535&(S=O),U=S>>>16,S=e[2],T+=(E=t[2])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[2]=O=65535&k|U<<16,t[2]=q=65535&B|T<<16,B=65535&(E=H),T=E>>>16,k=65535&(S=N),U=S>>>16,S=e[3],T+=(E=t[3])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[3]=N=65535&k|U<<16,t[3]=H=65535&B|T<<16,B=65535&(E=$),T=E>>>16,k=65535&(S=P),U=S>>>16,S=e[4],T+=(E=t[4])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[4]=P=65535&k|U<<16,t[4]=$=65535&B|T<<16,B=65535&(E=G),T=E>>>16,k=65535&(S=L),U=S>>>16,S=e[5],T+=(E=t[5])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[5]=L=65535&k|U<<16,t[5]=G=65535&B|T<<16,B=65535&(E=K),T=E>>>16,k=65535&(S=j),U=S>>>16,S=e[6],T+=(E=t[6])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[6]=j=65535&k|U<<16,t[6]=K=65535&B|T<<16,B=65535&(E=V),T=E>>>16,k=65535&(S=z),U=S>>>16,S=e[7],T+=(E=t[7])>>>16,k+=65535&S,U+=S>>>16,U+=(k+=(T+=(B+=65535&E)>>>16)>>>16)>>>16,e[7]=z=65535&k|U<<16,t[7]=V=65535&B|T<<16,Z+=128,n-=128}return n}function X(e,t,r){var n,i=new Int32Array(8),o=new Int32Array(8),s=new Uint8Array(256),a=r;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,Z(i,o,t,r),r%=128,n=0;n<r;n++)s[n]=t[a-r+n];for(s[r]=128,s[(r=256-128*(r<112?1:0))-9]=0,d(s,r-8,a/536870912|0,a<<3),Z(i,o,s,r),n=0;n<8;n++)d(e,8*n,i[n],o[n]);return 0}function Y(e,r){var n=t(),i=t(),o=t(),s=t(),a=t(),c=t(),l=t(),p=t(),h=t();L(n,e[1],e[0]),L(h,r[1],r[0]),j(n,n,h),P(i,e[0],e[1]),P(h,r[0],r[1]),j(i,i,h),j(o,e[3],r[3]),j(o,o,u),j(s,e[2],r[2]),P(s,s,s),L(a,i,n),L(c,s,o),P(l,s,o),P(p,i,n),j(e[0],a,c),j(e[1],p,l),j(e[2],l,c),j(e[3],a,p)}function J(e,t,r){var n;for(n=0;n<4;n++)R(e[n],t[n],r)}function Q(e,r){var n=t(),i=t(),o=t();F(o,r[2]),j(n,r[0],o),j(i,r[1],o),C(e,i),e[31]^=O(n)<<7}function ee(e,t,r){var n,i;for(U(e[0],o),U(e[1],s),U(e[2],s),U(e[3],o),i=255;i>=0;--i)J(e,t,n=r[i/8|0]>>(7&i)&1),Y(t,e),Y(e,e),J(e,t,n)}function te(e,r){var n=[t(),t(),t(),t()];U(n[0],l),U(n[1],p),U(n[2],s),j(n[3],l,p),ee(e,n,r)}function re(e,n,i){var o,s=new Uint8Array(64),a=[t(),t(),t(),t()];for(i||r(n,32),X(s,n,32),s[0]&=248,s[31]&=127,s[31]|=64,te(a,s),Q(e,a),o=0;o<32;o++)n[o+32]=e[o];return 0}var ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ie(e,t){var r,n,i,o;for(n=63;n>=32;--n){for(r=0,i=n-32,o=n-12;i<o;++i)t[i]+=r-16*t[n]*ne[i-(n-32)],r=Math.floor((t[i]+128)/256),t[i]-=256*r;t[i]+=r,t[n]=0}for(r=0,i=0;i<32;i++)t[i]+=r-(t[31]>>4)*ne[i],r=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=r*ne[i];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function oe(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;ie(e,r)}function se(e,r,n,i){var o,s,a=new Uint8Array(64),c=new Uint8Array(64),u=new Uint8Array(64),l=new Float64Array(64),p=[t(),t(),t(),t()];X(a,i,32),a[0]&=248,a[31]&=127,a[31]|=64;var h=n+64;for(o=0;o<n;o++)e[64+o]=r[o];for(o=0;o<32;o++)e[32+o]=a[32+o];for(X(u,e.subarray(32),n+32),oe(u),te(p,u),Q(e,p),o=32;o<64;o++)e[o]=i[o];for(X(c,e,n+64),oe(c),o=0;o<64;o++)l[o]=0;for(o=0;o<32;o++)l[o]=u[o];for(o=0;o<32;o++)for(s=0;s<32;s++)l[o+s]+=c[o]*a[s];return ie(e.subarray(32),l),h}function ae(e,r,n,i){var a,u=new Uint8Array(32),l=new Uint8Array(64),p=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),i=t(),a=t(),u=t(),l=t(),p=t(),d=t();return U(e[2],s),N(e[1],r),z(a,e[1]),j(u,a,c),L(a,a,e[2]),P(u,e[2],u),z(l,u),z(p,l),j(d,p,l),j(n,d,a),j(n,n,u),M(n,n),j(n,n,a),j(n,n,u),j(n,n,u),j(e[0],n,u),z(i,e[0]),j(i,i,u),D(i,a)&&j(e[0],e[0],h),z(i,e[0]),j(i,i,u),D(i,a)?-1:(O(e[0])===r[31]>>7&&L(e[0],o,e[0]),j(e[3],e[0],e[1]),0)}(d,i))return-1;for(a=0;a<n;a++)e[a]=r[a];for(a=0;a<32;a++)e[a+32]=i[a];if(X(l,e,n),oe(l),ee(p,d,l),te(d,r.subarray(32)),Y(p,d),Q(u,p),n-=64,m(r,0,u,0)){for(a=0;a<n;a++)e[a]=0;return-1}for(a=0;a<n;a++)e[a]=r[a+64];return n}var ce=64,ue=32,le=64;function pe(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function he(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function de(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:_,crypto_stream:x,crypto_stream_salsa20_xor:v,crypto_stream_salsa20:A,crypto_onetimeauth:E,crypto_onetimeauth_verify:B,crypto_verify_16:g,crypto_verify_32:m,crypto_secretbox:T,crypto_secretbox_open:k,crypto_scalarmult:q,crypto_scalarmult_base:H,crypto_box_beforenm:G,crypto_box_afternm:K,crypto_box:function(e,t,r,n,i,o){var s=new Uint8Array(32);return G(s,i,o),K(e,t,r,n,s)},crypto_box_open:function(e,t,r,n,i,o){var s=new Uint8Array(32);return G(s,i,o),V(e,t,r,n,s)},crypto_box_keypair:$,crypto_hash:X,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:ae,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:ue,crypto_sign_SECRETKEYBYTES:le,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:c,L:ne,pack25519:C,unpack25519:N,M:j,A:P,S:z,Z:L,pow2523:M,add:Y,set25519:U,modL:ie,scalarmult:ee,scalarbase:te},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(32+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+32]=e[o];return T(i,n,n.length,t,r),i.subarray(16)},e.secretbox.open=function(e,t,r){he(e,t,r),pe(r,t);for(var n=new Uint8Array(16+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+16]=e[o];return n.length<32||0!==k(i,n,n.length,t,r)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(he(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return q(r,e,t),r},e.scalarMult.base=function(e){if(he(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return H(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox(t,r,o)},e.box.before=function(e,t){he(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return G(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox.open(t,r,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return $(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(he(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return H(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(he(e,t),t.length!==le)throw new Error("bad secret key size");var r=new Uint8Array(ce+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(he(e,t),t.length!==ue)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ae(r,e,e.length,t);if(n<0)return null;for(var i=new Uint8Array(n),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached=function(t,r){for(var n=e.sign(t,r),i=new Uint8Array(ce),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached.verify=function(e,t,r){if(he(e,t,r),t.length!==ce)throw new Error("bad signature size");if(r.length!==ue)throw new Error("bad public key size");var n,i=new Uint8Array(ce+e.length),o=new Uint8Array(ce+e.length);for(n=0;n<ce;n++)i[n]=t[n];for(n=0;n<e.length;n++)i[n+ce]=e[n];return ae(o,i,i.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(ue),t=new Uint8Array(le);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(he(e),e.length!==le)throw new Error("bad secret key size");for(var t=new Uint8Array(ue),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(he(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(ue),r=new Uint8Array(le),n=0;n<32;n++)r[n]=e[n];return re(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=ue,e.sign.secretKeyLength=le,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){he(e);var t=new Uint8Array(64);return X(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return he(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===f(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;t&&t.getRandomValues?e.setPRNG((function(e,r){var n,i=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(i.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=i[n];de(i)})):(t=__webpack_require__(921))&&t.randomBytes&&e.setPRNG((function(e,r){var n,i=t.randomBytes(r);for(n=0;n<r;n++)e[n]=i[n];de(i)}))}()}(void 0!==e&&e.exports?e.exports:self.nacl=self.nacl||{})},5922:(e,t,r)=>{var n=r(2486).Buffer;const{default:i}=r(1113),{setSendTransactionHeaders:o}=r(5180);e.exports={Algod:function(e="",t="http://r2.algorand.network",r=4180,s={}){let a=e;"string"==typeof a&&(a={"X-Algo-API-Token":a});const c=new i(a,t,r,s);function u(e){return void 0!==e.noteb64&&null!==e.noteb64&&(e.note=n.from(e.noteb64,"base64")),e}this.status=async(e={})=>(await c.get("/v1/status",{},e)).body,this.healthCheck=async(e={})=>{const t=await c.get("/health",{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}},this.statusAfterBlock=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");return(await c.get(`/v1/status/wait-for-block-after/${e}`,{},t)).body},this.pendingTransactions=async(e,t={})=>{if(!Number.isInteger(e))throw Error("maxTxns should be an integer");const r=await c.get("/v1/transactions/pending",{max:e},t);if(200===r.statusCode&&void 0!==r.body.truncatedTxns.transactions)for(let e=0;e<r.body.truncatedTxns.transactions.length;e++)r.body.truncatedTxns.transactions[e]=u(r.body.truncatedTxns.transactions[e]);return r.body},this.versions=async(e={})=>(await c.get("/versions",{},e)).body,this.ledgerSupply=async(e={})=>(await c.get("/v1/ledger/supply",{},e)).body,this.transactionByAddress=async(e,t=null,r=null,n=null,i={})=>{if(null!==t&&!Number.isInteger(t))throw Error("first round should be an integer");if(null!==r&&!Number.isInteger(r))throw Error("last round should be an integer");const o=await c.get(`/v1/account/${e}/transactions`,{firstRound:t,lastRound:r,max:n},i);if(200===o.statusCode&&void 0!==o.body.transactions)for(let e=0;e<o.body.transactions.length;e++)o.body.transactions[e]=u(o.body.transactions[e]);return o.body},this.transactionByAddressAndDate=async(e,t,r,n=null,i={})=>{const o=await c.get(`/v1/account/${e}/transactions`,{fromDate:t,toDate:r,max:n},i);if(200===o.statusCode&&void 0!==o.body.transactions)for(let e=0;e<o.body.transactions.length;e++)o.body.transactions[e]=u(o.body.transactions[e]);return o.body},this.transactionById=async(e,t={})=>{const r=await c.get(`/v1/transaction/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.transactionInformation=async(e,t,r={})=>{const n=await c.get(`/v1/account/${e}/transaction/${t}`,{},r);return 200===n.statusCode&&(n.body=u(n.body)),n.body},this.pendingTransactionInformation=async(e,t={})=>{const r=await c.get(`/v1/transactions/pending/${e}`,{},t);return 200===r.statusCode&&(r.body=u(r.body)),r.body},this.accountInformation=async(e,t={})=>(await c.get(`/v1/account/${e}`,{},t)).body,this.assetInformation=async(e,t={})=>(await c.get(`/v1/asset/${e}`,{},t)).body,this.suggestedFee=async(e={})=>(await c.get("/v1/transactions/fee",{},e)).body,this.sendRawTransaction=async(e,t={})=>{const r=o(t);return(await c.post("/v1/transactions",n.from(e),r)).body},this.sendRawTransactions=async(e,t={})=>{const r=o(t),i=Array.prototype.concat(...e.map((e=>Array.from(e))));return(await c.post("/v1/transactions",n.from(i),r)).body},this.getTransactionParams=async(e={})=>(await c.get("/v1/transactions/params",{},e)).body,this.suggestParams=async(e={})=>{const t=await this.getTransactionParams(e);return{flatFee:!1,fee:t.fee,firstRound:t.lastRound,lastRound:t.lastRound+1e3,genesisID:t.genesisID,genesisHash:t.genesishashb64}},this.block=async(e,t={})=>{if(!Number.isInteger(e))throw Error("roundNumber should be an integer");const r=await c.get(`/v1/block/${e}`,{},t);if(200===r.statusCode&&void 0!==r.body.txns.transactions)for(let e=0;e<r.body.txns.transactions.length;e++)r.body.txns.transactions[e]=u(r.body.txns.transactions[e]);return r.body}}}},1834:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(3033),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(5592);e.exports={DynamicFee:class{constructor(e,t,r,o,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("firstValid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("lastValid must be a positive number and smaller than 2^53-1");if(void 0===s&&(s=i.ALGORAND_ZERO_ADDRESS_STRING),void 0===a){const e=u.randomBytes(32);a=n.from(e).toString("base64")}const p=n.from("ASAFAgEHBgUmAyD+vKC7FEpaTqe0OKRoGsgObKEFvLYH/FZTJclWlfaiEyDmmpYeby1feshmB5JlUr6YI17TM2PKiJGLuck4qRW2+SB/g7Flf/H8U7ktwYFIodZd/C1LH6PWdyhK3dIAEm2QaTIEIhIzABAjEhAzAAcxABIQMwAIMQESEDEWIxIQMRAjEhAxBygSEDEJKRIQMQgkEhAxAiUSEDEEIQQSEDEGKhIQ","base64"),h=[t,r,o,e,s,a],d=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS,l.valTypes.ADDRESS,l.valTypes.BASE64],f=l.inject(p,[5,6,7,11,44,76],h,d);this.programBytes=f;const g=new c.LogicSig(f,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getDynamicFeeTransactions:function(e,t,r,n){if(!t.verify(i.decodeAddress(e.from).publicKey))throw new Error("invalid signature");e.fee=n,e.fee<p.ALGORAND_MIN_TX_FEE&&(e.fee=p.ALGORAND_MIN_TX_FEE);const a=u.keyPairFromSecretKey(r),c=i.encodeAddress(a.publicKey),{lease:l}=e;delete e.lease;const h=new p.Transaction(e);h.addLease(l,n);const d={from:c,to:e.from,fee:n,amount:h.fee,firstRound:e.firstRound,lastRound:e.lastRound,genesisHash:e.genesisHash,type:"pay"},f=new p.Transaction(d);f.addLease(l,n);const g=s.assignGroupID([f,h],void 0),m=g[0],y=g[1],b={lsig:t.get_obj_for_encoding(),txn:y.get_obj_for_encoding()},w=m.signTxn(r),v=o.encode(b),A=new Uint8Array(w.length+v.length);return A.set(w),A.set(v,w.length),A},signDynamicFee:function(e,t,r){const n=a.readProgram(e,void 0),o=n[0],s=n[1],l=u.keyPairFromSecretKey(t),p={from:i.encodeAddress(l.publicKey),to:i.encodeAddress(s[0]),fee:0,amount:o[2],closeRemainderTo:i.encodeAddress(s[1]),firstRound:o[3],lastRound:o[4],genesisHash:r,type:"pay",lease:new Uint8Array(s[2])},h=new c.LogicSig(e,void 0);return h.sign(t),{txn:p,lsig:h}}}},1786:(e,t,r)=>{var n=r(2486).Buffer;const i=r(3477),{keccak256:o}=r(583),s=r(5583),a=r(8800),c=r(2514),u=r(5592);e.exports={HTLC:class{constructor(e,t,r,i,o,s){if(!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");let u="";if("sha256"===r)u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQEpEhAxCSoSMQIlDRAREA==";else{if("keccak256"!==r)throw Error("hash function unrecognized");u="ASAECAEACSYDIOaalh5vLV96yGYHkmVSvpgjXtMzY8qIkYu5yTipFbb5IH+DsWV/8fxTuS3BgUih1l38LUsfo9Z3KErd0gASbZBpIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMQEiDjEQIxIQMQcyAxIQMQgkEhAxCSgSLQIpEhAxCSoSMQIlDRAREA=="}if(32!==n.from(i,"base64").length)throw Error("hash image must be 32 bytes");const l=n.from(u,"base64"),p=[s,o,t,i,e],h=[c.valTypes.INT,c.valTypes.INT,c.valTypes.ADDRESS,c.valTypes.BASE64,c.valTypes.ADDRESS],d=c.inject(l,[3,6,10,42,76],p,h);this.programBytes=d;const f=new a.LogicSig(d,void 0);this.address=f.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},signTransactionWithHTLCUnlock:function(e,t,r){const c=n.from(r,"base64"),l=s.readProgram(e,void 0),p=l[0],h=l[1][1],d=e[e.length-15];if(1===d){const e=i.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("sha256 hash of preimage did not match stored contract hash")}else{if(2!==d)throw new Error("hash function in contract unrecognized");{const e=o.create();if(e.update(c),!n.from(e.hex(),"hex").equals(h))throw new Error("keccak256 hash of preimage did not match stored contract hash")}}const f=[c],g=new a.LogicSig(e,f);delete t.to;const m=p[0],y=new u.Transaction(t);if(y.fee>m)throw new Error(`final fee of payment transaction${y.fee.toString()}greater than transaction max fee${m.toString()}`);return a.signLogicSigTransaction(t,g)}}},8886:(e,t,r)=>{const n=r(1834),i=r(1786),o=r(4748),s=r(3758),a=r(2200);e.exports={DynamicFee:n.DynamicFee,getDynamicFeeTransactions:n.getDynamicFeeTransactions,signDynamicFee:n.signDynamicFee,HTLC:i.HTLC,signTransactionWithHTLCUnlock:i.signTransactionWithHTLCUnlock,LimitOrder:o.LimitOrder,getSwapAssetsTransaction:o.getSwapAssetsTransaction,Split:s.Split,getSplitFundsTransaction:s.getSplitFundsTransaction,PeriodicPayment:a.PeriodicPayment,getPeriodicPaymentWithdrawalTransaction:a.getPeriodicPaymentWithdrawalTransaction}},4748:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(1988),s=r(1063),a=r(5583),c=r(8800),u=r(9404),l=r(2514),p=r(413);e.exports={LimitOrder:class{constructor(e,t,r,i,o,s,a){if(!Number.isSafeInteger(t)||t<0)throw Error("assetid must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("ratn must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("ratd must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("minTrade must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(a)||a<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const u=n.from("ASAKAAEFAgYEBwgJCiYBIP68oLsUSlpOp7Q4pGgayA5soQW8tgf8VlMlyVaV9qITMRYiEjEQIxIQMQEkDhAyBCMSQABVMgQlEjEIIQQNEDEJMgMSEDMBECEFEhAzAREhBhIQMwEUKBIQMwETMgMSEDMBEiEHHTUCNQExCCEIHTUENQM0ATQDDUAAJDQBNAMSNAI0BA8QQAAWADEJKBIxAiEJDRAxBzIDEhAxCCISEBA=","base64"),p=[a,s,t,i,r,o,e],h=[l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.INT,l.valTypes.ADDRESS],d=l.inject(u,[5,7,9,10,11,12,16],p,h);this.programBytes=d;const f=new c.LogicSig(d,void 0);this.address=f.address(),this.owner=e,this.assetid=t}getProgram(){return this.programBytes}getAddress(){return this.address}},getSwapAssetsTransaction:function(e,t,r,n,l,h,d,f){const g=u.keyPairFromSecretKey(n),m=i.encodeAddress(g.publicKey),y=a.readProgram(e,void 0),b=y[0],w=y[1];let v;const A=b[6],x=i.encodeAddress(w[0]),_=c.makeLogicSig(e,void 0),S=_.address(),E=[o.makePaymentTxn(S,m,l,r,v,h,d,void 0,f,void 0),o.makeAssetTransferTxn(m,x,v,void 0,l,t,h,d,void 0,f,void 0,A)],B=s.assignGroupID(E),T=b[7],k=b[8];if(t*T<r*k)throw new Error(`bad payment ratio, ${t.toString()}*${T.toString()} !>= ${r.toString()}*${k.toString()}`);const U=b[4];if(r<U)throw new Error(`payment amount ${r.toString()} less than minimum trade ${U.toString()}`);const I=b[2];if(B[0].fee>I)throw new Error(`final fee of payment transaction ${B[0].fee.toString()} greater than transaction max fee ${I.toString()}`);if(B[1].fee>I)throw new Error(`final fee of asset transaction ${B[1].fee.toString()} greater than transaction max fee ${I.toString()}`);const R=c.signLogicSigTransactionObject(B[0],_),C=B[1].signTxn(n);return p.concatArrays(R.blob,C)}}},2200:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(1988),s=r(5583),a=r(8800),c=r(9404),u=r(2514);e.exports={PeriodicPayment:class{constructor(e,t,r,i,o,s,u){if(this.receiver=e,!Number.isSafeInteger(t)||t<0)throw Error("amount must be a positive number and smaller than 2^53-1");if(this.amount=t,!Number.isSafeInteger(r)||r<0)throw Error("withdrawalWindow must be a positive number and smaller than 2^53-1");if(this.withdrawalWindow=r,!Number.isSafeInteger(i)||i<0)throw Error("period must be a positive number and smaller than 2^53-1");if(this.period=i,!Number.isSafeInteger(o)||o<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(this.expiryRound=o,!Number.isSafeInteger(s)||s<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");if(this.maxFee=s,void 0===u){const e=c.randomBytes(32);this.lease=n.from(e).toString("base64")}else this.lease=u;this.programBytes=this.getProgram();const l=new a.LogicSig(this.programBytes,void 0);this.address=l.address()}getProgram(){const e=n.from("ASAHAQYFAAQDByYCIAECAwQFBgcIAQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIIJKvkYTkEzwJf2arzJOxERsSogG9nQzKPkpIoc4TzPTFMRAiEjEBIw4QMQIkGCUSEDEEIQQxAggSEDEGKBIQMQkyAxIxBykSEDEIIQUSEDEJKRIxBzIDEhAxAiEGDRAxCCUSEBEQ","base64"),t=[this.maxFee,this.period,this.withdrawalWindow,this.amount,this.expiryRound,this.lease,this.receiver],r=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.BASE64,u.valTypes.ADDRESS];return u.inject(e,[4,5,7,8,9,12,46],t,r)}getAddress(){return this.address}},getPeriodicPaymentWithdrawalTransaction:function(e,t,r,n){const c=s.readProgram(e,void 0),u=c[0],l=c[1],p=u[2],h=u[4],d=u[5];if(r%p!=0)throw new Error(`firstValid round ${r.toString()} was not a multiple of contract period ${p.toString()}`);const f=l[1],g=i.encodeAddress(f),m=l[0],y=new Uint8Array(m),b=r+h,w=g;let v,A;const x=a.makeLogicSig(e,void 0),_=x.address(),S={from:_,to:w,fee:t,amount:d,closeRemainderTo:v,firstRound:r,lastRound:b,note:A,genesisHash:n,genesisID:"",type:"pay",lease:y},E=o.makePaymentTxn(_,w,t,d,v,r,b,A,n,"");if(E.fee>u[1])throw new Error(`final fee of payment transaction${E.fee.toString()}greater than transaction max fee${u[1].toString()}`);return a.signLogicSigTransaction(S,x)}}},3758:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116),o=r(1988),s=r(1063),a=r(8800),c=r(5583),u=r(2514),l=r(413);e.exports={Split:class{constructor(e,t,r,i,o,s,c,l){if(!Number.isSafeInteger(o)||o<0)throw Error("rat2 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(i)||i<0)throw Error("rat1 must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(s)||s<0)throw Error("expiryRound must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(c)||c<0)throw Error("minPay must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(l)||l<0)throw Error("maxFee must be a positive number and smaller than 2^53-1");const p=n.from("ASAIAQUCAAYHCAkmAyCztwQn0+DycN+vsk+vJWcsoz/b7NDS6i33HOkvTpf+YiC3qUpIgHGWE8/1LPh9SGCalSN7IaITeeWSXbfsS5wsXyC4kBQ38Z8zcwWVAym4S8vpFB/c0XC6R4mnPi9EBADsPDEQIhIxASMMEDIEJBJAABkxCSgSMQcyAxIQMQglEhAxAiEEDRAiQAAuMwAAMwEAEjEJMgMSEDMABykSEDMBByoSEDMACCEFCzMBCCEGCxIQMwAIIQcPEBA=","base64"),h=[l,s,o,i,c,e,t,r],d=[u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.INT,u.valTypes.ADDRESS,u.valTypes.ADDRESS,u.valTypes.ADDRESS],f=u.inject(p,[4,7,8,9,10,14,47,80],h,d);this.programBytes=f;const g=a.makeLogicSig(f,void 0);this.address=g.address()}getProgram(){return this.programBytes}getAddress(){return this.address}},getSplitFundsTransaction:function(e,t,r,n,u,p){const h=c.readProgram(e,void 0),d=h[0],f=h[1];let g=d[6],m=d[5],y=0;const b=(e,t)=>{if("number"!=typeof e||"number"!=typeof t)throw new Error("gcd operates only on positive integers");return t?b(t,e%t):e},w=b(g,m);g=Math.floor(g/w),m=Math.floor(m/w);const v=m/g;y=Math.round(t/(1+v));const A=t-y;if(m*y!=g*A)throw Error("could not split funds in a way that satisfied the contract ratio");const x=a.makeLogicSig(e,void 0).address(),_=i.encodeAddress(f[1]),S=i.encodeAddress(f[2]),E=[o.makePaymentTxn(x,_,u,y,void 0,r,n,void 0,p),o.makePaymentTxn(x,S,u,A,void 0,r,n,void 0,p)],B=s.assignGroupID(E).map((e=>a.signLogicSigTransactionObject(e,a).blob));return l.concatArrays(B[0],B[1])}}},2514:(e,t,r)=>{var n=r(2486).Buffer;const i=r(7116);function o(e,t){let r=0;for(;t>128;)e.push(255&t|128),t>>=7,r+=1;return e.push(255&t),r+1}const s={INT:1,ADDRESS:2,BASE64:3};e.exports={inject:function(e,t,r,a){if(t.length!==r.length||t.length!==a.length)throw new Error("Lengths do not match");let c=e;function u(e,t,r,i){const o=e.slice(0,r),s=e.slice(r+i,e.length),a=[o,n.from(t),s];return n.concat(a)}for(let e=0;e<t.length;e++){let l=0,p=r[e];switch(a[e]){case s.INT:const r=[];l=o(r,p),c=u(c,r,t[e],1);break;case s.ADDRESS:p=i.decodeAddress(p),c=u(c,p.publicKey,t[e],32);break;case s.BASE64:const a=[];p=n.from(p,"base64"),o(a,p.length),p=n.concat([n.from(a),p]),c=u(c,p,t[e],33);break;default:throw new Error("unrecognized value type")}if(0!==l)for(let e=0;e<t.length;e++)t[e]+=l-1}return c},valTypes:s}},7677:(e,t,r)=>{"use strict";r.d(t,{JQ:()=>y,_4:()=>x,X3:()=>A,R0:()=>b,jD:()=>w,Yh:()=>O,bL:()=>N,Ls:()=>C,UV:()=>T,Ax:()=>v,A9:()=>B,w1:()=>_,NK:()=>f,RY:()=>m,Pu:()=>g,Vk:()=>c,nh:()=>p,kG:()=>a,qH:()=>l,JH:()=>u,vJ:()=>I,o5:()=>R,AE:()=>U,I5:()=>D});var n=r(7116),i=r(8922),o=r(413),s=r(2486).Buffer;const a=65535,c=32,u=1,l=1,p=2,h=/^([a-z\d[\](),]+)\[(0|[1-9][\d]*)]$/,d=/^ufixed([1-9][\d]*)x([1-9][\d]*)$/;class f{static from(e){if(e.endsWith("[]")){const t=f.from(e.slice(0,e.length-2));return new x(t)}if(e.endsWith("]")){const t=e.match(h);if(3!==t.length)throw new Error(`malformed static array string: ${e}`);const r=t[2],n=parseInt(r,10);if(n>a)throw new Error(`array length exceeds limit ${a}`);const i=f.from(t[1]);return new A(i,n)}if(e.startsWith("uint")){const t=e=>[...e].every((e=>"0123456789".includes(e))),r=e.slice(4,e.length);if(!t(r))throw new Error(`malformed uint string: ${r}`);const n=parseInt(r,10);if(n>a)throw new Error(`malformed uint string: ${n}`);return new g(n)}if("byte"===e)return new w;if(e.startsWith("ufixed")){const t=e.match(d);if(3!==t.length)throw new Error(`malformed ufixed type: ${e}`);const r=parseInt(t[1],10),n=parseInt(t[2],10);return new m(r,n)}if("bool"===e)return new b;if("address"===e)return new y;if("string"===e)return new v;if(e.length>=2&&"("===e[0]&&")"===e[e.length-1]){const t=_.parseTupleContent(e.slice(1,e.length-1)),r=[];for(let e=0;e<t.length;e++){const n=f.from(t[e]);r.push(n)}return new _(r)}throw new Error(`cannot convert a string ${e} to an ABI type`)}}class g extends f{constructor(e){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported uint type bitSize: ${e}`);this.bitSize=e}toString(){return`uint${this.bitSize}`}equals(e){return e instanceof g&&this.bitSize===e.bitSize}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as uint${this.bitSize}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size uint${this.bitSize}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,i.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a uint${this.bitSize}`);return(0,i.v)(e)}}class m extends f{constructor(e,t){if(super(),e%8!=0||e<8||e>512)throw new Error(`unsupported ufixed type bitSize: ${e}`);if(t>160||t<1)throw new Error(`unsupported ufixed type precision: ${t}`);this.bitSize=e,this.precision=t}toString(){return`ufixed${this.bitSize}x${this.precision}`}equals(e){return e instanceof m&&this.bitSize===e.bitSize&&this.precision===e.precision}isDynamic(){return!1}byteLen(){return this.bitSize/8}encode(e){if("bigint"!=typeof e&&"number"!=typeof e)throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e>=BigInt(2**this.bitSize)||e<BigInt(0))throw new Error(`${e} is not a non-negative int or too big to fit in size ${this.toString()}`);if("number"==typeof e&&!Number.isSafeInteger(e))throw new Error(`${e} should be converted into a BigInt before it is encoded`);return(0,i.j)(e,this.bitSize/8)}decode(e){if(e.length!==this.bitSize/8)throw new Error(`byte string must correspond to a ${this.toString()}`);return(0,i.v)(e)}}class y extends f{toString(){return"address"}equals(e){return e instanceof y}isDynamic(){return!1}byteLen(){return c}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if("string"==typeof e)return(0,n.decodeAddress)(e).publicKey;if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return e}decode(e){if(32!==e.byteLength)throw new Error("byte string must be 32 bytes long for an address");return(0,n.encodeAddress)(e)}}class b extends f{toString(){return"bool"}equals(e){return e instanceof b}isDynamic(){return!1}byteLen(){return l}encode(e){if("boolean"!=typeof e)throw new Error(`Cannot encode value as bool: ${e}`);return e?new Uint8Array([128]):new Uint8Array([0])}decode(e){if(1!==e.byteLength)throw new Error("bool string must be 1 byte long");const t=e[0];if(128===t)return!0;if(0===t)return!1;throw new Error("boolean could not be decoded from the byte string")}}class w extends f{toString(){return"byte"}equals(e){return e instanceof w}isDynamic(){return!1}byteLen(){return u}encode(e){if("number"!=typeof e&&"bigint"!=typeof e)throw new Error(`Cannot encode value as byte: ${e}`);if("bigint"==typeof e&&(e=Number(e)),e<0||e>255)throw new Error(`${e} cannot be encoded into a byte`);return new Uint8Array([e])}decode(e){if(1!==e.byteLength)throw new Error("byte string must be 1 byte long");return e[0]}}class v extends f{toString(){return"string"}equals(e){return e instanceof v}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if("string"!=typeof e&&!(e instanceof Uint8Array))throw new Error(`Cannot encode value as string: ${e}`);const t=s.from(e),r=(0,i.j)(t.length,p),n=new Uint8Array(t.length+p);return n.set(r),n.set(t,p),n}decode(e){if(e.length<p)throw new Error(`byte string is too short to be decoded. Actual length is ${e.length}, but expected at least ${p}`);const t=s.from(e).readUIntBE(0,p),r=e.slice(p,e.length);if(t!==r.length)throw new Error(`string length bytes do not match the actual length of string. Expected ${t}, got ${r.length}`);return s.from(r).toString("utf-8")}}class A extends f{constructor(e,t){if(super(),t<0)throw new Error(`static array must have a non negative length: ${t}`);this.childType=e,this.staticLength=t}toString(){return`${this.childType.toString()}[${this.staticLength}]`}equals(e){return e instanceof A&&this.staticLength===e.staticLength&&this.childType.equals(e.childType)}isDynamic(){return this.childType.isDynamic()}byteLen(){return this.childType.constructor===b?Math.ceil(this.staticLength/8):this.staticLength*this.childType.byteLen()}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);if(e.length!==this.staticLength)throw new Error(`Value array does not match static array length. Expected ${this.staticLength}, got ${e.length}`);return this.toABITupleType().encode(e)}decode(e){return this.toABITupleType().decode(e)}toABITupleType(){return new _(Array(this.staticLength).fill(this.childType))}}class x extends f{constructor(e){super(),this.childType=e}toString(){return`${this.childType.toString()}[]`}equals(e){return e instanceof x&&this.childType.equals(e.childType)}isDynamic(){return!0}byteLen(){throw new Error(`${this.toString()} is a dynamic type`)}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=this.toABITupleType(e.length),r=t.encode(e),n=(0,i.j)(t.childTypes.length,p);return(0,o.concatArrays)(n,r)}decode(e){const t=s.from(e).readUIntBE(0,p);return this.toABITupleType(t).decode(e.slice(p,e.length))}toABITupleType(e){return new _(Array(e).fill(this.childType))}}class _ extends f{constructor(e){if(super(),e.length>=a)throw new Error("tuple type child type number larger than maximum uint16 error");this.childTypes=e}toString(){const e=[];for(let t=0;t<this.childTypes.length;t++)e[t]=this.childTypes[t].toString();return`(${e.join(",")})`}equals(e){return e instanceof _&&this.childTypes.length===e.childTypes.length&&this.childTypes.every(((t,r)=>t.equals(e.childTypes[r])))}isDynamic(){return this.childTypes.some((e=>e.isDynamic()))}byteLen(){let e=0;for(let t=0;t<this.childTypes.length;t++)if(this.childTypes[t].constructor===b){const r=E(this.childTypes,t,1),n=r+1;t+=r,e+=Math.trunc((n+7)/8)}else e+=this.childTypes[t].byteLen();return e}encode(e){if(!(Array.isArray(e)||e instanceof Uint8Array))throw new Error(`Cannot encode value as ${this.toString()}: ${e}`);const t=Array.from(e);if(e.length>a)throw new Error("length of tuple array should not exceed a uint16");const r=this.childTypes,n=[],s=[],c=new Map;let u=0;for(;u<r.length;){const e=r[u];if(e.isDynamic())c.set(n.length,!0),n.push(new Uint8Array([0,0])),s.push(e.encode(t[u]));else{if(e.constructor===b){const e=E(r,u,-1);let o=E(r,u,1);if(e%8!=0)throw new Error("expected before index should have number of bool mod 8 equal 0");o=Math.min(7,o);const s=S(t.slice(u,u+o+1));n.push((0,i.j)(s,1)),u+=o}else{const r=e.encode(t[u]);n.push(r)}c.set(u,!1),s.push(new Uint8Array)}u+=1}let l=0;for(const e of n)l+=e.length;let h=0;for(let e=0;e<n.length;e++){if(c.get(e)){const t=l+h;if(t>a)throw new Error(`byte length of ${t} should not exceed a uint16`);n[e]=(0,i.j)(t,p)}h+=s[e].length}return(0,o.concatArrays)(...n,...s)}decode(e){const t=this.childTypes,r=[],n=[];let i=0,o=0;const a=s.from(e);for(;i<t.length;){const s=t[i];if(s.isDynamic()){if(e.slice(o,e.length).length<p)throw new Error("dynamic type in tuple is too short to be decoded");const t=a.readUIntBE(o,p);if(r.length>0&&(r[r.length-1].right=t,t<r[r.length-1].left))throw new Error("dynamic index segment miscalculation: left is greater than right index");const i={left:t,right:-1};r.push(i),n.push(null),o+=p}else if(s.constructor===b){const t=E(this.childTypes,i,-1);let r=E(this.childTypes,i,1);if(t%8!=0)throw new Error("expected before bool number mod 8 === 0");r=Math.min(7,r);for(let t=0;t<=r;t++){const r=128>>t;(e[o]&r)>0?n.push(new Uint8Array([128])):n.push(new Uint8Array([0]))}i+=r,o+=1}else{const t=s.byteLen();n.push(e.slice(o,o+t)),o+=t}if(i!==t.length-1&&o>=e.length)throw new Error("input byte not enough to decode");i+=1}if(r.length>0&&(r[r.length-1].right=e.length,o=e.length),o<e.length)throw new Error("input byte not fully consumed");for(let e=0;e<r.length;e++){const t=r[e];if(t.left>t.right)throw new Error("dynamic segment should display a [l, r] space with l <= r");if(e!==r.length-1&&t.right!==r[e+1].left)throw new Error("dynamic segment should be consecutive")}let c=0;for(let i=0;i<t.length;i++)t[i].isDynamic()&&(n[i]=e.slice(r[c].left,r[c].right),c+=1);const u=[];for(let e=0;e<t.length;e++){const r=t[e].decode(n[e]);u.push(r)}return u}static parseTupleContent(e){if(0===e.length)return[];if(e.endsWith(",")||e.startsWith(","))throw new Error("tuple string should not start with comma");if(e.includes(",,"))throw new Error("tuple string should not have consecutive commas");const t=[];let r=0,n="";for(const i of e)n+=i,"("===i?r+=1:")"===i?r-=1:","===i&&0===r&&(t.push(n.slice(0,n.length-1)),n="");if(0!==n.length&&t.push(n),0!==r)throw new Error("tuple string has mismatched parentheses");return t}}function S(e){let t=0;if(e.length>8)throw new Error("value list passed in should be no greater than length 8");for(let r=0;r<e.length;r++){const n=e[r];if("boolean"!=typeof n)throw new Error("non-boolean values cannot be compressed into a byte");n&&(t|=1<<7-r)}return t}function E(e,t,r){let n=0;for(;;){const i=t+r*n;if(e[i].constructor!==b){n-=1;break}if(i!==e.length-1&&1===r)n+=1;else{if(!(i>0&&-1===r))break;n+=1}}return n}var B,T,k=r(9404);function U(e){return e===B.any||e===B.pay||e===B.keyreg||e===B.acfg||e===B.axfer||e===B.afrz||e===B.appl}function I(e,t){return e===B.any||t.type&&t.type.toString()===e.toString()}function R(e){return e===T.account||e===T.application||e===T.asset}!function(e){e.any="txn",e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl"}(B||(B={})),function(e){e.account="account",e.application="application",e.asset="asset"}(T||(T={}));class C{constructor(e){if("string"!=typeof e.name||"object"!=typeof e.returns||!Array.isArray(e.args))throw new Error("Invalid ABIMethod parameters");this.name=e.name,this.description=e.desc,this.args=e.args.map((({type:e,name:t,desc:r})=>U(e)||R(e)?{type:e,name:t,description:r}:{type:f.from(e),name:t,description:r})),this.returns={type:"void"===e.returns.type?e.returns.type:f.from(e.returns.type),description:e.returns.desc}}getSignature(){const e=this.args.map((e=>e.type.toString())).join(","),t=this.returns.type.toString();return`${this.name}(${e})${t}`}getSelector(){const e=(0,k.genericHash)(this.getSignature());return new Uint8Array(e.slice(0,4))}txnCount(){let e=1;for(const t of this.args)"string"==typeof t.type&&U(t.type)&&(e+=1);return e}toJSON(){return{name:this.name,desc:this.description,args:this.args.map((({type:e,name:t,description:r})=>({type:e.toString(),name:t,desc:r}))),returns:{type:this.returns.type.toString(),desc:this.returns.description}}}static fromSignature(e){const{name:t,args:r,returns:n}=function(e){const t=e.indexOf("(");if(-1===t)throw new Error(`Invalid method signature: ${e}`);let r=-1,n=0;for(let i=t;i<e.length;i++){const t=e[i];if("("===t)n+=1;else if(")"===t){if(0===n)break;if(n-=1,0===n){r=i;break}}}if(-1===r)throw new Error(`Invalid method signature: ${e}`);return{name:e.slice(0,t),args:_.parseTupleContent(e.slice(t+1,r)),returns:e.slice(r+1)}}(e);return new C({name:t,args:r.map((e=>({type:e}))),returns:{type:n}})}}function D(e,t){if(null===e||!Array.isArray(e)||!e.every((e=>e instanceof C)))throw new Error("Methods list provided is null or not the correct type");const r=e.filter((e=>e.name===t));if(r.length>1)throw new Error(`found ${r.length} methods with the same name ${r.map((e=>e.getSignature())).join(",")}`);if(0===r.length)throw new Error(`found 0 methods with the name ${t}`);return r[0]}class O{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods)||e.networks&&"object"!=typeof e.networks)throw new Error("Invalid ABIContract parameters");this.name=e.name,this.description=e.desc,this.networks=e.networks?{...e.networks}:{},this.methods=e.methods.map((e=>new C(e)))}toJSON(){return{name:this.name,desc:this.description,networks:this.networks,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return D(this.methods,e)}}class N{constructor(e){if("string"!=typeof e.name||!Array.isArray(e.methods))throw new Error("Invalid ABIInterface parameters");this.name=e.name,this.description=e.desc,this.methods=e.methods.map((e=>new C(e)))}toJSON(){return{name:this.name,desc:this.description,methods:this.methods.map((e=>e.toJSON()))}}getMethodByName(e){return D(this.methods,e)}}},7988:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(9404),i=r(7116);function o(){const e=n.keyPair();return{addr:i.encodeAddress(e.publicKey),sk:e.secretKey}}},2691:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(7116),i=r(3033),o=r(9404),s=r(413),a=r(2486).Buffer;class c{constructor({bidderKey:e,bidAmount:t,bidID:r,auctionKey:i,auctionID:o,maxPrice:s}){this.name="Bid",this.tag=a.from([97,66]);const c=n.decodeAddress(e),u=n.decodeAddress(i);if(!Number.isSafeInteger(t)||t<0)throw Error("Bid amount must be positive and 2^53-1");if(!Number.isSafeInteger(r)||r<0)throw Error("BidID must be positive and 2^53-1");if(!Number.isSafeInteger(o)||o<0)throw Error("auctionID must be positive");Object.assign(this,{bidderKey:c,bidAmount:t,bidID:r,auctionKey:u,auctionID:o,maxPrice:s})}get_obj_for_encoding(){return{bidder:a.from(this.bidderKey.publicKey),cur:this.bidAmount,price:this.maxPrice,id:this.bidID,auc:a.from(this.auctionKey.publicKey),aid:this.auctionID}}signBid(e){const t=i.encode(this.get_obj_for_encoding()),r=a.from(s.concatArrays(this.tag,t)),n=o.sign(r,e),c={t:"b",b:{sig:a.from(n),bid:this.get_obj_for_encoding()}};return new Uint8Array(i.encode(c))}}},1113:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>l});var n=r(413),i=r(7297),o=r(2486).Buffer;class s extends Error{constructor(e,t){super(e),this.response=t,this.name="URLTokenBaseHTTPError",this.response=t}}class a{constructor(e,t,r,n={}){this.defaultHeaders=n;const i=t.endsWith("/")?t:`${t}/`,o=new URL(i);if(void 0!==r&&(o.port=r.toString()),0===o.protocol.length)throw new Error("Invalid base server URL, protocol must be defined.");this.baseURL=o,this.tokenHeader=e}getURL(e,t){let r;r=e.startsWith("./")?e:e.startsWith("/")?`.${e}`:`./${e}`;const n=new URL(r,this.baseURL);if(t)for(const[e,r]of Object.entries(t))n.searchParams.set(e,r);return n.toString()}static formatFetchResponseHeaders(e){const t={};return e.forEach(((e,r)=>{t[e]=r})),t}static async checkHttpError(e){if(e.ok)return;let t=null,r=null;try{t=new Uint8Array(await e.arrayBuffer());const n=JSON.parse(o.from(t).toString());n.message&&(r=n.message)}catch(e){}let n=`Network request error. Received status ${e.status} (${e.statusText})`;throw r&&(n+=`: ${r}`),new s(n,{body:t,status:e.status,headers:a.formatFetchResponseHeaders(e.headers)})}static async formatFetchResponse(e){return await this.checkHttpError(e),{body:new Uint8Array(await e.arrayBuffer()),status:e.status,headers:a.formatFetchResponseHeaders(e.headers)}}async get(e,t,r={}){const n={...this.tokenHeader,...this.defaultHeaders,...r},o=await(0,i.fetch)(this.getURL(e,t),{mode:"cors",headers:n});return a.formatFetchResponse(o)}async post(e,t,r,n={}){const o={...this.tokenHeader,...this.defaultHeaders,...n},s=await(0,i.fetch)(this.getURL(e,r),{method:"POST",mode:"cors",body:t,headers:o});return a.formatFetchResponse(s)}async delete(e,t,r,n={}){const o={...this.tokenHeader,...this.defaultHeaders,...n},s=await(0,i.fetch)(this.getURL(e,r),{method:"DELETE",mode:"cors",body:t,headers:o});return a.formatFetchResponse(s)}}var c=r(2486).Buffer;function u(e){return Object.keys(e).reduce(((t,r)=>(t[r.toLowerCase()]=e[r],t)),{})}class l{constructor(e,t,r,n={}){this.bc=void 0!==t?new a(e,t,r,n):e}static parseJSON(e,t,r={}){try{return 0===Object.keys(r).length?e&&JSON.parse(e):e&&n.parseJSON(e,r)}catch(r){const n=r;throw n.rawResponse=e||null,n.statusCode=t,n}}static serializeData(e,t){if(!e)return new Uint8Array(0);if("application/json"===t["content-type"])return new Uint8Array(c.from(JSON.stringify(e)));if("string"==typeof e)return new Uint8Array(c.from(e));if(e instanceof Uint8Array)return e;throw new Error("provided data is neither a string nor a Uint8Array and content-type is not application/json")}static prepareResponse(e,t,r,n={}){let i,{body:o}=e;return"application/msgpack"!==t&&(i=o&&c.from(o).toString()||""),r&&"application/json"===t&&(o=l.parseJSON(i,e.status,n)),{...e,body:o,text:i,ok:2===Math.trunc(e.status/100)}}static prepareResponseError(e){return e.response&&(e.response=l.prepareResponse(e.response,"application/json",!0),e.status=e.response.status),e}async get(e,t,r={},n={},i=!0){const o=function(e){return void 0!==e&&Object.prototype.hasOwnProperty.call(e,"format")&&"msgpack"===e.format?"application/msgpack":"application/json"}(t),s={...r,accept:o};try{const r=await this.bc.get(e,function(e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(e[t]&&0!==e[t].length||delete e[t]);return e}(t),s);return l.prepareResponse(r,o,i,n)}catch(e){throw l.prepareResponseError(e)}}async post(e,t,r={},n,i=!0){const o={"content-type":"application/json",...u(r)};try{const r=await this.bc.post(e,l.serializeData(t,o),n,o);return l.prepareResponse(r,"application/json",i)}catch(e){throw l.prepareResponseError(e)}}async delete(e,t,r={},n=!0){const i={"content-type":"application/json",...u(r)},o=await this.bc.delete(e,l.serializeData(t,i),void 0,i);return l.prepareResponse(o,"application/json",n)}}},6477:(e,t,r)=>{"use strict";r.d(t,{Z:()=>s});var n=r(3480),i=r(5592),o=r(2486).Buffer;class s extends n.Z{constructor(e,t="http://127.0.0.1",r=7833,n={}){super("X-KMD-API-Token",e,t,r,n)}async versions(){return(await this.c.get("/versions")).body}async listWallets(){return(await this.c.get("/v1/wallets")).body}async createWallet(e,t,r=new Uint8Array,n="sqlite"){const i={wallet_name:e,wallet_driver_name:n,wallet_password:t,master_derivation_key:o.from(r).toString("base64")};return(await this.c.post("/v1/wallet",i)).body}async initWalletHandle(e,t){const r={wallet_id:e,wallet_password:t};return(await this.c.post("/v1/wallet/init",r)).body}async releaseWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/release",t)).body}async renewWalletHandle(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/renew",t)).body}async renameWallet(e,t,r){const n={wallet_id:e,wallet_password:t,wallet_name:r};return(await this.c.post("/v1/wallet/rename",n)).body}async getWallet(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/wallet/info",t)).body}async exportMasterDerivationKey(e,t){const r={wallet_handle_token:e,wallet_password:t},n=await this.c.post("/v1/master-key/export",r);return{master_derivation_key:o.from(n.body.master_derivation_key,"base64")}}async importKey(e,t){const r={wallet_handle_token:e,private_key:o.from(t).toString("base64")};return(await this.c.post("/v1/key/import",r)).body}async exportKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t},i=await this.c.post("/v1/key/export",n);return{private_key:o.from(i.body.private_key,"base64")}}async generateKey(e){const t={wallet_handle_token:e,display_mnemonic:!1};return(await this.c.post("/v1/key",t)).body}async deleteKey(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/key",n)).body}async listKeys(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/key/list",t)).body}async signTransaction(e,t,r){const n=i.instantiateTxnIfNeeded(r),s={wallet_handle_token:e,wallet_password:t,transaction:o.from(n.toByte()).toString("base64")},a=await this.c.post("/v1/transaction/sign",s);return 200===a.status?o.from(a.body.signed_transaction,"base64"):a.body}async signTransactionWithSpecificPublicKey(e,t,r,n){const s=i.instantiateTxnIfNeeded(r),a={wallet_handle_token:e,wallet_password:t,transaction:o.from(s.toByte()).toString("base64"),public_key:o.from(n).toString("base64")},c=await this.c.post("/v1/transaction/sign",a);return 200===c.status?o.from(c.body.signed_transaction,"base64"):c.body}async listMultisig(e){const t={wallet_handle_token:e};return(await this.c.post("/v1/multisig/list",t)).body}async importMultisig(e,t,r,n){const i={wallet_handle_token:e,multisig_version:t,threshold:r,pks:n};return(await this.c.post("/v1/multisig/import",i)).body}async exportMultisig(e,t){const r={wallet_handle_token:e,address:t};return(await this.c.post("/v1/multisig/export",r)).body}async signMultisigTransaction(e,t,r,n,s){const a=i.instantiateTxnIfNeeded(r),c={wallet_handle_token:e,transaction:o.from(a.toByte()).toString("base64"),public_key:o.from(n).toString("base64"),partial_multisig:s,wallet_password:t};return(await this.c.post("/v1/multisig/sign",c)).body}async deleteMultisig(e,t,r){const n={wallet_handle_token:e,address:r,wallet_password:t};return(await this.c.delete("/v1/multisig",n)).body}}},8569:(e,t,r)=>{"use strict";r.d(t,{Z:()=>P});var n=r(3480),i=r(8680);class o extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}exclude(e){return this.query.exclude=e,this}}class s extends i.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.assetID=n,this.account=r,this.assetID=n}path(){return`/v2/accounts/${this.account}/assets/${this.assetID}`}}class a extends i.Z{constructor(e,t,r,n){super(e,t),this.account=r,this.applicationID=n,this.account=r,this.applicationID=n}path(){return`/v2/accounts/${this.account}/applications/${this.applicationID}`}}var c=r(3033);class u extends i.Z{constructor(e,t){if(super(e),!Number.isInteger(t))throw Error("roundNumber should be an integer");this.round=t,this.query={format:"msgpack"}}path(){return`/v2/blocks/${this.round}`}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}}var l=r(2486).Buffer;function p(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="text/plain"),t}class h extends i.Z{constructor(e,t){super(e),this.source=t,this.source=t}path(){return"/v2/teal/compile"}sourcemap(e=!0){return this.query.sourcemap=e,this}async do(e={}){const t=p(e);return(await this.c.post(this.path(),l.from(this.source),t,this.query)).body}}var d=r(2486).Buffer;class f extends i.Z{constructor(e,t){super(e),this.blob=c.encode(t.get_obj_for_encoding(!0))}path(){return"/v2/teal/dryrun"}async do(e={}){const t=p(e);return(await this.c.post(this.path(),d.from(this.blob),t)).body}}class g extends i.Z{path(){return"/genesis"}}class m extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}}class y extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}}class b extends i.Z{constructor(e,t,r){if(super(e,t),!Number.isInteger(r))throw Error("roundNumber should be an integer");this.round=r}path(){return`/v2/blocks/${this.round}/hash`}}var w=r(1685),v=r(2486).Buffer;class A extends i.Z{constructor(e,t,r,n){super(e,t),this.index=r,this.index=r;const i=v.from(n).toString("base64");this.query.name=encodeURI(`b64:${i}`)}path(){return`/v2/applications/${this.index}/box`}prepare(e){return w.Box.from_obj_for_encoding(e)}}class x extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r,this.query.max=0}path(){return`/v2/applications/${this.index}/boxes`}max(e){return this.query.max=e,this}prepare(e){return w.BoxesResponse.from_obj_for_encoding(e)}}class _ extends i.Z{path(){return"/health"}async do(e={}){const t=await this.c.get(this.path(),{},e);if(!t.ok)throw new Error(`Health response: ${t.status}`);return{}}}class S extends i.Z{constructor(e,t){super(e),this.txid=t,this.txid=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/transactions/pending/${this.txid}`}max(e){return this.query.max=e,this}}class E extends i.Z{constructor(e){super(e),this.query.format="msgpack"}path(){return"/v2/transactions/pending"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}max(e){return this.query.max=e,this}}class B extends i.Z{constructor(e,t){super(e),this.address=t,this.address=t,this.query.format="msgpack"}prepare(e){if(e&&e.byteLength>0)return c.decode(e)}path(){return`/v2/accounts/${this.address}/transactions/pending`}max(e){return this.query.max=e,this}}class T extends i.Z{constructor(e,t,r,n){super(e,t),this.round=r,this.txID=n,this.round=r,this.txID=n}path(){return`/v2/blocks/${this.round}/transactions/${this.txID}/proof`}hashType(e){return this.query.hashtype=e,this}}var k=r(5180);class U extends i.Z{path(){return"/v2/status"}}class I extends i.Z{constructor(e,t,r){if(super(e,t),this.round=r,!Number.isInteger(r))throw Error("round should be an integer");this.round=r}path(){return`/v2/status/wait-for-block-after/${this.round}`}}class R extends i.Z{path(){return"/v2/transactions/params"}prepare(e){return{flatFee:!1,fee:e.fee,firstRound:e["last-round"],lastRound:e["last-round"]+1e3,genesisID:e["genesis-id"],genesisHash:e["genesis-hash"]}}}class C extends i.Z{path(){return"/v2/ledger/supply"}}class D extends i.Z{path(){return"/versions"}}class O extends i.Z{constructor(e,t,r){super(e,t),this.round=r,this.round=r}path(){return`/v2/blocks/${this.round}/lightheader/proof`}}class N extends i.Z{constructor(e,t,r){super(e,t),this.round=r,this.round=r}path(){return`/v2/stateproofs/${this.round}`}}class P extends n.Z{constructor(e,t="http://r2.algorand.network",r=4180,n={}){super("X-Algo-API-Token",e,t,r,n)}healthCheck(){return new _(this.c)}versionsCheck(){return new D(this.c)}sendRawTransaction(e){return new k.default(this.c,e)}accountInformation(e){return new o(this.c,this.intDecoding,e)}accountAssetInformation(e,t){return new s(this.c,this.intDecoding,e,t)}accountApplicationInformation(e,t){return new a(this.c,this.intDecoding,e,t)}block(e){return new u(this.c,e)}getBlockHash(e){return new b(this.c,this.intDecoding,e)}pendingTransactionInformation(e){return new S(this.c,e)}pendingTransactionsInformation(){return new E(this.c)}pendingTransactionByAddress(e){return new B(this.c,e)}status(){return new U(this.c,this.intDecoding)}statusAfterBlock(e){return new I(this.c,this.intDecoding,e)}getTransactionParams(){return new R(this.c)}supply(){return new C(this.c,this.intDecoding)}compile(e){return new h(this.c,e)}dryrun(e){return new f(this.c,e)}getAssetByID(e){return new m(this.c,this.intDecoding,e)}getApplicationByID(e){return new y(this.c,this.intDecoding,e)}getApplicationBoxByName(e,t){return new A(this.c,this.intDecoding,e,t)}getApplicationBoxes(e){return new x(this.c,this.intDecoding,e)}genesis(){return new g(this.c,this.intDecoding)}getTransactionProof(e,t){return new T(this.c,this.intDecoding,e,t)}getLightBlockHeaderProof(e){return new O(this.c,this.intDecoding,e)}getStateProof(e){return new N(this.c,this.intDecoding,e)}}},1685:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Account:()=>o,AccountApplicationResponse:()=>s,AccountAssetResponse:()=>a,AccountParticipation:()=>c,AccountStateDelta:()=>u,Application:()=>l,ApplicationLocalState:()=>p,ApplicationParams:()=>h,ApplicationStateSchema:()=>d,Asset:()=>f,AssetHolding:()=>g,AssetParams:()=>m,BlockHashResponse:()=>y,BlockResponse:()=>b,Box:()=>w,BoxDescriptor:()=>v,BoxesResponse:()=>A,BuildVersion:()=>x,CatchpointAbortResponse:()=>_,CatchpointStartResponse:()=>S,CompileResponse:()=>E,DisassembleResponse:()=>B,DryrunRequest:()=>T,DryrunResponse:()=>k,DryrunSource:()=>U,DryrunState:()=>I,DryrunTxnResult:()=>R,ErrorResponse:()=>C,EvalDelta:()=>D,EvalDeltaKeyValue:()=>O,LightBlockHeaderProof:()=>N,NodeStatusResponse:()=>P,PendingTransactionResponse:()=>L,PendingTransactionsResponse:()=>j,PostTransactionsResponse:()=>z,StateProof:()=>F,StateProofMessage:()=>M,SupplyResponse:()=>q,TealKeyValue:()=>H,TealValue:()=>$,TransactionParametersResponse:()=>G,TransactionProofResponse:()=>K,Version:()=>V});var n=r(5899),i=r(2486).Buffer;class o extends n.Z{constructor({address:e,amount:t,amountWithoutPendingRewards:r,minBalance:n,pendingRewards:i,rewards:o,round:s,status:a,totalAppsOptedIn:c,totalAssetsOptedIn:u,totalCreatedApps:l,totalCreatedAssets:p,appsLocalState:h,appsTotalExtraPages:d,appsTotalSchema:f,assets:g,authAddr:m,createdApps:y,createdAssets:b,participation:w,rewardBase:v,sigType:A,totalBoxBytes:x,totalBoxes:_}){super(),this.address=e,this.amount=t,this.amountWithoutPendingRewards=r,this.minBalance=n,this.pendingRewards=i,this.rewards=o,this.round=s,this.status=a,this.totalAppsOptedIn=c,this.totalAssetsOptedIn=u,this.totalCreatedApps=l,this.totalCreatedAssets=p,this.appsLocalState=h,this.appsTotalExtraPages=d,this.appsTotalSchema=f,this.assets=g,this.authAddr=m,this.createdApps=y,this.createdAssets=b,this.participation=w,this.rewardBase=v,this.sigType=A,this.totalBoxBytes=x,this.totalBoxes=_,this.attribute_map={address:"address",amount:"amount",amountWithoutPendingRewards:"amount-without-pending-rewards",minBalance:"min-balance",pendingRewards:"pending-rewards",rewards:"rewards",round:"round",status:"status",totalAppsOptedIn:"total-apps-opted-in",totalAssetsOptedIn:"total-assets-opted-in",totalCreatedApps:"total-created-apps",totalCreatedAssets:"total-created-assets",appsLocalState:"apps-local-state",appsTotalExtraPages:"apps-total-extra-pages",appsTotalSchema:"apps-total-schema",assets:"assets",authAddr:"auth-addr",createdApps:"created-apps",createdAssets:"created-assets",participation:"participation",rewardBase:"reward-base",sigType:"sig-type",totalBoxBytes:"total-box-bytes",totalBoxes:"total-boxes"}}static from_obj_for_encoding(e){if(void 0===e.address)throw new Error(`Response is missing required field 'address': ${e}`);if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e["amount-without-pending-rewards"])throw new Error(`Response is missing required field 'amount-without-pending-rewards': ${e}`);if(void 0===e["min-balance"])throw new Error(`Response is missing required field 'min-balance': ${e}`);if(void 0===e["pending-rewards"])throw new Error(`Response is missing required field 'pending-rewards': ${e}`);if(void 0===e.rewards)throw new Error(`Response is missing required field 'rewards': ${e}`);if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);if(void 0===e.status)throw new Error(`Response is missing required field 'status': ${e}`);if(void 0===e["total-apps-opted-in"])throw new Error(`Response is missing required field 'total-apps-opted-in': ${e}`);if(void 0===e["total-assets-opted-in"])throw new Error(`Response is missing required field 'total-assets-opted-in': ${e}`);if(void 0===e["total-created-apps"])throw new Error(`Response is missing required field 'total-created-apps': ${e}`);if(void 0===e["total-created-assets"])throw new Error(`Response is missing required field 'total-created-assets': ${e}`);return new o({address:e.address,amount:e.amount,amountWithoutPendingRewards:e["amount-without-pending-rewards"],minBalance:e["min-balance"],pendingRewards:e["pending-rewards"],rewards:e.rewards,round:e.round,status:e.status,totalAppsOptedIn:e["total-apps-opted-in"],totalAssetsOptedIn:e["total-assets-opted-in"],totalCreatedApps:e["total-created-apps"],totalCreatedAssets:e["total-created-assets"],appsLocalState:void 0!==e["apps-local-state"]?e["apps-local-state"].map(p.from_obj_for_encoding):void 0,appsTotalExtraPages:e["apps-total-extra-pages"],appsTotalSchema:void 0!==e["apps-total-schema"]?d.from_obj_for_encoding(e["apps-total-schema"]):void 0,assets:void 0!==e.assets?e.assets.map(g.from_obj_for_encoding):void 0,authAddr:e["auth-addr"],createdApps:void 0!==e["created-apps"]?e["created-apps"].map(l.from_obj_for_encoding):void 0,createdAssets:void 0!==e["created-assets"]?e["created-assets"].map(f.from_obj_for_encoding):void 0,participation:void 0!==e.participation?c.from_obj_for_encoding(e.participation):void 0,rewardBase:e["reward-base"],sigType:e["sig-type"],totalBoxBytes:e["total-box-bytes"],totalBoxes:e["total-boxes"]})}}class s extends n.Z{constructor(e,t,r){super(),this.round=e,this.appLocalState=t,this.createdApp=r,this.attribute_map={round:"round",appLocalState:"app-local-state",createdApp:"created-app"}}static from_obj_for_encoding(e){if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);return new s(e.round,void 0!==e["app-local-state"]?p.from_obj_for_encoding(e["app-local-state"]):void 0,void 0!==e["created-app"]?h.from_obj_for_encoding(e["created-app"]):void 0)}}class a extends n.Z{constructor(e,t,r){super(),this.round=e,this.assetHolding=t,this.createdAsset=r,this.attribute_map={round:"round",assetHolding:"asset-holding",createdAsset:"created-asset"}}static from_obj_for_encoding(e){if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);return new a(e.round,void 0!==e["asset-holding"]?g.from_obj_for_encoding(e["asset-holding"]):void 0,void 0!==e["created-asset"]?m.from_obj_for_encoding(e["created-asset"]):void 0)}}class c extends n.Z{constructor({selectionParticipationKey:e,voteFirstValid:t,voteKeyDilution:r,voteLastValid:n,voteParticipationKey:o,stateProofKey:s}){super(),this.selectionParticipationKey="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.voteFirstValid=t,this.voteKeyDilution=r,this.voteLastValid=n,this.voteParticipationKey="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.stateProofKey="string"==typeof s?new Uint8Array(i.from(s,"base64")):s,this.attribute_map={selectionParticipationKey:"selection-participation-key",voteFirstValid:"vote-first-valid",voteKeyDilution:"vote-key-dilution",voteLastValid:"vote-last-valid",voteParticipationKey:"vote-participation-key",stateProofKey:"state-proof-key"}}static from_obj_for_encoding(e){if(void 0===e["selection-participation-key"])throw new Error(`Response is missing required field 'selection-participation-key': ${e}`);if(void 0===e["vote-first-valid"])throw new Error(`Response is missing required field 'vote-first-valid': ${e}`);if(void 0===e["vote-key-dilution"])throw new Error(`Response is missing required field 'vote-key-dilution': ${e}`);if(void 0===e["vote-last-valid"])throw new Error(`Response is missing required field 'vote-last-valid': ${e}`);if(void 0===e["vote-participation-key"])throw new Error(`Response is missing required field 'vote-participation-key': ${e}`);return new c({selectionParticipationKey:e["selection-participation-key"],voteFirstValid:e["vote-first-valid"],voteKeyDilution:e["vote-key-dilution"],voteLastValid:e["vote-last-valid"],voteParticipationKey:e["vote-participation-key"],stateProofKey:e["state-proof-key"]})}}class u extends n.Z{constructor(e,t){super(),this.address=e,this.delta=t,this.attribute_map={address:"address",delta:"delta"}}static from_obj_for_encoding(e){if(void 0===e.address)throw new Error(`Response is missing required field 'address': ${e}`);if(!Array.isArray(e.delta))throw new Error(`Response is missing required array field 'delta': ${e}`);return new u(e.address,e.delta.map(O.from_obj_for_encoding))}}class l extends n.Z{constructor(e,t){super(),this.id=e,this.params=t,this.attribute_map={id:"id",params:"params"}}static from_obj_for_encoding(e){if(void 0===e.id)throw new Error(`Response is missing required field 'id': ${e}`);if(void 0===e.params)throw new Error(`Response is missing required field 'params': ${e}`);return new l(e.id,h.from_obj_for_encoding(e.params))}}class p extends n.Z{constructor(e,t,r){super(),this.id=e,this.schema=t,this.keyValue=r,this.attribute_map={id:"id",schema:"schema",keyValue:"key-value"}}static from_obj_for_encoding(e){if(void 0===e.id)throw new Error(`Response is missing required field 'id': ${e}`);if(void 0===e.schema)throw new Error(`Response is missing required field 'schema': ${e}`);return new p(e.id,d.from_obj_for_encoding(e.schema),void 0!==e["key-value"]?e["key-value"].map(H.from_obj_for_encoding):void 0)}}class h extends n.Z{constructor({approvalProgram:e,clearStateProgram:t,creator:r,extraProgramPages:n,globalState:o,globalStateSchema:s,localStateSchema:a}){super(),this.approvalProgram="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.clearStateProgram="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.creator=r,this.extraProgramPages=n,this.globalState=o,this.globalStateSchema=s,this.localStateSchema=a,this.attribute_map={approvalProgram:"approval-program",clearStateProgram:"clear-state-program",creator:"creator",extraProgramPages:"extra-program-pages",globalState:"global-state",globalStateSchema:"global-state-schema",localStateSchema:"local-state-schema"}}static from_obj_for_encoding(e){if(void 0===e["approval-program"])throw new Error(`Response is missing required field 'approval-program': ${e}`);if(void 0===e["clear-state-program"])throw new Error(`Response is missing required field 'clear-state-program': ${e}`);if(void 0===e.creator)throw new Error(`Response is missing required field 'creator': ${e}`);return new h({approvalProgram:e["approval-program"],clearStateProgram:e["clear-state-program"],creator:e.creator,extraProgramPages:e["extra-program-pages"],globalState:void 0!==e["global-state"]?e["global-state"].map(H.from_obj_for_encoding):void 0,globalStateSchema:void 0!==e["global-state-schema"]?d.from_obj_for_encoding(e["global-state-schema"]):void 0,localStateSchema:void 0!==e["local-state-schema"]?d.from_obj_for_encoding(e["local-state-schema"]):void 0})}}class d extends n.Z{constructor(e,t){super(),this.numUint=e,this.numByteSlice=t,this.attribute_map={numUint:"num-uint",numByteSlice:"num-byte-slice"}}static from_obj_for_encoding(e){if(void 0===e["num-uint"])throw new Error(`Response is missing required field 'num-uint': ${e}`);if(void 0===e["num-byte-slice"])throw new Error(`Response is missing required field 'num-byte-slice': ${e}`);return new d(e["num-uint"],e["num-byte-slice"])}}class f extends n.Z{constructor(e,t){super(),this.index=e,this.params=t,this.attribute_map={index:"index",params:"params"}}static from_obj_for_encoding(e){if(void 0===e.index)throw new Error(`Response is missing required field 'index': ${e}`);if(void 0===e.params)throw new Error(`Response is missing required field 'params': ${e}`);return new f(e.index,m.from_obj_for_encoding(e.params))}}class g extends n.Z{constructor(e,t,r){super(),this.amount=e,this.assetId=t,this.isFrozen=r,this.attribute_map={amount:"amount",assetId:"asset-id",isFrozen:"is-frozen"}}static from_obj_for_encoding(e){if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e["asset-id"])throw new Error(`Response is missing required field 'asset-id': ${e}`);if(void 0===e["is-frozen"])throw new Error(`Response is missing required field 'is-frozen': ${e}`);return new g(e.amount,e["asset-id"],e["is-frozen"])}}class m extends n.Z{constructor({creator:e,decimals:t,total:r,clawback:n,defaultFrozen:o,freeze:s,manager:a,metadataHash:c,name:u,nameB64:l,reserve:p,unitName:h,unitNameB64:d,url:f,urlB64:g}){super(),this.creator=e,this.decimals=t,this.total=r,this.clawback=n,this.defaultFrozen=o,this.freeze=s,this.manager=a,this.metadataHash="string"==typeof c?new Uint8Array(i.from(c,"base64")):c,this.name=u,this.nameB64="string"==typeof l?new Uint8Array(i.from(l,"base64")):l,this.reserve=p,this.unitName=h,this.unitNameB64="string"==typeof d?new Uint8Array(i.from(d,"base64")):d,this.url=f,this.urlB64="string"==typeof g?new Uint8Array(i.from(g,"base64")):g,this.attribute_map={creator:"creator",decimals:"decimals",total:"total",clawback:"clawback",defaultFrozen:"default-frozen",freeze:"freeze",manager:"manager",metadataHash:"metadata-hash",name:"name",nameB64:"name-b64",reserve:"reserve",unitName:"unit-name",unitNameB64:"unit-name-b64",url:"url",urlB64:"url-b64"}}static from_obj_for_encoding(e){if(void 0===e.creator)throw new Error(`Response is missing required field 'creator': ${e}`);if(void 0===e.decimals)throw new Error(`Response is missing required field 'decimals': ${e}`);if(void 0===e.total)throw new Error(`Response is missing required field 'total': ${e}`);return new m({creator:e.creator,decimals:e.decimals,total:e.total,clawback:e.clawback,defaultFrozen:e["default-frozen"],freeze:e.freeze,manager:e.manager,metadataHash:e["metadata-hash"],name:e.name,nameB64:e["name-b64"],reserve:e.reserve,unitName:e["unit-name"],unitNameB64:e["unit-name-b64"],url:e.url,urlB64:e["url-b64"]})}}class y extends n.Z{constructor(e){super(),this.blockhash=e,this.attribute_map={blockhash:"blockHash"}}static from_obj_for_encoding(e){if(void 0===e.blockHash)throw new Error(`Response is missing required field 'blockHash': ${e}`);return new y(e.blockHash)}}class b extends n.Z{constructor(e,t){super(),this.block=e,this.cert=t,this.attribute_map={block:"block",cert:"cert"}}static from_obj_for_encoding(e){if(void 0===e.block)throw new Error(`Response is missing required field 'block': ${e}`);return new b(e.block,e.cert)}}class w extends n.Z{constructor(e,t){super(),this.name="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.value="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.attribute_map={name:"name",value:"value"}}static from_obj_for_encoding(e){if(void 0===e.name)throw new Error(`Response is missing required field 'name': ${e}`);if(void 0===e.value)throw new Error(`Response is missing required field 'value': ${e}`);return new w(e.name,e.value)}}class v extends n.Z{constructor(e){super(),this.name="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.attribute_map={name:"name"}}static from_obj_for_encoding(e){if(void 0===e.name)throw new Error(`Response is missing required field 'name': ${e}`);return new v(e.name)}}class A extends n.Z{constructor(e){super(),this.boxes=e,this.attribute_map={boxes:"boxes"}}static from_obj_for_encoding(e){if(!Array.isArray(e.boxes))throw new Error(`Response is missing required array field 'boxes': ${e}`);return new A(e.boxes.map(v.from_obj_for_encoding))}}class x extends n.Z{constructor({branch:e,buildNumber:t,channel:r,commitHash:n,major:i,minor:o}){super(),this.branch=e,this.buildNumber=t,this.channel=r,this.commitHash=n,this.major=i,this.minor=o,this.attribute_map={branch:"branch",buildNumber:"build_number",channel:"channel",commitHash:"commit_hash",major:"major",minor:"minor"}}static from_obj_for_encoding(e){if(void 0===e.branch)throw new Error(`Response is missing required field 'branch': ${e}`);if(void 0===e.build_number)throw new Error(`Response is missing required field 'build_number': ${e}`);if(void 0===e.channel)throw new Error(`Response is missing required field 'channel': ${e}`);if(void 0===e.commit_hash)throw new Error(`Response is missing required field 'commit_hash': ${e}`);if(void 0===e.major)throw new Error(`Response is missing required field 'major': ${e}`);if(void 0===e.minor)throw new Error(`Response is missing required field 'minor': ${e}`);return new x({branch:e.branch,buildNumber:e.build_number,channel:e.channel,commitHash:e.commit_hash,major:e.major,minor:e.minor})}}class _ extends n.Z{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}static from_obj_for_encoding(e){if(void 0===e["catchup-message"])throw new Error(`Response is missing required field 'catchup-message': ${e}`);return new _(e["catchup-message"])}}class S extends n.Z{constructor(e){super(),this.catchupMessage=e,this.attribute_map={catchupMessage:"catchup-message"}}static from_obj_for_encoding(e){if(void 0===e["catchup-message"])throw new Error(`Response is missing required field 'catchup-message': ${e}`);return new S(e["catchup-message"])}}class E extends n.Z{constructor(e,t,r){super(),this.hash=e,this.result=t,this.sourcemap=r,this.attribute_map={hash:"hash",result:"result",sourcemap:"sourcemap"}}static from_obj_for_encoding(e){if(void 0===e.hash)throw new Error(`Response is missing required field 'hash': ${e}`);if(void 0===e.result)throw new Error(`Response is missing required field 'result': ${e}`);return new E(e.hash,e.result,e.sourcemap)}}class B extends n.Z{constructor(e){super(),this.result=e,this.attribute_map={result:"result"}}static from_obj_for_encoding(e){if(void 0===e.result)throw new Error(`Response is missing required field 'result': ${e}`);return new B(e.result)}}class T extends n.Z{constructor({accounts:e,apps:t,latestTimestamp:r,protocolVersion:n,round:i,sources:o,txns:s}){super(),this.accounts=e,this.apps=t,this.latestTimestamp=r,this.protocolVersion=n,this.round=i,this.sources=o,this.txns=s,this.attribute_map={accounts:"accounts",apps:"apps",latestTimestamp:"latest-timestamp",protocolVersion:"protocol-version",round:"round",sources:"sources",txns:"txns"}}static from_obj_for_encoding(e){if(!Array.isArray(e.accounts))throw new Error(`Response is missing required array field 'accounts': ${e}`);if(!Array.isArray(e.apps))throw new Error(`Response is missing required array field 'apps': ${e}`);if(void 0===e["latest-timestamp"])throw new Error(`Response is missing required field 'latest-timestamp': ${e}`);if(void 0===e["protocol-version"])throw new Error(`Response is missing required field 'protocol-version': ${e}`);if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);if(!Array.isArray(e.sources))throw new Error(`Response is missing required array field 'sources': ${e}`);if(!Array.isArray(e.txns))throw new Error(`Response is missing required array field 'txns': ${e}`);return new T({accounts:e.accounts.map(o.from_obj_for_encoding),apps:e.apps.map(l.from_obj_for_encoding),latestTimestamp:e["latest-timestamp"],protocolVersion:e["protocol-version"],round:e.round,sources:e.sources.map(U.from_obj_for_encoding),txns:e.txns})}}class k extends n.Z{constructor(e,t,r){super(),this.error=e,this.protocolVersion=t,this.txns=r,this.attribute_map={error:"error",protocolVersion:"protocol-version",txns:"txns"}}static from_obj_for_encoding(e){if(void 0===e.error)throw new Error(`Response is missing required field 'error': ${e}`);if(void 0===e["protocol-version"])throw new Error(`Response is missing required field 'protocol-version': ${e}`);if(!Array.isArray(e.txns))throw new Error(`Response is missing required array field 'txns': ${e}`);return new k(e.error,e["protocol-version"],e.txns.map(R.from_obj_for_encoding))}}class U extends n.Z{constructor(e,t,r,n){super(),this.fieldName=e,this.source=t,this.txnIndex=r,this.appIndex=n,this.attribute_map={fieldName:"field-name",source:"source",txnIndex:"txn-index",appIndex:"app-index"}}static from_obj_for_encoding(e){if(void 0===e["field-name"])throw new Error(`Response is missing required field 'field-name': ${e}`);if(void 0===e.source)throw new Error(`Response is missing required field 'source': ${e}`);if(void 0===e["txn-index"])throw new Error(`Response is missing required field 'txn-index': ${e}`);if(void 0===e["app-index"])throw new Error(`Response is missing required field 'app-index': ${e}`);return new U(e["field-name"],e.source,e["txn-index"],e["app-index"])}}class I extends n.Z{constructor({line:e,pc:t,stack:r,error:n,scratch:i}){super(),this.line=e,this.pc=t,this.stack=r,this.error=n,this.scratch=i,this.attribute_map={line:"line",pc:"pc",stack:"stack",error:"error",scratch:"scratch"}}static from_obj_for_encoding(e){if(void 0===e.line)throw new Error(`Response is missing required field 'line': ${e}`);if(void 0===e.pc)throw new Error(`Response is missing required field 'pc': ${e}`);if(!Array.isArray(e.stack))throw new Error(`Response is missing required array field 'stack': ${e}`);return new I({line:e.line,pc:e.pc,stack:e.stack.map($.from_obj_for_encoding),error:e.error,scratch:void 0!==e.scratch?e.scratch.map($.from_obj_for_encoding):void 0})}}class R extends n.Z{constructor({disassembly:e,appCallMessages:t,appCallTrace:r,budgetAdded:n,budgetConsumed:i,cost:o,globalDelta:s,localDeltas:a,logicSigDisassembly:c,logicSigMessages:u,logicSigTrace:l,logs:p}){super(),this.disassembly=e,this.appCallMessages=t,this.appCallTrace=r,this.budgetAdded=n,this.budgetConsumed=i,this.cost=o,this.globalDelta=s,this.localDeltas=a,this.logicSigDisassembly=c,this.logicSigMessages=u,this.logicSigTrace=l,this.logs=p,this.attribute_map={disassembly:"disassembly",appCallMessages:"app-call-messages",appCallTrace:"app-call-trace",budgetAdded:"budget-added",budgetConsumed:"budget-consumed",cost:"cost",globalDelta:"global-delta",localDeltas:"local-deltas",logicSigDisassembly:"logic-sig-disassembly",logicSigMessages:"logic-sig-messages",logicSigTrace:"logic-sig-trace",logs:"logs"}}static from_obj_for_encoding(e){if(!Array.isArray(e.disassembly))throw new Error(`Response is missing required array field 'disassembly': ${e}`);return new R({disassembly:e.disassembly,appCallMessages:e["app-call-messages"],appCallTrace:void 0!==e["app-call-trace"]?e["app-call-trace"].map(I.from_obj_for_encoding):void 0,budgetAdded:e["budget-added"],budgetConsumed:e["budget-consumed"],cost:e.cost,globalDelta:void 0!==e["global-delta"]?e["global-delta"].map(O.from_obj_for_encoding):void 0,localDeltas:void 0!==e["local-deltas"]?e["local-deltas"].map(u.from_obj_for_encoding):void 0,logicSigDisassembly:e["logic-sig-disassembly"],logicSigMessages:e["logic-sig-messages"],logicSigTrace:void 0!==e["logic-sig-trace"]?e["logic-sig-trace"].map(I.from_obj_for_encoding):void 0,logs:e.logs})}}class C extends n.Z{constructor(e,t){super(),this.message=e,this.data=t,this.attribute_map={message:"message",data:"data"}}static from_obj_for_encoding(e){if(void 0===e.message)throw new Error(`Response is missing required field 'message': ${e}`);return new C(e.message,e.data)}}class D extends n.Z{constructor(e,t,r){super(),this.action=e,this.bytes=t,this.uint=r,this.attribute_map={action:"action",bytes:"bytes",uint:"uint"}}static from_obj_for_encoding(e){if(void 0===e.action)throw new Error(`Response is missing required field 'action': ${e}`);return new D(e.action,e.bytes,e.uint)}}class O extends n.Z{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}static from_obj_for_encoding(e){if(void 0===e.key)throw new Error(`Response is missing required field 'key': ${e}`);if(void 0===e.value)throw new Error(`Response is missing required field 'value': ${e}`);return new O(e.key,D.from_obj_for_encoding(e.value))}}class N extends n.Z{constructor(e,t,r){super(),this.index=e,this.proof="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.treedepth=r,this.attribute_map={index:"index",proof:"proof",treedepth:"treedepth"}}static from_obj_for_encoding(e){if(void 0===e.index)throw new Error(`Response is missing required field 'index': ${e}`);if(void 0===e.proof)throw new Error(`Response is missing required field 'proof': ${e}`);if(void 0===e.treedepth)throw new Error(`Response is missing required field 'treedepth': ${e}`);return new N(e.index,e.proof,e.treedepth)}}class P extends n.Z{constructor({catchupTime:e,lastRound:t,lastVersion:r,nextVersion:n,nextVersionRound:i,nextVersionSupported:o,stoppedAtUnsupportedRound:s,timeSinceLastRound:a,catchpoint:c,catchpointAcquiredBlocks:u,catchpointProcessedAccounts:l,catchpointProcessedKvs:p,catchpointTotalAccounts:h,catchpointTotalBlocks:d,catchpointTotalKvs:f,catchpointVerifiedAccounts:g,catchpointVerifiedKvs:m,lastCatchpoint:y}){super(),this.catchupTime=e,this.lastRound=t,this.lastVersion=r,this.nextVersion=n,this.nextVersionRound=i,this.nextVersionSupported=o,this.stoppedAtUnsupportedRound=s,this.timeSinceLastRound=a,this.catchpoint=c,this.catchpointAcquiredBlocks=u,this.catchpointProcessedAccounts=l,this.catchpointProcessedKvs=p,this.catchpointTotalAccounts=h,this.catchpointTotalBlocks=d,this.catchpointTotalKvs=f,this.catchpointVerifiedAccounts=g,this.catchpointVerifiedKvs=m,this.lastCatchpoint=y,this.attribute_map={catchupTime:"catchup-time",lastRound:"last-round",lastVersion:"last-version",nextVersion:"next-version",nextVersionRound:"next-version-round",nextVersionSupported:"next-version-supported",stoppedAtUnsupportedRound:"stopped-at-unsupported-round",timeSinceLastRound:"time-since-last-round",catchpoint:"catchpoint",catchpointAcquiredBlocks:"catchpoint-acquired-blocks",catchpointProcessedAccounts:"catchpoint-processed-accounts",catchpointProcessedKvs:"catchpoint-processed-kvs",catchpointTotalAccounts:"catchpoint-total-accounts",catchpointTotalBlocks:"catchpoint-total-blocks",catchpointTotalKvs:"catchpoint-total-kvs",catchpointVerifiedAccounts:"catchpoint-verified-accounts",catchpointVerifiedKvs:"catchpoint-verified-kvs",lastCatchpoint:"last-catchpoint"}}static from_obj_for_encoding(e){if(void 0===e["catchup-time"])throw new Error(`Response is missing required field 'catchup-time': ${e}`);if(void 0===e["last-round"])throw new Error(`Response is missing required field 'last-round': ${e}`);if(void 0===e["last-version"])throw new Error(`Response is missing required field 'last-version': ${e}`);if(void 0===e["next-version"])throw new Error(`Response is missing required field 'next-version': ${e}`);if(void 0===e["next-version-round"])throw new Error(`Response is missing required field 'next-version-round': ${e}`);if(void 0===e["next-version-supported"])throw new Error(`Response is missing required field 'next-version-supported': ${e}`);if(void 0===e["stopped-at-unsupported-round"])throw new Error(`Response is missing required field 'stopped-at-unsupported-round': ${e}`);if(void 0===e["time-since-last-round"])throw new Error(`Response is missing required field 'time-since-last-round': ${e}`);return new P({catchupTime:e["catchup-time"],lastRound:e["last-round"],lastVersion:e["last-version"],nextVersion:e["next-version"],nextVersionRound:e["next-version-round"],nextVersionSupported:e["next-version-supported"],stoppedAtUnsupportedRound:e["stopped-at-unsupported-round"],timeSinceLastRound:e["time-since-last-round"],catchpoint:e.catchpoint,catchpointAcquiredBlocks:e["catchpoint-acquired-blocks"],catchpointProcessedAccounts:e["catchpoint-processed-accounts"],catchpointProcessedKvs:e["catchpoint-processed-kvs"],catchpointTotalAccounts:e["catchpoint-total-accounts"],catchpointTotalBlocks:e["catchpoint-total-blocks"],catchpointTotalKvs:e["catchpoint-total-kvs"],catchpointVerifiedAccounts:e["catchpoint-verified-accounts"],catchpointVerifiedKvs:e["catchpoint-verified-kvs"],lastCatchpoint:e["last-catchpoint"]})}}class L extends n.Z{constructor({poolError:e,txn:t,applicationIndex:r,assetClosingAmount:n,assetIndex:i,closeRewards:o,closingAmount:s,confirmedRound:a,globalStateDelta:c,innerTxns:u,localStateDelta:l,logs:p,receiverRewards:h,senderRewards:d}){super(),this.poolError=e,this.txn=t,this.applicationIndex=r,this.assetClosingAmount=n,this.assetIndex=i,this.closeRewards=o,this.closingAmount=s,this.confirmedRound=a,this.globalStateDelta=c,this.innerTxns=u,this.localStateDelta=l,this.logs=p,this.receiverRewards=h,this.senderRewards=d,this.attribute_map={poolError:"pool-error",txn:"txn",applicationIndex:"application-index",assetClosingAmount:"asset-closing-amount",assetIndex:"asset-index",closeRewards:"close-rewards",closingAmount:"closing-amount",confirmedRound:"confirmed-round",globalStateDelta:"global-state-delta",innerTxns:"inner-txns",localStateDelta:"local-state-delta",logs:"logs",receiverRewards:"receiver-rewards",senderRewards:"sender-rewards"}}static from_obj_for_encoding(e){if(void 0===e["pool-error"])throw new Error(`Response is missing required field 'pool-error': ${e}`);if(void 0===e.txn)throw new Error(`Response is missing required field 'txn': ${e}`);return new L({poolError:e["pool-error"],txn:e.txn,applicationIndex:e["application-index"],assetClosingAmount:e["asset-closing-amount"],assetIndex:e["asset-index"],closeRewards:e["close-rewards"],closingAmount:e["closing-amount"],confirmedRound:e["confirmed-round"],globalStateDelta:void 0!==e["global-state-delta"]?e["global-state-delta"].map(O.from_obj_for_encoding):void 0,innerTxns:void 0!==e["inner-txns"]?e["inner-txns"].map(L.from_obj_for_encoding):void 0,localStateDelta:void 0!==e["local-state-delta"]?e["local-state-delta"].map(u.from_obj_for_encoding):void 0,logs:e.logs,receiverRewards:e["receiver-rewards"],senderRewards:e["sender-rewards"]})}}class j extends n.Z{constructor(e,t){super(),this.topTransactions=e,this.totalTransactions=t,this.attribute_map={topTransactions:"top-transactions",totalTransactions:"total-transactions"}}static from_obj_for_encoding(e){if(!Array.isArray(e["top-transactions"]))throw new Error(`Response is missing required array field 'top-transactions': ${e}`);if(void 0===e["total-transactions"])throw new Error(`Response is missing required field 'total-transactions': ${e}`);return new j(e["top-transactions"],e["total-transactions"])}}class z extends n.Z{constructor(e){super(),this.txid=e,this.attribute_map={txid:"txId"}}static from_obj_for_encoding(e){if(void 0===e.txId)throw new Error(`Response is missing required field 'txId': ${e}`);return new z(e.txId)}}class F extends n.Z{constructor(e,t){super(),this.message=e,this.stateproof="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.attribute_map={message:"Message",stateproof:"StateProof"}}static from_obj_for_encoding(e){if(void 0===e.Message)throw new Error(`Response is missing required field 'Message': ${e}`);if(void 0===e.StateProof)throw new Error(`Response is missing required field 'StateProof': ${e}`);return new F(M.from_obj_for_encoding(e.Message),e.StateProof)}}class M extends n.Z{constructor({blockheaderscommitment:e,firstattestedround:t,lastattestedround:r,lnprovenweight:n,voterscommitment:o}){super(),this.blockheaderscommitment="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.firstattestedround=t,this.lastattestedround=r,this.lnprovenweight=n,this.voterscommitment="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.attribute_map={blockheaderscommitment:"BlockHeadersCommitment",firstattestedround:"FirstAttestedRound",lastattestedround:"LastAttestedRound",lnprovenweight:"LnProvenWeight",voterscommitment:"VotersCommitment"}}static from_obj_for_encoding(e){if(void 0===e.BlockHeadersCommitment)throw new Error(`Response is missing required field 'BlockHeadersCommitment': ${e}`);if(void 0===e.FirstAttestedRound)throw new Error(`Response is missing required field 'FirstAttestedRound': ${e}`);if(void 0===e.LastAttestedRound)throw new Error(`Response is missing required field 'LastAttestedRound': ${e}`);if(void 0===e.LnProvenWeight)throw new Error(`Response is missing required field 'LnProvenWeight': ${e}`);if(void 0===e.VotersCommitment)throw new Error(`Response is missing required field 'VotersCommitment': ${e}`);return new M({blockheaderscommitment:e.BlockHeadersCommitment,firstattestedround:e.FirstAttestedRound,lastattestedround:e.LastAttestedRound,lnprovenweight:e.LnProvenWeight,voterscommitment:e.VotersCommitment})}}class q extends n.Z{constructor(e,t,r){super(),this.currentRound=e,this.onlineMoney=t,this.totalMoney=r,this.attribute_map={currentRound:"current_round",onlineMoney:"online-money",totalMoney:"total-money"}}static from_obj_for_encoding(e){if(void 0===e.current_round)throw new Error(`Response is missing required field 'current_round': ${e}`);if(void 0===e["online-money"])throw new Error(`Response is missing required field 'online-money': ${e}`);if(void 0===e["total-money"])throw new Error(`Response is missing required field 'total-money': ${e}`);return new q(e.current_round,e["online-money"],e["total-money"])}}class H extends n.Z{constructor(e,t){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}static from_obj_for_encoding(e){if(void 0===e.key)throw new Error(`Response is missing required field 'key': ${e}`);if(void 0===e.value)throw new Error(`Response is missing required field 'value': ${e}`);return new H(e.key,$.from_obj_for_encoding(e.value))}}class $ extends n.Z{constructor(e,t,r){super(),this.type=e,this.bytes=t,this.uint=r,this.attribute_map={type:"type",bytes:"bytes",uint:"uint"}}static from_obj_for_encoding(e){if(void 0===e.type)throw new Error(`Response is missing required field 'type': ${e}`);if(void 0===e.bytes)throw new Error(`Response is missing required field 'bytes': ${e}`);if(void 0===e.uint)throw new Error(`Response is missing required field 'uint': ${e}`);return new $(e.type,e.bytes,e.uint)}}class G extends n.Z{constructor({consensusVersion:e,fee:t,genesisHash:r,genesisId:n,lastRound:o,minFee:s}){super(),this.consensusVersion=e,this.fee=t,this.genesisHash="string"==typeof r?new Uint8Array(i.from(r,"base64")):r,this.genesisId=n,this.lastRound=o,this.minFee=s,this.attribute_map={consensusVersion:"consensus-version",fee:"fee",genesisHash:"genesis-hash",genesisId:"genesis-id",lastRound:"last-round",minFee:"min-fee"}}static from_obj_for_encoding(e){if(void 0===e["consensus-version"])throw new Error(`Response is missing required field 'consensus-version': ${e}`);if(void 0===e.fee)throw new Error(`Response is missing required field 'fee': ${e}`);if(void 0===e["genesis-hash"])throw new Error(`Response is missing required field 'genesis-hash': ${e}`);if(void 0===e["genesis-id"])throw new Error(`Response is missing required field 'genesis-id': ${e}`);if(void 0===e["last-round"])throw new Error(`Response is missing required field 'last-round': ${e}`);if(void 0===e["min-fee"])throw new Error(`Response is missing required field 'min-fee': ${e}`);return new G({consensusVersion:e["consensus-version"],fee:e.fee,genesisHash:e["genesis-hash"],genesisId:e["genesis-id"],lastRound:e["last-round"],minFee:e["min-fee"]})}}class K extends n.Z{constructor({idx:e,proof:t,stibhash:r,treedepth:n,hashtype:o}){super(),this.idx=e,this.proof="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.stibhash="string"==typeof r?new Uint8Array(i.from(r,"base64")):r,this.treedepth=n,this.hashtype=o,this.attribute_map={idx:"idx",proof:"proof",stibhash:"stibhash",treedepth:"treedepth",hashtype:"hashtype"}}static from_obj_for_encoding(e){if(void 0===e.idx)throw new Error(`Response is missing required field 'idx': ${e}`);if(void 0===e.proof)throw new Error(`Response is missing required field 'proof': ${e}`);if(void 0===e.stibhash)throw new Error(`Response is missing required field 'stibhash': ${e}`);if(void 0===e.treedepth)throw new Error(`Response is missing required field 'treedepth': ${e}`);return new K({idx:e.idx,proof:e.proof,stibhash:e.stibhash,treedepth:e.treedepth,hashtype:e.hashtype})}}class V extends n.Z{constructor(e,t,r,n){super(),this.build=e,this.genesisHashB64="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.genesisId=r,this.versions=n,this.attribute_map={build:"build",genesisHashB64:"genesis_hash_b64",genesisId:"genesis_id",versions:"versions"}}static from_obj_for_encoding(e){if(void 0===e.build)throw new Error(`Response is missing required field 'build': ${e}`);if(void 0===e.genesis_hash_b64)throw new Error(`Response is missing required field 'genesis_hash_b64': ${e}`);if(void 0===e.genesis_id)throw new Error(`Response is missing required field 'genesis_id': ${e}`);if(!Array.isArray(e.versions))throw new Error(`Response is missing required array field 'versions': ${e}`);return new V(x.from_obj_for_encoding(e.build),e.genesis_hash_b64,e.genesis_id,e.versions)}}},5180:(e,t,r)=>{"use strict";r.r(t),r.d(t,{setSendTransactionHeaders:()=>s,default:()=>c});var n=r(8680),i=r(413),o=r(2486).Buffer;function s(e={}){let t=e;return Object.keys(t).every((e=>"content-type"!==e.toLowerCase()))&&(t={...e},t["Content-Type"]="application/x-binary"),t}function a(e){return e&&void 0!==e.byteLength}class c extends n.Z{constructor(e,t){super(e);let r=t;if(Array.isArray(t)){if(!t.every(a))throw new TypeError("Array elements must be byte arrays");r=(0,i.concatArrays)(...t)}else if(!a(r))throw new TypeError("Argument must be byte array");this.txnBytesToPost=r}path(){return"/v2/transactions"}async do(e={}){const t=s(e);return(await this.c.post(this.path(),o.from(this.txnBytesToPost),t)).body}}},5899:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(2486).Buffer;function i(e,t){let r;if(e instanceof Uint8Array)r=t?e:n.from(e).toString("base64");else if("function"==typeof e.get_obj_for_encoding)r=e.get_obj_for_encoding(t);else if(Array.isArray(e)){r=[];for(const n of e)r.push(i(n,t))}else if("object"==typeof e){const n={};for(const r of Object.keys(e))n[r]=i(e[r],t);r=n}else{if(!function(e){return void 0===e||null==e||"object"!=typeof e&&"function"!=typeof e}(e))throw new Error(`Unsupported value: ${String(e)}`);r=e}return r}class o{get_obj_for_encoding(e=!1){const t={};for(const r of Object.keys(this.attribute_map)){const n=this.attribute_map[r],o=this[r];void 0!==o&&(t[n]=null===o?null:i(o,e))}return t}}},6595:(e,t,r)=>{"use strict";r.d(t,{Z:()=>U});var n=r(3480),i=r(8680);class o extends i.Z{path(){return"/health"}}class s extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/balances`}limit(e){return this.query.limit=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}var a=r(2486).Buffer;function c(e){return"string"==typeof e?e:a.from(e).toString("base64")}class u extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class l extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}/transactions`}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}}class p extends i.Z{constructor(e,t,r){super(e,t),this.round=r,this.round=r}path(){return`/v2/blocks/${this.round}`}headerOnly(e){return this.query["header-only"]=e,this}}class h extends i.Z{constructor(e,t,r){super(e,t),this.txID=r,this.txID=r}path(){return`/v2/transactions/${this.txID}`}}class d extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}`}round(e){return this.query.round=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class f extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetId(e){return this.query["asset-id"]=e,this}}class g extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-assets`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}assetID(e){return this.query["asset-id"]=e,this}}class m extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/apps-local-state`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class y extends i.Z{constructor(e,t,r){super(e,t),this.account=r,this.account=r}path(){return`/v2/accounts/${this.account}/created-applications`}limit(e){return this.query.limit=e,this}round(e){return this.query.round=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class b extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/assets/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class w extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}`}includeAll(e=!0){return this.query["include-all"]=e,this}}class v extends i.Z{constructor(e,t,r){super(e,t),this.appID=r,this.appID=r}path(){return`/v2/applications/${this.appID}/logs`}limit(e){return this.query.limit=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}nextToken(e){return this.query.next=e,this}sender(e){return this.query["sender-address"]=e,this}txid(e){return this.query.txid=e,this}}var A=r(8230),x=r(2486).Buffer;class _ extends i.Z{constructor(e,t,r,n){super(e,t),this.index=r,this.index=r;const i=x.from(n).toString("base64");this.query.name=encodeURI(`b64:${i}`)}path(){return`/v2/applications/${this.index}/box`}prepare(e){return A.Box.from_obj_for_encoding(e)}}class S extends i.Z{path(){return"/v2/accounts"}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}limit(e){return this.query.limit=e,this}assetID(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}round(e){return this.query.round=e,this}authAddr(e){return this.query["auth-addr"]=e,this}applicationID(e){return this.query["application-id"]=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}exclude(e){return this.query.exclude=e,this}}class E extends i.Z{path(){return"/v2/transactions"}notePrefix(e){return this.query["note-prefix"]=c(e),this}txType(e){return this.query["tx-type"]=e,this}sigType(e){return this.query["sig-type"]=e,this}txid(e){return this.query.txid=e,this}round(e){return this.query.round=e,this}minRound(e){return this.query["min-round"]=e,this}maxRound(e){return this.query["max-round"]=e,this}assetID(e){return this.query["asset-id"]=e,this}limit(e){return this.query.limit=e,this}beforeTime(e){return this.query["before-time"]=e,this}afterTime(e){return this.query["after-time"]=e,this}currencyGreaterThan(e){return this.query["currency-greater-than"]=e,this}currencyLessThan(e){return this.query["currency-less-than"]=e,this}addressRole(e){return this.query["address-role"]=e,this}address(e){return this.query.address=e,this}excludeCloseTo(e){return this.query["exclude-close-to"]=e,this}nextToken(e){return this.query.next=e,this}rekeyTo(e){return this.query["rekey-to"]=e,this}applicationID(e){return this.query["application-id"]=e,this}}class B extends i.Z{path(){return"/v2/assets"}limit(e){return this.query.limit=e,this}creator(e){return this.query.creator=e,this}name(e){return this.query.name=e,this}unit(e){return this.query.unit=e,this}index(e){return this.query["asset-id"]=e,this}nextToken(e){return this.query.next=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class T extends i.Z{path(){return"/v2/applications"}index(e){return this.query["application-id"]=e,this}creator(e){return this.query.creator=e,this}nextToken(e){return this.query.next=e,this}limit(e){return this.query.limit=e,this}includeAll(e=!0){return this.query["include-all"]=e,this}}class k extends i.Z{constructor(e,t,r){super(e,t),this.index=r,this.index=r}path(){return`/v2/applications/${this.index}/boxes`}nextToken(e){return this.query.next=e,this}limit(e){return this.query.limit=e,this}prepare(e){return A.BoxesResponse.from_obj_for_encoding(e)}}class U extends n.Z{constructor(e,t="http://127.0.0.1",r=8080,n={}){super("X-Indexer-API-Token",e,t,r,n)}makeHealthCheck(){return new o(this.c,this.intDecoding)}lookupAssetBalances(e){return new s(this.c,this.intDecoding,e)}lookupAssetTransactions(e){return new l(this.c,this.intDecoding,e)}lookupAccountTransactions(e){return new u(this.c,this.intDecoding,e)}lookupBlock(e){return new p(this.c,this.intDecoding,e)}lookupTransactionByID(e){return new h(this.c,this.intDecoding,e)}lookupAccountByID(e){return new d(this.c,this.intDecoding,e)}lookupAccountAssets(e){return new f(this.c,this.intDecoding,e)}lookupAccountCreatedAssets(e){return new g(this.c,this.intDecoding,e)}lookupAccountAppLocalStates(e){return new m(this.c,this.intDecoding,e)}lookupAccountCreatedApplications(e){return new y(this.c,this.intDecoding,e)}lookupAssetByID(e){return new b(this.c,this.intDecoding,e)}lookupApplications(e){return new w(this.c,this.intDecoding,e)}lookupApplicationLogs(e){return new v(this.c,this.intDecoding,e)}searchAccounts(){return new S(this.c,this.intDecoding)}searchForTransactions(){return new E(this.c,this.intDecoding)}searchForAssets(){return new B(this.c,this.intDecoding)}searchForApplications(){return new T(this.c,this.intDecoding)}searchForApplicationBoxes(e){return new k(this.c,this.intDecoding,e)}lookupApplicationBoxByIDandName(e,t){return new _(this.c,this.intDecoding,e,t)}}},8230:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Account:()=>o,AccountParticipation:()=>s,AccountResponse:()=>a,AccountStateDelta:()=>c,AccountsResponse:()=>u,Application:()=>l,ApplicationLocalState:()=>p,ApplicationLocalStatesResponse:()=>h,ApplicationLogData:()=>d,ApplicationLogsResponse:()=>f,ApplicationParams:()=>g,ApplicationResponse:()=>m,ApplicationStateSchema:()=>y,ApplicationsResponse:()=>b,Asset:()=>w,AssetBalancesResponse:()=>v,AssetHolding:()=>A,AssetHoldingsResponse:()=>x,AssetParams:()=>_,AssetResponse:()=>S,AssetsResponse:()=>E,Block:()=>B,BlockRewards:()=>T,BlockUpgradeState:()=>k,BlockUpgradeVote:()=>U,Box:()=>I,BoxDescriptor:()=>R,BoxesResponse:()=>C,ErrorResponse:()=>D,EvalDelta:()=>O,EvalDeltaKeyValue:()=>N,HashFactory:()=>P,HealthCheck:()=>L,IndexerStateProofMessage:()=>j,MerkleArrayProof:()=>z,MiniAssetHolding:()=>F,ParticipationUpdates:()=>M,StateProofFields:()=>q,StateProofParticipant:()=>H,StateProofReveal:()=>$,StateProofSigSlot:()=>G,StateProofSignature:()=>K,StateProofTracking:()=>V,StateProofVerifier:()=>W,StateSchema:()=>Z,TealKeyValue:()=>X,TealValue:()=>Y,Transaction:()=>J,TransactionApplication:()=>Q,TransactionAssetConfig:()=>ee,TransactionAssetFreeze:()=>te,TransactionAssetTransfer:()=>re,TransactionKeyreg:()=>ne,TransactionPayment:()=>ie,TransactionResponse:()=>oe,TransactionSignature:()=>se,TransactionSignatureLogicsig:()=>ae,TransactionSignatureMultisig:()=>ce,TransactionSignatureMultisigSubsignature:()=>ue,TransactionStateProof:()=>le,TransactionsResponse:()=>pe});var n=r(5899),i=r(2486).Buffer;class o extends n.Z{constructor({address:e,amount:t,amountWithoutPendingRewards:r,pendingRewards:n,rewards:i,round:o,status:s,totalAppsOptedIn:a,totalAssetsOptedIn:c,totalBoxBytes:u,totalBoxes:l,totalCreatedApps:p,totalCreatedAssets:h,appsLocalState:d,appsTotalExtraPages:f,appsTotalSchema:g,assets:m,authAddr:y,closedAtRound:b,createdApps:w,createdAssets:v,createdAtRound:A,deleted:x,participation:_,rewardBase:S,sigType:E}){super(),this.address=e,this.amount=t,this.amountWithoutPendingRewards=r,this.pendingRewards=n,this.rewards=i,this.round=o,this.status=s,this.totalAppsOptedIn=a,this.totalAssetsOptedIn=c,this.totalBoxBytes=u,this.totalBoxes=l,this.totalCreatedApps=p,this.totalCreatedAssets=h,this.appsLocalState=d,this.appsTotalExtraPages=f,this.appsTotalSchema=g,this.assets=m,this.authAddr=y,this.closedAtRound=b,this.createdApps=w,this.createdAssets=v,this.createdAtRound=A,this.deleted=x,this.participation=_,this.rewardBase=S,this.sigType=E,this.attribute_map={address:"address",amount:"amount",amountWithoutPendingRewards:"amount-without-pending-rewards",pendingRewards:"pending-rewards",rewards:"rewards",round:"round",status:"status",totalAppsOptedIn:"total-apps-opted-in",totalAssetsOptedIn:"total-assets-opted-in",totalBoxBytes:"total-box-bytes",totalBoxes:"total-boxes",totalCreatedApps:"total-created-apps",totalCreatedAssets:"total-created-assets",appsLocalState:"apps-local-state",appsTotalExtraPages:"apps-total-extra-pages",appsTotalSchema:"apps-total-schema",assets:"assets",authAddr:"auth-addr",closedAtRound:"closed-at-round",createdApps:"created-apps",createdAssets:"created-assets",createdAtRound:"created-at-round",deleted:"deleted",participation:"participation",rewardBase:"reward-base",sigType:"sig-type"}}static from_obj_for_encoding(e){if(void 0===e.address)throw new Error(`Response is missing required field 'address': ${e}`);if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e["amount-without-pending-rewards"])throw new Error(`Response is missing required field 'amount-without-pending-rewards': ${e}`);if(void 0===e["pending-rewards"])throw new Error(`Response is missing required field 'pending-rewards': ${e}`);if(void 0===e.rewards)throw new Error(`Response is missing required field 'rewards': ${e}`);if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);if(void 0===e.status)throw new Error(`Response is missing required field 'status': ${e}`);if(void 0===e["total-apps-opted-in"])throw new Error(`Response is missing required field 'total-apps-opted-in': ${e}`);if(void 0===e["total-assets-opted-in"])throw new Error(`Response is missing required field 'total-assets-opted-in': ${e}`);if(void 0===e["total-box-bytes"])throw new Error(`Response is missing required field 'total-box-bytes': ${e}`);if(void 0===e["total-boxes"])throw new Error(`Response is missing required field 'total-boxes': ${e}`);if(void 0===e["total-created-apps"])throw new Error(`Response is missing required field 'total-created-apps': ${e}`);if(void 0===e["total-created-assets"])throw new Error(`Response is missing required field 'total-created-assets': ${e}`);return new o({address:e.address,amount:e.amount,amountWithoutPendingRewards:e["amount-without-pending-rewards"],pendingRewards:e["pending-rewards"],rewards:e.rewards,round:e.round,status:e.status,totalAppsOptedIn:e["total-apps-opted-in"],totalAssetsOptedIn:e["total-assets-opted-in"],totalBoxBytes:e["total-box-bytes"],totalBoxes:e["total-boxes"],totalCreatedApps:e["total-created-apps"],totalCreatedAssets:e["total-created-assets"],appsLocalState:void 0!==e["apps-local-state"]?e["apps-local-state"].map(p.from_obj_for_encoding):void 0,appsTotalExtraPages:e["apps-total-extra-pages"],appsTotalSchema:void 0!==e["apps-total-schema"]?y.from_obj_for_encoding(e["apps-total-schema"]):void 0,assets:void 0!==e.assets?e.assets.map(A.from_obj_for_encoding):void 0,authAddr:e["auth-addr"],closedAtRound:e["closed-at-round"],createdApps:void 0!==e["created-apps"]?e["created-apps"].map(l.from_obj_for_encoding):void 0,createdAssets:void 0!==e["created-assets"]?e["created-assets"].map(w.from_obj_for_encoding):void 0,createdAtRound:e["created-at-round"],deleted:e.deleted,participation:void 0!==e.participation?s.from_obj_for_encoding(e.participation):void 0,rewardBase:e["reward-base"],sigType:e["sig-type"]})}}class s extends n.Z{constructor({selectionParticipationKey:e,voteFirstValid:t,voteKeyDilution:r,voteLastValid:n,voteParticipationKey:o,stateProofKey:s}){super(),this.selectionParticipationKey="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.voteFirstValid=t,this.voteKeyDilution=r,this.voteLastValid=n,this.voteParticipationKey="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.stateProofKey="string"==typeof s?new Uint8Array(i.from(s,"base64")):s,this.attribute_map={selectionParticipationKey:"selection-participation-key",voteFirstValid:"vote-first-valid",voteKeyDilution:"vote-key-dilution",voteLastValid:"vote-last-valid",voteParticipationKey:"vote-participation-key",stateProofKey:"state-proof-key"}}static from_obj_for_encoding(e){if(void 0===e["selection-participation-key"])throw new Error(`Response is missing required field 'selection-participation-key': ${e}`);if(void 0===e["vote-first-valid"])throw new Error(`Response is missing required field 'vote-first-valid': ${e}`);if(void 0===e["vote-key-dilution"])throw new Error(`Response is missing required field 'vote-key-dilution': ${e}`);if(void 0===e["vote-last-valid"])throw new Error(`Response is missing required field 'vote-last-valid': ${e}`);if(void 0===e["vote-participation-key"])throw new Error(`Response is missing required field 'vote-participation-key': ${e}`);return new s({selectionParticipationKey:e["selection-participation-key"],voteFirstValid:e["vote-first-valid"],voteKeyDilution:e["vote-key-dilution"],voteLastValid:e["vote-last-valid"],voteParticipationKey:e["vote-participation-key"],stateProofKey:e["state-proof-key"]})}}class a extends n.Z{constructor({account:e,currentRound:t}){super(),this.account=e,this.currentRound=t,this.attribute_map={account:"account",currentRound:"current-round"}}static from_obj_for_encoding(e){if(void 0===e.account)throw new Error(`Response is missing required field 'account': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new a({account:o.from_obj_for_encoding(e.account),currentRound:e["current-round"]})}}class c extends n.Z{constructor({address:e,delta:t}){super(),this.address=e,this.delta=t,this.attribute_map={address:"address",delta:"delta"}}static from_obj_for_encoding(e){if(void 0===e.address)throw new Error(`Response is missing required field 'address': ${e}`);if(!Array.isArray(e.delta))throw new Error(`Response is missing required array field 'delta': ${e}`);return new c({address:e.address,delta:e.delta.map(N.from_obj_for_encoding)})}}class u extends n.Z{constructor({accounts:e,currentRound:t,nextToken:r}){super(),this.accounts=e,this.currentRound=t,this.nextToken=r,this.attribute_map={accounts:"accounts",currentRound:"current-round",nextToken:"next-token"}}static from_obj_for_encoding(e){if(!Array.isArray(e.accounts))throw new Error(`Response is missing required array field 'accounts': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new u({accounts:e.accounts.map(o.from_obj_for_encoding),currentRound:e["current-round"],nextToken:e["next-token"]})}}class l extends n.Z{constructor({id:e,params:t,createdAtRound:r,deleted:n,deletedAtRound:i}){super(),this.id=e,this.params=t,this.createdAtRound=r,this.deleted=n,this.deletedAtRound=i,this.attribute_map={id:"id",params:"params",createdAtRound:"created-at-round",deleted:"deleted",deletedAtRound:"deleted-at-round"}}static from_obj_for_encoding(e){if(void 0===e.id)throw new Error(`Response is missing required field 'id': ${e}`);if(void 0===e.params)throw new Error(`Response is missing required field 'params': ${e}`);return new l({id:e.id,params:g.from_obj_for_encoding(e.params),createdAtRound:e["created-at-round"],deleted:e.deleted,deletedAtRound:e["deleted-at-round"]})}}class p extends n.Z{constructor({id:e,schema:t,closedOutAtRound:r,deleted:n,keyValue:i,optedInAtRound:o}){super(),this.id=e,this.schema=t,this.closedOutAtRound=r,this.deleted=n,this.keyValue=i,this.optedInAtRound=o,this.attribute_map={id:"id",schema:"schema",closedOutAtRound:"closed-out-at-round",deleted:"deleted",keyValue:"key-value",optedInAtRound:"opted-in-at-round"}}static from_obj_for_encoding(e){if(void 0===e.id)throw new Error(`Response is missing required field 'id': ${e}`);if(void 0===e.schema)throw new Error(`Response is missing required field 'schema': ${e}`);return new p({id:e.id,schema:y.from_obj_for_encoding(e.schema),closedOutAtRound:e["closed-out-at-round"],deleted:e.deleted,keyValue:void 0!==e["key-value"]?e["key-value"].map(X.from_obj_for_encoding):void 0,optedInAtRound:e["opted-in-at-round"]})}}class h extends n.Z{constructor({appsLocalStates:e,currentRound:t,nextToken:r}){super(),this.appsLocalStates=e,this.currentRound=t,this.nextToken=r,this.attribute_map={appsLocalStates:"apps-local-states",currentRound:"current-round",nextToken:"next-token"}}static from_obj_for_encoding(e){if(!Array.isArray(e["apps-local-states"]))throw new Error(`Response is missing required array field 'apps-local-states': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new h({appsLocalStates:e["apps-local-states"].map(p.from_obj_for_encoding),currentRound:e["current-round"],nextToken:e["next-token"]})}}class d extends n.Z{constructor({logs:e,txid:t}){super(),this.logs=e,this.txid=t,this.attribute_map={logs:"logs",txid:"txid"}}static from_obj_for_encoding(e){if(!Array.isArray(e.logs))throw new Error(`Response is missing required array field 'logs': ${e}`);if(void 0===e.txid)throw new Error(`Response is missing required field 'txid': ${e}`);return new d({logs:e.logs,txid:e.txid})}}class f extends n.Z{constructor({applicationId:e,currentRound:t,logData:r,nextToken:n}){super(),this.applicationId=e,this.currentRound=t,this.logData=r,this.nextToken=n,this.attribute_map={applicationId:"application-id",currentRound:"current-round",logData:"log-data",nextToken:"next-token"}}static from_obj_for_encoding(e){if(void 0===e["application-id"])throw new Error(`Response is missing required field 'application-id': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new f({applicationId:e["application-id"],currentRound:e["current-round"],logData:void 0!==e["log-data"]?e["log-data"].map(d.from_obj_for_encoding):void 0,nextToken:e["next-token"]})}}class g extends n.Z{constructor({approvalProgram:e,clearStateProgram:t,creator:r,extraProgramPages:n,globalState:o,globalStateSchema:s,localStateSchema:a}){super(),this.approvalProgram="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.clearStateProgram="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.creator=r,this.extraProgramPages=n,this.globalState=o,this.globalStateSchema=s,this.localStateSchema=a,this.attribute_map={approvalProgram:"approval-program",clearStateProgram:"clear-state-program",creator:"creator",extraProgramPages:"extra-program-pages",globalState:"global-state",globalStateSchema:"global-state-schema",localStateSchema:"local-state-schema"}}static from_obj_for_encoding(e){if(void 0===e["approval-program"])throw new Error(`Response is missing required field 'approval-program': ${e}`);if(void 0===e["clear-state-program"])throw new Error(`Response is missing required field 'clear-state-program': ${e}`);return new g({approvalProgram:e["approval-program"],clearStateProgram:e["clear-state-program"],creator:e.creator,extraProgramPages:e["extra-program-pages"],globalState:void 0!==e["global-state"]?e["global-state"].map(X.from_obj_for_encoding):void 0,globalStateSchema:void 0!==e["global-state-schema"]?y.from_obj_for_encoding(e["global-state-schema"]):void 0,localStateSchema:void 0!==e["local-state-schema"]?y.from_obj_for_encoding(e["local-state-schema"]):void 0})}}class m extends n.Z{constructor({currentRound:e,application:t}){super(),this.currentRound=e,this.application=t,this.attribute_map={currentRound:"current-round",application:"application"}}static from_obj_for_encoding(e){if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new m({currentRound:e["current-round"],application:void 0!==e.application?l.from_obj_for_encoding(e.application):void 0})}}class y extends n.Z{constructor({numByteSlice:e,numUint:t}){super(),this.numByteSlice=e,this.numUint=t,this.attribute_map={numByteSlice:"num-byte-slice",numUint:"num-uint"}}static from_obj_for_encoding(e){if(void 0===e["num-byte-slice"])throw new Error(`Response is missing required field 'num-byte-slice': ${e}`);if(void 0===e["num-uint"])throw new Error(`Response is missing required field 'num-uint': ${e}`);return new y({numByteSlice:e["num-byte-slice"],numUint:e["num-uint"]})}}class b extends n.Z{constructor({applications:e,currentRound:t,nextToken:r}){super(),this.applications=e,this.currentRound=t,this.nextToken=r,this.attribute_map={applications:"applications",currentRound:"current-round",nextToken:"next-token"}}static from_obj_for_encoding(e){if(!Array.isArray(e.applications))throw new Error(`Response is missing required array field 'applications': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new b({applications:e.applications.map(l.from_obj_for_encoding),currentRound:e["current-round"],nextToken:e["next-token"]})}}class w extends n.Z{constructor({index:e,params:t,createdAtRound:r,deleted:n,destroyedAtRound:i}){super(),this.index=e,this.params=t,this.createdAtRound=r,this.deleted=n,this.destroyedAtRound=i,this.attribute_map={index:"index",params:"params",createdAtRound:"created-at-round",deleted:"deleted",destroyedAtRound:"destroyed-at-round"}}static from_obj_for_encoding(e){if(void 0===e.index)throw new Error(`Response is missing required field 'index': ${e}`);if(void 0===e.params)throw new Error(`Response is missing required field 'params': ${e}`);return new w({index:e.index,params:_.from_obj_for_encoding(e.params),createdAtRound:e["created-at-round"],deleted:e.deleted,destroyedAtRound:e["destroyed-at-round"]})}}class v extends n.Z{constructor({balances:e,currentRound:t,nextToken:r}){super(),this.balances=e,this.currentRound=t,this.nextToken=r,this.attribute_map={balances:"balances",currentRound:"current-round",nextToken:"next-token"}}static from_obj_for_encoding(e){if(!Array.isArray(e.balances))throw new Error(`Response is missing required array field 'balances': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new v({balances:e.balances.map(F.from_obj_for_encoding),currentRound:e["current-round"],nextToken:e["next-token"]})}}class A extends n.Z{constructor({amount:e,assetId:t,isFrozen:r,deleted:n,optedInAtRound:i,optedOutAtRound:o}){super(),this.amount=e,this.assetId=t,this.isFrozen=r,this.deleted=n,this.optedInAtRound=i,this.optedOutAtRound=o,this.attribute_map={amount:"amount",assetId:"asset-id",isFrozen:"is-frozen",deleted:"deleted",optedInAtRound:"opted-in-at-round",optedOutAtRound:"opted-out-at-round"}}static from_obj_for_encoding(e){if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e["asset-id"])throw new Error(`Response is missing required field 'asset-id': ${e}`);if(void 0===e["is-frozen"])throw new Error(`Response is missing required field 'is-frozen': ${e}`);return new A({amount:e.amount,assetId:e["asset-id"],isFrozen:e["is-frozen"],deleted:e.deleted,optedInAtRound:e["opted-in-at-round"],optedOutAtRound:e["opted-out-at-round"]})}}class x extends n.Z{constructor({assets:e,currentRound:t,nextToken:r}){super(),this.assets=e,this.currentRound=t,this.nextToken=r,this.attribute_map={assets:"assets",currentRound:"current-round",nextToken:"next-token"}}static from_obj_for_encoding(e){if(!Array.isArray(e.assets))throw new Error(`Response is missing required array field 'assets': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new x({assets:e.assets.map(A.from_obj_for_encoding),currentRound:e["current-round"],nextToken:e["next-token"]})}}class _ extends n.Z{constructor({creator:e,decimals:t,total:r,clawback:n,defaultFrozen:o,freeze:s,manager:a,metadataHash:c,name:u,nameB64:l,reserve:p,unitName:h,unitNameB64:d,url:f,urlB64:g}){super(),this.creator=e,this.decimals=t,this.total=r,this.clawback=n,this.defaultFrozen=o,this.freeze=s,this.manager=a,this.metadataHash="string"==typeof c?new Uint8Array(i.from(c,"base64")):c,this.name=u,this.nameB64="string"==typeof l?new Uint8Array(i.from(l,"base64")):l,this.reserve=p,this.unitName=h,this.unitNameB64="string"==typeof d?new Uint8Array(i.from(d,"base64")):d,this.url=f,this.urlB64="string"==typeof g?new Uint8Array(i.from(g,"base64")):g,this.attribute_map={creator:"creator",decimals:"decimals",total:"total",clawback:"clawback",defaultFrozen:"default-frozen",freeze:"freeze",manager:"manager",metadataHash:"metadata-hash",name:"name",nameB64:"name-b64",reserve:"reserve",unitName:"unit-name",unitNameB64:"unit-name-b64",url:"url",urlB64:"url-b64"}}static from_obj_for_encoding(e){if(void 0===e.creator)throw new Error(`Response is missing required field 'creator': ${e}`);if(void 0===e.decimals)throw new Error(`Response is missing required field 'decimals': ${e}`);if(void 0===e.total)throw new Error(`Response is missing required field 'total': ${e}`);return new _({creator:e.creator,decimals:e.decimals,total:e.total,clawback:e.clawback,defaultFrozen:e["default-frozen"],freeze:e.freeze,manager:e.manager,metadataHash:e["metadata-hash"],name:e.name,nameB64:e["name-b64"],reserve:e.reserve,unitName:e["unit-name"],unitNameB64:e["unit-name-b64"],url:e.url,urlB64:e["url-b64"]})}}class S extends n.Z{constructor({asset:e,currentRound:t}){super(),this.asset=e,this.currentRound=t,this.attribute_map={asset:"asset",currentRound:"current-round"}}static from_obj_for_encoding(e){if(void 0===e.asset)throw new Error(`Response is missing required field 'asset': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new S({asset:w.from_obj_for_encoding(e.asset),currentRound:e["current-round"]})}}class E extends n.Z{constructor({assets:e,currentRound:t,nextToken:r}){super(),this.assets=e,this.currentRound=t,this.nextToken=r,this.attribute_map={assets:"assets",currentRound:"current-round",nextToken:"next-token"}}static from_obj_for_encoding(e){if(!Array.isArray(e.assets))throw new Error(`Response is missing required array field 'assets': ${e}`);if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);return new E({assets:e.assets.map(w.from_obj_for_encoding),currentRound:e["current-round"],nextToken:e["next-token"]})}}class B extends n.Z{constructor({genesisHash:e,genesisId:t,previousBlockHash:r,round:n,seed:o,timestamp:s,transactionsRoot:a,transactionsRootSha256:c,participationUpdates:u,rewards:l,stateProofTracking:p,transactions:h,txnCounter:d,upgradeState:f,upgradeVote:g}){super(),this.genesisHash="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.genesisId=t,this.previousBlockHash="string"==typeof r?new Uint8Array(i.from(r,"base64")):r,this.round=n,this.seed="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.timestamp=s,this.transactionsRoot="string"==typeof a?new Uint8Array(i.from(a,"base64")):a,this.transactionsRootSha256="string"==typeof c?new Uint8Array(i.from(c,"base64")):c,this.participationUpdates=u,this.rewards=l,this.stateProofTracking=p,this.transactions=h,this.txnCounter=d,this.upgradeState=f,this.upgradeVote=g,this.attribute_map={genesisHash:"genesis-hash",genesisId:"genesis-id",previousBlockHash:"previous-block-hash",round:"round",seed:"seed",timestamp:"timestamp",transactionsRoot:"transactions-root",transactionsRootSha256:"transactions-root-sha256",participationUpdates:"participation-updates",rewards:"rewards",stateProofTracking:"state-proof-tracking",transactions:"transactions",txnCounter:"txn-counter",upgradeState:"upgrade-state",upgradeVote:"upgrade-vote"}}static from_obj_for_encoding(e){if(void 0===e["genesis-hash"])throw new Error(`Response is missing required field 'genesis-hash': ${e}`);if(void 0===e["genesis-id"])throw new Error(`Response is missing required field 'genesis-id': ${e}`);if(void 0===e["previous-block-hash"])throw new Error(`Response is missing required field 'previous-block-hash': ${e}`);if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);if(void 0===e.seed)throw new Error(`Response is missing required field 'seed': ${e}`);if(void 0===e.timestamp)throw new Error(`Response is missing required field 'timestamp': ${e}`);if(void 0===e["transactions-root"])throw new Error(`Response is missing required field 'transactions-root': ${e}`);if(void 0===e["transactions-root-sha256"])throw new Error(`Response is missing required field 'transactions-root-sha256': ${e}`);return new B({genesisHash:e["genesis-hash"],genesisId:e["genesis-id"],previousBlockHash:e["previous-block-hash"],round:e.round,seed:e.seed,timestamp:e.timestamp,transactionsRoot:e["transactions-root"],transactionsRootSha256:e["transactions-root-sha256"],participationUpdates:void 0!==e["participation-updates"]?M.from_obj_for_encoding(e["participation-updates"]):void 0,rewards:void 0!==e.rewards?T.from_obj_for_encoding(e.rewards):void 0,stateProofTracking:void 0!==e["state-proof-tracking"]?e["state-proof-tracking"].map(V.from_obj_for_encoding):void 0,transactions:void 0!==e.transactions?e.transactions.map(J.from_obj_for_encoding):void 0,txnCounter:e["txn-counter"],upgradeState:void 0!==e["upgrade-state"]?k.from_obj_for_encoding(e["upgrade-state"]):void 0,upgradeVote:void 0!==e["upgrade-vote"]?U.from_obj_for_encoding(e["upgrade-vote"]):void 0})}}class T extends n.Z{constructor({feeSink:e,rewardsCalculationRound:t,rewardsLevel:r,rewardsPool:n,rewardsRate:i,rewardsResidue:o}){super(),this.feeSink=e,this.rewardsCalculationRound=t,this.rewardsLevel=r,this.rewardsPool=n,this.rewardsRate=i,this.rewardsResidue=o,this.attribute_map={feeSink:"fee-sink",rewardsCalculationRound:"rewards-calculation-round",rewardsLevel:"rewards-level",rewardsPool:"rewards-pool",rewardsRate:"rewards-rate",rewardsResidue:"rewards-residue"}}static from_obj_for_encoding(e){if(void 0===e["fee-sink"])throw new Error(`Response is missing required field 'fee-sink': ${e}`);if(void 0===e["rewards-calculation-round"])throw new Error(`Response is missing required field 'rewards-calculation-round': ${e}`);if(void 0===e["rewards-level"])throw new Error(`Response is missing required field 'rewards-level': ${e}`);if(void 0===e["rewards-pool"])throw new Error(`Response is missing required field 'rewards-pool': ${e}`);if(void 0===e["rewards-rate"])throw new Error(`Response is missing required field 'rewards-rate': ${e}`);if(void 0===e["rewards-residue"])throw new Error(`Response is missing required field 'rewards-residue': ${e}`);return new T({feeSink:e["fee-sink"],rewardsCalculationRound:e["rewards-calculation-round"],rewardsLevel:e["rewards-level"],rewardsPool:e["rewards-pool"],rewardsRate:e["rewards-rate"],rewardsResidue:e["rewards-residue"]})}}class k extends n.Z{constructor({currentProtocol:e,nextProtocol:t,nextProtocolApprovals:r,nextProtocolSwitchOn:n,nextProtocolVoteBefore:i}){super(),this.currentProtocol=e,this.nextProtocol=t,this.nextProtocolApprovals=r,this.nextProtocolSwitchOn=n,this.nextProtocolVoteBefore=i,this.attribute_map={currentProtocol:"current-protocol",nextProtocol:"next-protocol",nextProtocolApprovals:"next-protocol-approvals",nextProtocolSwitchOn:"next-protocol-switch-on",nextProtocolVoteBefore:"next-protocol-vote-before"}}static from_obj_for_encoding(e){if(void 0===e["current-protocol"])throw new Error(`Response is missing required field 'current-protocol': ${e}`);return new k({currentProtocol:e["current-protocol"],nextProtocol:e["next-protocol"],nextProtocolApprovals:e["next-protocol-approvals"],nextProtocolSwitchOn:e["next-protocol-switch-on"],nextProtocolVoteBefore:e["next-protocol-vote-before"]})}}class U extends n.Z{constructor({upgradeApprove:e,upgradeDelay:t,upgradePropose:r}){super(),this.upgradeApprove=e,this.upgradeDelay=t,this.upgradePropose=r,this.attribute_map={upgradeApprove:"upgrade-approve",upgradeDelay:"upgrade-delay",upgradePropose:"upgrade-propose"}}static from_obj_for_encoding(e){return new U({upgradeApprove:e["upgrade-approve"],upgradeDelay:e["upgrade-delay"],upgradePropose:e["upgrade-propose"]})}}class I extends n.Z{constructor({name:e,value:t}){super(),this.name="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.value="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.attribute_map={name:"name",value:"value"}}static from_obj_for_encoding(e){if(void 0===e.name)throw new Error(`Response is missing required field 'name': ${e}`);if(void 0===e.value)throw new Error(`Response is missing required field 'value': ${e}`);return new I({name:e.name,value:e.value})}}class R extends n.Z{constructor({name:e}){super(),this.name="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.attribute_map={name:"name"}}static from_obj_for_encoding(e){if(void 0===e.name)throw new Error(`Response is missing required field 'name': ${e}`);return new R({name:e.name})}}class C extends n.Z{constructor({applicationId:e,boxes:t,nextToken:r}){super(),this.applicationId=e,this.boxes=t,this.nextToken=r,this.attribute_map={applicationId:"application-id",boxes:"boxes",nextToken:"next-token"}}static from_obj_for_encoding(e){if(void 0===e["application-id"])throw new Error(`Response is missing required field 'application-id': ${e}`);if(!Array.isArray(e.boxes))throw new Error(`Response is missing required array field 'boxes': ${e}`);return new C({applicationId:e["application-id"],boxes:e.boxes.map(R.from_obj_for_encoding),nextToken:e["next-token"]})}}class D extends n.Z{constructor({message:e,data:t}){super(),this.message=e,this.data=t,this.attribute_map={message:"message",data:"data"}}static from_obj_for_encoding(e){if(void 0===e.message)throw new Error(`Response is missing required field 'message': ${e}`);return new D({message:e.message,data:e.data})}}class O extends n.Z{constructor({action:e,bytes:t,uint:r}){super(),this.action=e,this.bytes=t,this.uint=r,this.attribute_map={action:"action",bytes:"bytes",uint:"uint"}}static from_obj_for_encoding(e){if(void 0===e.action)throw new Error(`Response is missing required field 'action': ${e}`);return new O({action:e.action,bytes:e.bytes,uint:e.uint})}}class N extends n.Z{constructor({key:e,value:t}){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}static from_obj_for_encoding(e){if(void 0===e.key)throw new Error(`Response is missing required field 'key': ${e}`);if(void 0===e.value)throw new Error(`Response is missing required field 'value': ${e}`);return new N({key:e.key,value:O.from_obj_for_encoding(e.value)})}}class P extends n.Z{constructor({hashType:e}){super(),this.hashType=e,this.attribute_map={hashType:"hash-type"}}static from_obj_for_encoding(e){return new P({hashType:e["hash-type"]})}}class L extends n.Z{constructor({dbAvailable:e,isMigrating:t,message:r,round:n,version:i,data:o,errors:s}){super(),this.dbAvailable=e,this.isMigrating=t,this.message=r,this.round=n,this.version=i,this.data=o,this.errors=s,this.attribute_map={dbAvailable:"db-available",isMigrating:"is-migrating",message:"message",round:"round",version:"version",data:"data",errors:"errors"}}static from_obj_for_encoding(e){if(void 0===e["db-available"])throw new Error(`Response is missing required field 'db-available': ${e}`);if(void 0===e["is-migrating"])throw new Error(`Response is missing required field 'is-migrating': ${e}`);if(void 0===e.message)throw new Error(`Response is missing required field 'message': ${e}`);if(void 0===e.round)throw new Error(`Response is missing required field 'round': ${e}`);if(void 0===e.version)throw new Error(`Response is missing required field 'version': ${e}`);return new L({dbAvailable:e["db-available"],isMigrating:e["is-migrating"],message:e.message,round:e.round,version:e.version,data:e.data,errors:e.errors})}}class j extends n.Z{constructor({blockHeadersCommitment:e,firstAttestedRound:t,latestAttestedRound:r,lnProvenWeight:n,votersCommitment:o}){super(),this.blockHeadersCommitment="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.firstAttestedRound=t,this.latestAttestedRound=r,this.lnProvenWeight=n,this.votersCommitment="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.attribute_map={blockHeadersCommitment:"block-headers-commitment",firstAttestedRound:"first-attested-round",latestAttestedRound:"latest-attested-round",lnProvenWeight:"ln-proven-weight",votersCommitment:"voters-commitment"}}static from_obj_for_encoding(e){return new j({blockHeadersCommitment:e["block-headers-commitment"],firstAttestedRound:e["first-attested-round"],latestAttestedRound:e["latest-attested-round"],lnProvenWeight:e["ln-proven-weight"],votersCommitment:e["voters-commitment"]})}}class z extends n.Z{constructor({hashFactory:e,path:t,treeDepth:r}){super(),this.hashFactory=e,this.path=t,this.treeDepth=r,this.attribute_map={hashFactory:"hash-factory",path:"path",treeDepth:"tree-depth"}}static from_obj_for_encoding(e){return new z({hashFactory:void 0!==e["hash-factory"]?P.from_obj_for_encoding(e["hash-factory"]):void 0,path:e.path,treeDepth:e["tree-depth"]})}}class F extends n.Z{constructor({address:e,amount:t,isFrozen:r,deleted:n,optedInAtRound:i,optedOutAtRound:o}){super(),this.address=e,this.amount=t,this.isFrozen=r,this.deleted=n,this.optedInAtRound=i,this.optedOutAtRound=o,this.attribute_map={address:"address",amount:"amount",isFrozen:"is-frozen",deleted:"deleted",optedInAtRound:"opted-in-at-round",optedOutAtRound:"opted-out-at-round"}}static from_obj_for_encoding(e){if(void 0===e.address)throw new Error(`Response is missing required field 'address': ${e}`);if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e["is-frozen"])throw new Error(`Response is missing required field 'is-frozen': ${e}`);return new F({address:e.address,amount:e.amount,isFrozen:e["is-frozen"],deleted:e.deleted,optedInAtRound:e["opted-in-at-round"],optedOutAtRound:e["opted-out-at-round"]})}}class M extends n.Z{constructor({expiredParticipationAccounts:e}){super(),this.expiredParticipationAccounts=e,this.attribute_map={expiredParticipationAccounts:"expired-participation-accounts"}}static from_obj_for_encoding(e){return new M({expiredParticipationAccounts:e["expired-participation-accounts"]})}}class q extends n.Z{constructor({partProofs:e,positionsToReveal:t,reveals:r,saltVersion:n,sigCommit:o,sigProofs:s,signedWeight:a}){super(),this.partProofs=e,this.positionsToReveal=t,this.reveals=r,this.saltVersion=n,this.sigCommit="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.sigProofs=s,this.signedWeight=a,this.attribute_map={partProofs:"part-proofs",positionsToReveal:"positions-to-reveal",reveals:"reveals",saltVersion:"salt-version",sigCommit:"sig-commit",sigProofs:"sig-proofs",signedWeight:"signed-weight"}}static from_obj_for_encoding(e){return new q({partProofs:void 0!==e["part-proofs"]?z.from_obj_for_encoding(e["part-proofs"]):void 0,positionsToReveal:e["positions-to-reveal"],reveals:void 0!==e.reveals?e.reveals.map($.from_obj_for_encoding):void 0,saltVersion:e["salt-version"],sigCommit:e["sig-commit"],sigProofs:void 0!==e["sig-proofs"]?z.from_obj_for_encoding(e["sig-proofs"]):void 0,signedWeight:e["signed-weight"]})}}class H extends n.Z{constructor({verifier:e,weight:t}){super(),this.verifier=e,this.weight=t,this.attribute_map={verifier:"verifier",weight:"weight"}}static from_obj_for_encoding(e){return new H({verifier:void 0!==e.verifier?W.from_obj_for_encoding(e.verifier):void 0,weight:e.weight})}}class $ extends n.Z{constructor({participant:e,position:t,sigSlot:r}){super(),this.participant=e,this.position=t,this.sigSlot=r,this.attribute_map={participant:"participant",position:"position",sigSlot:"sig-slot"}}static from_obj_for_encoding(e){return new $({participant:void 0!==e.participant?H.from_obj_for_encoding(e.participant):void 0,position:e.position,sigSlot:void 0!==e["sig-slot"]?G.from_obj_for_encoding(e["sig-slot"]):void 0})}}class G extends n.Z{constructor({lowerSigWeight:e,signature:t}){super(),this.lowerSigWeight=e,this.signature=t,this.attribute_map={lowerSigWeight:"lower-sig-weight",signature:"signature"}}static from_obj_for_encoding(e){return new G({lowerSigWeight:e["lower-sig-weight"],signature:void 0!==e.signature?K.from_obj_for_encoding(e.signature):void 0})}}class K extends n.Z{constructor({falconSignature:e,merkleArrayIndex:t,proof:r,verifyingKey:n}){super(),this.falconSignature="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.merkleArrayIndex=t,this.proof=r,this.verifyingKey="string"==typeof n?new Uint8Array(i.from(n,"base64")):n,this.attribute_map={falconSignature:"falcon-signature",merkleArrayIndex:"merkle-array-index",proof:"proof",verifyingKey:"verifying-key"}}static from_obj_for_encoding(e){return new K({falconSignature:e["falcon-signature"],merkleArrayIndex:e["merkle-array-index"],proof:void 0!==e.proof?z.from_obj_for_encoding(e.proof):void 0,verifyingKey:e["verifying-key"]})}}class V extends n.Z{constructor({nextRound:e,onlineTotalWeight:t,type:r,votersCommitment:n}){super(),this.nextRound=e,this.onlineTotalWeight=t,this.type=r,this.votersCommitment="string"==typeof n?new Uint8Array(i.from(n,"base64")):n,this.attribute_map={nextRound:"next-round",onlineTotalWeight:"online-total-weight",type:"type",votersCommitment:"voters-commitment"}}static from_obj_for_encoding(e){return new V({nextRound:e["next-round"],onlineTotalWeight:e["online-total-weight"],type:e.type,votersCommitment:e["voters-commitment"]})}}class W extends n.Z{constructor({commitment:e,keyLifetime:t}){super(),this.commitment="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.keyLifetime=t,this.attribute_map={commitment:"commitment",keyLifetime:"key-lifetime"}}static from_obj_for_encoding(e){return new W({commitment:e.commitment,keyLifetime:e["key-lifetime"]})}}class Z extends n.Z{constructor({numByteSlice:e,numUint:t}){super(),this.numByteSlice=e,this.numUint=t,this.attribute_map={numByteSlice:"num-byte-slice",numUint:"num-uint"}}static from_obj_for_encoding(e){if(void 0===e["num-byte-slice"])throw new Error(`Response is missing required field 'num-byte-slice': ${e}`);if(void 0===e["num-uint"])throw new Error(`Response is missing required field 'num-uint': ${e}`);return new Z({numByteSlice:e["num-byte-slice"],numUint:e["num-uint"]})}}class X extends n.Z{constructor({key:e,value:t}){super(),this.key=e,this.value=t,this.attribute_map={key:"key",value:"value"}}static from_obj_for_encoding(e){if(void 0===e.key)throw new Error(`Response is missing required field 'key': ${e}`);if(void 0===e.value)throw new Error(`Response is missing required field 'value': ${e}`);return new X({key:e.key,value:Y.from_obj_for_encoding(e.value)})}}class Y extends n.Z{constructor({bytes:e,type:t,uint:r}){super(),this.bytes=e,this.type=t,this.uint=r,this.attribute_map={bytes:"bytes",type:"type",uint:"uint"}}static from_obj_for_encoding(e){if(void 0===e.bytes)throw new Error(`Response is missing required field 'bytes': ${e}`);if(void 0===e.type)throw new Error(`Response is missing required field 'type': ${e}`);if(void 0===e.uint)throw new Error(`Response is missing required field 'uint': ${e}`);return new Y({bytes:e.bytes,type:e.type,uint:e.uint})}}class J extends n.Z{constructor({fee:e,firstValid:t,lastValid:r,sender:n,applicationTransaction:o,assetConfigTransaction:s,assetFreezeTransaction:a,assetTransferTransaction:c,authAddr:u,closeRewards:l,closingAmount:p,confirmedRound:h,createdApplicationIndex:d,createdAssetIndex:f,genesisHash:g,genesisId:m,globalStateDelta:y,group:b,id:w,innerTxns:v,intraRoundOffset:A,keyregTransaction:x,lease:_,localStateDelta:S,logs:E,note:B,paymentTransaction:T,receiverRewards:k,rekeyTo:U,roundTime:I,senderRewards:R,signature:C,stateProofTransaction:D,txType:O}){super(),this.fee=e,this.firstValid=t,this.lastValid=r,this.sender=n,this.applicationTransaction=o,this.assetConfigTransaction=s,this.assetFreezeTransaction=a,this.assetTransferTransaction=c,this.authAddr=u,this.closeRewards=l,this.closingAmount=p,this.confirmedRound=h,this.createdApplicationIndex=d,this.createdAssetIndex=f,this.genesisHash="string"==typeof g?new Uint8Array(i.from(g,"base64")):g,this.genesisId=m,this.globalStateDelta=y,this.group="string"==typeof b?new Uint8Array(i.from(b,"base64")):b,this.id=w,this.innerTxns=v,this.intraRoundOffset=A,this.keyregTransaction=x,this.lease="string"==typeof _?new Uint8Array(i.from(_,"base64")):_,this.localStateDelta=S,this.logs=E,this.note="string"==typeof B?new Uint8Array(i.from(B,"base64")):B,this.paymentTransaction=T,this.receiverRewards=k,this.rekeyTo=U,this.roundTime=I,this.senderRewards=R,this.signature=C,this.stateProofTransaction=D,this.txType=O,this.attribute_map={fee:"fee",firstValid:"first-valid",lastValid:"last-valid",sender:"sender",applicationTransaction:"application-transaction",assetConfigTransaction:"asset-config-transaction",assetFreezeTransaction:"asset-freeze-transaction",assetTransferTransaction:"asset-transfer-transaction",authAddr:"auth-addr",closeRewards:"close-rewards",closingAmount:"closing-amount",confirmedRound:"confirmed-round",createdApplicationIndex:"created-application-index",createdAssetIndex:"created-asset-index",genesisHash:"genesis-hash",genesisId:"genesis-id",globalStateDelta:"global-state-delta",group:"group",id:"id",innerTxns:"inner-txns",intraRoundOffset:"intra-round-offset",keyregTransaction:"keyreg-transaction",lease:"lease",localStateDelta:"local-state-delta",logs:"logs",note:"note",paymentTransaction:"payment-transaction",receiverRewards:"receiver-rewards",rekeyTo:"rekey-to",roundTime:"round-time",senderRewards:"sender-rewards",signature:"signature",stateProofTransaction:"state-proof-transaction",txType:"tx-type"}}static from_obj_for_encoding(e){if(void 0===e.fee)throw new Error(`Response is missing required field 'fee': ${e}`);if(void 0===e["first-valid"])throw new Error(`Response is missing required field 'first-valid': ${e}`);if(void 0===e["last-valid"])throw new Error(`Response is missing required field 'last-valid': ${e}`);if(void 0===e.sender)throw new Error(`Response is missing required field 'sender': ${e}`);return new J({fee:e.fee,firstValid:e["first-valid"],lastValid:e["last-valid"],sender:e.sender,applicationTransaction:void 0!==e["application-transaction"]?Q.from_obj_for_encoding(e["application-transaction"]):void 0,assetConfigTransaction:void 0!==e["asset-config-transaction"]?ee.from_obj_for_encoding(e["asset-config-transaction"]):void 0,assetFreezeTransaction:void 0!==e["asset-freeze-transaction"]?te.from_obj_for_encoding(e["asset-freeze-transaction"]):void 0,assetTransferTransaction:void 0!==e["asset-transfer-transaction"]?re.from_obj_for_encoding(e["asset-transfer-transaction"]):void 0,authAddr:e["auth-addr"],closeRewards:e["close-rewards"],closingAmount:e["closing-amount"],confirmedRound:e["confirmed-round"],createdApplicationIndex:e["created-application-index"],createdAssetIndex:e["created-asset-index"],genesisHash:e["genesis-hash"],genesisId:e["genesis-id"],globalStateDelta:void 0!==e["global-state-delta"]?e["global-state-delta"].map(N.from_obj_for_encoding):void 0,group:e.group,id:e.id,innerTxns:void 0!==e["inner-txns"]?e["inner-txns"].map(J.from_obj_for_encoding):void 0,intraRoundOffset:e["intra-round-offset"],keyregTransaction:void 0!==e["keyreg-transaction"]?ne.from_obj_for_encoding(e["keyreg-transaction"]):void 0,lease:e.lease,localStateDelta:void 0!==e["local-state-delta"]?e["local-state-delta"].map(c.from_obj_for_encoding):void 0,logs:e.logs,note:e.note,paymentTransaction:void 0!==e["payment-transaction"]?ie.from_obj_for_encoding(e["payment-transaction"]):void 0,receiverRewards:e["receiver-rewards"],rekeyTo:e["rekey-to"],roundTime:e["round-time"],senderRewards:e["sender-rewards"],signature:void 0!==e.signature?se.from_obj_for_encoding(e.signature):void 0,stateProofTransaction:void 0!==e["state-proof-transaction"]?le.from_obj_for_encoding(e["state-proof-transaction"]):void 0,txType:e["tx-type"]})}}class Q extends n.Z{constructor({applicationId:e,accounts:t,applicationArgs:r,approvalProgram:n,clearStateProgram:o,extraProgramPages:s,foreignApps:a,foreignAssets:c,globalStateSchema:u,localStateSchema:l,onCompletion:p}){super(),this.applicationId=e,this.accounts=t,this.applicationArgs=r,this.approvalProgram="string"==typeof n?new Uint8Array(i.from(n,"base64")):n,this.clearStateProgram="string"==typeof o?new Uint8Array(i.from(o,"base64")):o,this.extraProgramPages=s,this.foreignApps=a,this.foreignAssets=c,this.globalStateSchema=u,this.localStateSchema=l,this.onCompletion=p,this.attribute_map={applicationId:"application-id",accounts:"accounts",applicationArgs:"application-args",approvalProgram:"approval-program",clearStateProgram:"clear-state-program",extraProgramPages:"extra-program-pages",foreignApps:"foreign-apps",foreignAssets:"foreign-assets",globalStateSchema:"global-state-schema",localStateSchema:"local-state-schema",onCompletion:"on-completion"}}static from_obj_for_encoding(e){if(void 0===e["application-id"])throw new Error(`Response is missing required field 'application-id': ${e}`);return new Q({applicationId:e["application-id"],accounts:e.accounts,applicationArgs:e["application-args"],approvalProgram:e["approval-program"],clearStateProgram:e["clear-state-program"],extraProgramPages:e["extra-program-pages"],foreignApps:e["foreign-apps"],foreignAssets:e["foreign-assets"],globalStateSchema:void 0!==e["global-state-schema"]?Z.from_obj_for_encoding(e["global-state-schema"]):void 0,localStateSchema:void 0!==e["local-state-schema"]?Z.from_obj_for_encoding(e["local-state-schema"]):void 0,onCompletion:e["on-completion"]})}}class ee extends n.Z{constructor({assetId:e,params:t}){super(),this.assetId=e,this.params=t,this.attribute_map={assetId:"asset-id",params:"params"}}static from_obj_for_encoding(e){return new ee({assetId:e["asset-id"],params:void 0!==e.params?_.from_obj_for_encoding(e.params):void 0})}}class te extends n.Z{constructor({address:e,assetId:t,newFreezeStatus:r}){super(),this.address=e,this.assetId=t,this.newFreezeStatus=r,this.attribute_map={address:"address",assetId:"asset-id",newFreezeStatus:"new-freeze-status"}}static from_obj_for_encoding(e){if(void 0===e.address)throw new Error(`Response is missing required field 'address': ${e}`);if(void 0===e["asset-id"])throw new Error(`Response is missing required field 'asset-id': ${e}`);if(void 0===e["new-freeze-status"])throw new Error(`Response is missing required field 'new-freeze-status': ${e}`);return new te({address:e.address,assetId:e["asset-id"],newFreezeStatus:e["new-freeze-status"]})}}class re extends n.Z{constructor({amount:e,assetId:t,receiver:r,closeAmount:n,closeTo:i,sender:o}){super(),this.amount=e,this.assetId=t,this.receiver=r,this.closeAmount=n,this.closeTo=i,this.sender=o,this.attribute_map={amount:"amount",assetId:"asset-id",receiver:"receiver",closeAmount:"close-amount",closeTo:"close-to",sender:"sender"}}static from_obj_for_encoding(e){if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e["asset-id"])throw new Error(`Response is missing required field 'asset-id': ${e}`);if(void 0===e.receiver)throw new Error(`Response is missing required field 'receiver': ${e}`);return new re({amount:e.amount,assetId:e["asset-id"],receiver:e.receiver,closeAmount:e["close-amount"],closeTo:e["close-to"],sender:e.sender})}}class ne extends n.Z{constructor({nonParticipation:e,selectionParticipationKey:t,stateProofKey:r,voteFirstValid:n,voteKeyDilution:o,voteLastValid:s,voteParticipationKey:a}){super(),this.nonParticipation=e,this.selectionParticipationKey="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.stateProofKey="string"==typeof r?new Uint8Array(i.from(r,"base64")):r,this.voteFirstValid=n,this.voteKeyDilution=o,this.voteLastValid=s,this.voteParticipationKey="string"==typeof a?new Uint8Array(i.from(a,"base64")):a,this.attribute_map={nonParticipation:"non-participation",selectionParticipationKey:"selection-participation-key",stateProofKey:"state-proof-key",voteFirstValid:"vote-first-valid",voteKeyDilution:"vote-key-dilution",voteLastValid:"vote-last-valid",voteParticipationKey:"vote-participation-key"}}static from_obj_for_encoding(e){return new ne({nonParticipation:e["non-participation"],selectionParticipationKey:e["selection-participation-key"],stateProofKey:e["state-proof-key"],voteFirstValid:e["vote-first-valid"],voteKeyDilution:e["vote-key-dilution"],voteLastValid:e["vote-last-valid"],voteParticipationKey:e["vote-participation-key"]})}}class ie extends n.Z{constructor({amount:e,receiver:t,closeAmount:r,closeRemainderTo:n}){super(),this.amount=e,this.receiver=t,this.closeAmount=r,this.closeRemainderTo=n,this.attribute_map={amount:"amount",receiver:"receiver",closeAmount:"close-amount",closeRemainderTo:"close-remainder-to"}}static from_obj_for_encoding(e){if(void 0===e.amount)throw new Error(`Response is missing required field 'amount': ${e}`);if(void 0===e.receiver)throw new Error(`Response is missing required field 'receiver': ${e}`);return new ie({amount:e.amount,receiver:e.receiver,closeAmount:e["close-amount"],closeRemainderTo:e["close-remainder-to"]})}}class oe extends n.Z{constructor({currentRound:e,transaction:t}){super(),this.currentRound=e,this.transaction=t,this.attribute_map={currentRound:"current-round",transaction:"transaction"}}static from_obj_for_encoding(e){if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);if(void 0===e.transaction)throw new Error(`Response is missing required field 'transaction': ${e}`);return new oe({currentRound:e["current-round"],transaction:J.from_obj_for_encoding(e.transaction)})}}class se extends n.Z{constructor({logicsig:e,multisig:t,sig:r}){super(),this.logicsig=e,this.multisig=t,this.sig="string"==typeof r?new Uint8Array(i.from(r,"base64")):r,this.attribute_map={logicsig:"logicsig",multisig:"multisig",sig:"sig"}}static from_obj_for_encoding(e){return new se({logicsig:void 0!==e.logicsig?ae.from_obj_for_encoding(e.logicsig):void 0,multisig:void 0!==e.multisig?ce.from_obj_for_encoding(e.multisig):void 0,sig:e.sig})}}class ae extends n.Z{constructor({logic:e,args:t,multisigSignature:r,signature:n}){super(),this.logic="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.args=t,this.multisigSignature=r,this.signature="string"==typeof n?new Uint8Array(i.from(n,"base64")):n,this.attribute_map={logic:"logic",args:"args",multisigSignature:"multisig-signature",signature:"signature"}}static from_obj_for_encoding(e){if(void 0===e.logic)throw new Error(`Response is missing required field 'logic': ${e}`);return new ae({logic:e.logic,args:e.args,multisigSignature:void 0!==e["multisig-signature"]?ce.from_obj_for_encoding(e["multisig-signature"]):void 0,signature:e.signature})}}class ce extends n.Z{constructor({subsignature:e,threshold:t,version:r}){super(),this.subsignature=e,this.threshold=t,this.version=r,this.attribute_map={subsignature:"subsignature",threshold:"threshold",version:"version"}}static from_obj_for_encoding(e){return new ce({subsignature:void 0!==e.subsignature?e.subsignature.map(ue.from_obj_for_encoding):void 0,threshold:e.threshold,version:e.version})}}class ue extends n.Z{constructor({publicKey:e,signature:t}){super(),this.publicKey="string"==typeof e?new Uint8Array(i.from(e,"base64")):e,this.signature="string"==typeof t?new Uint8Array(i.from(t,"base64")):t,this.attribute_map={publicKey:"public-key",signature:"signature"}}static from_obj_for_encoding(e){return new ue({publicKey:e["public-key"],signature:e.signature})}}class le extends n.Z{constructor({message:e,stateProof:t,stateProofType:r}){super(),this.message=e,this.stateProof=t,this.stateProofType=r,this.attribute_map={message:"message",stateProof:"state-proof",stateProofType:"state-proof-type"}}static from_obj_for_encoding(e){return new le({message:void 0!==e.message?j.from_obj_for_encoding(e.message):void 0,stateProof:void 0!==e["state-proof"]?q.from_obj_for_encoding(e["state-proof"]):void 0,stateProofType:e["state-proof-type"]})}}class pe extends n.Z{constructor({currentRound:e,transactions:t,nextToken:r}){super(),this.currentRound=e,this.transactions=t,this.nextToken=r,this.attribute_map={currentRound:"current-round",transactions:"transactions",nextToken:"next-token"}}static from_obj_for_encoding(e){if(void 0===e["current-round"])throw new Error(`Response is missing required field 'current-round': ${e}`);if(!Array.isArray(e.transactions))throw new Error(`Response is missing required array field 'transactions': ${e}`);return new pe({currentRound:e["current-round"],transactions:e.transactions.map(J.from_obj_for_encoding),nextToken:e["next-token"]})}}},8680:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(7197);class i{constructor(e,t){this.c=e,this.query={},this.intDecoding=t||n.Z.DEFAULT}prepare(e){return e}async do(e={}){const t={};"default"!==this.intDecoding&&(t.intDecoding=this.intDecoding);const r=await this.c.get(this.path(),this.query,e,t);return this.prepare(r.body)}async doRaw(e={}){return(await this.c.get(this.path(),this.query,e,{},!1)).body}setIntDecoding(e){if("default"!==e&&"safe"!==e&&"mixed"!==e&&"bigint"!==e)throw new Error(`Invalid method for int decoding: ${e}`);return this.intDecoding=e,this}}},3480:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(1113),i=r(7197);class o{constructor(e,t,r,o,s={}){if("function"==typeof t.get)this.c=new n.default(t);else{let i;i="string"==typeof t?function(e="",t){const r={};return r[t]=e,r}(t,e):t,this.c=new n.default(i,r,o,s)}this.intDecoding=i.Z.DEFAULT}setIntEncoding(e){this.intDecoding=e}getIntEncoding(){return this.intDecoding}}},3458:(e,t,r)=>{"use strict";r.d(t,{b:()=>h,A:()=>f});var n=r(7677),i=r(5592),o=r(1988),s=r(1063),a=r(5062),c=r(834),u=r(1624),l=r(2486).Buffer;const p=l.from([21,31,124,117]);var h;function d(e,t,r){if(null!=r&&e===r)return 0;const n=null==r?0:1;for(let r=0;r<t.length;r++)if(e===t[r])return r+n;return t.push(e),t.length-1+n}!function(e){e[e.BUILDING=0]="BUILDING",e[e.BUILT=1]="BUILT",e[e.SIGNED=2]="SIGNED",e[e.SUBMITTED=3]="SUBMITTED",e[e.COMMITTED=4]="COMMITTED"}(h||(h={}));class f{constructor(){this.status=h.BUILDING,this.transactions=[],this.methodCalls=new Map,this.signedTxns=[],this.txIDs=[]}getStatus(){return this.status}count(){return this.transactions.length}clone(){const e=new f;return e.transactions=this.transactions.map((({txn:e,signer:t})=>({txn:i.Transaction.from_obj_for_encoding({...e.get_obj_for_encoding(),grp:void 0}),signer:t}))),e.methodCalls=new Map(this.methodCalls),e}addTransaction(e){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length===f.MAX_GROUP_SIZE)throw new Error(`Adding an additional transaction exceeds the maximum atomic group size of ${f.MAX_GROUP_SIZE}`);if(e.txn.group&&e.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");this.transactions.push(e)}addMethodCall({appID:e,method:t,methodArgs:r,sender:i,suggestedParams:s,onComplete:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:m,numLocalInts:y,numLocalByteSlices:b,extraPages:w,boxes:v,note:A,lease:x,rekeyTo:_,signer:S}){if(this.status!==h.BUILDING)throw new Error("Cannot add transactions when composer status is not BUILDING");if(this.transactions.length+t.txnCount()>f.MAX_GROUP_SIZE)throw new Error(`Adding additional transactions exceeds the maximum atomic group size of ${f.MAX_GROUP_SIZE}`);if(0===e){if(null==l||null==p||null==g||null==m||null==y||null==b)throw new Error("One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices")}else if(a===u.hq.UpdateApplicationOC){if(null==l||null==p)throw new Error("One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram");if(null!=g||null!=m||null!=y||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages")}else if(null!=l||null!=p||null!=g||null!=m||null!=y||null!=b||null!=w)throw new Error("One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages");if(null==r&&(r=[]),r.length!==t.args.length)throw new Error(`Incorrect number of method arguments. Expected ${t.args.length}, got ${r.length}`);let E=[],B=[];const T=[],k=[],U=[],I=new Map,R=v||[];for(let e=0;e<r.length;e++){let i=t.args[e].type;const o=r[e];if((0,n.AE)(i)){if(!(0,c.Xw)(o)||!(0,n.vJ)(i,o.txn))throw new Error(`Expected ${i} transaction for argument at index ${e}`);if(o.txn.group&&o.txn.group.some((e=>0!==e)))throw new Error("Cannot add a transaction with nonzero group ID");T.push(o)}else{if((0,c.Xw)(o))throw new Error(`Expected non-transaction value for argument at index ${e}`);if((0,n.o5)(i)&&(I.set(k.length,E.length),k.push(i),U.push(o),i=new n.Pu(8)),"string"==typeof i)throw new Error(`Unknown ABI type: ${i}`);E.push(i),B.push(o)}}const C=[],D=[],O=[],N=[];for(let t=0;t<k.length;t++){const r=k[t],o=U[t];let s=0;switch(r){case n.UV.account:{const e=new n.JQ;s=d(e.decode(e.encode(o)),D,i);break}case n.UV.application:{const t=new n.Pu(64),r=t.decode(t.encode(o));if(r>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for application value, got ${r}`);s=d(Number(r),O,e);break}case n.UV.asset:{const e=new n.Pu(64),t=e.decode(e.encode(o));if(t>Number.MAX_SAFE_INTEGER)throw new Error(`Expected safe integer for asset value, got ${t}`);s=d(Number(t),N);break}default:throw new Error(`Unknown reference type: ${r}`)}C.push(s)}for(let e=0;e<C.length;e++)B[I.get(e)]=C[e];if(E.length>15){const e=E.slice(14),t=B.slice(14);E=E.slice(0,14),B=B.slice(0,14),E.push(new n.w1(e)),B.push(t)}const P=[t.getSelector()];for(let e=0;e<E.length;e++)P.push(E[e].encode(B[e]));const L={txn:(0,o.makeApplicationCallTxnFromObject)({from:i,appIndex:e,appArgs:P,accounts:D,foreignApps:O,foreignAssets:N,boxes:R,onComplete:null==a?u.hq.NoOpOC:a,approvalProgram:l,clearProgram:p,numGlobalInts:g,numGlobalByteSlices:m,numLocalInts:y,numLocalByteSlices:b,extraPages:w,lease:x,note:A,rekeyTo:_,suggestedParams:s}),signer:S};this.transactions.push(...T,L),this.methodCalls.set(this.transactions.length-1,t)}buildGroup(){if(this.status===h.BUILDING){if(0===this.transactions.length)throw new Error("Cannot build a group with 0 transactions");this.transactions.length>1&&(0,s.assignGroupID)(this.transactions.map((e=>e.txn))),this.status=h.BUILT}return this.transactions}async gatherSignatures(){if(this.status>=h.SIGNED)return this.signedTxns;const e=this.buildGroup(),t=e.map((e=>e.txn)),r=new Map;for(let t=0;t<e.length;t++){const{signer:n}=e[t];r.has(n)||r.set(n,[]),r.get(n).push(t)}const n=Array.from(r),o=await Promise.all(n.map((([e,r])=>e(t,r)))),s=e.map((()=>null));for(let e=0;e<n.length;e++){const t=n[e][1],r=o[e];for(let e=0;e<t.length;e++)s[t[e]]=r[e]}if(!s.every((e=>null!=e)))throw new Error(`Missing signatures. Got ${s}`);const a=s.map(((e,t)=>{try{return(0,i.decodeSignedTransaction)(e).txn.txID()}catch(e){throw new Error(`Cannot decode signed transaction at index ${t}. ${e}`)}}));return this.signedTxns=s,this.txIDs=a,this.status=h.SIGNED,s}async submit(e){if(this.status>h.SUBMITTED)throw new Error("Transaction group cannot be resubmitted");const t=await this.gatherSignatures();return await e.sendRawTransaction(t).do(),this.status=h.SUBMITTED,this.txIDs}async execute(e,t){if(this.status===h.COMMITTED)throw new Error("Transaction group has already been executed successfully");const r=await this.submit(e);this.status=h.SUBMITTED;const n=this.transactions.findIndex(((e,t)=>this.methodCalls.has(t))),i=-1===n?0:n,o=await(0,a.K)(e,r[i],t);this.status=h.COMMITTED;const s=o["confirmed-round"],c=[];for(const[t,i]of this.methodCalls){const s=r[t],a={txID:s,rawReturnValue:new Uint8Array,method:i};try{const r=t===n?o:await e.pendingTransactionInformation(s).do();if(a.txInfo=r,"void"!==i.returns.type){const e=r.logs||[];if(0===e.length)throw new Error("App call transaction did not log a return value");const t=l.from(e[e.length-1],"base64");if(t.byteLength<4||!t.slice(0,4).equals(p))throw new Error("App call transaction did not log a return value");a.rawReturnValue=new Uint8Array(t.slice(4)),a.returnValue=i.returns.type.decode(a.rawReturnValue)}}catch(e){a.decodeError=e}c.push(a)}return{confirmedRound:s,txIDs:r,methodResults:c}}}f.MAX_GROUP_SIZE=16},9070:(e,t,r)=>{"use strict";r.d(t,{rD:()=>i,_:()=>o,HN:()=>s});const n=1e6,i="Microalgos should be positive and less than 2^53 - 1.";function o(e){if(e<0||!Number.isSafeInteger(e))throw new Error(i);return e/n}function s(e){const t=e*n;return Math.round(t)}},4383:(e,t,r)=>{"use strict";r.d(t,{P:()=>c,x:()=>m});var n=r(1685),i=r(1824),o=r(7116),s=r(2486).Buffer;function a(e){return e.params["approval-program"]=s.from(e.params["approval-program"].toString(),"base64"),e.params["clear-state-program"]=s.from(e.params["clear-state-program"].toString(),"base64"),e}async function c({client:e,txns:t,protocolVersion:r,latestTimestamp:s,round:c,sources:u}){const l=[],p=[],h=[],d=[],f=[];for(const e of t)e.txn.type===i.i.appl&&(f.push((0,o.encodeAddress)(e.txn.from.publicKey)),e.txn.appAccounts&&f.push(...e.txn.appAccounts.map((e=>(0,o.encodeAddress)(e.publicKey)))),e.txn.appForeignApps&&(h.push(...e.txn.appForeignApps),f.push(...e.txn.appForeignApps.map((e=>(0,o.getApplicationAddress)(e))))),e.txn.appForeignAssets&&d.push(...e.txn.appForeignAssets),void 0===e.txn.appIndex||0===e.txn.appIndex?l.push(new n.Application(1380011588,new n.ApplicationParams({creator:(0,o.encodeAddress)(e.txn.from.publicKey),approvalProgram:e.txn.appApprovalProgram,clearStateProgram:e.txn.appClearProgram,localStateSchema:new n.ApplicationStateSchema(e.txn.appLocalInts,e.txn.appLocalByteSlices),globalStateSchema:new n.ApplicationStateSchema(e.txn.appGlobalInts,e.txn.appGlobalByteSlices)}))):(h.push(e.txn.appIndex),f.push((0,o.getApplicationAddress)(e.txn.appIndex))));const g=[];for(const t of[...new Set(d)])g.push(e.getAssetByID(t).do().then((e=>{f.push(e.params.creator)})));await Promise.all(g);const m=[];for(const t of[...new Set(h)])m.push(e.getApplicationByID(t).do().then((e=>{const t=a(e);l.push(t),f.push(t.params.creator)})));await Promise.all(m);const y=[];for(const t of[...new Set(f)])y.push(e.accountInformation(t).do().then((e=>{"created-apps"in e&&(e["created-apps"]=e["created-apps"].map((e=>a(e)))),p.push(e)})));return await Promise.all(y),new n.DryrunRequest({txns:t.map((e=>({...e,txn:e.txn.get_obj_for_encoding()}))),accounts:p,apps:l,latestTimestamp:s,round:c,protocolVersion:r,sources:u})}class u{constructor(e){this.type=0,this.bytes="",this.uint=0,this.type=e.type,this.bytes=e.bytes,this.uint=e.uint}toString(){return 1===this.type?`0x${s.from(this.bytes,"base64").toString("hex")}`:this.uint.toString()}}class l{constructor(e){this.error="",this.line=0,this.pc=0,this.scratch=[],this.stack=[],this.error=void 0===e.error?"":e.error,this.line=e.line,this.pc=e.pc,this.scratch=e.scratch,this.stack=e.stack.map((e=>new u(e)))}}class p{constructor(e){this.trace=[],null!=e&&(this.trace=e.map((e=>new l(e))))}}function h(e,t){return e.length>t&&t>0?`${e.slice(0,t)}...`:e}function d(e,t){if(0===t.length)return"";let r=null;for(let n=0;n<t.length;n++)(n>e.length||JSON.stringify(e[n])!==JSON.stringify(t[n]))&&(r=n);if(null==r)return"";const n=t[r];return n.bytes.length>0?`${r} = 0x${s.from(n.bytes,"base64").toString("hex")}`:`${r} = ${n.uint.toString()}`}function f(e,t){return`[${(t?e.reverse():e).map((e=>{switch(e.type){case 1:return`0x${s.from(e.bytes,"base64").toString("hex")}`;case 2:return`${e.uint.toString()}`;default:return""}})).join(", ")}]`}class g{constructor(e){this.disassembly=[],this.appCallMessages=[],this.localDeltas=[],this.globalDelta=[],this.cost=0,this.logicSigMessages=[],this.logicSigDisassembly=[],this.logs=[],this.appCallTrace=void 0,this.logicSigTrace=void 0,this.required=["disassembly"],this.optionals=["app-call-messages","local-deltas","global-delta","cost","logic-sig-messages","logic-sig-disassembly","logs"],this.traces=["app-call-trace","logic-sig-trace"],this.disassembly=e.disassembly,this.appCallMessages=e["app-call-messages"],this.localDeltas=e["local-deltas"],this.globalDelta=e["global-delta"],this.cost=e.cost,this.logicSigMessages=e["logic-sig-messages"],this.logicSigDisassembly=e["logic-sig-disassembly"],this.logs=e.logs,this.appCallTrace=new p(e["app-call-trace"]),this.logicSigTrace=new p(e["logic-sig-trace"])}appCallRejected(){return void 0!==this.appCallMessages&&this.appCallMessages.includes("REJECT")}logicSigRejected(){return void 0!==this.logicSigMessages&&this.logicSigMessages.includes("REJECT")}static trace(e,t,r){const n=r.maxValueWidth||30,i=[["pc#","ln#","source","scratch","stack"]];for(let o=0;o<e.trace.length;o++){const{line:s,error:a,pc:c,scratch:u,stack:l}=e.trace[o],p=void 0!==u?u:[],g=o>0&&void 0!==e.trace[o-1].scratch?e.trace[o-1].scratch:[],m=""===a?t[s]:`!! ${a} !!`;i.push([c.toString().padEnd(3," "),s.toString().padEnd(3," "),h(m,n),h(d(g,p),n),h(f(l,r.topOfStackFirst),n)])}const o=i.reduce(((e,t)=>{const r=new Array(i[0].length).fill(0);for(let n=0;n<e.length;n++)r[n]=t[n].length>e[n]?t[n].length:e[n];return r}),new Array(i[0].length).fill(0));return`${i.map((e=>e.map(((e,t)=>e.padEnd(o[t]+1," "))).join("|").trim())).join("\n")}\n`}appTrace(e){if(void 0===this.appCallTrace||!this.disassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!1}),g.trace(this.appCallTrace,this.disassembly,t)}lsigTrace(e){if(void 0===this.logicSigTrace||void 0===this.logicSigDisassembly)return"";let t=e;return void 0===e&&(t={maxValueWidth:30,topOfStackFirst:!0}),g.trace(this.logicSigTrace,this.logicSigDisassembly,t)}}class m{constructor(e){this.error="",this.protocolVersion="",this.txns=[],this.error=e.error,this.protocolVersion=e["protocol-version"],this.txns=e.txns.map((e=>new g(e)))}}},7116:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_ZERO_ADDRESS_STRING:()=>u,MALFORMED_ADDRESS_ERROR_MSG:()=>h,CHECKSUM_ADDRESS_ERROR_MSG:()=>d,INVALID_MSIG_VERSION_ERROR_MSG:()=>f,INVALID_MSIG_THRESHOLD_ERROR_MSG:()=>g,INVALID_MSIG_PK_ERROR_MSG:()=>m,UNEXPECTED_PK_LEN_ERROR_MSG:()=>y,decodeAddress:()=>b,isValidAddress:()=>w,encodeAddress:()=>v,fromMultisigPreImg:()=>A,fromMultisigPreImgAddrs:()=>x,getApplicationAddress:()=>_});var n=r(7267),i=r.n(n),o=r(9404),s=r(413),a=r(6963),c=r(2486).Buffer;const u="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",l=new Uint8Array([77,117,108,116,105,115,105,103,65,100,100,114]),p=c.from("appID"),h="address seems to be malformed",d="wrong checksum for address",f="invalid multisig version",g="bad multisig threshold",m="bad multisig public key - wrong length",y="nacl public key length is not 32 bytes";function b(e){if("string"!=typeof e||58!==e.length)throw new Error(h);const t=i().decode.asBytes(e.toString());if(36!==t.length)throw new Error(h);const r=new Uint8Array(t.slice(0,32)),n=new Uint8Array(t.slice(o.PUBLIC_KEY_LENGTH,36)),a=o.genericHash(r).slice(o.HASH_BYTES_LENGTH-4,o.HASH_BYTES_LENGTH);if(!s.arrayEqual(a,n))throw new Error(d);return{publicKey:r,checksum:n}}function w(e){try{b(e)}catch(e){return!1}return!0}function v(e){const t=o.genericHash(e).slice(o.PUBLIC_KEY_LENGTH-4,o.PUBLIC_KEY_LENGTH);return i().encode(s.concatArrays(e,t)).toString().slice(0,58)}function A({version:e,threshold:t,pks:r}){if(1!==e||e>255||e<0)throw new Error(f);if(0===t||0===r.length||t>r.length||t>255)throw new Error(g);if(32!==o.PUBLIC_KEY_LENGTH)throw new Error(y);const n=new Uint8Array(l.length+2+32*r.length);n.set(l,0),n.set([e],l.length),n.set([t],l.length+1);for(let e=0;e<r.length;e++){if(32!==r[e].length)throw new Error(m);n.set(r[e],l.length+2+32*e)}return new Uint8Array(o.genericHash(n))}function x({version:e,threshold:t,addrs:r}){return v(A({version:e,threshold:t,pks:r.map((e=>b(e).publicKey))}))}function _(e){const t=s.concatArrays(p,(0,a.T)(e)),r=o.genericHash(t);return v(new Uint8Array(r))}},8922:(e,t,r)=>{"use strict";r.d(t,{j:()=>i,v:()=>o});var n=r(2486).Buffer;function i(e,t){let r=e.toString(16);r.length!==2*t&&(r=r.padStart(2*t,"0"));const n=new Uint8Array(r.length/2);for(let e=0,t=0;e<r.length/2;e++,t+=2)n[e]=parseInt(r.slice(t,t+2),16);return n}function o(e){let t=BigInt(0);const r=n.from(e);for(let n=0;n<e.length;n++)t=BigInt(Number(r.readUIntBE(n,1)))+t*BigInt(256);return t}},3033:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ERROR_CONTAINS_EMPTY_STRING:()=>i,encode:()=>o,decode:()=>s});var n=r(5406);const i="The object contains empty or 0 values. First empty or 0 value encountered during encoding: ";function o(e){const t=function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&(!e[t]||0===e[t].length))return{containsEmpty:!0,firstEmptyKey:t};return{containsEmpty:!1,firstEmptyKey:void 0}}(e);if(t.containsEmpty)throw new Error(i+t.firstEmptyKey);return n.encode(e,{sortKeys:!0})}function s(e){return n.decode(e)}},6963:(e,t,r)=>{"use strict";r.d(t,{T:()=>i,u:()=>o});var n=r(2486).Buffer;function i(e){if("bigint"!=typeof e&&!Number.isInteger(e)||e<0||e>BigInt("0xffffffffffffffff"))throw new Error("Input is not a 64-bit unsigned integer");const t=n.allocUnsafe(8);return t.writeBigUInt64BE(BigInt(e)),new Uint8Array(t)}function o(e,t="safe"){if("safe"!==t&&"mixed"!==t&&"bigint"!==t)throw new Error(`Unknown decodingMode option: ${t}`);if(0===e.byteLength||e.byteLength>8)throw new Error(`Data has unacceptable length. Expected length is between 1 and 8, got ${e.byteLength}`);const r=n.allocUnsafe(8-e.byteLength);r.fill(0);const i=n.concat([r,n.from(e)]).readBigUInt64BE(),o=i>Number.MAX_SAFE_INTEGER;if("safe"===t){if(o)throw new Error(`Integer exceeds maximum safe integer: ${i.toString()}. Try decoding with "mixed" or "safe" decodingMode.`);return Number(i)}return"mixed"!==t||o?i:Number(i)}},1063:(e,t,r)=>{"use strict";r.r(t),r.d(t,{TxGroup:()=>u,computeGroupID:()=>l,assignGroupID:()=>p,default:()=>h});var n=r(5592),i=r(9404),o=r(3033),s=r(7116),a=r(413),c=r(2486).Buffer;class u{constructor(e){if(this.name="Transaction group",this.tag=c.from("TG"),e.length>16){const t=`${e.length.toString()} transactions grouped together but max group size is ${16..toString()}`;throw Error(t)}this.txGroupHashes=e}get_obj_for_encoding(){return{txlist:this.txGroupHashes}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);t.name="Transaction group",t.tag=c.from("TG"),t.txGroupHashes=[];for(const r of e.txlist)t.txGroupHashes.push(c.from(r));return t}toByte(){return o.encode(this.get_obj_for_encoding())}}function l(e){const t=[];for(const r of e){const e=n.instantiateTxnIfNeeded(r);t.push(e.rawTxID())}const r=new u(t),o=r.toByte(),s=c.from(a.concatArrays(r.tag,o)),l=i.genericHash(s);return c.from(l)}function p(e,t){const r=l(e),i=[];for(const o of e){const e=n.instantiateTxnIfNeeded(o);t&&s.encodeAddress(e.from.publicKey)!==t||(e.group=r,i.push(e))}return i}const h=u},5583:(e,t,r)=>{"use strict";r.r(t),r.d(t,{checkByteConstBlock:()=>d,checkIntConstBlock:()=>h,checkProgram:()=>p,checkPushByteOp:()=>g,checkPushIntOp:()=>f,langspecEvalMaxVersion:()=>m,langspecLogicSigVersion:()=>y,parseUvarint:()=>o,readProgram:()=>l});const n=JSON.parse('{"z_":6,"BV":5,"AP":[{"Opcode":0,"Name":"err","Cost":1,"Size":1,"Doc":"Fail immediately.","Groups":["Flow Control"]},{"Opcode":1,"Name":"sha256","Args":"B","Returns":"B","Cost":35,"Size":1,"Doc":"SHA256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":2,"Name":"keccak256","Args":"B","Returns":"B","Cost":130,"Size":1,"Doc":"Keccak256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":3,"Name":"sha512_256","Args":"B","Returns":"B","Cost":45,"Size":1,"Doc":"SHA512_256 hash of value A, yields [32]byte","Groups":["Arithmetic"]},{"Opcode":4,"Name":"ed25519verify","Args":"BBB","Returns":"U","Cost":1900,"Size":1,"Doc":"for (data A, signature B, pubkey C) verify the signature of (\\"ProgData\\" || program_hash || data) against the pubkey => {0 or 1}","DocExtra":"The 32 byte public key is the last element on the stack, preceded by the 64 byte signature at the second-to-last element on the stack, preceded by the data which was signed at the third-to-last element on the stack.","Groups":["Arithmetic"]},{"Opcode":5,"Name":"ecdsa_verify","Args":"BBBBB","Returns":"U","Cost":1700,"Size":2,"Doc":"for (data A, signature B, C and pubkey D, E) verify the signature of the data against the pubkey => {0 or 1}","DocExtra":"The 32 byte Y-component of a public key is the last element on the stack, preceded by X-component of a pubkey, preceded by S and R components of a signature, preceded by the data that is fifth element on the stack. All values are big-endian encoded. The signed data must be 32 bytes long, and signatures in lower-S form are only accepted.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":6,"Name":"ecdsa_pk_decompress","Args":"B","Returns":"BB","Cost":650,"Size":2,"Doc":"decompress pubkey A into components X, Y","DocExtra":"The 33 byte public key in a compressed form to be decompressed into X and Y (top) components. All values are big-endian encoded.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":7,"Name":"ecdsa_pk_recover","Args":"BUBB","Returns":"BB","Cost":2000,"Size":2,"Doc":"for (data A, recovery id B, signature C, D) recover a public key","DocExtra":"S (top) and R elements of a signature, recovery id and data (bottom) are expected on the stack and used to deriver a public key. All values are big-endian encoded. The signed data must be 32 bytes long.","ImmediateNote":"{uint8 curve index}","Groups":["Arithmetic"]},{"Opcode":8,"Name":"+","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A plus B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `addw`.","Groups":["Arithmetic"]},{"Opcode":9,"Name":"-","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A minus B. Fail if B > A.","Groups":["Arithmetic"]},{"Opcode":10,"Name":"/","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by B (truncated division). Fail if B == 0.","DocExtra":"`divmodw` is available to divide the two-element values produced by `mulw` and `addw`.","Groups":["Arithmetic"]},{"Opcode":11,"Name":"*","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times B. Fail on overflow.","DocExtra":"Overflow is an error condition which halts execution and fails the transaction. Full precision is available from `mulw`.","Groups":["Arithmetic"]},{"Opcode":12,"Name":"<","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":13,"Name":">","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":14,"Name":"<=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A less than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":15,"Name":">=","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A greater than or equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":16,"Name":"&&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero and B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":17,"Name":"||","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A is not zero or B is not zero => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":18,"Name":"==","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":19,"Name":"!=","Args":"..","Returns":"U","Cost":1,"Size":1,"Doc":"A is not equal to B => {0 or 1}","Groups":["Arithmetic"]},{"Opcode":20,"Name":"!","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"A == 0 yields 1; else 0","Groups":["Arithmetic"]},{"Opcode":21,"Name":"len","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"yields length of byte value A","Groups":["Arithmetic"]},{"Opcode":22,"Name":"itob","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"converts uint64 A to big endian bytes","Groups":["Arithmetic"]},{"Opcode":23,"Name":"btoi","Args":"B","Returns":"U","Cost":1,"Size":1,"Doc":"converts bytes A as big endian to uint64","DocExtra":"`btoi` fails if the input is longer than 8 bytes.","Groups":["Arithmetic"]},{"Opcode":24,"Name":"%","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A modulo B. Fail if B == 0.","Groups":["Arithmetic"]},{"Opcode":25,"Name":"|","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-or B","Groups":["Arithmetic"]},{"Opcode":26,"Name":"&","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-and B","Groups":["Arithmetic"]},{"Opcode":27,"Name":"^","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A bitwise-xor B","Groups":["Arithmetic"]},{"Opcode":28,"Name":"~","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"bitwise invert value A","Groups":["Arithmetic"]},{"Opcode":29,"Name":"mulw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A times B as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low","Groups":["Arithmetic"]},{"Opcode":30,"Name":"addw","Args":"UU","Returns":"UU","Cost":1,"Size":1,"Doc":"A plus B as a 128-bit result. X is the carry-bit, Y is the low-order 64 bits.","Groups":["Arithmetic"]},{"Opcode":31,"Name":"divmodw","Args":"UUUU","Returns":"UUUU","Cost":20,"Size":1,"Doc":"W,X = (A,B / C,D); Y,Z = (A,B modulo C,D)","DocExtra":"The notation J,K indicates that two uint64 values J and K are interpreted as a uint128 value, with J as the high uint64 and K the low.","Groups":["Arithmetic"]},{"Opcode":32,"Name":"intcblock","Cost":1,"Size":0,"Doc":"prepare block of uint64 constants for use by intc","DocExtra":"`intcblock` loads following program bytes into an array of integer constants in the evaluator. These integer constants can be referred to by `intc` and `intc_*` which will push the value onto the stack. Subsequent calls to `intcblock` reset and replace the integer constants available to the script.","ImmediateNote":"{varuint length} [{varuint value}, ...]","Groups":["Loading Values"]},{"Opcode":33,"Name":"intc","Returns":"U","Cost":1,"Size":2,"Doc":"Ith constant from intcblock","ImmediateNote":"{uint8 int constant index}","Groups":["Loading Values"]},{"Opcode":34,"Name":"intc_0","Returns":"U","Cost":1,"Size":1,"Doc":"constant 0 from intcblock","Groups":["Loading Values"]},{"Opcode":35,"Name":"intc_1","Returns":"U","Cost":1,"Size":1,"Doc":"constant 1 from intcblock","Groups":["Loading Values"]},{"Opcode":36,"Name":"intc_2","Returns":"U","Cost":1,"Size":1,"Doc":"constant 2 from intcblock","Groups":["Loading Values"]},{"Opcode":37,"Name":"intc_3","Returns":"U","Cost":1,"Size":1,"Doc":"constant 3 from intcblock","Groups":["Loading Values"]},{"Opcode":38,"Name":"bytecblock","Cost":1,"Size":0,"Doc":"prepare block of byte-array constants for use by bytec","DocExtra":"`bytecblock` loads the following program bytes into an array of byte-array constants in the evaluator. These constants can be referred to by `bytec` and `bytec_*` which will push the value onto the stack. Subsequent calls to `bytecblock` reset and replace the bytes constants available to the script.","ImmediateNote":"{varuint length} [({varuint value length} bytes), ...]","Groups":["Loading Values"]},{"Opcode":39,"Name":"bytec","Returns":"B","Cost":1,"Size":2,"Doc":"Ith constant from bytecblock","ImmediateNote":"{uint8 byte constant index}","Groups":["Loading Values"]},{"Opcode":40,"Name":"bytec_0","Returns":"B","Cost":1,"Size":1,"Doc":"constant 0 from bytecblock","Groups":["Loading Values"]},{"Opcode":41,"Name":"bytec_1","Returns":"B","Cost":1,"Size":1,"Doc":"constant 1 from bytecblock","Groups":["Loading Values"]},{"Opcode":42,"Name":"bytec_2","Returns":"B","Cost":1,"Size":1,"Doc":"constant 2 from bytecblock","Groups":["Loading Values"]},{"Opcode":43,"Name":"bytec_3","Returns":"B","Cost":1,"Size":1,"Doc":"constant 3 from bytecblock","Groups":["Loading Values"]},{"Opcode":44,"Name":"arg","Returns":"B","Cost":1,"Size":2,"Doc":"Nth LogicSig argument","ImmediateNote":"{uint8 arg index N}","Groups":["Loading Values"]},{"Opcode":45,"Name":"arg_0","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 0","Groups":["Loading Values"]},{"Opcode":46,"Name":"arg_1","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 1","Groups":["Loading Values"]},{"Opcode":47,"Name":"arg_2","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 2","Groups":["Loading Values"]},{"Opcode":48,"Name":"arg_3","Returns":"B","Cost":1,"Size":1,"Doc":"LogicSig argument 3","Groups":["Loading Values"]},{"Opcode":49,"Name":"txn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of current transaction","DocExtra":"FirstValidTime causes the program to fail. The field is reserved for future use.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":50,"Name":"global","Returns":".","Cost":1,"Size":2,"Doc":"global field F","ImmediateNote":"{uint8 global field index}","Groups":["Loading Values"]},{"Opcode":51,"Name":"gtxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If this transaction is _i_ in the group, `gtxn i field` is equivalent to `txn field`.","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":52,"Name":"load","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value. All scratch spaces are 0 at program start.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":53,"Name":"store","Args":".","Cost":1,"Size":2,"Doc":"store A to the Ith scratch space","ImmediateNote":"{uint8 position in scratch space to store to}","Groups":["Loading Values"]},{"Opcode":54,"Name":"txna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":55,"Name":"gtxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":56,"Name":"gtxns","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Ath transaction in the current group","DocExtra":"for notes on transaction fields available, see `txn`. If top of stack is _i_, `gtxns field` is equivalent to `gtxn _i_ field`. gtxns exists so that _i_ can be calculated, often based on the index of the current transaction.","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":57,"Name":"gtxnsa","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Loading Values"]},{"Opcode":58,"Name":"gload","Returns":".","Cost":1,"Size":3,"Doc":"Ith scratch space value of the Tth transaction in the current group","DocExtra":"`gload` fails unless the requested transaction is an ApplicationCall and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index} {uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":59,"Name":"gloads","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ith scratch space value of the Ath transaction in the current group","DocExtra":"`gloads` fails unless the requested transaction is an ApplicationCall and A < GroupIndex.","ImmediateNote":"{uint8 position in scratch space to load from}","Groups":["Loading Values"]},{"Opcode":60,"Name":"gaid","Returns":"U","Cost":1,"Size":2,"Doc":"ID of the asset or application created in the Tth transaction of the current group","DocExtra":"`gaid` fails unless the requested transaction created an asset or application and T < GroupIndex.","ImmediateNote":"{uint8 transaction group index}","Groups":["Loading Values"]},{"Opcode":61,"Name":"gaids","Args":"U","Returns":"U","Cost":1,"Size":1,"Doc":"ID of the asset or application created in the Ath transaction of the current group","DocExtra":"`gaids` fails unless the requested transaction created an asset or application and A < GroupIndex.","Groups":["Loading Values"]},{"Opcode":62,"Name":"loads","Args":"U","Returns":".","Cost":1,"Size":1,"Doc":"Ath scratch space value.  All scratch spaces are 0 at program start.","Groups":["Loading Values"]},{"Opcode":63,"Name":"stores","Args":"U.","Cost":1,"Size":1,"Doc":"store B to the Ath scratch space","Groups":["Loading Values"]},{"Opcode":64,"Name":"bnz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is not zero","DocExtra":"The `bnz` instruction opcode 0x40 is followed by two immediate data bytes which are a high byte first and low byte second which together form a 16 bit offset which the instruction may branch to. For a bnz instruction at `pc`, if the last element of the stack is not zero then branch to instruction at `pc + 3 + N`, else proceed to next instruction at `pc + 3`. Branch targets must be aligned instructions. (e.g. Branching to the second byte of a 2 byte op will be rejected.) Starting at v4, the offset is treated as a signed 16 bit integer allowing for backward branches and looping. In prior version (v1 to v3), branch offsets are limited to forward branches only, 0-0x7fff.\\n\\nAt v2 it became allowed to branch to the end of the program exactly after the last instruction: bnz to byte N (with 0-indexing) was illegal for a TEAL program with N bytes before v2, and is legal after it. This change eliminates the need for a last instruction of no-op as a branch target at the end. (Branching beyond the end--in other words, to a byte larger than N--is still illegal and will cause the program to fail.)","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":65,"Name":"bz","Args":"U","Cost":1,"Size":3,"Doc":"branch to TARGET if value A is zero","DocExtra":"See `bnz` for details on how branches work. `bz` inverts the behavior of `bnz`.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":66,"Name":"b","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET","DocExtra":"See `bnz` for details on how branches work. `b` always jumps to the offset.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":67,"Name":"return","Args":"U","Cost":1,"Size":1,"Doc":"use A as success value; end","Groups":["Flow Control"]},{"Opcode":68,"Name":"assert","Args":"U","Cost":1,"Size":1,"Doc":"immediately fail unless A is a non-zero number","Groups":["Flow Control"]},{"Opcode":72,"Name":"pop","Args":".","Cost":1,"Size":1,"Doc":"discard A","Groups":["Flow Control"]},{"Opcode":73,"Name":"dup","Args":".","Returns":"..","Cost":1,"Size":1,"Doc":"duplicate A","Groups":["Flow Control"]},{"Opcode":74,"Name":"dup2","Args":"..","Returns":"....","Cost":1,"Size":1,"Doc":"duplicate A and B","Groups":["Flow Control"]},{"Opcode":75,"Name":"dig","Args":".","Returns":"..","Cost":1,"Size":2,"Doc":"Nth value from the top of the stack. dig 0 is equivalent to dup","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":76,"Name":"swap","Args":"..","Returns":"..","Cost":1,"Size":1,"Doc":"swaps A and B on stack","Groups":["Flow Control"]},{"Opcode":77,"Name":"select","Args":"..U","Returns":".","Cost":1,"Size":1,"Doc":"selects one of two values based on top-of-stack: B if C != 0, else A","Groups":["Flow Control"]},{"Opcode":78,"Name":"cover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove top of stack, and place it deeper in the stack such that N elements are above it. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":79,"Name":"uncover","Args":".","Returns":".","Cost":1,"Size":2,"Doc":"remove the value at depth N in the stack and shift above items down so the Nth deep value is on top of the stack. Fails if stack depth <= N.","ImmediateNote":"{uint8 depth}","Groups":["Flow Control"]},{"Opcode":80,"Name":"concat","Args":"BB","Returns":"B","Cost":1,"Size":1,"Doc":"join A and B","DocExtra":"`concat` fails if the result would be greater than 4096 bytes.","Groups":["Arithmetic"]},{"Opcode":81,"Name":"substring","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including E. If E < S, or either is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 end position}","Groups":["Byte Array Manipulation"]},{"Opcode":82,"Name":"substring3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including C. If C < B, or either is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":83,"Name":"getbit","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"Bth bit of (byte-array or integer) A.","DocExtra":"see explanation of bit ordering in setbit","Groups":["Arithmetic"]},{"Opcode":84,"Name":"setbit","Args":".UU","Returns":".","Cost":1,"Size":1,"Doc":"Copy of (byte-array or integer) A, with the Bth bit set to (0 or 1) C","DocExtra":"When A is a uint64, index 0 is the least significant bit. Setting bit 3 to 1 on the integer 0 yields 8, or 2^3. When A is a byte array, index 0 is the leftmost bit of the leftmost byte. Setting bits 0 through 11 to 1 in a 4-byte-array of 0s yields the byte array 0xfff00000. Setting bit 3 to 1 on the 1-byte-array 0x00 yields the byte array 0x10.","Groups":["Arithmetic"]},{"Opcode":85,"Name":"getbyte","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"Bth byte of A, as an integer","Groups":["Arithmetic"]},{"Opcode":86,"Name":"setbyte","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"Copy of A with the Bth byte set to small integer (between 0..255) C","Groups":["Arithmetic"]},{"Opcode":87,"Name":"extract","Args":"B","Returns":"B","Cost":1,"Size":3,"Doc":"A range of bytes from A starting at S up to but not including S+L. If L is 0, then extract to the end of the string. If S or S+L is larger than the array length, the program fails","ImmediateNote":"{uint8 start position} {uint8 length}","Groups":["Byte Array Manipulation"]},{"Opcode":88,"Name":"extract3","Args":"BUU","Returns":"B","Cost":1,"Size":1,"Doc":"A range of bytes from A starting at B up to but not including B+C. If B+C is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":89,"Name":"extract_uint16","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint16 formed from a range of big-endian bytes from A starting at B up to but not including B+2. If B+2 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":90,"Name":"extract_uint32","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint32 formed from a range of big-endian bytes from A starting at B up to but not including B+4. If B+4 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":91,"Name":"extract_uint64","Args":"BU","Returns":"U","Cost":1,"Size":1,"Doc":"A uint64 formed from a range of big-endian bytes from A starting at B up to but not including B+8. If B+8 is larger than the array length, the program fails","Groups":["Byte Array Manipulation"]},{"Opcode":96,"Name":"balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get balance for account A, in microalgos. The balance is observed after the effects of previous transactions in the group, and after the fee for the current transaction is deducted.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":97,"Name":"app_opted_in","Args":".U","Returns":"U","Cost":1,"Size":1,"Doc":"1 if account A is opted in to application B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: 1 if opted in and 0 otherwise.","Groups":["State Access"]},{"Opcode":98,"Name":"app_local_get","Args":".B","Returns":".","Cost":1,"Size":1,"Doc":"local state of the key B in the current application in account A","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":99,"Name":"app_local_get_ex","Args":".UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the local state of application B, key C in account A. Y is 1 if key existed, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":100,"Name":"app_global_get","Args":"B","Returns":".","Cost":1,"Size":1,"Doc":"global state of the key A in the current application","DocExtra":"params: state key. Return: value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":101,"Name":"app_global_get_ex","Args":"UB","Returns":".U","Cost":1,"Size":1,"Doc":"X is the global state of application A, key B. Y is 1 if key existed, else 0","DocExtra":"params: Txn.ForeignApps offset (or, since v4, an _available_ application id), state key. Return: did_exist flag (top of the stack, 1 if the application and key existed and 0 otherwise), value. The value is zero (of type uint64) if the key does not exist.","Groups":["State Access"]},{"Opcode":102,"Name":"app_local_put","Args":".B.","Cost":1,"Size":1,"Doc":"write C to key B in account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key, value.","Groups":["State Access"]},{"Opcode":103,"Name":"app_global_put","Args":"B.","Cost":1,"Size":1,"Doc":"write B to key A in the global state of the current application","Groups":["State Access"]},{"Opcode":104,"Name":"app_local_del","Args":".B","Cost":1,"Size":1,"Doc":"delete key B from account A\'s local state of the current application","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), state key.\\n\\nDeleting a key which is already absent has no effect on the application local state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":105,"Name":"app_global_del","Args":"B","Cost":1,"Size":1,"Doc":"delete key A from the global state of the current application","DocExtra":"params: state key.\\n\\nDeleting a key which is already absent has no effect on the application global state. (In particular, it does _not_ cause the program to fail.)","Groups":["State Access"]},{"Opcode":112,"Name":"asset_holding_get","Args":".U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetBalance","AssetFrozen"],"ArgEnumTypes":"UU","Doc":"X is field F from account A\'s holding of asset B. Y is 1 if A is opted into B, else 0","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ address), asset id (or, since v4, a Txn.ForeignAssets offset). Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset holding field index}","Groups":["State Access"]},{"Opcode":113,"Name":"asset_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AssetTotal","AssetDecimals","AssetDefaultFrozen","AssetUnitName","AssetName","AssetURL","AssetMetadataHash","AssetManager","AssetReserve","AssetFreeze","AssetClawback","AssetCreator"],"ArgEnumTypes":"UUUBBBBBBBBB","Doc":"X is field F from asset A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignAssets offset (or, since v4, an _available_ asset id. Return: did_exist flag (1 if the asset existed and 0 otherwise), value.","ImmediateNote":"{uint8 asset params field index}","Groups":["State Access"]},{"Opcode":114,"Name":"app_params_get","Args":"U","Returns":".U","Cost":1,"Size":2,"ArgEnum":["AppApprovalProgram","AppClearStateProgram","AppGlobalNumUint","AppGlobalNumByteSlice","AppLocalNumUint","AppLocalNumByteSlice","AppExtraProgramPages","AppCreator","AppAddress"],"ArgEnumTypes":"BBUUUUUBB","Doc":"X is field F from app A. Y is 1 if A exists, else 0","DocExtra":"params: Txn.ForeignApps offset or an _available_ app id. Return: did_exist flag (1 if the application existed and 0 otherwise), value.","ImmediateNote":"{uint8 app params field index}","Groups":["State Access"]},{"Opcode":115,"Name":"acct_params_get","Args":".","Returns":".U","Cost":1,"Size":2,"Doc":"X is field F from account A. Y is 1 if A owns positive algos, else 0","ImmediateNote":"{uint8 account params field index}","Groups":["State Access"]},{"Opcode":120,"Name":"min_balance","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"get minimum required balance for account A, in microalgos. Required balance is affected by [ASA](https://developer.algorand.org/docs/features/asa/#assets-overview) and [App](https://developer.algorand.org/docs/features/asc1/stateful/#minimum-balance-requirement-for-a-smart-contract) usage. When creating or opting into an app, the minimum balance grows before the app code runs, therefore the increase is visible there. When deleting or closing out, the minimum balance decreases after the app executes.","DocExtra":"params: Txn.Accounts offset (or, since v4, an _available_ account address), _available_ application id (or, since v4, a Txn.ForeignApps offset). Return: value.","Groups":["State Access"]},{"Opcode":128,"Name":"pushbytes","Returns":"B","Cost":1,"Size":0,"Doc":"immediate BYTES","DocExtra":"pushbytes args are not added to the bytecblock during assembly processes","ImmediateNote":"{varuint length} {bytes}","Groups":["Loading Values"]},{"Opcode":129,"Name":"pushint","Returns":"U","Cost":1,"Size":0,"Doc":"immediate UINT","DocExtra":"pushint args are not added to the intcblock during assembly processes","ImmediateNote":"{varuint int}","Groups":["Loading Values"]},{"Opcode":136,"Name":"callsub","Cost":1,"Size":3,"Doc":"branch unconditionally to TARGET, saving the next instruction on the call stack","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","ImmediateNote":"{int16 branch offset, big endian}","Groups":["Flow Control"]},{"Opcode":137,"Name":"retsub","Cost":1,"Size":1,"Doc":"pop the top instruction from the call stack and branch to it","DocExtra":"The call stack is separate from the data stack. Only `callsub` and `retsub` manipulate it.","Groups":["Flow Control"]},{"Opcode":144,"Name":"shl","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A times 2^B, modulo 2^64","Groups":["Arithmetic"]},{"Opcode":145,"Name":"shr","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A divided by 2^B","Groups":["Arithmetic"]},{"Opcode":146,"Name":"sqrt","Args":"U","Returns":"U","Cost":4,"Size":1,"Doc":"The largest integer I such that I^2 <= A","Groups":["Arithmetic"]},{"Opcode":147,"Name":"bitlen","Args":".","Returns":"U","Cost":1,"Size":1,"Doc":"The highest set bit in A. If A is a byte-array, it is interpreted as a big-endian unsigned integer. bitlen of 0 is 0, bitlen of 8 is 4","DocExtra":"bitlen interprets arrays as big-endian integers, unlike setbit/getbit","Groups":["Arithmetic"]},{"Opcode":148,"Name":"exp","Args":"UU","Returns":"U","Cost":1,"Size":1,"Doc":"A raised to the Bth power. Fail if A == B == 0 and on overflow","Groups":["Arithmetic"]},{"Opcode":149,"Name":"expw","Args":"UU","Returns":"UU","Cost":10,"Size":1,"Doc":"A raised to the Bth power as a 128-bit result in two uint64s. X is the high 64 bits, Y is the low. Fail if A == B == 0 or if the results exceeds 2^128-1","Groups":["Arithmetic"]},{"Opcode":150,"Name":"bsqrt","Args":"B","Returns":"B","Cost":40,"Size":1,"Doc":"The largest integer I such that I^2 <= A. A and I are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":151,"Name":"divw","Args":"UUU","Returns":"U","Cost":1,"Size":1,"Doc":"A,B / C. Fail if C == 0 or if result overflows.","DocExtra":"The notation A,B indicates that A and B are interpreted as a uint128 value, with A as the high uint64 and B the low.","Groups":["Arithmetic"]},{"Opcode":160,"Name":"b+","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A plus B. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":161,"Name":"b-","Args":"BB","Returns":"B","Cost":10,"Size":1,"Doc":"A minus B. A and B are interpreted as big-endian unsigned integers. Fail on underflow.","Groups":["Byte Array Arithmetic"]},{"Opcode":162,"Name":"b/","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A divided by B (truncated division). A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":163,"Name":"b*","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A times B. A and B are interpreted as big-endian unsigned integers.","Groups":["Byte Array Arithmetic"]},{"Opcode":164,"Name":"b<","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":165,"Name":"b>","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":166,"Name":"b<=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is less than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":167,"Name":"b>=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is greater than or equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":168,"Name":"b==","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"1 if A is equal to B, else 0. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":169,"Name":"b!=","Args":"BB","Returns":"U","Cost":1,"Size":1,"Doc":"0 if A is equal to B, else 1. A and B are interpreted as big-endian unsigned integers","Groups":["Byte Array Arithmetic"]},{"Opcode":170,"Name":"b%","Args":"BB","Returns":"B","Cost":20,"Size":1,"Doc":"A modulo B. A and B are interpreted as big-endian unsigned integers. Fail if B is zero.","Groups":["Byte Array Arithmetic"]},{"Opcode":171,"Name":"b|","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-or B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":172,"Name":"b&","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-and B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":173,"Name":"b^","Args":"BB","Returns":"B","Cost":6,"Size":1,"Doc":"A bitwise-xor B. A and B are zero-left extended to the greater of their lengths","Groups":["Byte Array Logic"]},{"Opcode":174,"Name":"b~","Args":"B","Returns":"B","Cost":4,"Size":1,"Doc":"A with all bits inverted","Groups":["Byte Array Logic"]},{"Opcode":175,"Name":"bzero","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"zero filled byte-array of length A","Groups":["Loading Values"]},{"Opcode":176,"Name":"log","Args":"B","Cost":1,"Size":1,"Doc":"write A to log state of the current application","DocExtra":"`log` fails if called more than MaxLogCalls times in a program, or if the sum of logged bytes exceeds 1024 bytes.","Groups":["State Access"]},{"Opcode":177,"Name":"itxn_begin","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in a new transaction group","DocExtra":"`itxn_begin` initializes Sender to the application address; Fee to the minimum allowable, taking into account MinTxnFee and credit from overpaying in earlier transactions; FirstValid/LastValid to the values in the invoking transaction, and all other fields to zero or empty values.","Groups":["Inner Transactions"]},{"Opcode":178,"Name":"itxn_field","Args":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"set field F of the current inner transaction to A","DocExtra":"`itxn_field` fails if A is of the wrong type for F, including a byte array of the wrong size for use as an address when F is an address field. `itxn_field` also fails if A is an account, asset, or app that is not _available_, or an attempt is made extend an array field beyond the limit imposed by consensus parameters. (Addresses set into asset params of acfg transactions need not be _available_.)","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":179,"Name":"itxn_submit","Cost":1,"Size":1,"Doc":"execute the current inner transaction group. Fail if executing this group would exceed the inner transaction limit, or if any transaction in the group fails.","DocExtra":"`itxn_submit` resets the current transaction so that it can not be resubmitted. A new `itxn_begin` is required to prepare another inner transaction.","Groups":["Inner Transactions"]},{"Opcode":180,"Name":"itxn","Returns":".","Cost":1,"Size":2,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":181,"Name":"itxna","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":182,"Name":"itxn_next","Cost":1,"Size":1,"Doc":"begin preparation of a new inner transaction in the same transaction group","DocExtra":"`itxn_next` initializes the transaction exactly as `itxn_begin` does","Groups":["Inner Transactions"]},{"Opcode":183,"Name":"gitxn","Returns":".","Cost":1,"Size":3,"ArgEnum":["Sender","Fee","FirstValid","FirstValidTime","LastValid","Note","Lease","Receiver","Amount","CloseRemainderTo","VotePK","SelectionPK","VoteFirst","VoteLast","VoteKeyDilution","Type","TypeEnum","XferAsset","AssetAmount","AssetSender","AssetReceiver","AssetCloseTo","GroupIndex","TxID","ApplicationID","OnCompletion","ApplicationArgs","NumAppArgs","Accounts","NumAccounts","ApprovalProgram","ClearStateProgram","RekeyTo","ConfigAsset","ConfigAssetTotal","ConfigAssetDecimals","ConfigAssetDefaultFrozen","ConfigAssetUnitName","ConfigAssetName","ConfigAssetURL","ConfigAssetMetadataHash","ConfigAssetManager","ConfigAssetReserve","ConfigAssetFreeze","ConfigAssetClawback","FreezeAsset","FreezeAssetAccount","FreezeAssetFrozen","Assets","NumAssets","Applications","NumApplications","GlobalNumUint","GlobalNumByteSlice","LocalNumUint","LocalNumByteSlice","ExtraProgramPages","Nonparticipation","Logs","NumLogs","CreatedAssetID","CreatedApplicationID","LastLog","StateProofPK"],"ArgEnumTypes":"BUUUUBBBUBBBUUUBUUUBBBUBUUBUBUBBBUUUUBBBBBBBBUBUUUUUUUUUUUBUUUBB","Doc":"field F of the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":184,"Name":"gitxna","Returns":".","Cost":1,"Size":4,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ith value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index} {uint8 transaction field array index}","Groups":["Inner Transactions"]},{"Opcode":192,"Name":"txnas","Args":"U","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F of the current transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":193,"Name":"gtxnas","Args":"U","Returns":".","Cost":1,"Size":3,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Ath value of the array field F from the Tth transaction in the current group","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":194,"Name":"gtxnsas","Args":"UU","Returns":".","Cost":1,"Size":2,"ArgEnum":["ApplicationArgs","Accounts","Assets","Applications","Logs"],"ArgEnumTypes":"BBUUB","Doc":"Bth value of the array field F from the Ath transaction in the current group","ImmediateNote":"{uint8 transaction field index}","Groups":["Loading Values"]},{"Opcode":195,"Name":"args","Args":"U","Returns":"B","Cost":1,"Size":1,"Doc":"Ath LogicSig argument","Groups":["Loading Values"]},{"Opcode":196,"Name":"gloadss","Args":"UU","Returns":".","Cost":1,"Size":1,"Doc":"Bth scratch space value of the Ath transaction in the current group","Groups":["Loading Values"]},{"Opcode":197,"Name":"itxnas","Args":"U","Returns":".","Cost":1,"Size":2,"Doc":"Ath value of the array field F of the last inner transaction","ImmediateNote":"{uint8 transaction field index}","Groups":["Inner Transactions"]},{"Opcode":198,"Name":"gitxnas","Args":"U","Returns":".","Cost":1,"Size":3,"Doc":"Ath value of the array field F from the Tth transaction in the last inner group submitted","ImmediateNote":"{uint8 transaction group index} {uint8 transaction field index}","Groups":["Inner Transactions"]}]}');let i;function o(e){let t=0,r=0;for(let n=0;n<e.length;n++){const i=e[n];if(i<128)return n>9||9===n&&i>1?[0,-(n+1)]:[t|i<<r,n+1];t+=(127&i)<<r,r+=7}return[0,0]}function s(e,t){let r=1;const n=o(e.slice(t+r)),i=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode int const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<i;n++){if(t+r>=e.length)throw new Error("intcblock ran past end of program");let i;if([i,s]=o(e.slice(t+r)),s<=0)throw new Error(`could not decode int const[${n}] block size at pc=${t+r}`);a.push(i),r+=s}return[r,a]}function a(e,t){let r=1;const n=o(e.slice(t+r)),i=n[0];let s=n[1];if(s<=0)throw new Error(`could not decode []byte const block size at pc=${t+r}`);const a=[];r+=s;for(let n=0;n<i;n++){if(t+r>=e.length)throw new Error("bytecblock ran past end of program");let i;if([i,s]=o(e.slice(t+r)),s<=0)throw new Error(`could not decode []byte] const[${n}] block size at pc=${t+r}`);if(r+=s,t+r+i>e.length)throw new Error("bytecblock ran past end of program");const c=e.slice(t+r,t+r+i);a.push(c),r+=i}return[r,a]}function c(e,t){let r=1;const[n,i]=o(e.slice(t+r));if(i<=0)throw new Error(`could not decode push int const at pc=${t+r}`);return r+=i,[r,n]}function u(e,t){let r=1;const[n,i]=o(e.slice(t+r));if(i<=0)throw new Error(`could not decode push []byte const size at pc=${t+r}`);if(r+=i,t+r+n>e.length)throw new Error("pushbytes ran past end of program");const s=e.slice(t+r,t+r+n);return r+=n,[r,s]}function l(e,t){if(!e)throw new Error("empty program");if(void 0===t&&(t=[]),!Array.isArray(t))throw new Error("invalid arguments");const[r,l]=o(e);if(l<=0)throw new Error("version parsing error");if(r>n.z_)throw new Error("unsupported version");let p=0,{length:h}=e;for(const e of t)h+=e.length;if(h>1e3)throw new Error("program too long");if(!i){i={};for(const e of n.AP)i[e.Opcode]=e}let d=l,f=[],g=[];for(;d<e.length;){const t=i[e[d]];if(void 0===t)throw new Error("invalid instruction");p+=t.Cost;let r=t.Size;if(0===r)switch(t.Opcode){case 32:{let t;[r,t]=s(e,d),f=f.concat(t);break}case 38:{let t;[r,t]=a(e,d),g=g.concat(t);break}case 129:{let t;[r,t]=c(e,d),f.push(t);break}case 128:{let t;[r,t]=u(e,d),g.push(t);break}default:throw new Error("invalid instruction")}d+=r}if(r<4&&p>2e4)throw new Error("program too costly for version < 4. consider using v4.");return[f,g,!0]}function p(e,t){const[,,r]=l(e,t);return r}function h(e,t){const[r]=s(e,t);return r}function d(e,t){const[r]=a(e,t);return r}function f(e,t){const[r]=c(e,t);return r}function g(e,t){const[r]=u(e,t);return r}const m=n.z_,y=n.BV},7519:(e,t,r)=>{"use strict";r.d(t,{Y:()=>o});let n={},i={};"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split("").forEach((function(e,t){n[e]=t,i[t]=e}));class o{constructor({version:e,sources:t,names:r,mappings:i}){if(this.version=e,this.sources=t,this.names=r,this.mappings=i,3!==this.version)throw new Error(`Only version 3 is supported, got ${this.version}`);if(void 0===this.mappings)throw new Error("mapping undefined, cannot build source map without `mapping`");const o=this.mappings.split(";").map((e=>{const t=function(e){let t=[],r=0,i=0;for(let o=0;o<e.length;o+=1){let s=n[e[o]];if(void 0===s)throw new Error("Invalid character ("+e[o]+")");const a=32&s;if(s&=31,i+=s<<r,a)r+=5;else{const e=1&i;i>>>=1,e?t.push(0===i?-2147483648:-i):t.push(i),i=r=0}}return t}(e);if(t.length>2)return t[2]}));this.pcToLine={},this.lineToPc={};let s=0;for(const[e,t]of o.entries())void 0!==t&&(s+=t),s in this.lineToPc||(this.lineToPc[s]=[]),this.lineToPc[s].push(e),this.pcToLine[e]=s}getLineForPc(e){return this.pcToLine[e]}getPcsForLine(e){return this.lineToPc[e]}}},8800:(e,t,r)=>{"use strict";r.r(t),r.d(t,{sanityCheckProgram:()=>l,LogicSig:()=>p,LogicSigAccount:()=>h,makeLogicSig:()=>d,signLogicSigTransactionObject:()=>f,signLogicSigTransaction:()=>g,logicSigFromByte:()=>m,tealSign:()=>b,tealSignFromProgram:()=>w});var n=r(9404),i=r(7116),o=r(3033),s=r(4158),a=r(413),c=r(5592),u=r(2486).Buffer;function l(e){if(!e||0===e.length)throw new Error("empty program");const t="\n".charCodeAt(0),r=" ".charCodeAt(0),n="~".charCodeAt(0);if(e.every((e=>e===t||(e=>r<=e&&e<=n)(e)))){const t=u.from(e).toString();if((0,i.isValidAddress)(t))throw new Error("requesting program bytes, get Algorand address");if(u.from(t,"base64").toString("base64")===t)throw new Error("program should not be b64 encoded");throw new Error("program bytes are all ASCII printable characters, not looking like Teal byte code")}}class p{constructor(e,t){if(this.tag=u.from("Program"),t&&(!Array.isArray(t)||!t.every((e=>e.constructor===Uint8Array||u.isBuffer(e)))))throw new TypeError("Invalid arguments");let r;null!=t&&(r=t.map((e=>new Uint8Array(e)))),l(e),this.logic=e,this.args=r,this.sig=void 0,this.msig=void 0}get_obj_for_encoding(){const e={l:this.logic};return this.args&&(e.arg=this.args),this.sig?e.sig=this.sig:this.msig&&(e.msig=this.msig),e}static from_obj_for_encoding(e){const t=new p(e.l,e.arg);return t.sig=e.sig,t.msig=e.msig,t}verify(e){if(this.sig&&this.msig)return!1;try{l(this.logic)}catch(e){return!1}const t=a.concatArrays(this.tag,this.logic);if(!this.sig&&!this.msig){const r=n.genericHash(t);return a.arrayEqual(r,e)}return this.sig?n.verify(t,this.sig,e):(0,s.F2)(t,this.msig,e)}address(){const e=a.concatArrays(this.tag,this.logic),t=n.genericHash(e);return i.encodeAddress(new Uint8Array(t))}sign(e,t){if(null==t)this.sig=this.signProgram(e);else{const r=t.addrs.map((e=>({pk:i.decodeAddress(e).publicKey})));this.msig={v:t.version,thr:t.threshold,subsig:r};const[n,o]=this.singleSignMultisig(e,this.msig);this.msig.subsig[o].s=n}}appendToMultisig(e){if(void 0===this.msig)throw new Error("no multisig present");const[t,r]=this.singleSignMultisig(e,this.msig);this.msig.subsig[r].s=t}signProgram(e){const t=a.concatArrays(this.tag,this.logic);return n.sign(t,e)}singleSignMultisig(e,t){let r=-1;const i=n.keyPairFromSecretKey(e).publicKey;for(let e=0;e<t.subsig.length;e++){const{pk:n}=t.subsig[e];if(a.arrayEqual(n,i)){r=e;break}}if(-1===r)throw new Error("invalid secret key");return[this.signProgram(e),r]}toByte(){return o.encode(this.get_obj_for_encoding())}static fromByte(e){const t=o.decode(e);return p.from_obj_for_encoding(t)}}class h{constructor(e,t){this.lsig=new p(e,t),this.sigkey=void 0}get_obj_for_encoding(){const e={lsig:this.lsig.get_obj_for_encoding()};return this.sigkey&&(e.sigkey=this.sigkey),e}static from_obj_for_encoding(e){const t=new h(e.lsig.l,e.lsig.arg);return t.lsig=p.from_obj_for_encoding(e.lsig),t.sigkey=e.sigkey,t}toByte(){return o.encode(this.get_obj_for_encoding())}static fromByte(e){const t=o.decode(e);return h.from_obj_for_encoding(t)}isDelegated(){return!(!this.lsig.sig&&!this.lsig.msig)}verify(){const e=this.address();return this.lsig.verify(i.decodeAddress(e).publicKey)}address(){if(this.lsig.sig&&this.lsig.msig)throw new Error("LogicSig has too many signatures. At most one of sig or msig may be present");if(this.lsig.sig){if(!this.sigkey)throw new Error("Signing key for delegated account is missing");return i.encodeAddress(this.sigkey)}if(this.lsig.msig){const e={version:this.lsig.msig.v,threshold:this.lsig.msig.thr,pks:this.lsig.msig.subsig.map((e=>e.pk))};return i.encodeAddress(i.fromMultisigPreImg(e))}return this.lsig.address()}signMultisig(e,t){this.lsig.sign(t,e)}appendToMultisig(e){this.lsig.appendToMultisig(e)}sign(e){this.lsig.sign(e),this.sigkey=n.keyPairFromSecretKey(e).publicKey}}function d(e,t){return new p(e,t)}function f(e,t){let r,s;if(t instanceof h)r=t.lsig,s=i.decodeAddress(t.address()).publicKey;else if(r=t,r.sig)s=e.from.publicKey;else if(r.msig){const e={version:r.msig.v,threshold:r.msig.thr,pks:r.msig.subsig.map((e=>e.pk))};s=i.fromMultisigPreImg(e)}else s=i.decodeAddress(r.address()).publicKey;return function(e,t,r){if(!t.verify(r))throw new Error("Logic signature verification failed. Ensure the program and signature are valid.");const i={lsig:t.get_obj_for_encoding(),txn:e.get_obj_for_encoding()};return n.bytesEqual(r,e.from.publicKey)||(i.sgnr=u.from(r)),{txID:e.txID().toString(),blob:o.encode(i)}}(e,r,s)}function g(e,t){return f(c.instantiateTxnIfNeeded(e),t)}function m(e){return p.fromByte(e)}const y=u.from("ProgData");function b(e,t,r){const o=a.concatArrays(i.decodeAddress(r).publicKey,t),s=u.from(a.concatArrays(y,o));return n.sign(s,e)}function w(e,t,r){return b(e,t,new p(r).address())}},6608:(e,t,r)=>{"use strict";r.r(t),r.d(t,{MULTISIG_BAD_SENDER_ERROR_MSG:()=>L,signTransaction:()=>j,signBid:()=>z,signBytes:()=>F,verifyBytes:()=>M,encodeObj:()=>q,decodeObj:()=>H,ERROR_MULTISIG_BAD_SENDER:()=>$,ERROR_INVALID_MICROALGOS:()=>G,Algodv2:()=>f.Z,Kmd:()=>g.Z,IntDecoding:()=>m.Z,Indexer:()=>y.Z,waitForConfirmation:()=>b.K,isValidAddress:()=>i.isValidAddress,encodeAddress:()=>i.encodeAddress,decodeAddress:()=>i.decodeAddress,getApplicationAddress:()=>i.getApplicationAddress,bytesToBigInt:()=>w.v,bigIntToBytes:()=>w.j,encodeUint64:()=>v.T,decodeUint64:()=>v.u,generateAccount:()=>A.Z,modelsv2:()=>x,indexerModels:()=>_,mnemonicToMasterDerivationKey:()=>S.OF,masterDerivationKeyToMnemonic:()=>S.vC,secretKeyToMnemonic:()=>S.QX,mnemonicToSecretKey:()=>S.Ch,seedFromMnemonic:()=>S.mE,mnemonicFromSeed:()=>S.w3,microalgosToAlgos:()=>l._,algosToMicroalgos:()=>l.HN,INVALID_MICROALGOS_ERROR_MSG:()=>l.rD,computeGroupID:()=>E.computeGroupID,assignGroupID:()=>E.assignGroupID,LogicSigAccount:()=>B.LogicSigAccount,makeLogicSig:()=>B.makeLogicSig,signLogicSigTransaction:()=>B.signLogicSigTransaction,signLogicSigTransactionObject:()=>B.signLogicSigTransactionObject,logicSigFromByte:()=>B.logicSigFromByte,tealSign:()=>B.tealSign,tealSignFromProgram:()=>B.tealSignFromProgram,signMultisigTransaction:()=>T.PU,mergeMultisigTransactions:()=>T.J6,appendSignMultisigTransaction:()=>T.PO,createMultisigTransaction:()=>T.gJ,appendSignRawMultisigSignature:()=>T.f7,verifyMultisig:()=>T.F2,multisigAddress:()=>T.vH,SourceMap:()=>k.Y,LogicTemplates:()=>K,DryrunResult:()=>U.x,createDryrun:()=>U.P,OnApplicationComplete:()=>I.OnApplicationComplete,makeApplicationCallTxnFromObject:()=>I.makeApplicationCallTxnFromObject,makeApplicationClearStateTxn:()=>I.makeApplicationClearStateTxn,makeApplicationClearStateTxnFromObject:()=>I.makeApplicationClearStateTxnFromObject,makeApplicationCloseOutTxn:()=>I.makeApplicationCloseOutTxn,makeApplicationCloseOutTxnFromObject:()=>I.makeApplicationCloseOutTxnFromObject,makeApplicationCreateTxn:()=>I.makeApplicationCreateTxn,makeApplicationCreateTxnFromObject:()=>I.makeApplicationCreateTxnFromObject,makeApplicationDeleteTxn:()=>I.makeApplicationDeleteTxn,makeApplicationDeleteTxnFromObject:()=>I.makeApplicationDeleteTxnFromObject,makeApplicationNoOpTxn:()=>I.makeApplicationNoOpTxn,makeApplicationNoOpTxnFromObject:()=>I.makeApplicationNoOpTxnFromObject,makeApplicationOptInTxn:()=>I.makeApplicationOptInTxn,makeApplicationOptInTxnFromObject:()=>I.makeApplicationOptInTxnFromObject,makeApplicationUpdateTxn:()=>I.makeApplicationUpdateTxn,makeApplicationUpdateTxnFromObject:()=>I.makeApplicationUpdateTxnFromObject,makeAssetConfigTxn:()=>I.makeAssetConfigTxn,makeAssetConfigTxnWithSuggestedParams:()=>I.makeAssetConfigTxnWithSuggestedParams,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>I.makeAssetConfigTxnWithSuggestedParamsFromObject,makeAssetCreateTxn:()=>I.makeAssetCreateTxn,makeAssetCreateTxnWithSuggestedParams:()=>I.makeAssetCreateTxnWithSuggestedParams,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>I.makeAssetCreateTxnWithSuggestedParamsFromObject,makeAssetDestroyTxn:()=>I.makeAssetDestroyTxn,makeAssetDestroyTxnWithSuggestedParams:()=>I.makeAssetDestroyTxnWithSuggestedParams,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>I.makeAssetDestroyTxnWithSuggestedParamsFromObject,makeAssetFreezeTxn:()=>I.makeAssetFreezeTxn,makeAssetFreezeTxnWithSuggestedParams:()=>I.makeAssetFreezeTxnWithSuggestedParams,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>I.makeAssetFreezeTxnWithSuggestedParamsFromObject,makeAssetTransferTxn:()=>I.makeAssetTransferTxn,makeAssetTransferTxnWithSuggestedParams:()=>I.makeAssetTransferTxnWithSuggestedParams,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>I.makeAssetTransferTxnWithSuggestedParamsFromObject,makeKeyRegistrationTxn:()=>I.makeKeyRegistrationTxn,makeKeyRegistrationTxnWithSuggestedParams:()=>I.makeKeyRegistrationTxnWithSuggestedParams,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>I.makeKeyRegistrationTxnWithSuggestedParamsFromObject,makePaymentTxn:()=>I.makePaymentTxn,makePaymentTxnWithSuggestedParams:()=>I.makePaymentTxnWithSuggestedParams,makePaymentTxnWithSuggestedParamsFromObject:()=>I.makePaymentTxnWithSuggestedParamsFromObject,ALGORAND_MIN_TX_FEE:()=>s.ALGORAND_MIN_TX_FEE,Transaction:()=>s.Transaction,decodeSignedTransaction:()=>s.decodeSignedTransaction,decodeUnsignedTransaction:()=>s.decodeUnsignedTransaction,encodeUnsignedTransaction:()=>s.encodeUnsignedTransaction,instantiateTxnIfNeeded:()=>s.instantiateTxnIfNeeded,isTransactionWithSigner:()=>R.Xw,makeBasicAccountTransactionSigner:()=>R.x7,makeLogicSigAccountTransactionSigner:()=>R.i1,makeMultiSigAccountTransactionSigner:()=>R.Vj,AtomicTransactionComposer:()=>C.A,AtomicTransactionComposerStatus:()=>C.b,TransactionType:()=>D.i,ABIAddressType:()=>O.JQ,ABIArrayDynamicType:()=>O._4,ABIArrayStaticType:()=>O.X3,ABIBoolType:()=>O.R0,ABIByteType:()=>O.jD,ABIContract:()=>O.Yh,ABIInterface:()=>O.bL,ABIMethod:()=>O.Ls,ABIReferenceType:()=>O.UV,ABIStringType:()=>O.Ax,ABITransactionType:()=>O.A9,ABITupleType:()=>O.w1,ABIType:()=>O.NK,ABIUfixedType:()=>O.RY,ABIUintType:()=>O.Pu,ADDR_BYTE_SIZE:()=>O.Vk,LENGTH_ENCODE_BYTE_SIZE:()=>O.nh,MAX_LEN:()=>O.kG,SINGLE_BOOL_SIZE:()=>O.qH,SINGLE_BYTE_SIZE:()=>O.JH,abiCheckTransactionType:()=>O.vJ,abiTypeIsReference:()=>O.o5,abiTypeIsTransaction:()=>O.AE,getMethodByName:()=>O.I5});var n=r(9404),i=r(7116),o=r(3033),s=r(5592),a=r(8886),c=r.n(a),u=r(2691),l=r(9070),p=r(413),h=r(5922),d={};for(const e in h)["default","MULTISIG_BAD_SENDER_ERROR_MSG","signTransaction","signBid","signBytes","verifyBytes","encodeObj","decodeObj","ERROR_MULTISIG_BAD_SENDER","ERROR_INVALID_MICROALGOS","Algodv2","Kmd","IntDecoding","Indexer","waitForConfirmation","isValidAddress","encodeAddress","decodeAddress","getApplicationAddress","bytesToBigInt","bigIntToBytes","encodeUint64","decodeUint64","generateAccount","modelsv2","indexerModels","mnemonicToMasterDerivationKey","masterDerivationKeyToMnemonic","secretKeyToMnemonic","mnemonicToSecretKey","seedFromMnemonic","mnemonicFromSeed","microalgosToAlgos","algosToMicroalgos","INVALID_MICROALGOS_ERROR_MSG","computeGroupID","assignGroupID","LogicSigAccount","makeLogicSig","signLogicSigTransaction","signLogicSigTransactionObject","logicSigFromByte","tealSign","tealSignFromProgram","signMultisigTransaction","mergeMultisigTransactions","appendSignMultisigTransaction","createMultisigTransaction","appendSignRawMultisigSignature","verifyMultisig","multisigAddress","SourceMap","LogicTemplates"].indexOf(e)<0&&(d[e]=()=>h[e]);r.d(t,d);var f=r(8569),g=r(6477),m=r(7197),y=r(6595),b=r(5062),w=r(8922),v=r(6963),A=r(7988),x=r(1685),_=r(8230),S=r(3510),E=r(1063),B=r(8800),T=r(4158),k=r(7519),U=r(4383),I=r(1988),R=r(834),C=r(3458),D=r(2380),O=r(7677),N=r(2486).Buffer;const P=N.from([77,88]),L="The transaction sender address and multisig preimage do not match.";function j(e,t){if(void 0===e.from){const r=n.keyPairFromSecretKey(t);e.from=i.encodeAddress(r.publicKey)}const r=s.instantiateTxnIfNeeded(e);return{txID:r.txID().toString(),blob:r.signTxn(t)}}function z(e,t){return new u.Z(e).signBid(t)}function F(e,t){const r=N.from(p.concatArrays(P,e));return n.sign(r,t)}function M(e,t,r){const o=N.from(p.concatArrays(P,e)),s=i.decodeAddress(r).publicKey;return n.verify(o,t,s)}function q(e){return new Uint8Array(o.encode(e))}function H(e){return o.decode(e)}const $=new Error(L),G=new Error(l.rD),K=c()},1988:(e,t,r)=>{"use strict";r.r(t),r.d(t,{makePaymentTxnWithSuggestedParams:()=>s,makePaymentTxn:()=>a,makePaymentTxnWithSuggestedParamsFromObject:()=>c,makeKeyRegistrationTxnWithSuggestedParams:()=>u,makeKeyRegistrationTxn:()=>l,makeKeyRegistrationTxnWithSuggestedParamsFromObject:()=>p,makeAssetCreateTxnWithSuggestedParams:()=>h,makeAssetCreateTxn:()=>d,makeAssetCreateTxnWithSuggestedParamsFromObject:()=>f,makeAssetConfigTxnWithSuggestedParams:()=>g,makeAssetConfigTxn:()=>m,makeAssetConfigTxnWithSuggestedParamsFromObject:()=>y,makeAssetDestroyTxnWithSuggestedParams:()=>b,makeAssetDestroyTxn:()=>w,makeAssetDestroyTxnWithSuggestedParamsFromObject:()=>v,makeAssetFreezeTxnWithSuggestedParams:()=>A,makeAssetFreezeTxn:()=>x,makeAssetFreezeTxnWithSuggestedParamsFromObject:()=>_,makeAssetTransferTxnWithSuggestedParams:()=>S,makeAssetTransferTxn:()=>E,makeAssetTransferTxnWithSuggestedParamsFromObject:()=>B,makeApplicationCreateTxn:()=>T,makeApplicationCreateTxnFromObject:()=>k,makeApplicationUpdateTxn:()=>U,makeApplicationUpdateTxnFromObject:()=>I,makeApplicationDeleteTxn:()=>R,makeApplicationDeleteTxnFromObject:()=>C,makeApplicationOptInTxn:()=>D,makeApplicationOptInTxnFromObject:()=>O,makeApplicationCloseOutTxn:()=>N,makeApplicationCloseOutTxnFromObject:()=>P,makeApplicationClearStateTxn:()=>L,makeApplicationClearStateTxnFromObject:()=>j,makeApplicationNoOpTxn:()=>z,makeApplicationNoOpTxnFromObject:()=>F,OnApplicationComplete:()=>i.hq,makeApplicationCallTxnFromObject:()=>M});var n=r(5592),i=r(1624),o=r(1824);function s(e,t,r,i,s,a,c){const u={from:e,to:t,amount:r,closeRemainderTo:i,note:s,suggestedParams:a,type:o.i.pay,reKeyTo:c};return new n.Transaction(u)}function a(e,t,r,n,i,o,a,c,u,l,p){return s(e,t,n,i,c,{genesisHash:u,genesisID:l,firstRound:o,lastRound:a,fee:r},p)}function c(e){return s(e.from,e.to,e.amount,e.closeRemainderTo,e.note,e.suggestedParams,e.rekeyTo)}function u(e,t,r,i,s,a,c,u,l,p=!1,h){const d={from:e,note:t,voteKey:r,selectionKey:i,voteFirst:s,voteLast:a,voteKeyDilution:c,suggestedParams:u,type:o.i.keyreg,reKeyTo:l,nonParticipation:p,stateProofKey:h};return new n.Transaction(d)}function l(e,t,r,n,i,o,s,a,c,l,p,h,d,f=!1,g){return u(e,i,a,c,l,p,h,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},d,f,g)}function p(e){return u(e.from,e.note,e.voteKey,e.selectionKey,e.voteFirst,e.voteLast,e.voteKeyDilution,e.suggestedParams,e.rekeyTo,e.nonParticipation,e.stateProofKey)}function h(e,t,r,i,s,a,c,u,l,p,h,d,f,g,m){const y={from:e,note:t,suggestedParams:g,assetTotal:r,assetDecimals:i,assetDefaultFrozen:s,assetUnitName:p,assetName:h,assetURL:d,assetMetadataHash:f,assetManager:a,assetReserve:c,assetFreeze:u,assetClawback:l,type:o.i.acfg,reKeyTo:m};return new n.Transaction(y)}function d(e,t,r,n,i,o,s,a,c,u,l,p,d,f,g,m,y,b,w){return h(e,i,a,c,u,l,p,d,f,g,m,y,b,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},w)}function f(e){return h(e.from,e.note,e.total,e.decimals,e.defaultFrozen,e.manager,e.reserve,e.freeze,e.clawback,e.unitName,e.assetName,e.assetURL,e.assetMetadataHash,e.suggestedParams,e.rekeyTo)}function g(e,t,r,i,s,a,c,u,l=!0,p){if(l&&(void 0===i||void 0===s||void 0===a||void 0===c))throw Error("strict empty address checking was turned on, but at least one empty address was provided");const h={from:e,suggestedParams:u,assetIndex:r,assetManager:i,assetReserve:s,assetFreeze:a,assetClawback:c,type:o.i.acfg,note:t,reKeyTo:p};return new n.Transaction(h)}function m(e,t,r,n,i,o,s,a,c,u,l,p,h=!0,d){return g(e,i,a,c,u,l,p,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},h,d)}function y(e){return g(e.from,e.note,e.assetIndex,e.manager,e.reserve,e.freeze,e.clawback,e.suggestedParams,e.strictEmptyAddressChecking,e.rekeyTo)}function b(e,t,r,i,s){const a={from:e,suggestedParams:i,assetIndex:r,type:o.i.acfg,note:t,reKeyTo:s};return new n.Transaction(a)}function w(e,t,r,n,i,o,s,a,c){return b(e,i,a,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},c)}function v(e){return b(e.from,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function A(e,t,r,i,s,a,c){const u={from:e,type:o.i.afrz,freezeAccount:i,assetIndex:r,freezeState:s,note:t,suggestedParams:a,reKeyTo:c};return new n.Transaction(u)}function x(e,t,r,n,i,o,s,a,c,u,l){return A(e,i,a,c,u,{genesisHash:o,genesisID:s,firstRound:r,lastRound:n,fee:t},l)}function _(e){return A(e.from,e.note,e.assetIndex,e.freezeTarget,e.freezeState,e.suggestedParams,e.rekeyTo)}function S(e,t,r,i,s,a,c,u,l){const p={type:o.i.axfer,from:e,to:t,amount:s,suggestedParams:u,assetIndex:c,note:a,assetRevocationTarget:i,closeRemainderTo:r,reKeyTo:l};return new n.Transaction(p)}function E(e,t,r,n,i,o,s,a,c,u,l,p,h){return S(e,t,r,n,o,c,p,{genesisHash:u,genesisID:l,firstRound:s,lastRound:a,fee:i},h)}function B(e){return S(e.from,e.to,e.closeRemainderTo,e.revocationTarget,e.amount,e.note,e.assetIndex,e.suggestedParams,e.rekeyTo)}function T(e,t,r,i,s,a,c,u,l,p,h,d,f,g,m,y,b,w){const v={type:o.i.appl,from:e,suggestedParams:t,appIndex:0,appOnComplete:r,appLocalInts:a,appLocalByteSlices:c,appGlobalInts:u,appGlobalByteSlices:l,appApprovalProgram:i,appClearProgram:s,appArgs:p,appAccounts:h,appForeignApps:d,appForeignAssets:f,boxes:w,note:g,lease:m,reKeyTo:y,extraPages:b};return new n.Transaction(v)}function k(e){return T(e.from,e.suggestedParams,e.onComplete,e.approvalProgram,e.clearProgram,e.numLocalInts,e.numLocalByteSlices,e.numGlobalInts,e.numGlobalByteSlices,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.extraPages,e.boxes)}function U(e,t,r,s,a,c,u,l,p,h,d,f,g){const m={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appApprovalProgram:s,appOnComplete:i.hq.UpdateApplicationOC,appClearProgram:a,appArgs:c,appAccounts:u,appForeignApps:l,appForeignAssets:p,boxes:g,note:h,lease:d,reKeyTo:f};return new n.Transaction(m)}function I(e){return U(e.from,e.suggestedParams,e.appIndex,e.approvalProgram,e.clearProgram,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function R(e,t,r,s,a,c,u,l,p,h,d){const f={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.DeleteApplicationOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function C(e){return R(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function D(e,t,r,s,a,c,u,l,p,h,d){const f={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.OptInOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function O(e){return D(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function N(e,t,r,s,a,c,u,l,p,h,d){const f={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.CloseOutOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function P(e){return N(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function L(e,t,r,s,a,c,u,l,p,h,d){const f={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.ClearStateOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function j(e){return L(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function z(e,t,r,s,a,c,u,l,p,h,d){const f={type:o.i.appl,from:e,suggestedParams:t,appIndex:r,appOnComplete:i.hq.NoOpOC,appArgs:s,appAccounts:a,appForeignApps:c,appForeignAssets:u,boxes:d,note:l,lease:p,reKeyTo:h};return new n.Transaction(f)}function F(e){return z(e.from,e.suggestedParams,e.appIndex,e.appArgs,e.accounts,e.foreignApps,e.foreignAssets,e.note,e.lease,e.rekeyTo,e.boxes)}function M(e){const t={type:o.i.appl,from:e.from,suggestedParams:e.suggestedParams,appIndex:e.appIndex,appOnComplete:e.onComplete,appLocalInts:e.numLocalInts,appLocalByteSlices:e.numLocalByteSlices,appGlobalInts:e.numGlobalInts,appGlobalByteSlices:e.numGlobalByteSlices,appApprovalProgram:e.approvalProgram,appClearProgram:e.clearProgram,appArgs:e.appArgs,appAccounts:e.accounts,appForeignApps:e.foreignApps,appForeignAssets:e.foreignAssets,boxes:e.boxes,note:e.note,lease:e.lease,reKeyTo:e.rekeyTo,extraPages:e.extraPages};return new n.Transaction(t)}},3510:(e,t,r)=>{"use strict";r.d(t,{vC:()=>g,w3:()=>l,OF:()=>f,Ch:()=>h,QX:()=>d,mE:()=>p});const n=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var i=r(9404),o=r(7116);const s="failed to decode mnemonic";function a(e){const t=[];let r=0,n=0;return e.forEach((function(e){r|=e<<n,n+=8,n>=11&&(t.push(2047&r),r>>=11,n-=11)})),n&&t.push(r),t}function c(e){return e.map((e=>n[e]))}function u(e){return c(a(i.genericHash(e)))[0]}function l(e){if(e.length!==i.SEED_BTYES_LENGTH)throw new RangeError(`Seed length must be ${i.SEED_BTYES_LENGTH}`);const t=c(a(e)),r=u(e);return`${t.join(" ")} ${r}`}function p(e){const t=e.split(" "),r=t.slice(0,24);for(const e of r)if(-1===n.indexOf(e))throw new Error("the mnemonic contains a word that is not in the wordlist");const i=t[t.length-1];let o=function(e){const t=[];let r=0,n=0;return e.forEach((function(e){for(r|=e<<n,n+=11;n>=8;)t.push(255&r),r>>=8,n-=8})),n&&t.push(r),new Uint8Array(t)}(r.map((e=>n.indexOf(e))));if(33!==o.length)throw new Error(s);if(0!==o[o.length-1])throw new Error(s);if(o=o.slice(0,o.length-1),u(o)===i)return o;throw new Error(s)}function h(e){const t=p(e),r=i.keyPairFromSeed(t);return{addr:o.encodeAddress(r.publicKey),sk:r.secretKey}}function d(e){return l(e.slice(0,i.SEED_BTYES_LENGTH))}function f(e){return p(e)}function g(e){return l(e)}},4158:(e,t,r)=>{"use strict";r.d(t,{gJ:()=>p,J6:()=>f,F2:()=>g,PU:()=>m,PO:()=>y,f7:()=>b,vH:()=>w});var n=r(9404),i=r(7116),o=r(3033),s=r(5592),a=r(413),c=r(2486).Buffer;const u="Cannot merge txs. Multisig preimages differ",l="Cannot mutate a multisig field as it would invalidate all existing signatures.";function p(e,{version:t,threshold:r,addrs:n}){const s=n.map((e=>i.decodeAddress(e).publicKey)),a={v:t,thr:r,subsig:s.map((e=>({pk:c.from(e)})))},u=e.get_obj_for_encoding(),l={msig:a,txn:u},p=i.fromMultisigPreImg({version:t,threshold:r,pks:s});return i.encodeAddress(u.snd)!==i.encodeAddress(p)&&(l.sgnr=c.from(p)),new Uint8Array(o.encode(l))}function h(e,{rawSig:t,myPk:r},{version:s,threshold:a,pks:u}){const l=p(e,{version:s,threshold:a,addrs:u.map((e=>i.encodeAddress(e)))}),h=o.decode(l);let d=!1;if(h.msig.subsig.forEach(((e,i)=>{n.bytesEqual(e.pk,r)&&(d=!0,h.msig.subsig[i].s=t)})),!1===d)throw new Error("Key does not exist");const f=i.fromMultisigPreImg({version:s,threshold:a,pks:u});return i.encodeAddress(h.txn.snd)!==i.encodeAddress(f)&&(h.sgnr=c.from(f)),new Uint8Array(o.encode(h))}class d extends s.Transaction{addLease(){throw new Error(l)}addRekey(){throw new Error(l)}signTxn(e){throw new Error("Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.")}partialSignTxn({version:e,threshold:t,pks:r},i){const o=n.keyPairFromSecretKey(i).publicKey;return h(this,{rawSig:this.rawSignTxn(i),myPk:o},{version:e,threshold:t,pks:r})}partialSignWithMultisigSignature(e,t,r){if(!n.isValidSignatureLength(r.length))throw new Error("Cannot add multisig signature. Signature is not of the correct length.");return h(this,{rawSig:r,myPk:i.decodeAddress(t).publicKey},e)}static from_obj_for_encoding(e){return super.from_obj_for_encoding(e)}}function f(e){if(e.length<2)throw new Error("Not enough multisig transactions to merge. Need at least two");const t=o.decode(e[0]),r=d.from_obj_for_encoding(t.txn).txID(),n=t.sgnr?i.encodeAddress(t.sgnr):void 0,s={version:t.msig.v,threshold:t.msig.thr,pks:t.msig.subsig.map((e=>e.pk))},a=i.encodeAddress(i.fromMultisigPreImg(s)),l=t.msig.subsig.map((e=>({...e})));for(let s=1;s<e.length;s++){const p=o.decode(e[s]);if(d.from_obj_for_encoding(p.txn).txID()!==r)throw new Error("Cannot merge txs. txIDs differ");if(n!==(p.sgnr?i.encodeAddress(p.sgnr):void 0))throw new Error("Cannot merge txs. Auth addrs differ");if(p.msig.subsig.length!==t.msig.subsig.length)throw new Error(u);const h={version:p.msig.v,threshold:p.msig.thr,pks:p.msig.subsig.map((e=>e.pk))};if(a!==i.encodeAddress(i.fromMultisigPreImg(h)))throw new Error(u);p.msig.subsig.forEach(((e,t)=>{if(!e.s)return;const r=l[t];if(r.s&&0!==c.compare(c.from(e.s),c.from(r.s)))throw new Error("Cannot merge txs. subsigs are mismatched.");r.s=e.s}))}const p={msig:{v:t.msig.v,thr:t.msig.thr,subsig:l},txn:t.txn};return void 0!==n&&(p.sgnr=c.from(i.decodeAddress(n).publicKey)),new Uint8Array(o.encode(p))}function g(e,t,r){const o=t.v,s=t.thr,c=t.subsig,u=c.map((e=>e.pk));if(t.subsig.length<s)return!1;let l;try{l=i.fromMultisigPreImg({version:o,threshold:s,pks:u})}catch(e){return!1}if(!a.arrayEqual(l,r))return!1;let p=0;for(const e of c)void 0!==e.s&&(p+=1);if(p<s)return!1;let h=0;for(const t of c)void 0!==t.s&&n.verify(e,t.s,t.pk)&&(h+=1);return!(h<s)}function m(e,{version:t,threshold:r,addrs:n},o){const a=i.fromMultisigPreImgAddrs({version:t,threshold:r,addrs:n});Object.prototype.hasOwnProperty.call(e,"from")||(e.from=a);const c=n.map((e=>i.decodeAddress(e).publicKey));let u,l;return e instanceof s.Transaction?(u=e,l=d.prototype.partialSignTxn.call(u,{version:t,threshold:r,pks:c},o)):(u=new d(e),l=u.partialSignTxn({version:t,threshold:r,pks:c},o)),{txID:u.txID().toString(),blob:l}}function y(e,{version:t,threshold:r,addrs:n},s){const a=n.map((e=>i.decodeAddress(e).publicKey)),c=o.decode(e),u=d.from_obj_for_encoding(c.txn),l=u.partialSignTxn({version:t,threshold:r,pks:a},s);return{txID:u.txID().toString(),blob:f([e,l])}}function b(e,{version:t,threshold:r,addrs:n},s,a){const c=n.map((e=>i.decodeAddress(e).publicKey)),u=o.decode(e),l=d.from_obj_for_encoding(u.txn),p=l.partialSignWithMultisigSignature({version:t,threshold:r,pks:c},s,a);return{txID:l.txID().toString(),blob:f([e,p])}}function w({version:e,threshold:t,addrs:r}){return i.fromMultisigPreImgAddrs({version:e,threshold:t,addrs:r})}},9404:(e,t,r)=>{"use strict";r.r(t),r.d(t,{genericHash:()=>a,randomBytes:()=>c,keyPairFromSeed:()=>u,keyPair:()=>l,isValidSignatureLength:()=>p,keyPairFromSecretKey:()=>h,sign:()=>d,bytesEqual:()=>f,verify:()=>g,PUBLIC_KEY_LENGTH:()=>m,SECRET_KEY_LENGTH:()=>y,HASH_BYTES_LENGTH:()=>b,SEED_BTYES_LENGTH:()=>w});var n=r(7765),i=r.n(n),o=r(9757),s=r.n(o);function a(e){return s().sha512_256.array(e)}function c(e){return i().randomBytes(e)}function u(e){return i().sign.keyPair.fromSeed(e)}function l(){return u(c(i().box.secretKeyLength))}function p(e){return e===i().sign.signatureLength}function h(e){return i().sign.keyPair.fromSecretKey(e)}function d(e,t){return i().sign.detached(e,t)}function f(e,t){return i().verify(e,t)}function g(e,t,r){return i().sign.detached.verify(e,t,r)}const m=i().sign.publicKeyLength,y=i().sign.secretKeyLength,b=32,w=32},834:(e,t,r)=>{"use strict";r.d(t,{x7:()=>o,i1:()=>s,Vj:()=>a,Xw:()=>c});var n=r(8800),i=r(4158);function o(e){return(t,r)=>{const n=[];for(const i of r)n.push(t[i].signTxn(e.sk));return Promise.resolve(n)}}function s(e){return(t,r)=>{const i=[];for(const o of r){const{blob:r}=(0,n.signLogicSigTransactionObject)(t[o],e);i.push(r)}return Promise.resolve(i)}}function a(e,t){return(r,n)=>{const o=[];for(const s of n){const n=r[s],a=[];for(const r of t){const{blob:t}=(0,i.PU)(n,e,r);a.push(t)}o.push((0,i.J6)(a))}return Promise.resolve(o)}}function c(e){return"object"==typeof e&&2===Object.keys(e).length&&"object"==typeof e.txn&&"function"==typeof e.signer}},5592:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ALGORAND_MIN_TX_FEE:()=>p,Transaction:()=>d,decodeSignedTransaction:()=>m,decodeUnsignedTransaction:()=>g,default:()=>b,encodeUnsignedTransaction:()=>f,instantiateTxnIfNeeded:()=>y});var n=r(7267),i=r.n(n),o=r(7116),s=r(3033),a=r(9404),c=r(413),u=r(1624),l=r(2486).Buffer;const p=1e3;function h(e,t,r){if(null==e)return;let n;if("string"==typeof e?n=l.from(e,"base64"):e.constructor===Uint8Array?n=l.from(e):l.isBuffer(e)&&(n=e),null==n||n.byteLength!==r)throw Error(`${t} must be a ${r} byte Uint8Array or Buffer or base64 string.`);return n}class d{constructor({...e}){this.name="Transaction",this.tag=l.from("TX");const t={type:u.iU.pay,flatFee:!1,nonParticipation:!1};if(void 0===e.type&&(e.type=t.type),void 0===e.flatFee&&(e.flatFee=t.flatFee),e.type===u.iU.keyreg&&void 0!==e.voteKey&&void 0===e.nonParticipation&&(e.nonParticipation=t.nonParticipation),void 0!==e.suggestedParams){const t=e;t.genesisHash=t.suggestedParams.genesisHash,t.fee=t.suggestedParams.fee,void 0!==t.suggestedParams.flatFee&&(t.flatFee=t.suggestedParams.flatFee),t.firstRound=t.suggestedParams.firstRound,t.lastRound=t.suggestedParams.lastRound,t.genesisID=t.suggestedParams.genesisID}const r=e;if(r.from=o.decodeAddress(r.from),void 0!==r.to&&(r.to=o.decodeAddress(r.to)),void 0!==r.closeRemainderTo&&(r.closeRemainderTo=o.decodeAddress(r.closeRemainderTo)),void 0!==r.assetManager&&(r.assetManager=o.decodeAddress(r.assetManager)),void 0!==r.assetReserve&&(r.assetReserve=o.decodeAddress(r.assetReserve)),void 0!==r.assetFreeze&&(r.assetFreeze=o.decodeAddress(r.assetFreeze)),void 0!==r.assetClawback&&(r.assetClawback=o.decodeAddress(r.assetClawback)),void 0!==r.assetRevocationTarget&&(r.assetRevocationTarget=o.decodeAddress(r.assetRevocationTarget)),void 0!==r.freezeAccount&&(r.freezeAccount=o.decodeAddress(r.freezeAccount)),void 0!==r.reKeyTo&&(r.reKeyTo=o.decodeAddress(r.reKeyTo)),void 0===r.genesisHash)throw Error("genesis hash must be specified and in a base64 string.");if(r.genesisHash=l.from(r.genesisHash,"base64"),void 0!==r.amount&&(!(Number.isSafeInteger(r.amount)||"bigint"==typeof r.amount&&r.amount<=BigInt("0xffffffffffffffff"))||r.amount<0))throw Error("Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(!Number.isSafeInteger(r.fee)||r.fee<0)throw Error("fee must be a positive number and smaller than 2^53-1");if(!Number.isSafeInteger(r.firstRound)||r.firstRound<0)throw Error("firstRound must be a positive number");if(!Number.isSafeInteger(r.lastRound)||r.lastRound<0)throw Error("lastRound must be a positive number");if(void 0!==r.extraPages&&(!Number.isInteger(r.extraPages)||r.extraPages<0||r.extraPages>3))throw Error("extraPages must be an Integer between and including 0 to 3");if(void 0!==r.assetTotal&&(!(Number.isSafeInteger(r.assetTotal)||"bigint"==typeof r.assetTotal&&r.assetTotal<=BigInt("0xffffffffffffffff"))||r.assetTotal<0))throw Error("Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");if(void 0!==r.assetDecimals&&(!Number.isSafeInteger(r.assetDecimals)||r.assetDecimals<0||r.assetDecimals>19))throw Error(`assetDecimals must be a positive number and smaller than ${19..toString()}`);if(void 0!==r.assetIndex&&(!Number.isSafeInteger(r.assetIndex)||r.assetIndex<0))throw Error("Asset index must be a positive number and smaller than 2^53-1");if(void 0!==r.appIndex&&(!Number.isSafeInteger(r.appIndex)||r.appIndex<0))throw Error("Application index must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalInts&&(!Number.isSafeInteger(r.appLocalInts)||r.appLocalInts<0))throw Error("Application local ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appLocalByteSlices&&(!Number.isSafeInteger(r.appLocalByteSlices)||r.appLocalByteSlices<0))throw Error("Application local byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalInts&&(!Number.isSafeInteger(r.appGlobalInts)||r.appGlobalInts<0))throw Error("Application global ints count must be a positive number and smaller than 2^53-1");if(void 0!==r.appGlobalByteSlices&&(!Number.isSafeInteger(r.appGlobalByteSlices)||r.appGlobalByteSlices<0))throw Error("Application global byte slices count must be a positive number and smaller than 2^53-1");if(void 0!==r.appApprovalProgram&&r.appApprovalProgram.constructor!==Uint8Array)throw Error("appApprovalProgram must be a Uint8Array.");if(void 0!==r.appClearProgram&&r.appClearProgram.constructor!==Uint8Array)throw Error("appClearProgram must be a Uint8Array.");if(void 0!==r.appArgs){if(!Array.isArray(r.appArgs))throw Error("appArgs must be an Array of Uint8Array.");r.appArgs=r.appArgs.slice(),r.appArgs.forEach((e=>{if(e.constructor!==Uint8Array)throw Error("each element of AppArgs must be a Uint8Array.")}))}else r.appArgs=[];if(void 0!==r.appAccounts){if(!Array.isArray(r.appAccounts))throw Error("appAccounts must be an Array of addresses.");r.appAccounts=r.appAccounts.map((e=>o.decodeAddress(e)))}if(void 0!==r.appForeignApps){if(!Array.isArray(r.appForeignApps))throw Error("appForeignApps must be an Array of integers.");r.appForeignApps=r.appForeignApps.slice(),r.appForeignApps.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign application index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.appForeignAssets){if(!Array.isArray(r.appForeignAssets))throw Error("appForeignAssets must be an Array of integers.");r.appForeignAssets=r.appForeignAssets.slice(),r.appForeignAssets.forEach((e=>{if(!Number.isSafeInteger(e)||e<0)throw Error("each foreign asset index must be a positive number and smaller than 2^53-1")}))}if(void 0!==r.boxes){if(!Array.isArray(r.boxes))throw Error("boxes must be an Array of BoxReference.");r.boxes=r.boxes.slice(),r.boxes.forEach((e=>{if(!Number.isSafeInteger(e.appIndex)||e.name.constructor!==Uint8Array)throw Error("box app index must be a number and name must be an Uint8Array.")}))}if(void 0!==r.assetMetadataHash&&0!==r.assetMetadataHash.length){if("string"==typeof r.assetMetadataHash&&(r.assetMetadataHash=new Uint8Array(l.from(r.assetMetadataHash))),r.assetMetadataHash.constructor!==Uint8Array||32!==r.assetMetadataHash.byteLength)throw Error("assetMetadataHash must be a 32 byte Uint8Array or string.");r.assetMetadataHash.every((e=>0===e))&&(r.assetMetadataHash=void 0)}else r.assetMetadataHash=void 0;if(void 0!==r.note){if(r.note.constructor!==Uint8Array)throw Error("note must be a Uint8Array.")}else r.note=new Uint8Array(0);if(void 0!==r.lease){if(r.lease.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==r.lease.length)throw Error(`lease must be of length ${32..toString()}.`);r.lease.every((e=>0===e))&&(r.lease=new Uint8Array(0))}else r.lease=new Uint8Array(0);if(r.voteKey=h(r.voteKey,"voteKey",32),r.selectionKey=h(r.selectionKey,"selectionKey",32),r.stateProofKey=h(r.stateProofKey,"stateProofKey",64),r.nonParticipation&&(r.voteKey||r.selectionKey||r.voteFirst||r.stateProofKey||r.voteLast||r.voteKeyDilution))throw new Error("nonParticipation is true but participation params are present.");if(!r.nonParticipation&&(r.voteKey||r.selectionKey||r.stateProofKey||r.voteFirst||r.voteLast||r.voteKeyDilution)&&!(r.voteKey&&r.selectionKey&&r.voteFirst&&r.voteLast&&r.voteKeyDilution))throw new Error("online key registration missing at least one of the following fields: voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution");if(delete r.suggestedParams,Object.assign(this,c.removeUndefinedProperties(r)),r.flatFee||(this.fee*=this.estimateSize(),this.fee<p&&(this.fee=p)),this.group=void 0,void 0!==r.stateProofType&&(!Number.isSafeInteger(r.stateProofType)||r.stateProofType<0))throw Error("State Proof type must be a positive number and smaller than 2^53-1");if(void 0!==r.stateProofMessage){if(r.stateProofMessage.constructor!==Uint8Array)throw Error("stateProofMessage must be a Uint8Array.")}else r.stateProofMessage=new Uint8Array(0);if(void 0!==r.stateProof){if(r.stateProof.constructor!==Uint8Array)throw Error("stateProof must be a Uint8Array.")}else r.stateProof=new Uint8Array(0)}get_obj_for_encoding(){if("pay"===this.type){const e={amt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:"pay",gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group};return void 0!==this.closeRemainderTo&&o.encodeAddress(this.closeRemainderTo.publicKey)!==o.ALGORAND_ZERO_ADDRESS_STRING&&(e.close=l.from(this.closeRemainderTo.publicKey)),void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.to&&(e.rcv=l.from(this.to.publicKey)),e.note.length||delete e.note,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.lx.length||delete e.lx,e.rekey||delete e.rekey,e}if("keyreg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,votekey:this.voteKey,selkey:this.selectionKey,sprfkey:this.stateProofKey,votefst:this.voteFirst,votelst:this.voteLast,votekd:this.voteKeyDilution};return e.note.length||delete e.note,e.lx.length||delete e.lx,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),this.nonParticipation&&(e.nonpart=!0),e.selkey||delete e.selkey,e.votekey||delete e.votekey,e.sprfkey||delete e.sprfkey,e.votefst||delete e.votefst,e.votelst||delete e.votelst,e.votekd||delete e.votekd,e}if("acfg"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,caid:this.assetIndex,apar:{t:this.assetTotal,df:this.assetDefaultFrozen,dc:this.assetDecimals}};return void 0!==this.assetManager&&(e.apar.m=l.from(this.assetManager.publicKey)),void 0!==this.assetReserve&&(e.apar.r=l.from(this.assetReserve.publicKey)),void 0!==this.assetFreeze&&(e.apar.f=l.from(this.assetFreeze.publicKey)),void 0!==this.assetClawback&&(e.apar.c=l.from(this.assetClawback.publicKey)),void 0!==this.assetName&&(e.apar.an=this.assetName),void 0!==this.assetUnitName&&(e.apar.un=this.assetUnitName),void 0!==this.assetURL&&(e.apar.au=this.assetURL),void 0!==this.assetMetadataHash&&(e.apar.am=l.from(this.assetMetadataHash)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e.caid||delete e.caid,e.apar.t||e.apar.un||e.apar.an||e.apar.df||e.apar.m||e.apar.r||e.apar.f||e.apar.c||e.apar.au||e.apar.am||e.apar.dc?(e.apar.t||delete e.apar.t,e.apar.dc||delete e.apar.dc,e.apar.un||delete e.apar.un,e.apar.an||delete e.apar.an,e.apar.df||delete e.apar.df,e.apar.m||delete e.apar.m,e.apar.r||delete e.apar.r,e.apar.f||delete e.apar.f,e.apar.c||delete e.apar.c,e.apar.au||delete e.apar.au,e.apar.am||delete e.apar.am):delete e.apar,void 0===e.grp&&delete e.grp,e}if("axfer"===this.type){const e={aamt:this.amount,fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),arcv:l.from(this.to.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,xaid:this.assetIndex};return void 0!==this.closeRemainderTo&&(e.aclose=l.from(this.closeRemainderTo.publicKey)),void 0!==this.assetRevocationTarget&&(e.asnd=l.from(this.assetRevocationTarget.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.aamt||delete e.aamt,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,void 0===e.grp&&delete e.grp,e.aclose||delete e.aclose,e.asnd||delete e.asnd,e.rekey||delete e.rekey,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("afrz"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,faid:this.assetIndex,afrz:this.freezeState};return void 0!==this.freezeAccount&&(e.fadd=l.from(this.freezeAccount.publicKey)),e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.afrz||delete e.afrz,void 0===e.grp&&delete e.grp,void 0!==this.reKeyTo&&(e.rekey=l.from(this.reKeyTo.publicKey)),e}if("appl"===this.type){const n={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),grp:this.group,apid:this.appIndex,apan:this.appOnComplete,apls:{nui:this.appLocalInts,nbs:this.appLocalByteSlices},apgs:{nui:this.appGlobalInts,nbs:this.appGlobalByteSlices},apfa:this.appForeignApps,apas:this.appForeignAssets,apep:this.extraPages,apbx:(e=this.boxes,t=this.appForeignApps,r=this.appIndex,null==e?[]:e.map((e=>function(e,t,r){const n=e.appIndex,i=e.name,o=0===n||n===r;let s=0;if(null!=t&&(s=t.indexOf(n)+1),0===s&&!o)throw new Error(`Box ref with appId ${n} not in foreign-apps`);return{i:s,n:i}}(e,t,r))))};void 0!==this.reKeyTo&&(n.rekey=l.from(this.reKeyTo.publicKey)),void 0!==this.appApprovalProgram&&(n.apap=l.from(this.appApprovalProgram)),void 0!==this.appClearProgram&&(n.apsu=l.from(this.appClearProgram)),void 0!==this.appArgs&&(n.apaa=this.appArgs.map((e=>l.from(e)))),void 0!==this.appAccounts&&(n.apat=this.appAccounts.map((e=>l.from(e.publicKey)))),n.note.length||delete n.note,n.lx.length||delete n.lx,n.amt||delete n.amt,n.fee||delete n.fee,n.fv||delete n.fv,n.gen||delete n.gen,n.apid||delete n.apid,n.apls.nui||delete n.apls.nui,n.apls.nbs||delete n.apls.nbs,n.apls.nui||n.apls.nbs||delete n.apls,n.apgs.nui||delete n.apgs.nui,n.apgs.nbs||delete n.apgs.nbs,n.apaa&&n.apaa.length||delete n.apaa,n.apgs.nui||n.apgs.nbs||delete n.apgs,n.apap||delete n.apap,n.apsu||delete n.apsu,n.apan||delete n.apan,n.apfa&&n.apfa.length||delete n.apfa,n.apas&&n.apas.length||delete n.apas;for(const e of n.apbx)e.i||delete e.i,e.n&&e.n.length||delete e.n;return n.apbx&&n.apbx.length||delete n.apbx,n.apat&&n.apat.length||delete n.apat,n.apep||delete n.apep,void 0===n.grp&&delete n.grp,n}var e,t,r;if("stpf"===this.type){const e={fee:this.fee,fv:this.firstRound,lv:this.lastRound,note:l.from(this.note),snd:l.from(this.from.publicKey),type:this.type,gen:this.genesisID,gh:this.genesisHash,lx:l.from(this.lease),sptype:this.stateProofType,spmsg:l.from(this.stateProofMessage),sp:l.from(this.stateProof)};return e.sptype||delete e.sptype,e.note.length||delete e.note,e.lx.length||delete e.lx,e.amt||delete e.amt,e.fee||delete e.fee,e.fv||delete e.fv,e.gen||delete e.gen,e.apid||delete e.apid,e.apaa&&e.apaa.length||delete e.apaa,e.apap||delete e.apap,e.apsu||delete e.apsu,e.apan||delete e.apan,e.apfa&&e.apfa.length||delete e.apfa,e.apas&&e.apas.length||delete e.apas,e.apat&&e.apat.length||delete e.apat,e.apep||delete e.apep,void 0===e.grp&&delete e.grp,e}}static from_obj_for_encoding(e){const t=Object.create(this.prototype);if(t.name="Transaction",t.tag=l.from("TX"),t.genesisID=e.gen,t.genesisHash=l.from(e.gh),!(0,u.v8)(e.type))throw new Error(`Unrecognized transaction type: ${e.type}`);return t.type=e.type,t.fee=e.fee,t.firstRound=e.fv,t.lastRound=e.lv,t.note=new Uint8Array(e.note),t.lease=new Uint8Array(e.lx),t.from=o.decodeAddress(o.encodeAddress(new Uint8Array(e.snd))),void 0!==e.grp&&(t.group=l.from(e.grp)),void 0!==e.rekey&&(t.reKeyTo=o.decodeAddress(o.encodeAddress(new Uint8Array(e.rekey)))),"pay"===e.type?(t.amount=e.amt,t.to=o.decodeAddress(o.encodeAddress(new Uint8Array(e.rcv))),void 0!==e.close&&(t.closeRemainderTo=o.decodeAddress(o.encodeAddress(e.close)))):"keyreg"===e.type?(void 0!==e.votekey&&(t.voteKey=l.from(e.votekey)),void 0!==e.selkey&&(t.selectionKey=l.from(e.selkey)),void 0!==e.sprfkey&&(t.stateProofKey=l.from(e.sprfkey)),void 0!==e.votekd&&(t.voteKeyDilution=e.votekd),void 0!==e.votefst&&(t.voteFirst=e.votefst),void 0!==e.votelst&&(t.voteLast=e.votelst),void 0!==e.nonpart&&(t.nonParticipation=e.nonpart)):"acfg"===e.type?(void 0!==e.caid&&(t.assetIndex=e.caid),void 0!==e.apar&&(t.assetTotal=e.apar.t,t.assetDefaultFrozen=e.apar.df,void 0!==e.apar.dc&&(t.assetDecimals=e.apar.dc),void 0!==e.apar.m&&(t.assetManager=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.m)))),void 0!==e.apar.r&&(t.assetReserve=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.r)))),void 0!==e.apar.f&&(t.assetFreeze=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.f)))),void 0!==e.apar.c&&(t.assetClawback=o.decodeAddress(o.encodeAddress(new Uint8Array(e.apar.c)))),void 0!==e.apar.un&&(t.assetUnitName=e.apar.un),void 0!==e.apar.an&&(t.assetName=e.apar.an),void 0!==e.apar.au&&(t.assetURL=e.apar.au),void 0!==e.apar.am&&(t.assetMetadataHash=e.apar.am))):"axfer"===e.type?(void 0!==e.xaid&&(t.assetIndex=e.xaid),void 0!==e.aamt&&(t.amount=e.aamt),void 0!==e.aclose&&(t.closeRemainderTo=o.decodeAddress(o.encodeAddress(new Uint8Array(e.aclose)))),void 0!==e.asnd&&(t.assetRevocationTarget=o.decodeAddress(o.encodeAddress(new Uint8Array(e.asnd)))),t.to=o.decodeAddress(o.encodeAddress(new Uint8Array(e.arcv)))):"afrz"===e.type?(void 0!==e.afrz&&(t.freezeState=e.afrz),void 0!==e.faid&&(t.assetIndex=e.faid),t.freezeAccount=o.decodeAddress(o.encodeAddress(new Uint8Array(e.fadd)))):"appl"===e.type?(void 0!==e.apid&&(t.appIndex=e.apid),void 0!==e.apan&&(t.appOnComplete=e.apan),void 0!==e.apls&&(void 0!==e.apls.nui&&(t.appLocalInts=e.apls.nui),void 0!==e.apls.nbs&&(t.appLocalByteSlices=e.apls.nbs)),void 0!==e.apgs&&(void 0!==e.apgs.nui&&(t.appGlobalInts=e.apgs.nui),void 0!==e.apgs.nbs&&(t.appGlobalByteSlices=e.apgs.nbs)),void 0!==e.apep&&(t.extraPages=e.apep),void 0!==e.apap&&(t.appApprovalProgram=new Uint8Array(e.apap)),void 0!==e.apsu&&(t.appClearProgram=new Uint8Array(e.apsu)),void 0!==e.apaa&&(t.appArgs=e.apaa.map((e=>new Uint8Array(e)))),void 0!==e.apat&&(t.appAccounts=e.apat.map((e=>o.decodeAddress(o.encodeAddress(new Uint8Array(e)))))),void 0!==e.apfa&&(t.appForeignApps=e.apfa),void 0!==e.apas&&(t.appForeignAssets=e.apas),void 0!==e.apbx&&(t.boxes=e.apbx.map((e=>({appIndex:e.i?t.appForeignApps[e.i-1]:0,name:e.n}))))):"stpf"===e.type&&(void 0!==e.sptype&&(t.stateProofType=e.sptype),void 0!==e.sp&&(t.stateProof=e.sp),void 0!==e.spmsg&&(t.stateProofMessage=e.spmsg)),t}estimateSize(){return this.toByte().length+75}bytesToSign(){const e=this.toByte();return l.from(c.concatArrays(this.tag,e))}toByte(){return s.encode(this.get_obj_for_encoding())}rawSignTxn(e){const t=this.bytesToSign(),r=a.sign(t,e);return l.from(r)}signTxn(e){const t={sig:this.rawSignTxn(e),txn:this.get_obj_for_encoding()},r=a.keyPairFromSecretKey(e).publicKey;return o.encodeAddress(r)!==o.encodeAddress(this.from.publicKey)&&(t.sgnr=l.from(r)),new Uint8Array(s.encode(t))}attachSignature(e,t){if(!a.isValidSignatureLength(t.length))throw new Error("Invalid signature length");const r={sig:l.from(t),txn:this.get_obj_for_encoding()};if(e!==o.encodeAddress(this.from.publicKey)){const t=o.decodeAddress(e).publicKey;r.sgnr=l.from(t)}return new Uint8Array(s.encode(r))}rawTxID(){const e=this.toByte(),t=l.from(c.concatArrays(this.tag,e));return l.from(a.genericHash(t))}txID(){const e=this.rawTxID();return i().encode(e).slice(0,52)}addLease(e,t=0){let r;if(void 0!==e){if(e.constructor!==Uint8Array)throw Error("lease must be a Uint8Array.");if(32!==e.length)throw Error(`lease must be of length ${32..toString()}.`);r=new Uint8Array(e)}else r=new Uint8Array(0);this.lease=r,0!==t&&(this.fee+=37*t)}addRekey(e,t=0){void 0!==e&&(this.reKeyTo=o.decodeAddress(e)),0!==t&&(this.fee+=37*t)}_getDictForDisplay(){const e={...this};return e.tag=e.tag.toString(),e.from=o.encodeAddress(e.from.publicKey),void 0!==e.to&&(e.to=o.encodeAddress(e.to.publicKey)),void 0!==e.freezeAccount&&(e.freezeAccount=o.encodeAddress(e.freezeAccount.publicKey)),void 0!==e.closeRemainderTo&&(e.closeRemainderTo=o.encodeAddress(e.closeRemainderTo.publicKey)),void 0!==e.assetManager&&(e.assetManager=o.encodeAddress(e.assetManager.publicKey)),void 0!==e.assetReserve&&(e.assetReserve=o.encodeAddress(e.assetReserve.publicKey)),void 0!==e.assetFreeze&&(e.assetFreeze=o.encodeAddress(e.assetFreeze.publicKey)),void 0!==e.assetClawback&&(e.assetClawback=o.encodeAddress(e.assetClawback.publicKey)),void 0!==e.assetRevocationTarget&&(e.assetRevocationTarget=o.encodeAddress(e.assetRevocationTarget.publicKey)),void 0!==e.reKeyTo&&(e.reKeyTo=o.encodeAddress(e.reKeyTo.publicKey)),e.genesisHash=e.genesisHash.toString("base64"),e}prettyPrint(){console.log(this._getDictForDisplay())}toString(){return JSON.stringify(this._getDictForDisplay())}}function f(e){const t=e.get_obj_for_encoding();return s.encode(t)}function g(e){const t=s.decode(e);return d.from_obj_for_encoding(t)}function m(e){const t=s.decode(e);return{...t,txn:d.from_obj_for_encoding(t.txn)}}function y(e){return e instanceof d?e:new d(e)}const b=d},2380:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.i});var n=r(1824)},7197:(e,t,r)=>{"use strict";var n;r.d(t,{Z:()=>i}),function(e){e.DEFAULT="default",e.SAFE="safe",e.MIXED="mixed",e.BIGINT="bigint"}(n||(n={}));const i=n},1624:(e,t,r)=>{"use strict";var n,i;function o(e){return e===n.pay||e===n.keyreg||e===n.acfg||e===n.axfer||e===n.afrz||e===n.appl||e===n.stpf}r.d(t,{iU:()=>n,v8:()=>o,hq:()=>i}),function(e){e.pay="pay",e.keyreg="keyreg",e.acfg="acfg",e.axfer="axfer",e.afrz="afrz",e.appl="appl",e.stpf="stpf"}(n||(n={})),function(e){e[e.NoOpOC=0]="NoOpOC",e[e.OptInOC=1]="OptInOC",e[e.CloseOutOC=2]="CloseOutOC",e[e.ClearStateOC=3]="ClearStateOC",e[e.UpdateApplicationOC=4]="UpdateApplicationOC",e[e.DeleteApplicationOC=5]="DeleteApplicationOC"}(i||(i={}))},1824:(e,t,r)=>{"use strict";r.d(t,{i:()=>n.iU});var n=r(1624)},413:(e,t,r)=>{"use strict";r.r(t),r.d(t,{parseJSON:()=>a,arrayEqual:()=>c,concatArrays:()=>u,removeUndefinedProperties:()=>l,isNode:()=>p});var n=r(4360),i=r.n(n),o=r(7197);const s=i()({useNativeBigInt:!0,strict:!0});function a(e,t){const r=t&&t.intDecoding?t.intDecoding:o.Z.DEFAULT;return s.parse(e,((e,t)=>{if(null!=t&&"object"==typeof t&&null==Object.getPrototypeOf(t)&&Object.setPrototypeOf(t,Object.prototype),"bigint"==typeof t){if("safe"===r&&t>Number.MAX_SAFE_INTEGER)throw new Error(`Integer exceeds maximum safe integer: ${t.toString()}. Try parsing with a different intDecoding option.`);return"bigint"===r||"mixed"===r&&t>Number.MAX_SAFE_INTEGER?t:Number(t)}return"number"==typeof t&&"bigint"===r&&Number.isInteger(t)?BigInt(t):t}))}function c(e,t){return e.length===t.length&&Array.from(e).every(((e,r)=>e===t[r]))}function u(...e){const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);let n=0;for(let t=0;t<e.length;t++)r.set(e[t],n),n+=e[t].length;return r}function l(e){const t={...e};return Object.keys(t).forEach((e=>{void 0===t[e]&&delete t[e]})),t}function p(){return"object"==typeof process&&"object"==typeof process.versions&&void 0!==process.versions.node}},5062:(e,t,r)=>{"use strict";async function n(e,t,r){const n=await e.status().do();if(void 0===n)throw new Error("Unable to get node status");const i=n["last-round"]+1;let o=i;for(;o<i+r;){let r=!1;try{const n=await e.pendingTransactionInformation(t).do();if(n["confirmed-round"])return n;if(n["pool-error"])throw r=!0,new Error(`Transaction Rejected: ${n["pool-error"]}`)}catch(e){if(r)throw e}await e.statusAfterBlock(o).do(),o+=1}throw new Error(`Transaction not confirmed after ${r} rounds`)}r.d(t,{K:()=>n})}},__webpack_module_cache__={};function __nested_webpack_require_444681__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__nested_webpack_require_444681__),r.exports}__nested_webpack_require_444681__.amdO={},__nested_webpack_require_444681__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_444681__.d(t,{a:t}),t},__nested_webpack_require_444681__.d=(e,t)=>{for(var r in t)__nested_webpack_require_444681__.o(t,r)&&!__nested_webpack_require_444681__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_444681__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__nested_webpack_require_444681__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_444681__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_444681__.r(__webpack_exports__),__nested_webpack_require_444681__.d(__webpack_exports__,{default:()=>r});var e=__nested_webpack_require_444681__(6608),t={};for(const r in e)"default"!==r&&(t[r]=()=>e[r]);__nested_webpack_require_444681__.d(__webpack_exports__,t);const r=e})(),__webpack_exports__})()},module.exports=t()},958:(e,t)=>{var r=Object.defineProperty;r(t,"__esModule",{value:!0}),((e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})})(t,{GIFEncoder:()=>S,applyPalette:()=>m,default:()=>U,nearestColor:()=>_,nearestColorIndex:()=>A,nearestColorIndexWithDistance:()=>x,prequantize:()=>g,quantize:()=>p,snapColorsToPalette:()=>w});function n(e=256){let t=0,r=new Uint8Array(e);return{get buffer(){return r.buffer},reset(){t=0},bytesView:()=>r.subarray(0,t),bytes:()=>r.slice(0,t),writeByte(e){n(t+1),r[t]=e,t++},writeBytes(e,i=0,o=e.length){n(t+o);for(let n=0;n<o;n++)r[t++]=e[n+i]},writeBytesView(e,i=0,o=e.byteLength){n(t+o),r.set(e.subarray(i,i+o),t),t+=o}};function n(e){var n=r.length;if(n>=e)return;e=Math.max(e,n*(n<1048576?2:1.125)>>>0),0!=n&&(e=Math.max(e,256));const i=r;r=new Uint8Array(e),t>0&&r.set(i.subarray(0,t),0)}}var i=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];function o(e,t,r){return e<<8&63488|t<<2&992|r>>3}function s(e,t,r,n){return e>>4|240&t|(240&r)<<4|(240&n)<<8}function a(e,t,r){return e>>4<<8|240&t|r>>4}function c(e,t,r){return e<t?t:e>r?r:e}function u(e){return e*e}function l(e,t,r){var n=0,i=1e100;const o=e[t],s=o.cnt,a=o.ac,c=o.rc,l=o.gc,p=o.bc;for(var h=o.fw;0!=h;h=e[h].fw){const t=e[h],o=t.cnt,f=s*o/(s+o);if(!(f>=i)){var d=0;r&&(d+=f*u(t.ac-a))>=i||(d+=f*u(t.rc-c))>=i||(d+=f*u(t.gc-l))>=i||(d+=f*u(t.bc-p))>=i||(i=d,n=h)}}o.err=i,o.nn=n}function p(e,t,r={}){const{format:n="rgb565",clearAlpha:i=!0,clearAlphaColor:p=0,clearAlphaThreshold:d=0,oneBitAlpha:f=!1}=r;if(!e||!e.buffer)throw new Error("quantize() expected RGBA Uint8Array data");if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("quantize() expected RGBA Uint8Array data");const g=new Uint32Array(e.buffer);let m=!1!==r.useSqrt;const y="rgba4444"===n,b=function(e,t){const r=new Array("rgb444"===t?4096:65536),n=e.length;if("rgba4444"===t)for(let t=0;t<n;++t){const n=e[t],i=n>>24&255,o=n>>16&255,a=n>>8&255,c=255&n,u=s(c,a,o,i);let l=u in r?r[u]:r[u]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};l.rc+=c,l.gc+=a,l.bc+=o,l.ac+=i,l.cnt++}else if("rgb444"===t)for(let t=0;t<n;++t){const n=e[t],i=n>>16&255,o=n>>8&255,s=255&n,c=a(s,o,i);let u=c in r?r[c]:r[c]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};u.rc+=s,u.gc+=o,u.bc+=i,u.cnt++}else for(let t=0;t<n;++t){const n=e[t],i=n>>16&255,s=n>>8&255,a=255&n,c=o(a,s,i);let u=c in r?r[c]:r[c]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};u.rc+=a,u.gc+=s,u.bc+=i,u.cnt++}return r}(g,n),w=b.length,v=w-1,A=new Uint32Array(w+1);for(var x=0,_=0;_<w;++_){const e=b[_];if(null!=e){var S=1/e.cnt;y&&(e.ac*=S),e.rc*=S,e.gc*=S,e.bc*=S,b[x++]=e}}var E,B,T;for(u(t)/x<.022&&(m=!1),_=0;_<x-1;++_)b[_].fw=_+1,b[_+1].bk=_,m&&(b[_].cnt=Math.sqrt(b[_].cnt));for(m&&(b[_].cnt=Math.sqrt(b[_].cnt)),_=0;_<x;++_){l(b,_,!1);var k=b[_].err;for(B=++A[0];B>1&&!(b[E=A[T=B>>1]].err<=k);B=T)A[B]=E;A[B]=_}var U=x-t;for(_=0;_<U;){for(var I;;){var R=A[1];if((I=b[R]).tm>=I.mtm&&b[I.nn].mtm<=I.tm)break;for(I.mtm==v?R=A[1]=A[A[0]--]:(l(b,R,!1),I.tm=_),k=b[R].err,B=1;(T=B+B)<=A[0]&&(T<A[0]&&b[A[T]].err>b[A[T+1]].err&&T++,!(k<=b[E=A[T]].err));B=T)A[B]=E;A[B]=R}var C=b[I.nn],D=I.cnt,O=C.cnt;S=1/(D+O),y&&(I.ac=S*(D*I.ac+O*C.ac)),I.rc=S*(D*I.rc+O*C.rc),I.gc=S*(D*I.gc+O*C.gc),I.bc=S*(D*I.bc+O*C.bc),I.cnt+=C.cnt,I.mtm=++_,b[C.bk].fw=C.fw,b[C.fw].bk=C.bk,C.mtm=v}let N=[];var P=0;for(_=0;;++P){let e=c(Math.round(b[_].rc),0,255),t=c(Math.round(b[_].gc),0,255),r=c(Math.round(b[_].bc),0,255),n=255;y&&(n=c(Math.round(b[_].ac),0,255),f&&(n=n<=("number"==typeof f?f:127)?0:255),i&&n<=d&&(e=t=r=p,n=0));const o=y?[e,t,r,n]:[e,t,r];if(h(N,o)||N.push(o),0==(_=b[_].fw))break}return N}function h(e,t){for(let r=0;r<e.length;r++){const n=e[r];let i=n[0]===t[0]&&n[1]===t[1]&&n[2]===t[2],o=!(n.length>=4&&t.length>=4)||n[3]===t[3];if(i&&o)return!0}return!1}function d(e,t){var r,n=0;for(r=0;r<e.length;r++){const i=e[r]-t[r];n+=i*i}return n}function f(e,t){return t>1?Math.round(e/t)*t:e}function g(e,{roundRGB:t=5,roundAlpha:r=10,oneBitAlpha:n=null}={}){const i=new Uint32Array(e.buffer);for(let e=0;e<i.length;e++){const o=i[e];let s=o>>24&255,a=o>>16&255,c=o>>8&255,u=255&o;s=f(s,r),n&&(s=s<=("number"==typeof n?n:127)?0:255),u=f(u,t),c=f(c,t),a=f(a,t),i[e]=s<<24|a<<16|c<<8|u<<0}}function m(e,t,r="rgb565"){if(!e||!e.buffer)throw new Error("quantize() expected RGBA Uint8Array data");if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("quantize() expected RGBA Uint8Array data");if(t.length>256)throw new Error("applyPalette() only works with 256 colors or less");const n=new Uint32Array(e.buffer),i=n.length,c="rgb444"===r?4096:65536,u=new Uint8Array(i),l=new Array(c);if("rgba4444"===r)for(let e=0;e<i;e++){const r=n[e],i=r>>24&255,o=r>>16&255,a=r>>8&255,c=255&r,p=s(c,a,o,i),h=p in l?l[p]:l[p]=y(c,a,o,i,t);u[e]=h}else{const e="rgb444"===r?a:o;for(let r=0;r<i;r++){const i=n[r],o=i>>16&255,s=i>>8&255,a=255&i,c=e(a,s,o),p=c in l?l[c]:l[c]=b(a,s,o,t);u[r]=p}}return u}function y(e,t,r,n,i){let o=0,s=1e100;for(let a=0;a<i.length;a++){const c=i[a];let u=v(c[3]-n);u>s||(u+=v(c[0]-e),u>s||(u+=v(c[1]-t),u>s||(u+=v(c[2]-r),u>s||(s=u,o=a))))}return o}function b(e,t,r,n){let i=0,o=1e100;for(let s=0;s<n.length;s++){const a=n[s];let c=v(a[0]-e);c>o||(c+=v(a[1]-t),c>o||(c+=v(a[2]-r),c>o||(o=c,i=s)))}return i}function w(e,t,r=5){if(!e.length||!t.length)return;const n=e.map((e=>e.slice(0,3))),i=r*r,o=e[0].length;for(let r=0;r<t.length;r++){let s=t[r];s=s.length<o?[s[0],s[1],s[2],255]:s.length>o?s.slice(0,3):s.slice();const a=x(n,s.slice(0,3),d),c=a[0],u=a[1];u>0&&u<=i&&(e[c]=s)}}function v(e){return e*e}function A(e,t,r=d){let n=1/0,i=-1;for(let o=0;o<e.length;o++){const s=r(t,e[o]);s<n&&(n=s,i=o)}return i}function x(e,t,r=d){let n=1/0,i=-1;for(let o=0;o<e.length;o++){const s=r(t,e[o]);s<n&&(n=s,i=o)}return[i,n]}function _(e,t,r=d){return e[A(e,t,r)]}function S(e={}){const{initialCapacity:t=4096,auto:r=!0}=e,o=n(t),s=new Uint8Array(256),a=new Int32Array(5003),c=new Int32Array(5003);let u=!1;return{reset(){o.reset(),u=!1},finish(){o.writeByte(59)},bytes:()=>o.bytes(),bytesView:()=>o.bytesView(),get buffer(){return o.buffer},get stream(){return o},writeHeader:l,writeFrame(e,t,p,h={}){const{transparent:d=!1,transparentIndex:f=0,delay:g=0,palette:m=null,repeat:y=0,colorDepth:b=8,dispose:w=-1}=h;let v=!1;if(r?u||(v=!0,l(),u=!0):v=Boolean(h.first),t=Math.max(0,Math.floor(t)),p=Math.max(0,Math.floor(p)),v){if(!m)throw new Error("First frame must include a { palette } option");!function(e,t,r,n,i=8){const o=128|i-1<<4|k(n.length)-1;B(e,t),B(e,r),e.writeBytes([o,0,0])}(o,t,p,m,b),E(o,m),y>=0&&function(e,t){e.writeByte(33),e.writeByte(255),e.writeByte(11),T(e,"NETSCAPE2.0"),e.writeByte(3),e.writeByte(1),B(e,t),e.writeByte(0)}(o,y)}const A=Math.round(g/10);!function(e,t,r,n,i){var o,s;e.writeByte(33),e.writeByte(249),e.writeByte(4),i<0&&(i=0,n=!1),n?(o=1,s=2):(o=0,s=0),t>=0&&(s=7&t),s<<=2;e.writeByte(0|s|o),B(e,r),e.writeByte(i||0),e.writeByte(0)}(o,w,A,d,f);const x=Boolean(m)&&!v;!function(e,t,r,n){if(e.writeByte(44),B(e,0),B(e,0),B(e,t),B(e,r),n){const t=0,r=0,i=k(n.length)-1;e.writeByte(128|t|r|0|i)}else e.writeByte(0)}(o,t,p,x?m:null),x&&E(o,m),function(e,t,r,o,s=8,a,c,u){!function(e,t,r,o,s=n(512),a=new Uint8Array(256),c=new Int32Array(5003),u=new Int32Array(5003)){const l=c.length,p=Math.max(2,o);a.fill(0),u.fill(0),c.fill(-1);let h=0,d=0;const f=p+1,g=f;let m=!1,y=g,b=(1<<y)-1;const w=1<<f-1,v=w+1;let A=w+2,x=0,_=r[0],S=0;for(let e=l;e<65536;e*=2)++S;S=8-S,s.writeByte(p),B(w);const E=r.length;for(let e=1;e<E;e++)e:{const t=r[e],n=(t<<12)+_;let i=t<<S^_;if(c[i]===n){_=u[i];break e}const o=0===i?1:l-i;for(;c[i]>=0;)if(i-=o,i<0&&(i+=l),c[i]===n){_=u[i];break e}B(_),_=t,A<4096?(u[i]=A++,c[i]=n):(c.fill(-1),A=w+2,m=!0,B(w))}return B(_),B(v),s.writeByte(0),s.bytesView();function B(e){for(h&=i[d],d>0?h|=e<<d:h=e,d+=y;d>=8;)a[x++]=255&h,x>=254&&(s.writeByte(x),s.writeBytesView(a,0,x),x=0),h>>=8,d-=8;if((A>b||m)&&(m?(y=g,b=(1<<y)-1,m=!1):(++y,b=12===y?1<<y:(1<<y)-1)),e==v){for(;d>0;)a[x++]=255&h,x>=254&&(s.writeByte(x),s.writeBytesView(a,0,x),x=0),h>>=8,d-=8;x>0&&(s.writeByte(x),s.writeBytesView(a,0,x),x=0)}}}(0,0,t,s,e,a,c,u)}(o,e,0,0,b,s,a,c)}};function l(){T(o,"GIF89a")}}function E(e,t){const r=1<<k(t.length);for(let n=0;n<r;n++){let r=[0,0,0];n<t.length&&(r=t[n]),e.writeByte(r[0]),e.writeByte(r[1]),e.writeByte(r[2])}}function B(e,t){e.writeByte(255&t),e.writeByte(t>>8&255)}function T(e,t){for(var r=0;r<t.length;r++)e.writeByte(t.charCodeAt(r))}function k(e){return Math.max(Math.ceil(Math.log2(e)),1)}var U=S},518:()=>{},616:()=>{},149:()=>{},172:()=>{},921:()=>{}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.exports}var __webpack_exports__={};(()=>{"use strict";var e=__webpack_require__(173),t=Math.pow(2,31),r=Math.pow(2,7),n=Math.pow(2,14),i=Math.pow(2,21),o=Math.pow(2,28),s=Math.pow(2,35),a=Math.pow(2,42),c=Math.pow(2,49),u=Math.pow(2,56),l=Math.pow(2,63);const p={encode:function e(r,n,i){n=n||[];for(var o=i=i||0;r>=t;)n[i++]=255&r|128,r/=128;for(;-128&r;)n[i++]=255&r|128,r>>>=7;return n[i]=0|r,e.bytes=i-o+1,n},decode:function e(t,r){var n,i=0,o=0,s=r=r||0,a=t.length;do{if(s>=a)throw e.bytes=0,new RangeError("Could not decode varint");n=t[s++],i+=o<28?(127&n)<<o:(127&n)*Math.pow(2,o),o+=7}while(n>=128);return e.bytes=s-r,i},encodingLength:function(e){return e<r?1:e<n?2:e<i?3:e<o?4:e<s?5:e<a?6:e<c?7:e<u?8:e<l?9:10}},h=e=>[p.decode(e),p.decode.bytes],d=(e,t,r=0)=>(p.encode(e,t,r),t),f=e=>p.encodingLength(e),g=(new Uint8Array(0),e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")}),m=(e,t)=>{const r=t.byteLength,n=f(e),i=n+f(r),o=new Uint8Array(i+r);return d(e,o,0),d(r,o,n),o.set(t,i),new y(e,r,t,o)};class y{constructor(e,t,r,n){this.code=e,this.size=t,this.digest=r,this.bytes=n}}class b{constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class w{constructor(e,t,r){if(this.name=e,this.prefix=t,void 0===t.codePointAt(0))throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if("string"==typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return A(this,e)}}class v{constructor(e){this.decoders=e}or(e){return A(this,e)}decode(e){const t=e[0],r=this.decoders[t];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const A=(e,t)=>new v({...e.decoders||{[e.prefix]:e},...t.decoders||{[t.prefix]:t}});class x{constructor(e,t,r,n){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=n,this.encoder=new b(e,t,r),this.decoder=new w(e,t,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const _=({name:e,prefix:t,encode:r,decode:n})=>new x(e,t,r,n),S=({prefix:e,name:t,alphabet:r})=>{const{encode:n,decode:i}=function(e,t){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var i=0;i<e.length;i++){var o=e.charAt(i),s=o.charCodeAt(0);if(255!==r[s])throw new TypeError(o+" is ambiguous");r[s]=i}var a=e.length,c=e.charAt(0),u=Math.log(a)/Math.log(256),l=Math.log(256)/Math.log(a);function p(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var t=0;if(" "!==e[t]){for(var n=0,i=0;e[t]===c;)n++,t++;for(var o=(e.length-t)*u+1>>>0,s=new Uint8Array(o);e[t];){var l=r[e.charCodeAt(t)];if(255===l)return;for(var p=0,h=o-1;(0!==l||p<i)&&-1!==h;h--,p++)l+=a*s[h]>>>0,s[h]=l%256>>>0,l=l/256>>>0;if(0!==l)throw new Error("Non-zero carry");i=p,t++}if(" "!==e[t]){for(var d=o-i;d!==o&&0===s[d];)d++;for(var f=new Uint8Array(n+(o-d)),g=n;d!==o;)f[g++]=s[d++];return f}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,n=0,i=0,o=t.length;i!==o&&0===t[i];)i++,r++;for(var s=(o-i)*l+1>>>0,u=new Uint8Array(s);i!==o;){for(var p=t[i],h=0,d=s-1;(0!==p||h<n)&&-1!==d;d--,h++)p+=256*u[d]>>>0,u[d]=p%a>>>0,p=p/a>>>0;if(0!==p)throw new Error("Non-zero carry");n=h,i++}for(var f=s-n;f!==s&&0===u[f];)f++;for(var g=c.repeat(r);f<s;++f)g+=e.charAt(u[f]);return g},decodeUnsafe:p,decode:function(e){var r=p(e);if(r)return r;throw new Error(`Non-${t} character`)}}}(r,t);return _({prefix:e,name:t,encode:n,decode:e=>g(i(e))})},E=({name:e,prefix:t,bitsPerChar:r,alphabet:n})=>_({prefix:t,name:e,encode:e=>((e,t,r)=>{const n="="===t[t.length-1],i=(1<<r)-1;let o="",s=0,a=0;for(let n=0;n<e.length;++n)for(a=a<<8|e[n],s+=8;s>r;)s-=r,o+=t[i&a>>s];if(s&&(o+=t[i&a<<r-s]),n)for(;o.length*r&7;)o+="=";return o})(e,n,r),decode:t=>((e,t,r,n)=>{const i={};for(let e=0;e<t.length;++e)i[t[e]]=e;let o=e.length;for(;"="===e[o-1];)--o;const s=new Uint8Array(o*r/8|0);let a=0,c=0,u=0;for(let t=0;t<o;++t){const o=i[e[t]];if(void 0===o)throw new SyntaxError(`Non-${n} character`);c=c<<r|o,a+=r,a>=8&&(a-=8,s[u++]=255&c>>a)}if(a>=r||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return s})(t,n,r,e)}),B=S({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),T=(S({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),E({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}));E({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),E({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),E({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),E({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),E({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),E({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),E({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),E({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});class k{constructor(e,t,r,n){this.code=t,this.version=e,this.multihash=r,this.bytes=n,this.byteOffset=n.byteOffset,this.byteLength=n.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:L,byteLength:L,code:P,version:P,multihash:P,bytes:P,_baseCache:L,asCID:L})}toV0(){if(0===this.version)return this;{const{code:e,multihash:t}=this;if(e!==C)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==D)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return k.createV0(t)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,r=m(e,t);return k.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&((t=this.multihash)===(r=e.multihash)||t.code===r.code&&t.size===r.size&&((e,t)=>{if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0})(t.bytes,r.bytes));var t,r}toString(e){const{bytes:t,version:r,_baseCache:n}=this;return 0===r?I(t,n,e||B.encoder):R(t,n,e||T.encoder)}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return j(/^0\.0/,z),!(!e||!e[N]&&e.asCID!==e)}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof k)return e;if(null!=e&&e.asCID===e){const{version:t,code:r,multihash:n,bytes:i}=e;return new k(t,r,n,i||O(t,r,n.bytes))}if(null!=e&&!0===e[N]){const{version:t,multihash:r,code:n}=e,i=(e=>{const t=g(e),[r,n]=h(t),[i,o]=h(t.subarray(n)),s=t.subarray(n+o);if(s.byteLength!==i)throw new Error("Incorrect length");return new y(r,i,s,t)})(r);return k.create(t,n,i)}return null}static create(e,t,r){if("number"!=typeof t)throw new Error("String codecs are no longer supported");switch(e){case 0:if(t!==C)throw new Error(`Version 0 CID must use dag-pb (code: ${C}) block encoding`);return new k(e,t,r,r.bytes);case 1:{const n=O(e,t,r.bytes);return new k(e,t,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return k.create(0,C,e)}static createV1(e,t){return k.create(1,e,t)}static decode(e){const[t,r]=k.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=k.inspectBytes(e),r=t.size-t.multihashSize,n=g(e.subarray(r,r+t.multihashSize));if(n.byteLength!==t.multihashSize)throw new Error("Incorrect length");const i=n.subarray(t.multihashSize-t.digestSize),o=new y(t.multihashCode,t.digestSize,i,n);return[0===t.version?k.createV0(o):k.createV1(t.codec,o),e.subarray(t.size)]}static inspectBytes(e){let t=0;const r=()=>{const[r,n]=h(e.subarray(t));return t+=n,r};let n=r(),i=C;if(18===n?(n=0,t=0):1===n&&(i=r()),0!==n&&1!==n)throw new RangeError(`Invalid CID version ${n}`);const o=t,s=r(),a=r(),c=t+a;return{version:n,codec:i,multihashCode:s,digestSize:a,multihashSize:c-o,size:c}}static parse(e,t){const[r,n]=U(e,t),i=k.decode(n);return i._baseCache.set(r,e),i}}const U=(e,t)=>{switch(e[0]){case"Q":{const r=t||B;return[B.prefix,r.decode(`${B.prefix}${e}`)]}case B.prefix:{const r=t||B;return[B.prefix,r.decode(e)]}case T.prefix:{const r=t||T;return[T.prefix,r.decode(e)]}default:if(null==t)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],t.decode(e)]}},I=(e,t,r)=>{const{prefix:n}=r;if(n!==B.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const i=t.get(n);if(null==i){const i=r.encode(e).slice(1);return t.set(n,i),i}return i},R=(e,t,r)=>{const{prefix:n}=r,i=t.get(n);if(null==i){const i=r.encode(e);return t.set(n,i),i}return i},C=112,D=18,O=(e,t,r)=>{const n=f(e),i=n+f(t),o=new Uint8Array(i+r.byteLength);return d(e,o,0),d(t,o,n),o.set(r,i),o},N=Symbol.for("@ipld/js-cid/CID"),P={writable:!1,configurable:!1,enumerable:!0},L={writable:!1,enumerable:!1,configurable:!1},j=(e,t)=>{if(!e.test("0.0.0-dev"))throw new Error(t);console.warn(t)},z="CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n",F=({name:e,code:t,encode:r})=>new M(e,t,r);class M{constructor(e,t,r){this.name=e,this.code=t,this.encode=r}digest(e){if(e instanceof Uint8Array){const t=this.encode(e);return t instanceof Uint8Array?m(this.code,t):t.then((e=>m(this.code,e)))}throw Error("Unknown type, must be binary type")}}const q=e=>async t=>new Uint8Array(await crypto.subtle.digest(e,t)),H=F({name:"sha2-256",code:18,encode:q("SHA-256")});F({name:"sha2-512",code:19,encode:q("SHA-512")}),__webpack_require__(169).lW;const $="#arc3";__webpack_require__(169).lW,__webpack_require__(169).lW,__webpack_require__(149),__webpack_require__(419),__webpack_require__(172);const G="https://mainnet.api.perawallet.app/v1",K="https://ipfs.algonode.xyz/ipfs",V="https://ipfs.io/ipfs";__webpack_require__(616);var W=__webpack_require__(856);class Z{constructor(e,t){this.assetId=e,this.name,this.unitName,this.url,this.total,this.reserve,this.cid,t&&t.params&&(this.name=t.params.name,this.unitName=t.params["unit-name"],this.url=t.params.url,this.total=t.params.total,this.reserve=t.params.reserve),this.amount,this.imageUrl,this.imageUrlAlternate,this.metadata,this.isLoaded=!1}async load(e,t=!1){if(this.url){if(t)try{await this.loadWithPera()}catch(e){console.error(e)}(!this.imageUrl||this.imageUrl.startsWith("null")||this.imageUrl.startsWith("undefined"))&&(this.url.startsWith("template-ipfs://")?(await this.loadARC69(e),await this.loadARC19(e)):this.url.endsWith("#arc3")?await this.loadARC3(e):await this.loadARC69(e)),this.isLoaded=!0}}async loadWithPera(){const e=await W(`${G}/assets/${this.assetId}`);if(200!==e.status)throw new Error(`Fetching pera error ${e.status}`);{const t=await e.json();if(t.collectible&&(this.imageUrl=t.collectible.primary_image+"?width=512",t.collectible?.traits?.length>0)){let e={};for(const r of t.collectible.traits)e[r.display_name]=r.display_value;this.metadata={properties:e}}}}async loadARC3(e){let t=this.url.split("//");t=t[1].split("#");const r=t[0];this.cid=r,await this.loadIpfsMetadata(r)}async loadARC19(t){const r=function(t,r){let n;n=t.endsWith($)?t.slice(0,t.length-$.length):t;let i=n.split("://");if("template-ipfs"===i[0]&&i[1].startsWith("{ipfscid:")){i[0]="ipfs";const t=i[1].split(":");if(5!==t.length)return console.log("unknown ipfscid format"),n;const[,o,s,a,c]=t;if("sha2-256"!==c.split("}")[0])return console.log("unsupported hash:",c),n;if("raw"!==s&&"dag-pb"!==s)return console.log("unsupported codec:",s),n;if("reserve"!==a)return console.log("unsupported asa field:",a),n;let u;"raw"===s?u=85:"dag-pb"===s&&(u=112);const l=(0,e.decodeAddress)(r),p=m(H.code,l.publicKey);return k.create(parseInt(o),u,p).toString()}}(this.url,this.reserve);this.cid=r,await this.loadIpfsMetadata(r)}b64DecodeUnicode(e){return decodeURIComponent(atob(e).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))}async loadARC69(e){if(this.url.startsWith("ipfs://")){let e=this.url.split("//");e=e[1].split("#");const t=e[0];this.cid=t,t&&(this.imageUrl=`${K}/${t}`,this.imageUrlAlternate=`${V}/${t}`)}else(this.url.startsWith("http://")||this.url.startsWith("https://"))&&(this.imageUrl=this.url,this.imageUrlAlternate=this.url);let t=(await e.lookupAssetTransactions(this.assetId).txType("acfg").do()).transactions;t.sort(((e,t)=>t["round-time"]-e["round-time"]));for(const e of t)try{const t=e.note,r=this.b64DecodeUnicode(t),n=JSON.parse(r);if("arc69"===n.standard){this.metadata=n;break}}catch(e){console.log(e)}}async loadIpfsMetadata(e){let t;try{const r=await W(`${K}/${e}`);if(200!==r.status)throw new Error(`Fetching ipfs metadata error ${r.status} (primary gateaway)`);{const n=r.headers.get("Content-Type");if(n.includes("json"))t=await r.json();else{if(!n.includes("image"))throw new Error("Unknown file type for ARC19");this.imageUrl=`${K}/${e}`,this.imageUrlAlternate=`${V}/${e}`}}}catch(r){console.error(r);const n=await W(`${V}/${e}`);if(200!==n.status){let e=new Error(`Fetching ipfs metadata error ${n.status} (secondary gateway)`);throw e.status=n.status,e}{const r=n.headers.get("Content-Type");if(r.includes("json"))t=await n.json();else{if(!r.includes("image"))throw new Error("Unknown file type for ARC19");this.imageUrl=`${K}/${e}`,this.imageUrlAlternate=`${V}/${e}`}}}if(t){const e=t.image.split("//");"ipfs:"===e[0]&&(this.imageUrl=`${K}/${e[1]}`,this.imageUrlAlternate=`${V}/${e[1]}`)}this.metadata=t}handleImageError(e){e.addEventListener("error",(t=>{this.imageUrlAlternate&&e.src!==this.imageUrlAlternate&&(e.src=this.imageUrlAlternate)}))}}var X=__webpack_require__(50);async function Y(e){return new Promise(((t,r)=>{const n=new Image;n.crossOrigin="anonymous",n.onload=()=>{t(n)},n.onerror=e=>{r(e)},n.src=e}))}var J=__webpack_require__(958);const{GIFEncoder:Q,quantize:ee,applyPalette:te}=J;class re{constructor(e,t,r=1){this.width=e,this.height=t,this.scale=r,this.palette,this.index,this.gifEncoder=Q()}addFrame(e,t=300){let{data:r,width:n,height:i}=e.getImageData(0,0,this.width,this.height);if(1!=this.scale){const t=document.createElement("canvas");t.width=this.width*this.scale,t.height=this.height*this.scale;const o=t.getContext("2d");o.drawImage(e.canvas,0,0,t.width,t.height);const s=o.getImageData(0,0,t.width,t.height);r=s.data,n=s.width,i=s.height}let o=!1;if(!this.palette){const e=ee(r,256);this.palette=e,o=!0}const s=te(r,this.palette);this.gifEncoder.writeFrame(s,n,i,{palette:o?this.palette:void 0,delay:t})}finish(){this.gifEncoder.finish()}getOutput(){return this.gifEncoder.bytes()}}class ne{constructor(e){this.image=e.image,this.rangeStart=e.rangeStart,this.rangeEnd=e.rangeEnd,this.stretch=e.stretch,this.forceSquare=e.forceSquare,this.animationSpeed=e.animationSpeed,this.stretch<1&&(this.forceSquare=!1)}async generate(e,t){let r,n=this.image.height,i=this.image.width;n>1024&&(n=1024,i=n*this.image.width/this.image.height),r=this.stretch>1?Math.round(n*this.stretch):n;let o=0;t&&(o=t-r);const s=Math.round(this.image.height*this.rangeStart),a=Math.round(this.image.height*this.rangeEnd),c=Math.round(n*this.rangeStart),u=Math.round(n*this.rangeEnd),l=document.createElement("canvas");l.width=i,l.height=r+o;const p=l.getContext("2d");if(this.stretch>=1)p.drawImage(this.image,0,0,this.image.width,s,0,o,i,c),p.drawImage(this.image,0,s,this.image.width,a-s,0,o+c,i,r-(n-u)-c),p.drawImage(this.image,0,this.image.height-(this.image.height-a),this.image.width,this.image.height-a,0,o+r-(n-u),i,n-u),o&&p.drawImage(this.image,0,0,this.image.width,1,0,0,i,o);else{const e=Math.round(c+(u-c)*this.stretch+(n-u));p.drawImage(this.image,0,0,this.image.width,s,0,r-e,i,c),p.drawImage(this.image,0,s,this.image.width,a-s,0,r-e+c,i,e-c-(r-u)),p.drawImage(this.image,0,this.image.height-(this.image.height-a),this.image.width,this.image.height-a,0,r-(n-u),i,n-u),p.drawImage(this.image,0,0,this.image.width,1,0,0,i,r-e)}let h;if(this.forceSquare){h=document.createElement("canvas"),h.width=l.height,h.height=l.height;const e=h.getContext("2d");e.drawImage(l,0,0,l.width,l.height,h.width/2-l.width/2,0,l.width,l.height);const t=Math.ceil((h.width-l.width)/2);e.drawImage(l,0,0,1,l.height,0,0,t,l.height),e.drawImage(l,l.width-1,0,1,l.height,Math.floor(h.width/2+l.width/2),0,t,l.height)}return this.forceSquare?h:l}async generateGif(){const e=this.stretch,t=await this.generate(),r=t.width,n=t.height,i=768/n;let o=new re(t.width,t.height,i);const s=10-(this.animationSpeed?this.animationSpeed:0);for(let t=0;t<s;t++){let i;i=t<=s/2?t/(s/2):1-(t-s/2)/(s/2),this.stretch=e>1?1+(e-1)*i:1-(1-e)*i;const a=await this.generate(r,n);o.addFrame(a.getContext("2d"),70)}return o.finish(),o.getOutput()}}const ie=new X.Algodv2("","https://mainnet-api.algonode.cloud",443),oe=new X.Indexer("","https://mainnet-idx.algonode.cloud",443);let se=!1;document.querySelector("#title");const ae=document.querySelector("#ok-button"),ce=document.querySelector("#canvas-range"),ue=document.querySelector("#asset-id"),le=document.querySelector("#input-stretch"),pe=document.querySelector("#input-stretch-label"),he=document.querySelector("#checkbox-square"),de=document.querySelector("#message"),fe=document.querySelector("#generate-button"),ge=document.querySelector("#input-speed"),me=document.querySelector("#generate-gif-button"),ye=document.querySelector("#div-result");ae.addEventListener("click",async function(e){de.textContent="",de.className="";const t=parseInt(ue.value);if(isNaN(t))return de.textContent="Invalid asset id. Should look like this: 582353766.",void(de.className="alert alert-warning");we=void 0,ae.innerHTML='<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n  <span class="visually-hidden">Loading...</span>',ae.disabled=!0,fe.disabled=!0,me.disabled=!0;try{const e=await ie.getAssetByID(t).do(),r=new Z(t,e);await r.load(oe);const n=await Y(`${r.imageUrl}?optimizer=image&height=${ce.height}`);ce.height=ce.width*(n.height/n.width),be.setImage(n),be.redraw(),we=await Y(`${r.imageUrl}`),be.startY&&be.endY&&(fe.disabled=!1,me.disabled=!1)}catch(e){console.log(e),de.textContent=`Can't load NFT\n${e.message?e.message:""}`,de.className="alert alert-warning"}ae.innerHTML="Load",ae.disabled=!1,ve()}.bind(void 0)),fe.addEventListener("click",(()=>{se=!1,ve()})),le.addEventListener("input",Ae.bind(void 0)),le.addEventListener("change",ve.bind(void 0)),he.addEventListener("change",ve.bind(void 0)),me.addEventListener("click",(()=>{se=!0,ve()})),ge.addEventListener("change",ve.bind(void 0,void 0,!0)),Ae(),fe.disabled=!0,me.disabled=!0;const be=new class{constructor(e){this.canvas=e,this.image,this.canvas.addEventListener("mousemove",this.mouseMoved.bind(this)),this.canvas.addEventListener("mousedown",this.mouseDown.bind(this)),this.canvas.addEventListener("mouseup",this.mouseUp.bind(this)),this.canvas.addEventListener("mouseout",this.mouseOut.bind(this)),this.canvas.addEventListener("touchmove",this.mouseMoved.bind(this)),this.canvas.addEventListener("touchstart",this.mouseDown.bind(this)),this.canvas.addEventListener("touchend",this.mouseUp.bind(this)),this.ctx=this.canvas.getContext("2d"),this.startY,this.endY,this.isMouseDown=!1,this.isMouseOver=!1,this.startValue,this.didSelect}setImage(e){this.image=e,this.ctx.drawImage(this.image,0,0,this.canvas.width,this.canvas.height)}getMousePos(e){var t=this.canvas.getBoundingClientRect();return e.touches&&e.touches.length>0?{x:e.touches[0].clientX-t.left,y:e.touches[0].clientY-t.top}:{x:e.clientX-t.left,y:e.clientY-t.top}}mouseDown(e){e.preventDefault();const t=this.getMousePos(e);this.startY=t.y,this.endY=t.y,this.isMouseDown=!0,this.redraw(e)}mouseUp(e){e.preventDefault();const t=this.getMousePos(e);this.endY=t.y?t.y:this.endY,this.isMouseDown=!1,this.resolveSelection(),this.didSelect?.(),this.redraw(e)}mouseOut(e){if(e.preventDefault(),this.isMouseDown&&this.startY){const t=this.getMousePos(e);this.endY=t.y<this.canvas.height?t.y:this.canvas.height,this.isMouseDown=!1,this.resolveSelection(),this.didSelect?.()}this.isMouseOver=!1,this.redraw(e)}mouseMoved(e){if(e.preventDefault(),this.isMouseDown&&this.startY){const t=this.getMousePos(e);this.endY=t.y}this.isMouseOver=!0,this.redraw(e)}resolveSelection(){if(this.startY&&this.endY)if(this.startY===this.endY)this.endY=this.startY+1;else if(this.endY<this.startY){const e=this.startY;this.startY=this.endY,this.endY=e}}redraw(e){if(!this.image)return;let t;e&&(t=this.getMousePos(e),this.isMouseDown&&this.startY&&(this.endY=t.y)),this.ctx.drawImage(this.image,0,0,this.canvas.width,this.canvas.height),this.startY&&this.endY&&(this.ctx.save(),this.ctx.fillStyle="rgb(65, 192, 255)",this.ctx.globalAlpha=.4,this.ctx.fillRect(0,this.startY,this.canvas.width,this.endY-this.startY),this.ctx.restore()),this.isMouseOver&&t.y&&(this.ctx.lineWidth=1,this.ctx.strokeStyle="rgb(65, 192, 255)",this.ctx.lin,this.ctx.beginPath(),this.ctx.moveTo(0,t.y),this.ctx.lineTo(this.canvas.width,t.y),this.ctx.stroke())}get rangeStart(){return this.startY/this.canvas.height}get rangeEnd(){return this.endY/this.canvas.height}}(ce);let we;async function ve(e){if(de.textContent="",de.className="",!we)return de.textContent="High res image not loaded. Please use the LOAD button again.",void(de.className="alert alert-warning");fe.disabled=!0,me.disabled=!0,await async function(e,t){const r=new ne({image:we,rangeStart:be.rangeStart,rangeEnd:be.rangeEnd,stretch:le.value,forceSquare:he.checked,animationSpeed:Number(ge.value)});for(const e of ye.children)e.remove();let n;if(t){const e=await r.generateGif(),t=new Image;t.src=URL.createObjectURL(new Blob([e.buffer],{type:"image/gif"})),ye.append(t),n=t}else{const e=await r.generate(),t=new Image;t.src=e.toDataURL(),ye.append(t),n=t}const i=n.height/n.width,o=ye.parentNode.offsetWidth>512?512:ye.parentNode.offsetWidth;n.style.width=`${o}px`,n.style.height=o*i+"px"}(0,se),be.startY&&be.endY&&(fe.disabled=!1,me.disabled=!1)}function Ae(){let e="";le.value>1?e="(long)":le.value<1&&(e="(short)"),pe.textContent=`${Math.round(100*le.value)}% ${e}`}be.didSelect=()=>{we&&be.startY&&be.endY&&(fe.disabled=!1,me.disabled=!1),ve()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
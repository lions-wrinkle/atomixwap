/*! For license information please see 339.e97e710f4016826a244d.js.LICENSE.txt */
(self.webpackChunkatomixwap=self.webpackChunkatomixwap||[]).push([[339],{3627:(t,e,n)=>{var i,r;"undefined"!=typeof navigator&&(r=window||{},void 0===(i=function(){return function(t){"use strict";var e,n="http://www.w3.org/2000/svg",i="",r=-999999,a=!1,s=!0,o="",l=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),h=Math.pow,c=Math.sqrt,d=Math.floor,p=(Math.max,Math.min),u={};(function(){var t,e=["abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","cbrt","expm1","clz32","cos","cosh","exp","floor","fround","hypot","imul","log","log1p","log2","log10","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2"],n=e.length;for(t=0;t<n;t+=1)u[e[t]]=Math[e[t]]})(),u.random=Math.random,u.abs=function(t){if("object"==typeof t&&t.length){var e,n=D(t.length),i=t.length;for(e=0;e<i;e+=1)n[e]=Math.abs(t[e]);return n}return Math.abs(t)};var f=150,m=Math.PI/180,g=.5519;function v(t){t&&Math.round}function w(t,e,n,i){this.type=t,this.currentTime=e,this.totalTime=n,this.direction=i<0?-1:1}function y(t,e){this.type=t,this.direction=e<0?-1:1}function _(t,e,n,i){this.type=t,this.currentLoop=n,this.totalLoops=e,this.direction=i<0?-1:1}function b(t,e,n){this.type=t,this.firstFrame=e,this.totalFrames=n}function M(t,e){this.type=t,this.target=e}function x(t,e){this.type="renderFrameError",this.nativeError=t,this.currentTime=e}function C(t){this.type="configError",this.nativeError=t}v(!1);var k,S=(k=0,function(){return o+"__lottie_element_"+(k+=1)});function A(t,e,n){var i,r,a,s,o,l,h,c;switch(l=n*(1-e),h=n*(1-(o=6*t-(s=Math.floor(6*t)))*e),c=n*(1-(1-o)*e),s%6){case 0:i=n,r=c,a=l;break;case 1:i=h,r=n,a=l;break;case 2:i=l,r=n,a=c;break;case 3:i=l,r=h,a=n;break;case 4:i=c,r=l,a=n;break;case 5:i=n,r=l,a=h}return[i,r,a]}function E(t,e,n){var i,r=Math.max(t,e,n),a=Math.min(t,e,n),s=r-a,o=0===r?0:s/r,l=r/255;switch(r){case a:i=0;break;case t:i=e-n+s*(e<n?6:0),i/=6*s;break;case e:i=n-t+2*s,i/=6*s;break;case n:i=t-e+4*s,i/=6*s}return[i,o,l]}function L(t,e){var n=E(255*t[0],255*t[1],255*t[2]);return n[1]+=e,n[1]>1?n[1]=1:n[1]<=0&&(n[1]=0),A(n[0],n[1],n[2])}function P(t,e){var n=E(255*t[0],255*t[1],255*t[2]);return n[2]+=e,n[2]>1?n[2]=1:n[2]<0&&(n[2]=0),A(n[0],n[1],n[2])}function I(t,e){var n=E(255*t[0],255*t[1],255*t[2]);return n[0]+=e/360,n[0]>1?n[0]-=1:n[0]<0&&(n[0]+=1),A(n[0],n[1],n[2])}!function(){var t,e,n=[];for(t=0;t<256;t+=1)e=t.toString(16),n[t]=1===e.length?"0"+e:e}();function T(){}T.prototype={triggerEvent:function(t,e){if(this._cbs[t])for(var n=this._cbs[t],i=0;i<n.length;i+=1)n[i](e)},addEventListener:function(t,e){return this._cbs[t]||(this._cbs[t]=[]),this._cbs[t].push(e),function(){this.removeEventListener(t,e)}.bind(this)},removeEventListener:function(t,e){if(e){if(this._cbs[t]){for(var n=0,i=this._cbs[t].length;n<i;)this._cbs[t][n]===e&&(this._cbs[t].splice(n,1),n-=1,i-=1),n+=1;this._cbs[t].length||(this._cbs[t]=null)}}else this._cbs[t]=null}};var F=function(){function t(t,e){var n,i=0,r=[];switch(t){case"int16":case"uint8c":n=1;break;default:n=1.1}for(i=0;i<e;i+=1)r.push(n);return r}return"function"==typeof Uint8ClampedArray&&"function"==typeof Float32Array?function(e,n){return"float32"===e?new Float32Array(n):"int16"===e?new Int16Array(n):"uint8c"===e?new Uint8ClampedArray(n):t(e,n)}:t}();function D(t){return Array.apply(null,{length:t})}function O(t){return document.createElementNS(n,t)}function R(t){return document.createElement(t)}function N(){}N.prototype={addDynamicProperty:function(t){-1===this.dynamicProperties.indexOf(t)&&(this.dynamicProperties.push(t),this.container.addDynamicProperty(this),this._isAnimated=!0)},iterateDynamicProperties:function(){var t;this._mdf=!1;var e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue(),this.dynamicProperties[t]._mdf&&(this._mdf=!0)},initDynamicPropertyContainer:function(t){this.container=t,this.dynamicProperties=[],this._mdf=!1,this._isAnimated=!1}};var B,z=(B={0:"source-over",1:"multiply",2:"screen",3:"overlay",4:"darken",5:"lighten",6:"color-dodge",7:"color-burn",8:"hard-light",9:"soft-light",10:"difference",11:"exclusion",12:"hue",13:"saturation",14:"color",15:"luminosity"},function(t){return B[t]||""}),W={1:"butt",2:"round",3:"square"},q={1:"miter",2:"round",3:"bevel"},j=function(){var t=Math.cos,e=Math.sin,n=Math.tan,i=Math.round;function r(){return this.props[0]=1,this.props[1]=0,this.props[2]=0,this.props[3]=0,this.props[4]=0,this.props[5]=1,this.props[6]=0,this.props[7]=0,this.props[8]=0,this.props[9]=0,this.props[10]=1,this.props[11]=0,this.props[12]=0,this.props[13]=0,this.props[14]=0,this.props[15]=1,this}function a(n){if(0===n)return this;var i=t(n),r=e(n);return this._t(i,-r,0,0,r,i,0,0,0,0,1,0,0,0,0,1)}function s(n){if(0===n)return this;var i=t(n),r=e(n);return this._t(1,0,0,0,0,i,-r,0,0,r,i,0,0,0,0,1)}function o(n){if(0===n)return this;var i=t(n),r=e(n);return this._t(i,0,r,0,0,1,0,0,-r,0,i,0,0,0,0,1)}function l(n){if(0===n)return this;var i=t(n),r=e(n);return this._t(i,-r,0,0,r,i,0,0,0,0,1,0,0,0,0,1)}function h(t,e){return this._t(1,e,t,1,0,0)}function c(t,e){return this.shear(n(t),n(e))}function d(i,r){var a=t(r),s=e(r);return this._t(a,s,0,0,-s,a,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,n(i),1,0,0,0,0,1,0,0,0,0,1)._t(a,-s,0,0,s,a,0,0,0,0,1,0,0,0,0,1)}function p(t,e,n){return n||0===n||(n=1),1===t&&1===e&&1===n?this:this._t(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1)}function u(t,e,n,i,r,a,s,o,l,h,c,d,p,u,f,m){return this.props[0]=t,this.props[1]=e,this.props[2]=n,this.props[3]=i,this.props[4]=r,this.props[5]=a,this.props[6]=s,this.props[7]=o,this.props[8]=l,this.props[9]=h,this.props[10]=c,this.props[11]=d,this.props[12]=p,this.props[13]=u,this.props[14]=f,this.props[15]=m,this}function f(t,e,n){return n=n||0,0!==t||0!==e||0!==n?this._t(1,0,0,0,0,1,0,0,0,0,1,0,t,e,n,1):this}function m(t,e,n,i,r,a,s,o,l,h,c,d,p,u,f,m){var g=this.props;if(1===t&&0===e&&0===n&&0===i&&0===r&&1===a&&0===s&&0===o&&0===l&&0===h&&1===c&&0===d)return g[12]=g[12]*t+g[15]*p,g[13]=g[13]*a+g[15]*u,g[14]=g[14]*c+g[15]*f,g[15]*=m,this._identityCalculated=!1,this;var v=g[0],w=g[1],y=g[2],_=g[3],b=g[4],M=g[5],x=g[6],C=g[7],k=g[8],S=g[9],A=g[10],E=g[11],L=g[12],P=g[13],I=g[14],T=g[15];return g[0]=v*t+w*r+y*l+_*p,g[1]=v*e+w*a+y*h+_*u,g[2]=v*n+w*s+y*c+_*f,g[3]=v*i+w*o+y*d+_*m,g[4]=b*t+M*r+x*l+C*p,g[5]=b*e+M*a+x*h+C*u,g[6]=b*n+M*s+x*c+C*f,g[7]=b*i+M*o+x*d+C*m,g[8]=k*t+S*r+A*l+E*p,g[9]=k*e+S*a+A*h+E*u,g[10]=k*n+S*s+A*c+E*f,g[11]=k*i+S*o+A*d+E*m,g[12]=L*t+P*r+I*l+T*p,g[13]=L*e+P*a+I*h+T*u,g[14]=L*n+P*s+I*c+T*f,g[15]=L*i+P*o+I*d+T*m,this._identityCalculated=!1,this}function g(){return this._identityCalculated||(this._identity=!(1!==this.props[0]||0!==this.props[1]||0!==this.props[2]||0!==this.props[3]||0!==this.props[4]||1!==this.props[5]||0!==this.props[6]||0!==this.props[7]||0!==this.props[8]||0!==this.props[9]||1!==this.props[10]||0!==this.props[11]||0!==this.props[12]||0!==this.props[13]||0!==this.props[14]||1!==this.props[15]),this._identityCalculated=!0),this._identity}function v(t){for(var e=0;e<16;){if(t.props[e]!==this.props[e])return!1;e+=1}return!0}function w(t){var e;for(e=0;e<16;e+=1)t.props[e]=this.props[e];return t}function y(t){var e;for(e=0;e<16;e+=1)this.props[e]=t[e]}function _(t,e,n){return{x:t*this.props[0]+e*this.props[4]+n*this.props[8]+this.props[12],y:t*this.props[1]+e*this.props[5]+n*this.props[9]+this.props[13],z:t*this.props[2]+e*this.props[6]+n*this.props[10]+this.props[14]}}function b(t,e,n){return t*this.props[0]+e*this.props[4]+n*this.props[8]+this.props[12]}function M(t,e,n){return t*this.props[1]+e*this.props[5]+n*this.props[9]+this.props[13]}function x(t,e,n){return t*this.props[2]+e*this.props[6]+n*this.props[10]+this.props[14]}function C(){var t=this.props[0]*this.props[5]-this.props[1]*this.props[4],e=this.props[5]/t,n=-this.props[1]/t,i=-this.props[4]/t,r=this.props[0]/t,a=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/t,s=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/t,o=new j;return o.props[0]=e,o.props[1]=n,o.props[4]=i,o.props[5]=r,o.props[12]=a,o.props[13]=s,o}function k(t){return this.getInverseMatrix().applyToPointArray(t[0],t[1],t[2]||0)}function S(t){var e,n=t.length,i=[];for(e=0;e<n;e+=1)i[e]=k(t[e]);return i}function A(t,e,n){var i=F("float32",6);if(this.isIdentity())i[0]=t[0],i[1]=t[1],i[2]=e[0],i[3]=e[1],i[4]=n[0],i[5]=n[1];else{var r=this.props[0],a=this.props[1],s=this.props[4],o=this.props[5],l=this.props[12],h=this.props[13];i[0]=t[0]*r+t[1]*s+l,i[1]=t[0]*a+t[1]*o+h,i[2]=e[0]*r+e[1]*s+l,i[3]=e[0]*a+e[1]*o+h,i[4]=n[0]*r+n[1]*s+l,i[5]=n[0]*a+n[1]*o+h}return i}function E(t,e,n){return this.isIdentity()?[t,e,n]:[t*this.props[0]+e*this.props[4]+n*this.props[8]+this.props[12],t*this.props[1]+e*this.props[5]+n*this.props[9]+this.props[13],t*this.props[2]+e*this.props[6]+n*this.props[10]+this.props[14]]}function L(t,e){if(this.isIdentity())return t+","+e;var n=this.props;return Math.round(100*(t*n[0]+e*n[4]+n[12]))/100+","+Math.round(100*(t*n[1]+e*n[5]+n[13]))/100}function P(){for(var t=0,e=this.props,n="matrix3d(";t<16;)n+=i(1e4*e[t])/1e4,n+=15===t?")":",",t+=1;return n}function I(t){return t<1e-6&&t>0||t>-1e-6&&t<0?i(1e4*t)/1e4:t}function T(){var t=this.props;return"matrix("+I(t[0])+","+I(t[1])+","+I(t[4])+","+I(t[5])+","+I(t[12])+","+I(t[13])+")"}return function(){this.reset=r,this.rotate=a,this.rotateX=s,this.rotateY=o,this.rotateZ=l,this.skew=c,this.skewFromAxis=d,this.shear=h,this.scale=p,this.setTransform=u,this.translate=f,this.transform=m,this.applyToPoint=_,this.applyToX=b,this.applyToY=M,this.applyToZ=x,this.applyToPointArray=E,this.applyToTriplePoints=A,this.applyToPointStringified=L,this.toCSS=P,this.to2dCSS=T,this.clone=w,this.cloneFromProps=y,this.equals=v,this.inversePoints=S,this.inversePoint=k,this.getInverseMatrix=C,this._t=this.transform,this.isIdentity=g,this._identity=!0,this._identityCalculated=!1,this.props=F("float32",16),this.reset()}}();!function(t,e){var n,i=this,r=256,a="random",s=e.pow(r,6),o=e.pow(2,52),l=2*o,h=r-1;function c(t){var e,n=t.length,i=this,a=0,s=i.i=i.j=0,o=i.S=[];for(n||(t=[n++]);a<r;)o[a]=a++;for(a=0;a<r;a++)o[a]=o[s=h&s+t[a%n]+(e=o[a])],o[s]=e;i.g=function(t){for(var e,n=0,a=i.i,s=i.j,o=i.S;t--;)e=o[a=h&a+1],n=n*r+o[h&(o[a]=o[s=h&s+e])+(o[s]=e)];return i.i=a,i.j=s,n}}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function p(t,e){var n,i=[],r=typeof t;if(e&&"object"==r)for(n in t)try{i.push(p(t[n],e-1))}catch(t){}return i.length?i:"string"==r?t:t+"\0"}function u(t,e){for(var n,i=t+"",r=0;r<i.length;)e[h&r]=h&(n^=19*e[h&r])+i.charCodeAt(r++);return f(e)}function f(t){return String.fromCharCode.apply(0,t)}e["seed"+a]=function(h,m,g){var v=[],w=u(p((m=!0===m?{entropy:!0}:m||{}).entropy?[h,f(t)]:null===h?function(){try{if(n)return f(n.randomBytes(r));var e=new Uint8Array(r);return(i.crypto||i.msCrypto).getRandomValues(e),f(e)}catch(e){var a=i.navigator,s=a&&a.plugins;return[+new Date,i,s,i.screen,f(t)]}}():h,3),v),y=new c(v),_=function(){for(var t=y.g(6),e=s,n=0;t<o;)t=(t+n)*r,e*=r,n=y.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return _.int32=function(){return 0|y.g(4)},_.quick=function(){return y.g(4)/4294967296},_.double=_,u(f(y.S),t),(m.pass||g||function(t,n,i,r){return r&&(r.S&&d(r,y),t.state=function(){return d(y,{})}),i?(e[a]=t,n):t})(_,w,"global"in m?m.global:this==e,m.state)},u(e.random(),t)}([],u);var V=function(){var t={getBezierEasing:function(t,n,i,r,a){var s=a||("bez_"+t+"_"+n+"_"+i+"_"+r).replace(/\./g,"p");if(e[s])return e[s];var o=new c([t,n,i,r]);return e[s]=o,o}},e={};var n=11,i=1/(n-1),r="function"==typeof Float32Array;function a(t,e){return 1-3*e+3*t}function s(t,e){return 3*e-6*t}function o(t){return 3*t}function l(t,e,n){return((a(e,n)*t+s(e,n))*t+o(e))*t}function h(t,e,n){return 3*a(e,n)*t*t+2*s(e,n)*t+o(e)}function c(t){this._p=t,this._mSampleValues=r?new Float32Array(n):new Array(n),this._precomputed=!1,this.get=this.get.bind(this)}return c.prototype={get:function(t){var e=this._p[0],n=this._p[1],i=this._p[2],r=this._p[3];return this._precomputed||this._precompute(),e===n&&i===r?t:0===t?0:1===t?1:l(this._getTForX(t),n,r)},_precompute:function(){var t=this._p[0],e=this._p[1],n=this._p[2],i=this._p[3];this._precomputed=!0,t===e&&n===i||this._calcSampleValues()},_calcSampleValues:function(){for(var t=this._p[0],e=this._p[2],r=0;r<n;++r)this._mSampleValues[r]=l(r*i,t,e)},_getTForX:function(t){for(var e=this._p[0],r=this._p[2],a=this._mSampleValues,s=0,o=1,c=n-1;o!==c&&a[o]<=t;++o)s+=i;var d=s+(t-a[--o])/(a[o+1]-a[o])*i,p=h(d,e,r);return p>=.001?function(t,e,n,i){for(var r=0;r<4;++r){var a=h(e,n,i);if(0===a)return e;e-=(l(e,n,i)-t)/a}return e}(t,d,e,r):0===p?d:function(t,e,n,i,r){var a,s,o=0;do{(a=l(s=e+(n-e)/2,i,r)-t)>0?n=s:e=s}while(Math.abs(a)>1e-7&&++o<10);return s}(t,s,s+i,e,r)}},t}();function H(t,e){var n,i,r=t.length;for(n=0;n<r;n+=1)for(var a in i=t[n].prototype)Object.prototype.hasOwnProperty.call(i,a)&&(e.prototype[a]=i[a])}!function(){for(var e=0,n=["ms","moz","webkit","o"],i=0;i<n.length&&!t.requestAnimationFrame;++i)t.requestAnimationFrame=t[n[i]+"RequestAnimationFrame"],t.cancelAnimationFrame=t[n[i]+"CancelAnimationFrame"]||t[n[i]+"CancelRequestAnimationFrame"];t.requestAnimationFrame||(t.requestAnimationFrame=function(t){var n=(new Date).getTime(),i=Math.max(0,16-(n-e)),r=setTimeout((function(){t(n+i)}),i);return e=n+i,r}),t.cancelAnimationFrame||(t.cancelAnimationFrame=function(t){clearTimeout(t)})}();var Z=function(){var t=Math;function e(t,e,n,i,r,a){var s=t*i+e*r+n*a-r*i-a*t-n*e;return s>-.001&&s<.001}var n=function(t,e,n,i){var r,a,s,o,l,d,p=f,u=0,m=[],g=[],v=St.newElement();for(s=n.length,r=0;r<p;r+=1){for(l=r/(p-1),d=0,a=0;a<s;a+=1)o=h(1-l,3)*t[a]+3*h(1-l,2)*l*n[a]+3*(1-l)*h(l,2)*i[a]+h(l,3)*e[a],m[a]=o,null!==g[a]&&(d+=h(m[a]-g[a],2)),g[a]=m[a];d&&(u+=d=c(d)),v.percents[r]=l,v.lengths[r]=u}return v.addedLength=u,v};function i(t){this.segmentLength=0,this.points=new Array(t)}function r(t,e){this.partialLength=t,this.point=e}var a,s=(a={},function(t,n,s,o){var l=(t[0]+"_"+t[1]+"_"+n[0]+"_"+n[1]+"_"+s[0]+"_"+s[1]+"_"+o[0]+"_"+o[1]).replace(/\./g,"p");if(!a[l]){var d,p,u,m,g,v,w,y=f,_=0,b=null;2===t.length&&(t[0]!==n[0]||t[1]!==n[1])&&e(t[0],t[1],n[0],n[1],t[0]+s[0],t[1]+s[1])&&e(t[0],t[1],n[0],n[1],n[0]+o[0],n[1]+o[1])&&(y=2);var M=new i(y);for(u=s.length,d=0;d<y;d+=1){for(w=D(u),g=d/(y-1),v=0,p=0;p<u;p+=1)m=h(1-g,3)*t[p]+3*h(1-g,2)*g*(t[p]+s[p])+3*(1-g)*h(g,2)*(n[p]+o[p])+h(g,3)*n[p],w[p]=m,null!==b&&(v+=h(w[p]-b[p],2));_+=v=c(v),M.points[d]=new r(v,w),b=w}M.segmentLength=_,a[l]=M}return a[l]});function o(t,e){var n=e.percents,i=e.lengths,r=n.length,a=d((r-1)*t),s=t*e.addedLength,o=0;if(a===r-1||0===a||s===i[a])return n[a];for(var l=i[a]>s?-1:1,h=!0;h;)if(i[a]<=s&&i[a+1]>s?(o=(s-i[a])/(i[a+1]-i[a]),h=!1):a+=l,a<0||a>=r-1){if(a===r-1)return n[a];h=!1}return n[a]+(n[a+1]-n[a])*o}var l=F("float32",8);return{getSegmentsLength:function(t){var e,i=kt.newElement(),r=t.c,a=t.v,s=t.o,o=t.i,l=t._length,h=i.lengths,c=0;for(e=0;e<l-1;e+=1)h[e]=n(a[e],a[e+1],s[e],o[e+1]),c+=h[e].addedLength;return r&&l&&(h[e]=n(a[e],a[0],s[e],o[0]),c+=h[e].addedLength),i.totalLength=c,i},getNewSegment:function(e,n,i,r,a,s,h){a<0?a=0:a>1&&(a=1);var c,d=o(a,h),p=o(s=s>1?1:s,h),u=e.length,f=1-d,m=1-p,g=f*f*f,v=d*f*f*3,w=d*d*f*3,y=d*d*d,_=f*f*m,b=d*f*m+f*d*m+f*f*p,M=d*d*m+f*d*p+d*f*p,x=d*d*p,C=f*m*m,k=d*m*m+f*p*m+f*m*p,S=d*p*m+f*p*p+d*m*p,A=d*p*p,E=m*m*m,L=p*m*m+m*p*m+m*m*p,P=p*p*m+m*p*p+p*m*p,I=p*p*p;for(c=0;c<u;c+=1)l[4*c]=t.round(1e3*(g*e[c]+v*i[c]+w*r[c]+y*n[c]))/1e3,l[4*c+1]=t.round(1e3*(_*e[c]+b*i[c]+M*r[c]+x*n[c]))/1e3,l[4*c+2]=t.round(1e3*(C*e[c]+k*i[c]+S*r[c]+A*n[c]))/1e3,l[4*c+3]=t.round(1e3*(E*e[c]+L*i[c]+P*r[c]+I*n[c]))/1e3;return l},getPointInSegment:function(e,n,i,r,a,s){var l=o(a,s),h=1-l;return[t.round(1e3*(h*h*h*e[0]+(l*h*h+h*l*h+h*h*l)*i[0]+(l*l*h+h*l*l+l*h*l)*r[0]+l*l*l*n[0]))/1e3,t.round(1e3*(h*h*h*e[1]+(l*h*h+h*l*h+h*h*l)*i[1]+(l*l*h+h*l*l+l*h*l)*r[1]+l*l*l*n[1]))/1e3]},buildBezierData:s,pointOnLine2D:e,pointOnLine3D:function(n,i,r,a,s,o,l,h,c){if(0===r&&0===o&&0===c)return e(n,i,a,s,l,h);var d,p=t.sqrt(t.pow(a-n,2)+t.pow(s-i,2)+t.pow(o-r,2)),u=t.sqrt(t.pow(l-n,2)+t.pow(h-i,2)+t.pow(c-r,2)),f=t.sqrt(t.pow(l-a,2)+t.pow(h-s,2)+t.pow(c-o,2));return(d=p>u?p>f?p-u-f:f-u-p:f>u?f-u-p:u-p-f)>-1e-4&&d<1e-4}}}(),U=function(){var e,n,i=1,r=[],s={onmessage:function(){},postMessage:function(t){e({data:t})}},o={postMessage:function(t){s.onmessage({data:t})}};function l(){n||(n=function(n){if(t.Worker&&t.Blob&&a){var i=new Blob(["var _workerSelf = self; self.onmessage = ",n.toString()],{type:"text/javascript"}),r=URL.createObjectURL(i);return new Worker(r)}return e=n,s}((function(t){if(o.dataManager||(o.dataManager=function(){function t(r,a){var s,o,l,h,c,d,p,u=r.length;for(o=0;o<u;o+=1)if("ks"in(s=r[o])&&!s.completed){if(s.completed=!0,s.tt&&(r[o-1].td=s.tt),s.hasMask){var f=s.masksProperties;for(h=f.length,l=0;l<h;l+=1)if(f[l].pt.k.i)i(f[l].pt.k);else for(d=f[l].pt.k.length,c=0;c<d;c+=1)f[l].pt.k[c].s&&i(f[l].pt.k[c].s[0]),f[l].pt.k[c].e&&i(f[l].pt.k[c].e[0])}0===s.ty?(s.layers=e(s.refId,a),t(s.layers,a)):4===s.ty?n(s.shapes):5===s.ty&&(0!==(p=s).t.a.length||"m"in p.t.p||(p.singleShape=!0))}}function e(t,e){for(var n=0,i=e.length;n<i;){if(e[n].id===t)return e[n].layers.__used?JSON.parse(JSON.stringify(e[n].layers)):(e[n].layers.__used=!0,e[n].layers);n+=1}return null}function n(t){var e,r,a;for(e=t.length-1;e>=0;e-=1)if("sh"===t[e].ty)if(t[e].ks.k.i)i(t[e].ks.k);else for(a=t[e].ks.k.length,r=0;r<a;r+=1)t[e].ks.k[r].s&&i(t[e].ks.k[r].s[0]),t[e].ks.k[r].e&&i(t[e].ks.k[r].e[0]);else"gr"===t[e].ty&&n(t[e].it)}function i(t){var e,n=t.i.length;for(e=0;e<n;e+=1)t.i[e][0]+=t.v[e][0],t.i[e][1]+=t.v[e][1],t.o[e][0]+=t.v[e][0],t.o[e][1]+=t.v[e][1]}function r(t,e){var n=e?e.split("."):[100,100,100];return t[0]>n[0]||!(n[0]>t[0])&&(t[1]>n[1]||!(n[1]>t[1])&&(t[2]>n[2]||!(n[2]>t[2])&&null))}var a,s=function(){var t=[4,4,14];function e(t){var e,n,i,r=t.length;for(e=0;e<r;e+=1)5===t[e].ty&&(n=t[e],i=void 0,i=n.t.d,n.t.d={k:[{s:i,t:0}]})}return function(n){if(r(t,n.v)&&(e(n.layers),n.assets)){var i,a=n.assets.length;for(i=0;i<a;i+=1)n.assets[i].layers&&e(n.assets[i].layers)}}}(),o=(a=[4,7,99],function(t){if(t.chars&&!r(a,t.v)){var e,n,s,o,l,h=t.chars.length;for(e=0;e<h;e+=1)if(t.chars[e].data&&t.chars[e].data.shapes)for(s=(l=t.chars[e].data.shapes[0].it).length,n=0;n<s;n+=1)(o=l[n].ks.k).__converted||(i(l[n].ks.k),o.__converted=!0)}}),l=function(){var t=[5,7,15];function e(t){var e,n,i,r=t.length;for(e=0;e<r;e+=1)5===t[e].ty&&(n=t[e],i=void 0,"number"==typeof(i=n.t.p).a&&(i.a={a:0,k:i.a}),"number"==typeof i.p&&(i.p={a:0,k:i.p}),"number"==typeof i.r&&(i.r={a:0,k:i.r}))}return function(n){if(r(t,n.v)&&(e(n.layers),n.assets)){var i,a=n.assets.length;for(i=0;i<a;i+=1)n.assets[i].layers&&e(n.assets[i].layers)}}}(),h=function(){var t=[4,1,9];function e(t){var n,i,r,a=t.length;for(n=0;n<a;n+=1)if("gr"===t[n].ty)e(t[n].it);else if("fl"===t[n].ty||"st"===t[n].ty)if(t[n].c.k&&t[n].c.k[0].i)for(r=t[n].c.k.length,i=0;i<r;i+=1)t[n].c.k[i].s&&(t[n].c.k[i].s[0]/=255,t[n].c.k[i].s[1]/=255,t[n].c.k[i].s[2]/=255,t[n].c.k[i].s[3]/=255),t[n].c.k[i].e&&(t[n].c.k[i].e[0]/=255,t[n].c.k[i].e[1]/=255,t[n].c.k[i].e[2]/=255,t[n].c.k[i].e[3]/=255);else t[n].c.k[0]/=255,t[n].c.k[1]/=255,t[n].c.k[2]/=255,t[n].c.k[3]/=255}function n(t){var n,i=t.length;for(n=0;n<i;n+=1)4===t[n].ty&&e(t[n].shapes)}return function(e){if(r(t,e.v)&&(n(e.layers),e.assets)){var i,a=e.assets.length;for(i=0;i<a;i+=1)e.assets[i].layers&&n(e.assets[i].layers)}}}(),c=function(){var t=[4,4,18];function e(t){var n,i,r;for(n=t.length-1;n>=0;n-=1)if("sh"===t[n].ty)if(t[n].ks.k.i)t[n].ks.k.c=t[n].closed;else for(r=t[n].ks.k.length,i=0;i<r;i+=1)t[n].ks.k[i].s&&(t[n].ks.k[i].s[0].c=t[n].closed),t[n].ks.k[i].e&&(t[n].ks.k[i].e[0].c=t[n].closed);else"gr"===t[n].ty&&e(t[n].it)}function n(t){var n,i,r,a,s,o,l=t.length;for(i=0;i<l;i+=1){if((n=t[i]).hasMask){var h=n.masksProperties;for(a=h.length,r=0;r<a;r+=1)if(h[r].pt.k.i)h[r].pt.k.c=h[r].cl;else for(o=h[r].pt.k.length,s=0;s<o;s+=1)h[r].pt.k[s].s&&(h[r].pt.k[s].s[0].c=h[r].cl),h[r].pt.k[s].e&&(h[r].pt.k[s].e[0].c=h[r].cl)}4===n.ty&&e(n.shapes)}}return function(e){if(r(t,e.v)&&(n(e.layers),e.assets)){var i,a=e.assets.length;for(i=0;i<a;i+=1)e.assets[i].layers&&n(e.assets[i].layers)}}}(),d={completeData:function(e){e.__complete||(h(e),s(e),o(e),l(e),c(e),t(e.layers,e.assets),e.__complete=!0)}};return d.checkColors=h,d.checkChars=o,d.checkPathProperties=l,d.checkShapes=c,d.completeLayers=t,d}()),o.assetLoader||(o.assetLoader=function(){function t(t){var e=t.getResponseHeader("content-type");return e&&"json"===t.responseType&&-1!==e.indexOf("json")||t.response&&"object"==typeof t.response?t.response:t.response&&"string"==typeof t.response?JSON.parse(t.response):t.responseText?JSON.parse(t.responseText):null}return{load:function(e,n,i,r){var a,s=new XMLHttpRequest;try{s.responseType="json"}catch(t){}s.onreadystatechange=function(){if(4===s.readyState)if(200===s.status)a=t(s),i(a);else try{a=t(s),i(a)}catch(t){r&&r(t)}};try{s.open("GET",e,!0)}catch(t){s.open("GET",n+"/"+e,!0)}s.send()}}}()),"loadAnimation"===t.data.type)o.assetLoader.load(t.data.path,t.data.fullPath,(function(e){o.dataManager.completeData(e),o.postMessage({id:t.data.id,payload:e,status:"success"})}),(function(){o.postMessage({id:t.data.id,status:"error"})}));else if("complete"===t.data.type){var e=t.data.animation;o.dataManager.completeData(e),o.postMessage({id:t.data.id,payload:e,status:"success"})}else"loadData"===t.data.type&&o.assetLoader.load(t.data.path,t.data.fullPath,(function(e){o.postMessage({id:t.data.id,payload:e,status:"success"})}),(function(){o.postMessage({id:t.data.id,status:"error"})}))})),n.onmessage=function(t){var e=t.data,n=e.id,i=r[n];r[n]=null,"success"===e.status?i.onComplete(e.payload):i.onError&&i.onError()})}function h(t,e){var n="processId_"+(i+=1);return r[n]={onComplete:t,onError:e},n}return{loadAnimation:function(e,i,r){l();var a=h(i,r);n.postMessage({type:"loadAnimation",path:e,fullPath:t.location.origin+t.location.pathname,id:a})},loadData:function(e,i,r){l();var a=h(i,r);n.postMessage({type:"loadData",path:e,fullPath:t.location.origin+t.location.pathname,id:a})},completeAnimation:function(t,e,i){l();var r=h(e,i);n.postMessage({type:"complete",animation:t,id:r})}}}();function G(t){for(var e=t.fStyle?t.fStyle.split(" "):[],n="normal",i="normal",r=e.length,a=0;a<r;a+=1)switch(e[a].toLowerCase()){case"italic":i="italic";break;case"bold":n="700";break;case"black":n="900";break;case"medium":n="500";break;case"regular":case"normal":n="400";break;case"light":case"thin":n="200"}return{style:i,weight:t.fWeight||n}}var $=function(){var t={w:0,size:0,shapes:[]},e=[];e=e.concat([2304,2305,2306,2307,2362,2363,2364,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2387,2388,2389,2390,2391,2402,2403]);var n=["d83cdffb","d83cdffc","d83cdffd","d83cdffe","d83cdfff"],i=[65039,8205];function r(t,e){var n=R("span");n.setAttribute("aria-hidden",!0),n.style.fontFamily=e;var i=R("span");i.innerText="giItT1WQy@!-/#",n.style.position="absolute",n.style.left="-10000px",n.style.top="-10000px",n.style.fontSize="300px",n.style.fontVariant="normal",n.style.fontStyle="normal",n.style.fontWeight="normal",n.style.letterSpacing="0",n.appendChild(i),document.body.appendChild(n);var r=i.offsetWidth;return i.style.fontFamily=function(t){var e,n=t.split(","),i=n.length,r=[];for(e=0;e<i;e+=1)"sans-serif"!==n[e]&&"monospace"!==n[e]&&r.push(n[e]);return r.join(",")}(t)+", "+e,{node:i,w:r,parent:n}}function a(t,e){var n=O("text");n.style.fontSize="100px";var i=G(e);return n.setAttribute("font-family",e.fFamily),n.setAttribute("font-style",i.style),n.setAttribute("font-weight",i.weight),n.textContent="1",e.fClass?(n.style.fontFamily="inherit",n.setAttribute("class",e.fClass)):n.style.fontFamily=e.fFamily,t.appendChild(n),R("canvas").getContext("2d").font=e.fWeight+" "+e.fStyle+" 100px "+e.fFamily,n}var s=function(){this.fonts=[],this.chars=null,this.typekitLoaded=0,this.isLoaded=!1,this._warned=!1,this.initTime=Date.now(),this.setIsLoadedBinded=this.setIsLoaded.bind(this),this.checkLoadedFontsBinded=this.checkLoadedFonts.bind(this)};return s.isModifier=function(t,e){var i=t.toString(16)+e.toString(16);return-1!==n.indexOf(i)},s.isZeroWidthJoiner=function(t,e){return e?t===i[0]&&e===i[1]:t===i[1]},s.isCombinedCharacter=function(t){return-1!==e.indexOf(t)},s.prototype={addChars:function(t){if(t){var e;this.chars||(this.chars=[]);var n,i,r=t.length,a=this.chars.length;for(e=0;e<r;e+=1){for(n=0,i=!1;n<a;)this.chars[n].style===t[e].style&&this.chars[n].fFamily===t[e].fFamily&&this.chars[n].ch===t[e].ch&&(i=!0),n+=1;i||(this.chars.push(t[e]),a+=1)}}},addFonts:function(t,e){if(t){if(this.chars)return this.isLoaded=!0,void(this.fonts=t.list);var n,i=t.list,s=i.length,o=s;for(n=0;n<s;n+=1){var l,h,c=!0;if(i[n].loaded=!1,i[n].monoCase=r(i[n].fFamily,"monospace"),i[n].sansCase=r(i[n].fFamily,"sans-serif"),i[n].fPath){if("p"===i[n].fOrigin||3===i[n].origin){if((l=document.querySelectorAll('style[f-forigin="p"][f-family="'+i[n].fFamily+'"], style[f-origin="3"][f-family="'+i[n].fFamily+'"]')).length>0&&(c=!1),c){var d=R("style");d.setAttribute("f-forigin",i[n].fOrigin),d.setAttribute("f-origin",i[n].origin),d.setAttribute("f-family",i[n].fFamily),d.type="text/css",d.innerText="@font-face {font-family: "+i[n].fFamily+"; font-style: normal; src: url('"+i[n].fPath+"');}",e.appendChild(d)}}else if("g"===i[n].fOrigin||1===i[n].origin){for(l=document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'),h=0;h<l.length;h+=1)-1!==l[h].href.indexOf(i[n].fPath)&&(c=!1);if(c){var p=R("link");p.setAttribute("f-forigin",i[n].fOrigin),p.setAttribute("f-origin",i[n].origin),p.type="text/css",p.rel="stylesheet",p.href=i[n].fPath,document.body.appendChild(p)}}else if("t"===i[n].fOrigin||2===i[n].origin){for(l=document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'),h=0;h<l.length;h+=1)i[n].fPath===l[h].src&&(c=!1);if(c){var u=R("link");u.setAttribute("f-forigin",i[n].fOrigin),u.setAttribute("f-origin",i[n].origin),u.setAttribute("rel","stylesheet"),u.setAttribute("href",i[n].fPath),e.appendChild(u)}}}else i[n].loaded=!0,o-=1;i[n].helper=a(e,i[n]),i[n].cache={},this.fonts.push(i[n])}0===o?this.isLoaded=!0:setTimeout(this.checkLoadedFonts.bind(this),100)}else this.isLoaded=!0},getCharData:function(e,n,i){for(var r=0,a=this.chars.length;r<a;){if(this.chars[r].ch===e&&this.chars[r].style===n&&this.chars[r].fFamily===i)return this.chars[r];r+=1}return("string"==typeof e&&13!==e.charCodeAt(0)||!e)&&console&&console.warn&&!this._warned&&(this._warned=!0,console.warn("Missing character from exported characters list: ",e,n,i)),t},getFontByName:function(t){for(var e=0,n=this.fonts.length;e<n;){if(this.fonts[e].fName===t)return this.fonts[e];e+=1}return this.fonts[0]},measureText:function(t,e,n){var i=this.getFontByName(e),r=t.charCodeAt(0);if(!i.cache[r+1]){var a=i.helper;if(" "===t){a.textContent="|"+t+"|";var s=a.getComputedTextLength();a.textContent="||";var o=a.getComputedTextLength();i.cache[r+1]=(s-o)/100}else a.textContent=t,i.cache[r+1]=a.getComputedTextLength()/100}return i.cache[r+1]*n},checkLoadedFonts:function(){var t,e,n,i=this.fonts.length,r=i;for(t=0;t<i;t+=1)this.fonts[t].loaded?r-=1:"n"===this.fonts[t].fOrigin||0===this.fonts[t].origin?this.fonts[t].loaded=!0:(e=this.fonts[t].monoCase.node,n=this.fonts[t].monoCase.w,e.offsetWidth!==n?(r-=1,this.fonts[t].loaded=!0):(e=this.fonts[t].sansCase.node,n=this.fonts[t].sansCase.w,e.offsetWidth!==n&&(r-=1,this.fonts[t].loaded=!0)),this.fonts[t].loaded&&(this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent),this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));0!==r&&Date.now()-this.initTime<5e3?setTimeout(this.checkLoadedFontsBinded,20):setTimeout(this.setIsLoadedBinded,10)},setIsLoaded:function(){this.isLoaded=!0}},s}(),X=function(){var t=r,e=Math.abs;function n(t,e){var n,r=this.offsetTime;"multidimensional"===this.propType&&(n=F("float32",this.pv.length));for(var a,s,o,l,h,c,d,p,u,f=e.lastIndex,g=f,v=this.keyframes.length-1,w=!0;w;){if(a=this.keyframes[g],s=this.keyframes[g+1],g===v-1&&t>=s.t-r){a.h&&(a=s),f=0;break}if(s.t-r>t){f=g;break}g<v-1?g+=1:(f=0,w=!1)}o=this.keyframesMetadata[g]||{};var y,_,b,M,x,C,k,S,A,E,L,P,I,T,D,O,R,N,B=s.t-r,z=a.t-r;if(a.to){o.bezierData||(o.bezierData=Z.buildBezierData(a.s,s.s||a.e,a.to,a.ti));var W=o.bezierData;if(t>=B||t<z){var q=t>=B?W.points.length-1:0;for(h=W.points[q].point.length,l=0;l<h;l+=1)n[l]=W.points[q].point[l]}else{o.__fnct?u=o.__fnct:(u=V.getBezierEasing(a.o.x,a.o.y,a.i.x,a.i.y,a.n).get,o.__fnct=u),c=u((t-z)/(B-z));var j,H=W.segmentLength*c,U=e.lastFrame<t&&e._lastKeyframeIndex===g?e._lastAddedLength:0;for(p=e.lastFrame<t&&e._lastKeyframeIndex===g?e._lastPoint:0,w=!0,d=W.points.length;w;){if(U+=W.points[p].partialLength,0===H||0===c||p===W.points.length-1){for(h=W.points[p].point.length,l=0;l<h;l+=1)n[l]=W.points[p].point[l];break}if(H>=U&&H<U+W.points[p+1].partialLength){for(j=(H-U)/W.points[p+1].partialLength,h=W.points[p].point.length,l=0;l<h;l+=1)n[l]=W.points[p].point[l]+(W.points[p+1].point[l]-W.points[p].point[l])*j;break}p<d-1?p+=1:w=!1}e._lastPoint=p,e._lastAddedLength=U-W.points[p].partialLength,e._lastKeyframeIndex=g}}else{var G,$,X,K,J;if(v=a.s.length,y=s.s||a.e,this.sh&&1!==a.h)t>=B?(n[0]=y[0],n[1]=y[1],n[2]=y[2]):t<=z?(n[0]=a.s[0],n[1]=a.s[1],n[2]=a.s[2]):function(t,e){var n=e[0],i=e[1],r=e[2],a=e[3],s=Math.atan2(2*i*a-2*n*r,1-2*i*i-2*r*r),o=Math.asin(2*n*i+2*r*a),l=Math.atan2(2*n*a-2*i*r,1-2*n*n-2*r*r);t[0]=s/m,t[1]=o/m,t[2]=l/m}(n,(_=i(a.s),b=i(y),M=(t-z)/(B-z),E=[],L=_[0],P=_[1],I=_[2],T=_[3],D=b[0],O=b[1],R=b[2],N=b[3],(C=L*D+P*O+I*R+T*N)<0&&(C=-C,D=-D,O=-O,R=-R,N=-N),1-C>1e-6?(x=Math.acos(C),k=Math.sin(x),S=Math.sin((1-M)*x)/k,A=Math.sin(M*x)/k):(S=1-M,A=M),E[0]=S*L+A*D,E[1]=S*P+A*O,E[2]=S*I+A*R,E[3]=S*T+A*N,E));else for(g=0;g<v;g+=1)1!==a.h&&(t>=B?c=1:t<z?c=0:(a.o.x.constructor===Array?(o.__fnct||(o.__fnct=[]),o.__fnct[g]?u=o.__fnct[g]:(G=void 0===a.o.x[g]?a.o.x[0]:a.o.x[g],$=void 0===a.o.y[g]?a.o.y[0]:a.o.y[g],X=void 0===a.i.x[g]?a.i.x[0]:a.i.x[g],K=void 0===a.i.y[g]?a.i.y[0]:a.i.y[g],u=V.getBezierEasing(G,$,X,K).get,o.__fnct[g]=u)):o.__fnct?u=o.__fnct:(G=a.o.x,$=a.o.y,X=a.i.x,K=a.i.y,u=V.getBezierEasing(G,$,X,K).get,a.keyframeMetadata=u),c=u((t-z)/(B-z)))),y=s.s||a.e,J=1===a.h?a.s[g]:a.s[g]+(y[g]-a.s[g])*c,"multidimensional"===this.propType?n[g]=J:n=J}return e.lastIndex=f,n}function i(t){var e=t[0]*m,n=t[1]*m,i=t[2]*m,r=Math.cos(e/2),a=Math.cos(n/2),s=Math.cos(i/2),o=Math.sin(e/2),l=Math.sin(n/2),h=Math.sin(i/2);return[o*l*s+r*a*h,o*a*s+r*l*h,r*l*s-o*a*h,r*a*s-o*l*h]}function a(){var e=this.comp.renderedFrame-this.offsetTime,n=this.keyframes[0].t-this.offsetTime,i=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(e===this._caching.lastFrame||this._caching.lastFrame!==t&&(this._caching.lastFrame>=i&&e>=i||this._caching.lastFrame<n&&e<n))){this._caching.lastFrame>=e&&(this._caching._lastKeyframeIndex=-1,this._caching.lastIndex=0);var r=this.interpolateValue(e,this._caching);this.pv=r}return this._caching.lastFrame=e,this.pv}function s(t){var n;if("unidimensional"===this.propType)n=t*this.mult,e(this.v-n)>1e-5&&(this.v=n,this._mdf=!0);else for(var i=0,r=this.v.length;i<r;)n=t[i]*this.mult,e(this.v[i]-n)>1e-5&&(this.v[i]=n,this._mdf=!0),i+=1}function o(){if(this.elem.globalData.frameId!==this.frameId&&this.effectsSequence.length)if(this.lock)this.setVValue(this.pv);else{var t;this.lock=!0,this._mdf=this._isFirstFrame;var e=this.effectsSequence.length,n=this.kf?this.pv:this.data.k;for(t=0;t<e;t+=1)n=this.effectsSequence[t](n);this.setVValue(n),this._isFirstFrame=!1,this.lock=!1,this.frameId=this.elem.globalData.frameId}}function l(t){this.effectsSequence.push(t),this.container.addDynamicProperty(this)}function h(t,e,n,i){this.propType="unidimensional",this.mult=n||1,this.data=e,this.v=n?e.k*n:e.k,this.pv=e.k,this._mdf=!1,this.elem=t,this.container=i,this.comp=t.comp,this.k=!1,this.kf=!1,this.vel=0,this.effectsSequence=[],this._isFirstFrame=!0,this.getValue=o,this.setVValue=s,this.addEffect=l}function c(t,e,n,i){var r;this.propType="multidimensional",this.mult=n||1,this.data=e,this._mdf=!1,this.elem=t,this.container=i,this.comp=t.comp,this.k=!1,this.kf=!1,this.frameId=-1;var a=e.k.length;for(this.v=F("float32",a),this.pv=F("float32",a),this.vel=F("float32",a),r=0;r<a;r+=1)this.v[r]=e.k[r]*this.mult,this.pv[r]=e.k[r];this._isFirstFrame=!0,this.effectsSequence=[],this.getValue=o,this.setVValue=s,this.addEffect=l}function d(e,i,r,h){this.propType="unidimensional",this.keyframes=i.k,this.keyframesMetadata=[],this.offsetTime=e.data.st,this.frameId=-1,this._caching={lastFrame:t,lastIndex:0,value:0,_lastKeyframeIndex:-1},this.k=!0,this.kf=!0,this.data=i,this.mult=r||1,this.elem=e,this.container=h,this.comp=e.comp,this.v=t,this.pv=t,this._isFirstFrame=!0,this.getValue=o,this.setVValue=s,this.interpolateValue=n,this.effectsSequence=[a.bind(this)],this.addEffect=l}function p(e,i,r,h){var c;this.propType="multidimensional";var d,p,u,f,m=i.k.length;for(c=0;c<m-1;c+=1)i.k[c].to&&i.k[c].s&&i.k[c+1]&&i.k[c+1].s&&(d=i.k[c].s,p=i.k[c+1].s,u=i.k[c].to,f=i.k[c].ti,(2===d.length&&(d[0]!==p[0]||d[1]!==p[1])&&Z.pointOnLine2D(d[0],d[1],p[0],p[1],d[0]+u[0],d[1]+u[1])&&Z.pointOnLine2D(d[0],d[1],p[0],p[1],p[0]+f[0],p[1]+f[1])||3===d.length&&(d[0]!==p[0]||d[1]!==p[1]||d[2]!==p[2])&&Z.pointOnLine3D(d[0],d[1],d[2],p[0],p[1],p[2],d[0]+u[0],d[1]+u[1],d[2]+u[2])&&Z.pointOnLine3D(d[0],d[1],d[2],p[0],p[1],p[2],p[0]+f[0],p[1]+f[1],p[2]+f[2]))&&(i.k[c].to=null,i.k[c].ti=null),d[0]===p[0]&&d[1]===p[1]&&0===u[0]&&0===u[1]&&0===f[0]&&0===f[1]&&(2===d.length||d[2]===p[2]&&0===u[2]&&0===f[2])&&(i.k[c].to=null,i.k[c].ti=null));this.effectsSequence=[a.bind(this)],this.data=i,this.keyframes=i.k,this.keyframesMetadata=[],this.offsetTime=e.data.st,this.k=!0,this.kf=!0,this._isFirstFrame=!0,this.mult=r||1,this.elem=e,this.container=h,this.comp=e.comp,this.getValue=o,this.setVValue=s,this.interpolateValue=n,this.frameId=-1;var g=i.k[0].s.length;for(this.v=F("float32",g),this.pv=F("float32",g),c=0;c<g;c+=1)this.v[c]=t,this.pv[c]=t;this._caching={lastFrame:t,lastIndex:0,value:F("float32",g)},this.addEffect=l}return{getProp:function(t,e,n,i,r){var a;if(e.k.length)if("number"==typeof e.k[0])a=new c(t,e,i,r);else switch(n){case 0:a=new d(t,e,i,r);break;case 1:a=new p(t,e,i,r)}else a=new h(t,e,i,r);return a.effectsSequence.length&&r.addDynamicProperty(a),a}}}(),K=function(){var t=[0,0];function e(t,e,n){if(this.elem=t,this.frameId=-1,this.propType="transform",this.data=e,this.v=new j,this.pre=new j,this.appliedTransformations=0,this.initDynamicPropertyContainer(n||t),e.p&&e.p.s?(this.px=X.getProp(t,e.p.x,0,0,this),this.py=X.getProp(t,e.p.y,0,0,this),e.p.z&&(this.pz=X.getProp(t,e.p.z,0,0,this))):this.p=X.getProp(t,e.p||{k:[0,0,0]},1,0,this),e.rx){if(this.rx=X.getProp(t,e.rx,0,m,this),this.ry=X.getProp(t,e.ry,0,m,this),this.rz=X.getProp(t,e.rz,0,m,this),e.or.k[0].ti){var i,r=e.or.k.length;for(i=0;i<r;i+=1)e.or.k[i].to=null,e.or.k[i].ti=null}this.or=X.getProp(t,e.or,1,m,this),this.or.sh=!0}else this.r=X.getProp(t,e.r||{k:0},0,m,this);e.sk&&(this.sk=X.getProp(t,e.sk,0,m,this),this.sa=X.getProp(t,e.sa,0,m,this)),this.a=X.getProp(t,e.a||{k:[0,0,0]},1,0,this),this.s=X.getProp(t,e.s||{k:[100,100,100]},1,.01,this),e.o?this.o=X.getProp(t,e.o,0,.01,t):this.o={_mdf:!1,v:1},this._isDirty=!0,this.dynamicProperties.length||this.getValue(!0)}return e.prototype={applyToMatrix:function(t){var e=this._mdf;this.iterateDynamicProperties(),this._mdf=this._mdf||e,this.a&&t.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.s&&t.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&t.skewFromAxis(-this.sk.v,this.sa.v),this.r?t.rotate(-this.r.v):t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.data.p.s?this.data.p.z?t.translate(this.px.v,this.py.v,-this.pz.v):t.translate(this.px.v,this.py.v,0):t.translate(this.p.v[0],this.p.v[1],-this.p.v[2])},getValue:function(e){if(this.elem.globalData.frameId!==this.frameId){if(this._isDirty&&(this.precalculateMatrix(),this._isDirty=!1),this.iterateDynamicProperties(),this._mdf||e){var n;if(this.v.cloneFromProps(this.pre.props),this.appliedTransformations<1&&this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.appliedTransformations<2&&this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&this.appliedTransformations<3&&this.v.skewFromAxis(-this.sk.v,this.sa.v),this.r&&this.appliedTransformations<4?this.v.rotate(-this.r.v):!this.r&&this.appliedTransformations<4&&this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.autoOriented){var i,r;if(n=this.elem.globalData.frameRate,this.p&&this.p.keyframes&&this.p.getValueAtTime)this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t?(i=this.p.getValueAtTime((this.p.keyframes[0].t+.01)/n,0),r=this.p.getValueAtTime(this.p.keyframes[0].t/n,0)):this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t?(i=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/n,0),r=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-.05)/n,0)):(i=this.p.pv,r=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-.01)/n,this.p.offsetTime));else if(this.px&&this.px.keyframes&&this.py.keyframes&&this.px.getValueAtTime&&this.py.getValueAtTime){i=[],r=[];var a=this.px,s=this.py;a._caching.lastFrame+a.offsetTime<=a.keyframes[0].t?(i[0]=a.getValueAtTime((a.keyframes[0].t+.01)/n,0),i[1]=s.getValueAtTime((s.keyframes[0].t+.01)/n,0),r[0]=a.getValueAtTime(a.keyframes[0].t/n,0),r[1]=s.getValueAtTime(s.keyframes[0].t/n,0)):a._caching.lastFrame+a.offsetTime>=a.keyframes[a.keyframes.length-1].t?(i[0]=a.getValueAtTime(a.keyframes[a.keyframes.length-1].t/n,0),i[1]=s.getValueAtTime(s.keyframes[s.keyframes.length-1].t/n,0),r[0]=a.getValueAtTime((a.keyframes[a.keyframes.length-1].t-.01)/n,0),r[1]=s.getValueAtTime((s.keyframes[s.keyframes.length-1].t-.01)/n,0)):(i=[a.pv,s.pv],r[0]=a.getValueAtTime((a._caching.lastFrame+a.offsetTime-.01)/n,a.offsetTime),r[1]=s.getValueAtTime((s._caching.lastFrame+s.offsetTime-.01)/n,s.offsetTime))}else i=r=t;this.v.rotate(-Math.atan2(i[1]-r[1],i[0]-r[0]))}this.data.p&&this.data.p.s?this.data.p.z?this.v.translate(this.px.v,this.py.v,-this.pz.v):this.v.translate(this.px.v,this.py.v,0):this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2])}this.frameId=this.elem.globalData.frameId}},precalculateMatrix:function(){if(!this.a.k&&(this.pre.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.appliedTransformations=1,!this.s.effectsSequence.length)){if(this.pre.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.appliedTransformations=2,this.sk){if(this.sk.effectsSequence.length||this.sa.effectsSequence.length)return;this.pre.skewFromAxis(-this.sk.v,this.sa.v),this.appliedTransformations=3}this.r?this.r.effectsSequence.length||(this.pre.rotate(-this.r.v),this.appliedTransformations=4):this.rz.effectsSequence.length||this.ry.effectsSequence.length||this.rx.effectsSequence.length||this.or.effectsSequence.length||(this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.appliedTransformations=4)}},autoOrient:function(){}},H([N],e),e.prototype.addDynamicProperty=function(t){this._addDynamicProperty(t),this.elem.addDynamicProperty(t),this._isDirty=!0},e.prototype._addDynamicProperty=N.prototype.addDynamicProperty,{getTransformProperty:function(t,n,i){return new e(t,n,i)}}}();function J(){this.c=!1,this._length=0,this._maxLength=8,this.v=D(this._maxLength),this.o=D(this._maxLength),this.i=D(this._maxLength)}J.prototype.setPathData=function(t,e){this.c=t,this.setLength(e);for(var n=0;n<e;)this.v[n]=Mt.newElement(),this.o[n]=Mt.newElement(),this.i[n]=Mt.newElement(),n+=1},J.prototype.setLength=function(t){for(;this._maxLength<t;)this.doubleArrayLength();this._length=t},J.prototype.doubleArrayLength=function(){this.v=this.v.concat(D(this._maxLength)),this.i=this.i.concat(D(this._maxLength)),this.o=this.o.concat(D(this._maxLength)),this._maxLength*=2},J.prototype.setXYAt=function(t,e,n,i,r){var a;switch(this._length=Math.max(this._length,i+1),this._length>=this._maxLength&&this.doubleArrayLength(),n){case"v":a=this.v;break;case"i":a=this.i;break;case"o":a=this.o;break;default:a=[]}(!a[i]||a[i]&&!r)&&(a[i]=Mt.newElement()),a[i][0]=t,a[i][1]=e},J.prototype.setTripleAt=function(t,e,n,i,r,a,s,o){this.setXYAt(t,e,"v",s,o),this.setXYAt(n,i,"o",s,o),this.setXYAt(r,a,"i",s,o)},J.prototype.reverse=function(){var t=new J;t.setPathData(this.c,this._length);var e=this.v,n=this.o,i=this.i,r=0;this.c&&(t.setTripleAt(e[0][0],e[0][1],i[0][0],i[0][1],n[0][0],n[0][1],0,!1),r=1);var a,s=this._length-1,o=this._length;for(a=r;a<o;a+=1)t.setTripleAt(e[s][0],e[s][1],i[s][0],i[s][1],n[s][0],n[s][1],a,!1),s-=1;return t};var Y=function(){var t=-999999;function e(t,e,n){var i,r,a,s,o,l,h,c,d,p=n.lastIndex,u=this.keyframes;if(t<u[0].t-this.offsetTime)i=u[0].s[0],a=!0,p=0;else if(t>=u[u.length-1].t-this.offsetTime)i=u[u.length-1].s?u[u.length-1].s[0]:u[u.length-2].e[0],a=!0;else{for(var f,m,g,v=p,w=u.length-1,y=!0;y&&(f=u[v],!((m=u[v+1]).t-this.offsetTime>t));)v<w-1?v+=1:y=!1;if(g=this.keyframesMetadata[v]||{},p=v,!(a=1===f.h)){if(t>=m.t-this.offsetTime)c=1;else if(t<f.t-this.offsetTime)c=0;else{var _;g.__fnct?_=g.__fnct:(_=V.getBezierEasing(f.o.x,f.o.y,f.i.x,f.i.y).get,g.__fnct=_),c=_((t-(f.t-this.offsetTime))/(m.t-this.offsetTime-(f.t-this.offsetTime)))}r=m.s?m.s[0]:f.e[0]}i=f.s[0]}for(l=e._length,h=i.i[0].length,n.lastIndex=p,s=0;s<l;s+=1)for(o=0;o<h;o+=1)d=a?i.i[s][o]:i.i[s][o]+(r.i[s][o]-i.i[s][o])*c,e.i[s][o]=d,d=a?i.o[s][o]:i.o[s][o]+(r.o[s][o]-i.o[s][o])*c,e.o[s][o]=d,d=a?i.v[s][o]:i.v[s][o]+(r.v[s][o]-i.v[s][o])*c,e.v[s][o]=d}function n(){var e=this.comp.renderedFrame-this.offsetTime,n=this.keyframes[0].t-this.offsetTime,i=this.keyframes[this.keyframes.length-1].t-this.offsetTime,r=this._caching.lastFrame;return r!==t&&(r<n&&e<n||r>i&&e>i)||(this._caching.lastIndex=r<e?this._caching.lastIndex:0,this.interpolateShape(e,this.pv,this._caching)),this._caching.lastFrame=e,this.pv}function i(){this.paths=this.localShapeCollection}function r(t){(function(t,e){if(t._length!==e._length||t.c!==e.c)return!1;var n,i=t._length;for(n=0;n<i;n+=1)if(t.v[n][0]!==e.v[n][0]||t.v[n][1]!==e.v[n][1]||t.o[n][0]!==e.o[n][0]||t.o[n][1]!==e.o[n][1]||t.i[n][0]!==e.i[n][0]||t.i[n][1]!==e.i[n][1])return!1;return!0})(this.v,t)||(this.v=xt.clone(t),this.localShapeCollection.releaseShapes(),this.localShapeCollection.addShape(this.v),this._mdf=!0,this.paths=this.localShapeCollection)}function a(){if(this.elem.globalData.frameId!==this.frameId)if(this.effectsSequence.length)if(this.lock)this.setVValue(this.pv);else{var t,e;this.lock=!0,this._mdf=!1,t=this.kf?this.pv:this.data.ks?this.data.ks.k:this.data.pt.k;var n=this.effectsSequence.length;for(e=0;e<n;e+=1)t=this.effectsSequence[e](t);this.setVValue(t),this.lock=!1,this.frameId=this.elem.globalData.frameId}else this._mdf=!1}function s(t,e,n){this.propType="shape",this.comp=t.comp,this.container=t,this.elem=t,this.data=e,this.k=!1,this.kf=!1,this._mdf=!1;var r=3===n?e.pt.k:e.ks.k;this.v=xt.clone(r),this.pv=xt.clone(this.v),this.localShapeCollection=Ct.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.reset=i,this.effectsSequence=[]}function o(t){this.effectsSequence.push(t),this.container.addDynamicProperty(this)}function l(e,r,a){this.propType="shape",this.comp=e.comp,this.elem=e,this.container=e,this.offsetTime=e.data.st,this.keyframes=3===a?r.pt.k:r.ks.k,this.keyframesMetadata=[],this.k=!0,this.kf=!0;var s=this.keyframes[0].s[0].i.length;this.v=xt.newElement(),this.v.setPathData(this.keyframes[0].s[0].c,s),this.pv=xt.clone(this.v),this.localShapeCollection=Ct.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.lastFrame=t,this.reset=i,this._caching={lastFrame:t,lastIndex:0},this.effectsSequence=[n.bind(this)]}s.prototype.interpolateShape=e,s.prototype.getValue=a,s.prototype.setVValue=r,s.prototype.addEffect=o,l.prototype.getValue=a,l.prototype.interpolateShape=e,l.prototype.setVValue=r,l.prototype.addEffect=o;var h=function(){var t=g;function e(t,e){this.v=xt.newElement(),this.v.setPathData(!0,4),this.localShapeCollection=Ct.newShapeCollection(),this.paths=this.localShapeCollection,this.localShapeCollection.addShape(this.v),this.d=e.d,this.elem=t,this.comp=t.comp,this.frameId=-1,this.initDynamicPropertyContainer(t),this.p=X.getProp(t,e.p,1,0,this),this.s=X.getProp(t,e.s,1,0,this),this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertEllToPath())}return e.prototype={reset:i,getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertEllToPath())},convertEllToPath:function(){var e=this.p.v[0],n=this.p.v[1],i=this.s.v[0]/2,r=this.s.v[1]/2,a=3!==this.d,s=this.v;s.v[0][0]=e,s.v[0][1]=n-r,s.v[1][0]=a?e+i:e-i,s.v[1][1]=n,s.v[2][0]=e,s.v[2][1]=n+r,s.v[3][0]=a?e-i:e+i,s.v[3][1]=n,s.i[0][0]=a?e-i*t:e+i*t,s.i[0][1]=n-r,s.i[1][0]=a?e+i:e-i,s.i[1][1]=n-r*t,s.i[2][0]=a?e+i*t:e-i*t,s.i[2][1]=n+r,s.i[3][0]=a?e-i:e+i,s.i[3][1]=n+r*t,s.o[0][0]=a?e+i*t:e-i*t,s.o[0][1]=n-r,s.o[1][0]=a?e+i:e-i,s.o[1][1]=n+r*t,s.o[2][0]=a?e-i*t:e+i*t,s.o[2][1]=n+r,s.o[3][0]=a?e-i:e+i,s.o[3][1]=n-r*t}},H([N],e),e}(),c=function(){function t(t,e){this.v=xt.newElement(),this.v.setPathData(!0,0),this.elem=t,this.comp=t.comp,this.data=e,this.frameId=-1,this.d=e.d,this.initDynamicPropertyContainer(t),1===e.sy?(this.ir=X.getProp(t,e.ir,0,0,this),this.is=X.getProp(t,e.is,0,.01,this),this.convertToPath=this.convertStarToPath):this.convertToPath=this.convertPolygonToPath,this.pt=X.getProp(t,e.pt,0,0,this),this.p=X.getProp(t,e.p,1,0,this),this.r=X.getProp(t,e.r,0,m,this),this.or=X.getProp(t,e.or,0,0,this),this.os=X.getProp(t,e.os,0,.01,this),this.localShapeCollection=Ct.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertToPath())}return t.prototype={reset:i,getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertToPath())},convertStarToPath:function(){var t,e,n,i,r=2*Math.floor(this.pt.v),a=2*Math.PI/r,s=!0,o=this.or.v,l=this.ir.v,h=this.os.v,c=this.is.v,d=2*Math.PI*o/(2*r),p=2*Math.PI*l/(2*r),u=-Math.PI/2;u+=this.r.v;var f=3===this.data.d?-1:1;for(this.v._length=0,t=0;t<r;t+=1){n=s?h:c,i=s?d:p;var m=(e=s?o:l)*Math.cos(u),g=e*Math.sin(u),v=0===m&&0===g?0:g/Math.sqrt(m*m+g*g),w=0===m&&0===g?0:-m/Math.sqrt(m*m+g*g);m+=+this.p.v[0],g+=+this.p.v[1],this.v.setTripleAt(m,g,m-v*i*n*f,g-w*i*n*f,m+v*i*n*f,g+w*i*n*f,t,!0),s=!s,u+=a*f}},convertPolygonToPath:function(){var t,e=Math.floor(this.pt.v),n=2*Math.PI/e,i=this.or.v,r=this.os.v,a=2*Math.PI*i/(4*e),s=.5*-Math.PI,o=3===this.data.d?-1:1;for(s+=this.r.v,this.v._length=0,t=0;t<e;t+=1){var l=i*Math.cos(s),h=i*Math.sin(s),c=0===l&&0===h?0:h/Math.sqrt(l*l+h*h),d=0===l&&0===h?0:-l/Math.sqrt(l*l+h*h);l+=+this.p.v[0],h+=+this.p.v[1],this.v.setTripleAt(l,h,l-c*a*r*o,h-d*a*r*o,l+c*a*r*o,h+d*a*r*o,t,!0),s+=n*o}this.paths.length=0,this.paths[0]=this.v}},H([N],t),t}(),d=function(){function t(t,e){this.v=xt.newElement(),this.v.c=!0,this.localShapeCollection=Ct.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.elem=t,this.comp=t.comp,this.frameId=-1,this.d=e.d,this.initDynamicPropertyContainer(t),this.p=X.getProp(t,e.p,1,0,this),this.s=X.getProp(t,e.s,1,0,this),this.r=X.getProp(t,e.r,0,0,this),this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertRectToPath())}return t.prototype={convertRectToPath:function(){var t=this.p.v[0],e=this.p.v[1],n=this.s.v[0]/2,i=this.s.v[1]/2,r=p(n,i,this.r.v),a=r*(1-g);this.v._length=0,2===this.d||1===this.d?(this.v.setTripleAt(t+n,e-i+r,t+n,e-i+r,t+n,e-i+a,0,!0),this.v.setTripleAt(t+n,e+i-r,t+n,e+i-a,t+n,e+i-r,1,!0),0!==r?(this.v.setTripleAt(t+n-r,e+i,t+n-r,e+i,t+n-a,e+i,2,!0),this.v.setTripleAt(t-n+r,e+i,t-n+a,e+i,t-n+r,e+i,3,!0),this.v.setTripleAt(t-n,e+i-r,t-n,e+i-r,t-n,e+i-a,4,!0),this.v.setTripleAt(t-n,e-i+r,t-n,e-i+a,t-n,e-i+r,5,!0),this.v.setTripleAt(t-n+r,e-i,t-n+r,e-i,t-n+a,e-i,6,!0),this.v.setTripleAt(t+n-r,e-i,t+n-a,e-i,t+n-r,e-i,7,!0)):(this.v.setTripleAt(t-n,e+i,t-n+a,e+i,t-n,e+i,2),this.v.setTripleAt(t-n,e-i,t-n,e-i+a,t-n,e-i,3))):(this.v.setTripleAt(t+n,e-i+r,t+n,e-i+a,t+n,e-i+r,0,!0),0!==r?(this.v.setTripleAt(t+n-r,e-i,t+n-r,e-i,t+n-a,e-i,1,!0),this.v.setTripleAt(t-n+r,e-i,t-n+a,e-i,t-n+r,e-i,2,!0),this.v.setTripleAt(t-n,e-i+r,t-n,e-i+r,t-n,e-i+a,3,!0),this.v.setTripleAt(t-n,e+i-r,t-n,e+i-a,t-n,e+i-r,4,!0),this.v.setTripleAt(t-n+r,e+i,t-n+r,e+i,t-n+a,e+i,5,!0),this.v.setTripleAt(t+n-r,e+i,t+n-a,e+i,t+n-r,e+i,6,!0),this.v.setTripleAt(t+n,e+i-r,t+n,e+i-r,t+n,e+i-a,7,!0)):(this.v.setTripleAt(t-n,e-i,t-n+a,e-i,t-n,e-i,1,!0),this.v.setTripleAt(t-n,e+i,t-n,e+i-a,t-n,e+i,2,!0),this.v.setTripleAt(t+n,e+i,t+n-a,e+i,t+n,e+i,3,!0)))},getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertRectToPath())},reset:i},H([N],t),t}();var u={getShapeProp:function(t,e,n){var i;return 3===n||4===n?i=(3===n?e.pt:e.ks).k.length?new l(t,e,n):new s(t,e,n):5===n?i=new d(t,e):6===n?i=new h(t,e):7===n&&(i=new c(t,e)),i.k&&t.addDynamicProperty(i),i},getConstructorFunction:function(){return s},getKeyframedConstructorFunction:function(){return l}};return u}(),Q=function(){var t={},e={};return t.registerModifier=function(t,n){e[t]||(e[t]=n)},t.getModifier=function(t,n,i){return new e[t](n,i)},t}();function tt(){}function et(){}function nt(){}function it(){}function rt(){}function at(){this._length=0,this._maxLength=4,this.shapes=D(this._maxLength)}function st(t,e,n,i){var r;this.elem=t,this.frameId=-1,this.dataProps=D(e.length),this.renderer=n,this.k=!1,this.dashStr="",this.dashArray=F("float32",e.length?e.length-1:0),this.dashoffset=F("float32",1),this.initDynamicPropertyContainer(i);var a,s=e.length||0;for(r=0;r<s;r+=1)a=X.getProp(t,e[r].v,0,0,this),this.k=a.k||this.k,this.dataProps[r]={n:e[r].n,p:a};this.k||this.getValue(!0),this._isAnimated=this.k}function ot(t,e,n){this.data=e,this.c=F("uint8c",4*e.p);var i=e.k.k[0].s?e.k.k[0].s.length-4*e.p:e.k.k.length-4*e.p;this.o=F("float32",i),this._cmdf=!1,this._omdf=!1,this._collapsable=this.checkCollapsable(),this._hasOpacity=i,this.initDynamicPropertyContainer(n),this.prop=X.getProp(t,e.k,1,null,this),this.k=this.prop.k,this.getValue(!0)}tt.prototype.initModifierProperties=function(){},tt.prototype.addShapeToModifier=function(){},tt.prototype.addShape=function(t){if(!this.closed){t.sh.container.addDynamicProperty(t.sh);var e={shape:t.sh,data:t,localShapeCollection:Ct.newShapeCollection()};this.shapes.push(e),this.addShapeToModifier(e),this._isAnimated&&t.setAsAnimated()}},tt.prototype.init=function(t,e){this.shapes=[],this.elem=t,this.initDynamicPropertyContainer(t),this.initModifierProperties(t,e),this.frameId=r,this.closed=!1,this.k=!1,this.dynamicProperties.length?this.k=!0:this.getValue(!0)},tt.prototype.processKeys=function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties())},H([N],tt),H([tt],et),et.prototype.initModifierProperties=function(t,e){this.s=X.getProp(t,e.s,0,.01,this),this.e=X.getProp(t,e.e,0,.01,this),this.o=X.getProp(t,e.o,0,0,this),this.sValue=0,this.eValue=0,this.getValue=this.processKeys,this.m=e.m,this._isAnimated=!!this.s.effectsSequence.length||!!this.e.effectsSequence.length||!!this.o.effectsSequence.length},et.prototype.addShapeToModifier=function(t){t.pathsData=[]},et.prototype.calculateShapeEdges=function(t,e,n,i,r){var a=[];e<=1?a.push({s:t,e}):t>=1?a.push({s:t-1,e:e-1}):(a.push({s:t,e:1}),a.push({s:0,e:e-1}));var s,o,l=[],h=a.length;for(s=0;s<h;s+=1){var c,d;(o=a[s]).e*r<i||o.s*r>i+n||(c=o.s*r<=i?0:(o.s*r-i)/n,d=o.e*r>=i+n?1:(o.e*r-i)/n,l.push([c,d]))}return l.length||l.push([0,0]),l},et.prototype.releasePathsData=function(t){var e,n=t.length;for(e=0;e<n;e+=1)kt.release(t[e]);return t.length=0,t},et.prototype.processShapes=function(t){var e,n,i,r;if(this._mdf||t){var a=this.o.v%360/360;if(a<0&&(a+=1),(e=this.s.v>1?1+a:this.s.v<0?0+a:this.s.v+a)>(n=this.e.v>1?1+a:this.e.v<0?0+a:this.e.v+a)){var s=e;e=n,n=s}e=1e-4*Math.round(1e4*e),n=1e-4*Math.round(1e4*n),this.sValue=e,this.eValue=n}else e=this.sValue,n=this.eValue;var o,l,h,c,d,p=this.shapes.length,u=0;if(n===e)for(r=0;r<p;r+=1)this.shapes[r].localShapeCollection.releaseShapes(),this.shapes[r].shape._mdf=!0,this.shapes[r].shape.paths=this.shapes[r].localShapeCollection,this._mdf&&(this.shapes[r].pathsData.length=0);else if(1===n&&0===e||0===n&&1===e){if(this._mdf)for(r=0;r<p;r+=1)this.shapes[r].pathsData.length=0,this.shapes[r].shape._mdf=!0}else{var f,m,g=[];for(r=0;r<p;r+=1)if((f=this.shapes[r]).shape._mdf||this._mdf||t||2===this.m){if(l=(i=f.shape.paths)._length,d=0,!f.shape._mdf&&f.pathsData.length)d=f.totalShapeLength;else{for(h=this.releasePathsData(f.pathsData),o=0;o<l;o+=1)c=Z.getSegmentsLength(i.shapes[o]),h.push(c),d+=c.totalLength;f.totalShapeLength=d,f.pathsData=h}u+=d,f.shape._mdf=!0}else f.shape.paths=f.localShapeCollection;var v,w=e,y=n,_=0;for(r=p-1;r>=0;r-=1)if((f=this.shapes[r]).shape._mdf){for((m=f.localShapeCollection).releaseShapes(),2===this.m&&p>1?(v=this.calculateShapeEdges(e,n,f.totalShapeLength,_,u),_+=f.totalShapeLength):v=[[w,y]],l=v.length,o=0;o<l;o+=1){w=v[o][0],y=v[o][1],g.length=0,y<=1?g.push({s:f.totalShapeLength*w,e:f.totalShapeLength*y}):w>=1?g.push({s:f.totalShapeLength*(w-1),e:f.totalShapeLength*(y-1)}):(g.push({s:f.totalShapeLength*w,e:f.totalShapeLength}),g.push({s:0,e:f.totalShapeLength*(y-1)}));var b=this.addShapes(f,g[0]);if(g[0].s!==g[0].e){if(g.length>1)if(f.shape.paths.shapes[f.shape.paths._length-1].c){var M=b.pop();this.addPaths(b,m),b=this.addShapes(f,g[1],M)}else this.addPaths(b,m),b=this.addShapes(f,g[1]);this.addPaths(b,m)}}f.shape.paths=m}}},et.prototype.addPaths=function(t,e){var n,i=t.length;for(n=0;n<i;n+=1)e.addShape(t[n])},et.prototype.addSegment=function(t,e,n,i,r,a,s){r.setXYAt(e[0],e[1],"o",a),r.setXYAt(n[0],n[1],"i",a+1),s&&r.setXYAt(t[0],t[1],"v",a),r.setXYAt(i[0],i[1],"v",a+1)},et.prototype.addSegmentFromArray=function(t,e,n,i){e.setXYAt(t[1],t[5],"o",n),e.setXYAt(t[2],t[6],"i",n+1),i&&e.setXYAt(t[0],t[4],"v",n),e.setXYAt(t[3],t[7],"v",n+1)},et.prototype.addShapes=function(t,e,n){var i,r,a,s,o,l,h,c,d=t.pathsData,p=t.shape.paths.shapes,u=t.shape.paths._length,f=0,m=[],g=!0;for(n?(o=n._length,c=n._length):(n=xt.newElement(),o=0,c=0),m.push(n),i=0;i<u;i+=1){for(l=d[i].lengths,n.c=p[i].c,a=p[i].c?l.length:l.length+1,r=1;r<a;r+=1)if(f+(s=l[r-1]).addedLength<e.s)f+=s.addedLength,n.c=!1;else{if(f>e.e){n.c=!1;break}e.s<=f&&e.e>=f+s.addedLength?(this.addSegment(p[i].v[r-1],p[i].o[r-1],p[i].i[r],p[i].v[r],n,o,g),g=!1):(h=Z.getNewSegment(p[i].v[r-1],p[i].v[r],p[i].o[r-1],p[i].i[r],(e.s-f)/s.addedLength,(e.e-f)/s.addedLength,l[r-1]),this.addSegmentFromArray(h,n,o,g),g=!1,n.c=!1),f+=s.addedLength,o+=1}if(p[i].c&&l.length){if(s=l[r-1],f<=e.e){var v=l[r-1].addedLength;e.s<=f&&e.e>=f+v?(this.addSegment(p[i].v[r-1],p[i].o[r-1],p[i].i[0],p[i].v[0],n,o,g),g=!1):(h=Z.getNewSegment(p[i].v[r-1],p[i].v[0],p[i].o[r-1],p[i].i[0],(e.s-f)/v,(e.e-f)/v,l[r-1]),this.addSegmentFromArray(h,n,o,g),g=!1,n.c=!1)}else n.c=!1;f+=s.addedLength,o+=1}if(n._length&&(n.setXYAt(n.v[c][0],n.v[c][1],"i",c),n.setXYAt(n.v[n._length-1][0],n.v[n._length-1][1],"o",n._length-1)),f>e.e)break;i<u-1&&(n=xt.newElement(),g=!0,m.push(n),o=0)}return m},Q.registerModifier("tm",et),H([tt],nt),nt.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.rd=X.getProp(t,e.r,0,null,this),this._isAnimated=!!this.rd.effectsSequence.length},nt.prototype.processPath=function(t,e){var n,i=xt.newElement();i.c=t.c;var r,a,s,o,l,h,c,d,p,u,f,m,v=t._length,w=0;for(n=0;n<v;n+=1)r=t.v[n],s=t.o[n],a=t.i[n],r[0]===s[0]&&r[1]===s[1]&&r[0]===a[0]&&r[1]===a[1]?0!==n&&n!==v-1||t.c?(o=0===n?t.v[v-1]:t.v[n-1],h=(l=Math.sqrt(Math.pow(r[0]-o[0],2)+Math.pow(r[1]-o[1],2)))?Math.min(l/2,e)/l:0,c=f=r[0]+(o[0]-r[0])*h,d=m=r[1]-(r[1]-o[1])*h,p=c-(c-r[0])*g,u=d-(d-r[1])*g,i.setTripleAt(c,d,p,u,f,m,w),w+=1,o=n===v-1?t.v[0]:t.v[n+1],h=(l=Math.sqrt(Math.pow(r[0]-o[0],2)+Math.pow(r[1]-o[1],2)))?Math.min(l/2,e)/l:0,c=p=r[0]+(o[0]-r[0])*h,d=u=r[1]+(o[1]-r[1])*h,f=c-(c-r[0])*g,m=d-(d-r[1])*g,i.setTripleAt(c,d,p,u,f,m,w),w+=1):(i.setTripleAt(r[0],r[1],s[0],s[1],a[0],a[1],w),w+=1):(i.setTripleAt(t.v[n][0],t.v[n][1],t.o[n][0],t.o[n][1],t.i[n][0],t.i[n][1],w),w+=1);return i},nt.prototype.processShapes=function(t){var e,n,i,r,a,s,o=this.shapes.length,l=this.rd.v;if(0!==l)for(n=0;n<o;n+=1){if(s=(a=this.shapes[n]).localShapeCollection,a.shape._mdf||this._mdf||t)for(s.releaseShapes(),a.shape._mdf=!0,e=a.shape.paths.shapes,r=a.shape.paths._length,i=0;i<r;i+=1)s.addShape(this.processPath(e[i],l));a.shape.paths=a.localShapeCollection}this.dynamicProperties.length||(this._mdf=!1)},Q.registerModifier("rd",nt),H([tt],it),it.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amount=X.getProp(t,e.a,0,null,this),this._isAnimated=!!this.amount.effectsSequence.length},it.prototype.processPath=function(t,e){var n=e/100,i=[0,0],r=t._length,a=0;for(a=0;a<r;a+=1)i[0]+=t.v[a][0],i[1]+=t.v[a][1];i[0]/=r,i[1]/=r;var s,o,l,h,c,d,p=xt.newElement();for(p.c=t.c,a=0;a<r;a+=1)s=t.v[a][0]+(i[0]-t.v[a][0])*n,o=t.v[a][1]+(i[1]-t.v[a][1])*n,l=t.o[a][0]+(i[0]-t.o[a][0])*-n,h=t.o[a][1]+(i[1]-t.o[a][1])*-n,c=t.i[a][0]+(i[0]-t.i[a][0])*-n,d=t.i[a][1]+(i[1]-t.i[a][1])*-n,p.setTripleAt(s,o,l,h,c,d,a);return p},it.prototype.processShapes=function(t){var e,n,i,r,a,s,o=this.shapes.length,l=this.amount.v;if(0!==l)for(n=0;n<o;n+=1){if(s=(a=this.shapes[n]).localShapeCollection,a.shape._mdf||this._mdf||t)for(s.releaseShapes(),a.shape._mdf=!0,e=a.shape.paths.shapes,r=a.shape.paths._length,i=0;i<r;i+=1)s.addShape(this.processPath(e[i],l));a.shape.paths=a.localShapeCollection}this.dynamicProperties.length||(this._mdf=!1)},Q.registerModifier("pb",it),H([tt],rt),rt.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.c=X.getProp(t,e.c,0,null,this),this.o=X.getProp(t,e.o,0,null,this),this.tr=K.getTransformProperty(t,e.tr,this),this.so=X.getProp(t,e.tr.so,0,.01,this),this.eo=X.getProp(t,e.tr.eo,0,.01,this),this.data=e,this.dynamicProperties.length||this.getValue(!0),this._isAnimated=!!this.dynamicProperties.length,this.pMatrix=new j,this.rMatrix=new j,this.sMatrix=new j,this.tMatrix=new j,this.matrix=new j},rt.prototype.applyTransforms=function(t,e,n,i,r,a){var s=a?-1:1,o=i.s.v[0]+(1-i.s.v[0])*(1-r),l=i.s.v[1]+(1-i.s.v[1])*(1-r);t.translate(i.p.v[0]*s*r,i.p.v[1]*s*r,i.p.v[2]),e.translate(-i.a.v[0],-i.a.v[1],i.a.v[2]),e.rotate(-i.r.v*s*r),e.translate(i.a.v[0],i.a.v[1],i.a.v[2]),n.translate(-i.a.v[0],-i.a.v[1],i.a.v[2]),n.scale(a?1/o:o,a?1/l:l),n.translate(i.a.v[0],i.a.v[1],i.a.v[2])},rt.prototype.init=function(t,e,n,i){for(this.elem=t,this.arr=e,this.pos=n,this.elemsData=i,this._currentCopies=0,this._elements=[],this._groups=[],this.frameId=-1,this.initDynamicPropertyContainer(t),this.initModifierProperties(t,e[n]);n>0;)n-=1,this._elements.unshift(e[n]);this.dynamicProperties.length?this.k=!0:this.getValue(!0)},rt.prototype.resetElements=function(t){var e,n=t.length;for(e=0;e<n;e+=1)t[e]._processed=!1,"gr"===t[e].ty&&this.resetElements(t[e].it)},rt.prototype.cloneElements=function(t){var e=JSON.parse(JSON.stringify(t));return this.resetElements(e),e},rt.prototype.changeGroupRender=function(t,e){var n,i=t.length;for(n=0;n<i;n+=1)t[n]._render=e,"gr"===t[n].ty&&this.changeGroupRender(t[n].it,e)},rt.prototype.processShapes=function(t){var e,n,i,r,a,s=!1;if(this._mdf||t){var o,l=Math.ceil(this.c.v);if(this._groups.length<l){for(;this._groups.length<l;){var h={it:this.cloneElements(this._elements),ty:"gr"};h.it.push({a:{a:0,ix:1,k:[0,0]},nm:"Transform",o:{a:0,ix:7,k:100},p:{a:0,ix:2,k:[0,0]},r:{a:1,ix:6,k:[{s:0,e:0,t:0},{s:0,e:0,t:1}]},s:{a:0,ix:3,k:[100,100]},sa:{a:0,ix:5,k:0},sk:{a:0,ix:4,k:0},ty:"tr"}),this.arr.splice(0,0,h),this._groups.splice(0,0,h),this._currentCopies+=1}this.elem.reloadShapes(),s=!0}for(a=0,i=0;i<=this._groups.length-1;i+=1){if(o=a<l,this._groups[i]._render=o,this.changeGroupRender(this._groups[i].it,o),!o){var c=this.elemsData[i].it,d=c[c.length-1];0!==d.transform.op.v?(d.transform.op._mdf=!0,d.transform.op.v=0):d.transform.op._mdf=!1}a+=1}this._currentCopies=l;var p=this.o.v,u=p%1,f=p>0?Math.floor(p):Math.ceil(p),m=this.pMatrix.props,g=this.rMatrix.props,v=this.sMatrix.props;this.pMatrix.reset(),this.rMatrix.reset(),this.sMatrix.reset(),this.tMatrix.reset(),this.matrix.reset();var w,y,_=0;if(p>0){for(;_<f;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),_+=1;u&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,u,!1),_+=u)}else if(p<0){for(;_>f;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!0),_-=1;u&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-u,!0),_-=u)}for(i=1===this.data.m?0:this._currentCopies-1,r=1===this.data.m?1:-1,a=this._currentCopies;a;){if(y=(n=(e=this.elemsData[i].it)[e.length-1].transform.mProps.v.props).length,e[e.length-1].transform.mProps._mdf=!0,e[e.length-1].transform.op._mdf=!0,e[e.length-1].transform.op.v=1===this._currentCopies?this.so.v:this.so.v+(this.eo.v-this.so.v)*(i/(this._currentCopies-1)),0!==_){for((0!==i&&1===r||i!==this._currentCopies-1&&-1===r)&&this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),this.matrix.transform(g[0],g[1],g[2],g[3],g[4],g[5],g[6],g[7],g[8],g[9],g[10],g[11],g[12],g[13],g[14],g[15]),this.matrix.transform(v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11],v[12],v[13],v[14],v[15]),this.matrix.transform(m[0],m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8],m[9],m[10],m[11],m[12],m[13],m[14],m[15]),w=0;w<y;w+=1)n[w]=this.matrix.props[w];this.matrix.reset()}else for(this.matrix.reset(),w=0;w<y;w+=1)n[w]=this.matrix.props[w];_+=1,a-=1,i+=r}}else for(a=this._currentCopies,i=0,r=1;a;)n=(e=this.elemsData[i].it)[e.length-1].transform.mProps.v.props,e[e.length-1].transform.mProps._mdf=!1,e[e.length-1].transform.op._mdf=!1,a-=1,i+=r;return s},rt.prototype.addShape=function(){},Q.registerModifier("rp",rt),at.prototype.addShape=function(t){this._length===this._maxLength&&(this.shapes=this.shapes.concat(D(this._maxLength)),this._maxLength*=2),this.shapes[this._length]=t,this._length+=1},at.prototype.releaseShapes=function(){var t;for(t=0;t<this._length;t+=1)xt.release(this.shapes[t]);this._length=0},st.prototype.getValue=function(t){if((this.elem.globalData.frameId!==this.frameId||t)&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf=this._mdf||t,this._mdf)){var e=0,n=this.dataProps.length;for("svg"===this.renderer&&(this.dashStr=""),e=0;e<n;e+=1)"o"!==this.dataProps[e].n?"svg"===this.renderer?this.dashStr+=" "+this.dataProps[e].p.v:this.dashArray[e]=this.dataProps[e].p.v:this.dashoffset[0]=this.dataProps[e].p.v}},H([N],st),ot.prototype.comparePoints=function(t,e){for(var n=0,i=this.o.length/2;n<i;){if(Math.abs(t[4*n]-t[4*e+2*n])>.01)return!1;n+=1}return!0},ot.prototype.checkCollapsable=function(){if(this.o.length/2!=this.c.length/4)return!1;if(this.data.k.k[0].s)for(var t=0,e=this.data.k.k.length;t<e;){if(!this.comparePoints(this.data.k.k[t].s,this.data.p))return!1;t+=1}else if(!this.comparePoints(this.data.k.k,this.data.p))return!1;return!0},ot.prototype.getValue=function(t){if(this.prop.getValue(),this._mdf=!1,this._cmdf=!1,this._omdf=!1,this.prop._mdf||t){var e,n,i,r=4*this.data.p;for(e=0;e<r;e+=1)n=e%4==0?100:255,i=Math.round(this.prop.v[e]*n),this.c[e]!==i&&(this.c[e]=i,this._cmdf=!t);if(this.o.length)for(r=this.prop.v.length,e=4*this.data.p;e<r;e+=1)n=e%2==0?100:1,i=e%2==0?Math.round(100*this.prop.v[e]):this.prop.v[e],this.o[e-4*this.data.p]!==i&&(this.o[e-4*this.data.p]=i,this._omdf=!t);this._mdf=!t}},H([N],ot);var lt,ht=function(t,e,n,i){if(0===e)return"";var r,a=t.o,s=t.i,o=t.v,l=" M"+i.applyToPointStringified(o[0][0],o[0][1]);for(r=1;r<e;r+=1)l+=" C"+i.applyToPointStringified(a[r-1][0],a[r-1][1])+" "+i.applyToPointStringified(s[r][0],s[r][1])+" "+i.applyToPointStringified(o[r][0],o[r][1]);return n&&e&&(l+=" C"+i.applyToPointStringified(a[r-1][0],a[r-1][1])+" "+i.applyToPointStringified(s[0][0],s[0][1])+" "+i.applyToPointStringified(o[0][0],o[0][1]),l+="z"),l},ct=function(){function t(t){this.audios=[],this.audioFactory=t,this._volume=1,this._isMuted=!1}return t.prototype={addAudio:function(t){this.audios.push(t)},pause:function(){var t,e=this.audios.length;for(t=0;t<e;t+=1)this.audios[t].pause()},resume:function(){var t,e=this.audios.length;for(t=0;t<e;t+=1)this.audios[t].resume()},setRate:function(t){var e,n=this.audios.length;for(e=0;e<n;e+=1)this.audios[e].setRate(t)},createAudio:function(t){return this.audioFactory?this.audioFactory(t):Howl?new Howl({src:[t]}):{isPlaying:!1,play:function(){this.isPlaying=!0},seek:function(){this.isPlaying=!1},playing:function(){},rate:function(){},setVolume:function(){}}},setAudioFactory:function(t){this.audioFactory=t},setVolume:function(t){this._volume=t,this._updateVolume()},mute:function(){this._isMuted=!0,this._updateVolume()},unmute:function(){this._isMuted=!1,this._updateVolume()},getVolume:function(){return this._volume},_updateVolume:function(){var t,e=this.audios.length;for(t=0;t<e;t+=1)this.audios[t].volume(this._volume*(this._isMuted?0:1))}},function(){return new t}}(),dt=function(){var t=function(){var t=R("canvas");t.width=1,t.height=1;var e=t.getContext("2d");return e.fillStyle="rgba(0,0,0,0)",e.fillRect(0,0,1,1),t}();function e(){this.loadedAssets+=1,this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages&&this.imagesLoadedCb&&this.imagesLoadedCb(null)}function n(){this.loadedFootagesCount+=1,this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages&&this.imagesLoadedCb&&this.imagesLoadedCb(null)}function i(t,e,n){var i="";if(t.e)i=t.p;else if(e){var r=t.p;-1!==r.indexOf("images/")&&(r=r.split("/")[1]),i=e+r}else i=n,i+=t.u?t.u:"",i+=t.p;return i}function r(t){var e=0,n=setInterval(function(){(t.getBBox().width||e>500)&&(this._imageLoaded(),clearInterval(n)),e+=1}.bind(this),50)}function a(t){var e={assetData:t},n=i(t,this.assetsPath,this.path);return U.loadData(n,function(t){e.img=t,this._footageLoaded()}.bind(this),function(){e.img={},this._footageLoaded()}.bind(this)),e}function s(){this._imageLoaded=e.bind(this),this._footageLoaded=n.bind(this),this.testImageLoaded=r.bind(this),this.createFootageData=a.bind(this),this.assetsPath="",this.path="",this.totalImages=0,this.totalFootages=0,this.loadedAssets=0,this.loadedFootagesCount=0,this.imagesLoadedCb=null,this.images=[]}return s.prototype={loadAssets:function(t,e){var n;this.imagesLoadedCb=e;var i=t.length;for(n=0;n<i;n+=1)t[n].layers||(t[n].t&&"seq"!==t[n].t?3===t[n].t&&(this.totalFootages+=1,this.images.push(this.createFootageData(t[n]))):(this.totalImages+=1,this.images.push(this._createImageData(t[n]))))},setAssetsPath:function(t){this.assetsPath=t||""},setPath:function(t){this.path=t||""},loadedImages:function(){return this.totalImages===this.loadedAssets},loadedFootages:function(){return this.totalFootages===this.loadedFootagesCount},destroy:function(){this.imagesLoadedCb=null,this.images.length=0},getAsset:function(t){for(var e=0,n=this.images.length;e<n;){if(this.images[e].assetData===t)return this.images[e].img;e+=1}return null},createImgData:function(e){var n=i(e,this.assetsPath,this.path),r=R("img");r.crossOrigin="anonymous",r.addEventListener("load",this._imageLoaded,!1),r.addEventListener("error",function(){a.img=t,this._imageLoaded()}.bind(this),!1),r.src=n;var a={img:r,assetData:e};return a},createImageData:function(e){var n=i(e,this.assetsPath,this.path),r=O("image");l?this.testImageLoaded(r):r.addEventListener("load",this._imageLoaded,!1),r.addEventListener("error",function(){a.img=t,this._imageLoaded()}.bind(this),!1),r.setAttributeNS("http://www.w3.org/1999/xlink","href",n),this._elementHelper.append?this._elementHelper.append(r):this._elementHelper.appendChild(r);var a={img:r,assetData:e};return a},imageLoaded:e,footageLoaded:n,setCacheType:function(t,e){"svg"===t?(this._elementHelper=e,this._createImageData=this.createImageData.bind(this)):this._createImageData=this.createImgData.bind(this)}},s}(),pt=(lt={maskType:!0},(/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\/\d./i.test(navigator.userAgent))&&(lt.maskType=!1),lt),ut=function(){var t={};return t.createFilter=function(t,e){var n=O("filter");return n.setAttribute("id",t),!0!==e&&(n.setAttribute("filterUnits","objectBoundingBox"),n.setAttribute("x","0%"),n.setAttribute("y","0%"),n.setAttribute("width","100%"),n.setAttribute("height","100%")),n},t.createAlphaToLuminanceFilter=function(){var t=O("feColorMatrix");return t.setAttribute("type","matrix"),t.setAttribute("color-interpolation-filters","sRGB"),t.setAttribute("values","0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),t},t}();function ft(t,e,n){this._isFirstFrame=!0,this._hasMaskedPath=!1,this._frameId=-1,this._textData=t,this._renderType=e,this._elem=n,this._animatorsData=D(this._textData.a.length),this._pathData={},this._moreOptions={alignment:{}},this.renderedLetters=[],this.lettersChangedFlag=!1,this.initDynamicPropertyContainer(n)}function mt(t,e,n){var i={propType:!1},r=X.getProp,a=e.a;this.a={r:a.r?r(t,a.r,0,m,n):i,rx:a.rx?r(t,a.rx,0,m,n):i,ry:a.ry?r(t,a.ry,0,m,n):i,sk:a.sk?r(t,a.sk,0,m,n):i,sa:a.sa?r(t,a.sa,0,m,n):i,s:a.s?r(t,a.s,1,.01,n):i,a:a.a?r(t,a.a,1,0,n):i,o:a.o?r(t,a.o,0,.01,n):i,p:a.p?r(t,a.p,1,0,n):i,sw:a.sw?r(t,a.sw,0,0,n):i,sc:a.sc?r(t,a.sc,1,0,n):i,fc:a.fc?r(t,a.fc,1,0,n):i,fh:a.fh?r(t,a.fh,0,0,n):i,fs:a.fs?r(t,a.fs,0,.01,n):i,fb:a.fb?r(t,a.fb,0,.01,n):i,t:a.t?r(t,a.t,0,0,n):i},this.s=yt.getTextSelectorProp(t,e.s,n),this.s.t=e.s.t}function gt(t,e,n,i,r,a){this.o=t,this.sw=e,this.sc=n,this.fc=i,this.m=r,this.p=a,this._mdf={o:!0,sw:!!e,sc:!!n,fc:!!i,m:!0,p:!0}}function vt(t,e){this._frameId=r,this.pv="",this.v="",this.kf=!1,this._isFirstFrame=!0,this._mdf=!1,this.data=e,this.elem=t,this.comp=this.elem.comp,this.keysIndex=0,this.canResize=!1,this.minimumFontSize=1,this.effectsSequence=[],this.currentData={ascent:0,boxWidth:this.defaultBoxWidth,f:"",fStyle:"",fWeight:"",fc:"",j:"",justifyOffset:"",l:[],lh:0,lineWidths:[],ls:"",of:"",s:"",sc:"",sw:0,t:0,tr:0,sz:0,ps:null,fillColorAnim:!1,strokeColorAnim:!1,strokeWidthAnim:!1,yOffset:0,finalSize:0,finalText:[],finalLineHeight:0,__complete:!1},this.copyData(this.currentData,this.data.d.k[0].s),this.searchProperty()||this.completeTextData(this.currentData)}ft.prototype.searchProperties=function(){var t,e,n=this._textData.a.length,i=X.getProp;for(t=0;t<n;t+=1)e=this._textData.a[t],this._animatorsData[t]=new mt(this._elem,e,this);this._textData.p&&"m"in this._textData.p?(this._pathData={a:i(this._elem,this._textData.p.a,0,0,this),f:i(this._elem,this._textData.p.f,0,0,this),l:i(this._elem,this._textData.p.l,0,0,this),r:i(this._elem,this._textData.p.r,0,0,this),p:i(this._elem,this._textData.p.p,0,0,this),m:this._elem.maskManager.getMaskProperty(this._textData.p.m)},this._hasMaskedPath=!0):this._hasMaskedPath=!1,this._moreOptions.alignment=i(this._elem,this._textData.m.a,1,0,this)},ft.prototype.getMeasures=function(t,e){if(this.lettersChangedFlag=e,this._mdf||this._isFirstFrame||e||this._hasMaskedPath&&this._pathData.m._mdf){this._isFirstFrame=!1;var n,i,r,a,s,o,l,h,c,d,p,u,f,m,g,v,w,y,_,b=this._moreOptions.alignment.v,M=this._animatorsData,x=this._textData,C=this.mHelper,k=this._renderType,S=this.renderedLetters.length,A=t.l;if(this._hasMaskedPath){if(_=this._pathData.m,!this._pathData.n||this._pathData._mdf){var E,T=_.v;for(this._pathData.r.v&&(T=T.reverse()),s={tLength:0,segments:[]},a=T._length-1,v=0,r=0;r<a;r+=1)E=Z.buildBezierData(T.v[r],T.v[r+1],[T.o[r][0]-T.v[r][0],T.o[r][1]-T.v[r][1]],[T.i[r+1][0]-T.v[r+1][0],T.i[r+1][1]-T.v[r+1][1]]),s.tLength+=E.segmentLength,s.segments.push(E),v+=E.segmentLength;r=a,_.v.c&&(E=Z.buildBezierData(T.v[r],T.v[0],[T.o[r][0]-T.v[r][0],T.o[r][1]-T.v[r][1]],[T.i[0][0]-T.v[0][0],T.i[0][1]-T.v[0][1]]),s.tLength+=E.segmentLength,s.segments.push(E),v+=E.segmentLength),this._pathData.pi=s}if(s=this._pathData.pi,o=this._pathData.f.v,p=0,d=1,h=0,c=!0,m=s.segments,o<0&&_.v.c)for(s.tLength<Math.abs(o)&&(o=-Math.abs(o)%s.tLength),d=(f=m[p=m.length-1].points).length-1;o<0;)o+=f[d].partialLength,(d-=1)<0&&(d=(f=m[p-=1].points).length-1);u=(f=m[p].points)[d-1],g=(l=f[d]).partialLength}a=A.length,n=0,i=0;var F,D,O,R,N,B=1.2*t.finalSize*.714,z=!0;O=M.length;var W,q,j,V,H,U,G,$,X,K,J,Y,Q=-1,tt=o,et=p,nt=d,it=-1,rt="",at=this.defaultPropsArray;if(2===t.j||1===t.j){var st=0,ot=0,lt=2===t.j?-.5:-1,ht=0,ct=!0;for(r=0;r<a;r+=1)if(A[r].n){for(st&&(st+=ot);ht<r;)A[ht].animatorJustifyOffset=st,ht+=1;st=0,ct=!0}else{for(D=0;D<O;D+=1)(F=M[D].a).t.propType&&(ct&&2===t.j&&(ot+=F.t.v*lt),(N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars)).length?st+=F.t.v*N[0]*lt:st+=F.t.v*N*lt);ct=!1}for(st&&(st+=ot);ht<r;)A[ht].animatorJustifyOffset=st,ht+=1}for(r=0;r<a;r+=1){if(C.reset(),V=1,A[r].n)n=0,i+=t.yOffset,i+=z?1:0,o=tt,z=!1,this._hasMaskedPath&&(d=nt,u=(f=m[p=et].points)[d-1],g=(l=f[d]).partialLength,h=0),rt="",J="",X="",Y="",at=this.defaultPropsArray;else{if(this._hasMaskedPath){if(it!==A[r].line){switch(t.j){case 1:o+=v-t.lineWidths[A[r].line];break;case 2:o+=(v-t.lineWidths[A[r].line])/2}it=A[r].line}Q!==A[r].ind&&(A[Q]&&(o+=A[Q].extra),o+=A[r].an/2,Q=A[r].ind),o+=b[0]*A[r].an*.005;var dt=0;for(D=0;D<O;D+=1)(F=M[D].a).p.propType&&((N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars)).length?dt+=F.p.v[0]*N[0]:dt+=F.p.v[0]*N),F.a.propType&&((N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars)).length?dt+=F.a.v[0]*N[0]:dt+=F.a.v[0]*N);for(c=!0,this._pathData.a.v&&(o=.5*A[0].an+(v-this._pathData.f.v-.5*A[0].an-.5*A[A.length-1].an)*Q/(a-1),o+=this._pathData.f.v);c;)h+g>=o+dt||!f?(w=(o+dt-h)/l.partialLength,q=u.point[0]+(l.point[0]-u.point[0])*w,j=u.point[1]+(l.point[1]-u.point[1])*w,C.translate(-b[0]*A[r].an*.005,-b[1]*B*.01),c=!1):f&&(h+=l.partialLength,(d+=1)>=f.length&&(d=0,m[p+=1]?f=m[p].points:_.v.c?(d=0,f=m[p=0].points):(h-=l.partialLength,f=null)),f&&(u=l,g=(l=f[d]).partialLength));W=A[r].an/2-A[r].add,C.translate(-W,0,0)}else W=A[r].an/2-A[r].add,C.translate(-W,0,0),C.translate(-b[0]*A[r].an*.005,-b[1]*B*.01,0);for(D=0;D<O;D+=1)(F=M[D].a).t.propType&&(N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars),0===n&&0===t.j||(this._hasMaskedPath?N.length?o+=F.t.v*N[0]:o+=F.t.v*N:N.length?n+=F.t.v*N[0]:n+=F.t.v*N));for(t.strokeWidthAnim&&(U=t.sw||0),t.strokeColorAnim&&(H=t.sc?[t.sc[0],t.sc[1],t.sc[2]]:[0,0,0]),t.fillColorAnim&&t.fc&&(G=[t.fc[0],t.fc[1],t.fc[2]]),D=0;D<O;D+=1)(F=M[D].a).a.propType&&((N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars)).length?C.translate(-F.a.v[0]*N[0],-F.a.v[1]*N[1],F.a.v[2]*N[2]):C.translate(-F.a.v[0]*N,-F.a.v[1]*N,F.a.v[2]*N));for(D=0;D<O;D+=1)(F=M[D].a).s.propType&&((N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars)).length?C.scale(1+(F.s.v[0]-1)*N[0],1+(F.s.v[1]-1)*N[1],1):C.scale(1+(F.s.v[0]-1)*N,1+(F.s.v[1]-1)*N,1));for(D=0;D<O;D+=1){if(F=M[D].a,N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars),F.sk.propType&&(N.length?C.skewFromAxis(-F.sk.v*N[0],F.sa.v*N[1]):C.skewFromAxis(-F.sk.v*N,F.sa.v*N)),F.r.propType&&(N.length?C.rotateZ(-F.r.v*N[2]):C.rotateZ(-F.r.v*N)),F.ry.propType&&(N.length?C.rotateY(F.ry.v*N[1]):C.rotateY(F.ry.v*N)),F.rx.propType&&(N.length?C.rotateX(F.rx.v*N[0]):C.rotateX(F.rx.v*N)),F.o.propType&&(N.length?V+=(F.o.v*N[0]-V)*N[0]:V+=(F.o.v*N-V)*N),t.strokeWidthAnim&&F.sw.propType&&(N.length?U+=F.sw.v*N[0]:U+=F.sw.v*N),t.strokeColorAnim&&F.sc.propType)for($=0;$<3;$+=1)N.length?H[$]+=(F.sc.v[$]-H[$])*N[0]:H[$]+=(F.sc.v[$]-H[$])*N;if(t.fillColorAnim&&t.fc){if(F.fc.propType)for($=0;$<3;$+=1)N.length?G[$]+=(F.fc.v[$]-G[$])*N[0]:G[$]+=(F.fc.v[$]-G[$])*N;F.fh.propType&&(G=N.length?I(G,F.fh.v*N[0]):I(G,F.fh.v*N)),F.fs.propType&&(G=N.length?L(G,F.fs.v*N[0]):L(G,F.fs.v*N)),F.fb.propType&&(G=N.length?P(G,F.fb.v*N[0]):P(G,F.fb.v*N))}}for(D=0;D<O;D+=1)(F=M[D].a).p.propType&&(N=M[D].s.getMult(A[r].anIndexes[D],x.a[D].s.totalChars),this._hasMaskedPath?N.length?C.translate(0,F.p.v[1]*N[0],-F.p.v[2]*N[1]):C.translate(0,F.p.v[1]*N,-F.p.v[2]*N):N.length?C.translate(F.p.v[0]*N[0],F.p.v[1]*N[1],-F.p.v[2]*N[2]):C.translate(F.p.v[0]*N,F.p.v[1]*N,-F.p.v[2]*N));if(t.strokeWidthAnim&&(X=U<0?0:U),t.strokeColorAnim&&(K="rgb("+Math.round(255*H[0])+","+Math.round(255*H[1])+","+Math.round(255*H[2])+")"),t.fillColorAnim&&t.fc&&(J="rgb("+Math.round(255*G[0])+","+Math.round(255*G[1])+","+Math.round(255*G[2])+")"),this._hasMaskedPath){if(C.translate(0,-t.ls),C.translate(0,b[1]*B*.01+i,0),this._pathData.p.v){y=(l.point[1]-u.point[1])/(l.point[0]-u.point[0]);var pt=180*Math.atan(y)/Math.PI;l.point[0]<u.point[0]&&(pt+=180),C.rotate(-pt*Math.PI/180)}C.translate(q,j,0),o-=b[0]*A[r].an*.005,A[r+1]&&Q!==A[r+1].ind&&(o+=A[r].an/2,o+=.001*t.tr*t.finalSize)}else{switch(C.translate(n,i,0),t.ps&&C.translate(t.ps[0],t.ps[1]+t.ascent,0),t.j){case 1:C.translate(A[r].animatorJustifyOffset+t.justifyOffset+(t.boxWidth-t.lineWidths[A[r].line]),0,0);break;case 2:C.translate(A[r].animatorJustifyOffset+t.justifyOffset+(t.boxWidth-t.lineWidths[A[r].line])/2,0,0)}C.translate(0,-t.ls),C.translate(W,0,0),C.translate(b[0]*A[r].an*.005,b[1]*B*.01,0),n+=A[r].l+.001*t.tr*t.finalSize}"html"===k?rt=C.toCSS():"svg"===k?rt=C.to2dCSS():at=[C.props[0],C.props[1],C.props[2],C.props[3],C.props[4],C.props[5],C.props[6],C.props[7],C.props[8],C.props[9],C.props[10],C.props[11],C.props[12],C.props[13],C.props[14],C.props[15]],Y=V}S<=r?(R=new gt(Y,X,K,J,rt,at),this.renderedLetters.push(R),S+=1,this.lettersChangedFlag=!0):(R=this.renderedLetters[r],this.lettersChangedFlag=R.update(Y,X,K,J,rt,at)||this.lettersChangedFlag)}}},ft.prototype.getValue=function(){this._elem.globalData.frameId!==this._frameId&&(this._frameId=this._elem.globalData.frameId,this.iterateDynamicProperties())},ft.prototype.mHelper=new j,ft.prototype.defaultPropsArray=[],H([N],ft),gt.prototype.update=function(t,e,n,i,r,a){this._mdf.o=!1,this._mdf.sw=!1,this._mdf.sc=!1,this._mdf.fc=!1,this._mdf.m=!1,this._mdf.p=!1;var s=!1;return this.o!==t&&(this.o=t,this._mdf.o=!0,s=!0),this.sw!==e&&(this.sw=e,this._mdf.sw=!0,s=!0),this.sc!==n&&(this.sc=n,this._mdf.sc=!0,s=!0),this.fc!==i&&(this.fc=i,this._mdf.fc=!0,s=!0),this.m!==r&&(this.m=r,this._mdf.m=!0,s=!0),!a.length||this.p[0]===a[0]&&this.p[1]===a[1]&&this.p[4]===a[4]&&this.p[5]===a[5]&&this.p[12]===a[12]&&this.p[13]===a[13]||(this.p=a,this._mdf.p=!0,s=!0),s},vt.prototype.defaultBoxWidth=[0,0],vt.prototype.copyData=function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t},vt.prototype.setCurrentData=function(t){t.__complete||this.completeTextData(t),this.currentData=t,this.currentData.boxWidth=this.currentData.boxWidth||this.defaultBoxWidth,this._mdf=!0},vt.prototype.searchProperty=function(){return this.searchKeyframes()},vt.prototype.searchKeyframes=function(){return this.kf=this.data.d.k.length>1,this.kf&&this.addEffect(this.getKeyframeValue.bind(this)),this.kf},vt.prototype.addEffect=function(t){this.effectsSequence.push(t),this.elem.addDynamicProperty(this)},vt.prototype.getValue=function(t){if(this.elem.globalData.frameId!==this.frameId&&this.effectsSequence.length||t){this.currentData.t=this.data.d.k[this.keysIndex].s.t;var e=this.currentData,n=this.keysIndex;if(this.lock)this.setCurrentData(this.currentData);else{var i;this.lock=!0,this._mdf=!1;var r=this.effectsSequence.length,a=t||this.data.d.k[this.keysIndex].s;for(i=0;i<r;i+=1)a=n!==this.keysIndex?this.effectsSequence[i](a,a.t):this.effectsSequence[i](this.currentData,a.t);e!==a&&this.setCurrentData(a),this.v=this.currentData,this.pv=this.v,this.lock=!1,this.frameId=this.elem.globalData.frameId}}},vt.prototype.getKeyframeValue=function(){for(var t=this.data.d.k,e=this.elem.comp.renderedFrame,n=0,i=t.length;n<=i-1&&!(n===i-1||t[n+1].t>e);)n+=1;return this.keysIndex!==n&&(this.keysIndex=n),this.data.d.k[this.keysIndex].s},vt.prototype.buildFinalText=function(t){for(var e,n,i=[],r=0,a=t.length,s=!1;r<a;)e=t.charCodeAt(r),$.isCombinedCharacter(e)?i[i.length-1]+=t.charAt(r):e>=55296&&e<=56319?(n=t.charCodeAt(r+1))>=56320&&n<=57343?(s||$.isModifier(e,n)?(i[i.length-1]+=t.substr(r,2),s=!1):i.push(t.substr(r,2)),r+=1):i.push(t.charAt(r)):e>56319?(n=t.charCodeAt(r+1),$.isZeroWidthJoiner(e,n)?(s=!0,i[i.length-1]+=t.substr(r,2),r+=1):i.push(t.charAt(r))):$.isZeroWidthJoiner(e)?(i[i.length-1]+=t.charAt(r),s=!0):i.push(t.charAt(r)),r+=1;return i},vt.prototype.completeTextData=function(t){t.__complete=!0;var e,n,i,r,a,s,o,l=this.elem.globalData.fontManager,h=this.data,c=[],d=0,p=h.m.g,u=0,f=0,m=0,g=[],v=0,w=0,y=l.getFontByName(t.f),_=0,b=G(y);t.fWeight=b.weight,t.fStyle=b.style,t.finalSize=t.s,t.finalText=this.buildFinalText(t.t),n=t.finalText.length,t.finalLineHeight=t.lh;var M,x=t.tr/1e3*t.finalSize;if(t.sz)for(var C,k,S=!0,A=t.sz[0],E=t.sz[1];S;){C=0,v=0,n=(k=this.buildFinalText(t.t)).length,x=t.tr/1e3*t.finalSize;var L=-1;for(e=0;e<n;e+=1)M=k[e].charCodeAt(0),i=!1," "===k[e]?L=e:13!==M&&3!==M||(v=0,i=!0,C+=t.finalLineHeight||1.2*t.finalSize),l.chars?(o=l.getCharData(k[e],y.fStyle,y.fFamily),_=i?0:o.w*t.finalSize/100):_=l.measureText(k[e],t.f,t.finalSize),v+_>A&&" "!==k[e]?(-1===L?n+=1:e=L,C+=t.finalLineHeight||1.2*t.finalSize,k.splice(e,L===e?1:0,"\r"),L=-1,v=0):(v+=_,v+=x);C+=y.ascent*t.finalSize/100,this.canResize&&t.finalSize>this.minimumFontSize&&E<C?(t.finalSize-=1,t.finalLineHeight=t.finalSize*t.lh/t.s):(t.finalText=k,n=t.finalText.length,S=!1)}v=-x,_=0;var P,I=0;for(e=0;e<n;e+=1)if(i=!1,13===(M=(P=t.finalText[e]).charCodeAt(0))||3===M?(I=0,g.push(v),w=v>w?v:w,v=-2*x,r="",i=!0,m+=1):r=P,l.chars?(o=l.getCharData(P,y.fStyle,l.getFontByName(t.f).fFamily),_=i?0:o.w*t.finalSize/100):_=l.measureText(r,t.f,t.finalSize)," "===P?I+=_+x:(v+=_+x+I,I=0),c.push({l:_,an:_,add:u,n:i,anIndexes:[],val:r,line:m,animatorJustifyOffset:0}),2==p){if(u+=_,""===r||" "===r||e===n-1){for(""!==r&&" "!==r||(u-=_);f<=e;)c[f].an=u,c[f].ind=d,c[f].extra=_,f+=1;d+=1,u=0}}else if(3==p){if(u+=_,""===r||e===n-1){for(""===r&&(u-=_);f<=e;)c[f].an=u,c[f].ind=d,c[f].extra=_,f+=1;u=0,d+=1}}else c[d].ind=d,c[d].extra=0,d+=1;if(t.l=c,w=v>w?v:w,g.push(v),t.sz)t.boxWidth=t.sz[0],t.justifyOffset=0;else switch(t.boxWidth=w,t.j){case 1:t.justifyOffset=-t.boxWidth;break;case 2:t.justifyOffset=-t.boxWidth/2;break;default:t.justifyOffset=0}t.lineWidths=g;var T,F,D,O,R=h.a;s=R.length;var N=[];for(a=0;a<s;a+=1){for((T=R[a]).a.sc&&(t.strokeColorAnim=!0),T.a.sw&&(t.strokeWidthAnim=!0),(T.a.fc||T.a.fh||T.a.fs||T.a.fb)&&(t.fillColorAnim=!0),O=0,D=T.s.b,e=0;e<n;e+=1)(F=c[e]).anIndexes[a]=O,(1==D&&""!==F.val||2==D&&""!==F.val&&" "!==F.val||3==D&&(F.n||" "==F.val||e==n-1)||4==D&&(F.n||e==n-1))&&(1===T.s.rn&&N.push(O),O+=1);h.a[a].s.totalChars=O;var B,z=-1;if(1===T.s.rn)for(e=0;e<n;e+=1)z!=(F=c[e]).anIndexes[a]&&(z=F.anIndexes[a],B=N.splice(Math.floor(Math.random()*N.length),1)[0]),F.anIndexes[a]=B}t.yOffset=t.finalLineHeight||1.2*t.finalSize,t.ls=t.ls||0,t.ascent=y.ascent*t.finalSize/100},vt.prototype.updateDocumentData=function(t,e){e=void 0===e?this.keysIndex:e;var n=this.copyData({},this.data.d.k[e].s);n=this.copyData(n,t),this.data.d.k[e].s=n,this.recalculate(e),this.elem.addDynamicProperty(this)},vt.prototype.recalculate=function(t){var e=this.data.d.k[t].s;e.__complete=!1,this.keysIndex=0,this._isFirstFrame=!0,this.getValue(e)},vt.prototype.canResizeFont=function(t){this.canResize=t,this.recalculate(this.keysIndex),this.elem.addDynamicProperty(this)},vt.prototype.setMinimumFontSize=function(t){this.minimumFontSize=Math.floor(t)||1,this.recalculate(this.keysIndex),this.elem.addDynamicProperty(this)};var wt,yt=function(){var t=Math.max,e=Math.min,n=Math.floor;function i(t,e){this._currentTextLength=-1,this.k=!1,this.data=e,this.elem=t,this.comp=t.comp,this.finalS=0,this.finalE=0,this.initDynamicPropertyContainer(t),this.s=X.getProp(t,e.s||{k:0},0,0,this),this.e="e"in e?X.getProp(t,e.e,0,0,this):{v:100},this.o=X.getProp(t,e.o||{k:0},0,0,this),this.xe=X.getProp(t,e.xe||{k:0},0,0,this),this.ne=X.getProp(t,e.ne||{k:0},0,0,this),this.sm=X.getProp(t,e.sm||{k:100},0,0,this),this.a=X.getProp(t,e.a,0,.01,this),this.dynamicProperties.length||this.getValue()}return i.prototype={getMult:function(i){this._currentTextLength!==this.elem.textProperty.currentData.l.length&&this.getValue();var r=0,a=0,s=1,o=1;this.ne.v>0?r=this.ne.v/100:a=-this.ne.v/100,this.xe.v>0?s=1-this.xe.v/100:o=1+this.xe.v/100;var l=V.getBezierEasing(r,a,s,o).get,h=0,c=this.finalS,d=this.finalE,p=this.data.sh;if(2===p)h=l(h=d===c?i>=d?1:0:t(0,e(.5/(d-c)+(i-c)/(d-c),1)));else if(3===p)h=l(h=d===c?i>=d?0:1:1-t(0,e(.5/(d-c)+(i-c)/(d-c),1)));else if(4===p)d===c?h=0:(h=t(0,e(.5/(d-c)+(i-c)/(d-c),1)))<.5?h*=2:h=1-2*(h-.5),h=l(h);else if(5===p){if(d===c)h=0;else{var u=d-c,f=-u/2+(i=e(t(0,i+.5-c),d-c)),m=u/2;h=Math.sqrt(1-f*f/(m*m))}h=l(h)}else 6===p?(d===c?h=0:(i=e(t(0,i+.5-c),d-c),h=(1+Math.cos(Math.PI+2*Math.PI*i/(d-c)))/2),h=l(h)):(i>=n(c)&&(h=t(0,e(i-c<0?e(d,1)-(c-i):d-i,1))),h=l(h));if(100!==this.sm.v){var g=.01*this.sm.v;0===g&&(g=1e-8);var v=.5-.5*g;h<v?h=0:(h=(h-v)/g)>1&&(h=1)}return h*this.a.v},getValue:function(t){this.iterateDynamicProperties(),this._mdf=t||this._mdf,this._currentTextLength=this.elem.textProperty.currentData.l.length||0,t&&2===this.data.r&&(this.e.v=this._currentTextLength);var e=2===this.data.r?1:100/this.data.totalChars,n=this.o.v/e,i=this.s.v/e+n,r=this.e.v/e+n;if(i>r){var a=i;i=r,r=a}this.finalS=i,this.finalE=r}},H([N],i),{getTextSelectorProp:function(t,e,n){return new i(t,e,n)}}}(),_t=function(t,e,n){var i=0,r=t,a=D(r);return{newElement:function(){return i?a[i-=1]:e()},release:function(t){i===r&&(a=bt.double(a),r*=2),n&&n(t),a[i]=t,i+=1}}},bt={double:function(t){return t.concat(D(t.length))}},Mt=_t(8,(function(){return F("float32",2)})),xt=((wt=_t(4,(function(){return new J}),(function(t){var e,n=t._length;for(e=0;e<n;e+=1)Mt.release(t.v[e]),Mt.release(t.i[e]),Mt.release(t.o[e]),t.v[e]=null,t.i[e]=null,t.o[e]=null;t._length=0,t.c=!1}))).clone=function(t){var e,n=wt.newElement(),i=void 0===t._length?t.v.length:t._length;for(n.setLength(i),n.c=t.c,e=0;e<i;e+=1)n.setTripleAt(t.v[e][0],t.v[e][1],t.o[e][0],t.o[e][1],t.i[e][0],t.i[e][1],e);return n},wt),Ct=function(){var t={newShapeCollection:function(){return e?i[e-=1]:new at},release:function(t){var r,a=t._length;for(r=0;r<a;r+=1)xt.release(t.shapes[r]);t._length=0,e===n&&(i=bt.double(i),n*=2),i[e]=t,e+=1}},e=0,n=4,i=D(n);return t}(),kt=_t(8,(function(){return{lengths:[],totalLength:0}}),(function(t){var e,n=t.lengths.length;for(e=0;e<n;e+=1)St.release(t.lengths[e]);t.lengths.length=0})),St=_t(8,(function(){return{addedLength:0,percents:F("float32",f),lengths:F("float32",f)}})),At=function(){function t(t){for(var e,n=t.split("\r\n"),i={},r=0,a=0;a<n.length;a+=1)2===(e=n[a].split(":")).length&&(i[e[0]]=e[1].trim(),r+=1);if(0===r)throw new Error;return i}return function(e){for(var n=[],i=0;i<e.length;i+=1){var r=e[i],a={time:r.tm,duration:r.dr};try{a.payload=JSON.parse(e[i].cm)}catch(n){try{a.payload=t(e[i].cm)}catch(t){a.payload={name:e[i]}}}n.push(a)}return n}}();function Et(){}function Lt(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.svgElement=O("svg");var n="";if(e&&e.title){var i=O("title"),r=S();i.setAttribute("id",r),i.textContent=e.title,this.svgElement.appendChild(i),n+=r}if(e&&e.description){var a=O("desc"),s=S();a.setAttribute("id",s),a.textContent=e.description,this.svgElement.appendChild(a),n+=" "+s}n&&this.svgElement.setAttribute("aria-labelledby",n);var o=O("defs");this.svgElement.appendChild(o);var l=O("g");this.svgElement.appendChild(l),this.layerElement=l,this.renderConfig={preserveAspectRatio:e&&e.preserveAspectRatio||"xMidYMid meet",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||"xMidYMid slice",contentVisibility:e&&e.contentVisibility||"visible",progressiveLoad:e&&e.progressiveLoad||!1,hideOnTransparent:!(e&&!1===e.hideOnTransparent),viewBoxOnly:e&&e.viewBoxOnly||!1,viewBoxSize:e&&e.viewBoxSize||!1,className:e&&e.className||"",id:e&&e.id||"",focusable:e&&e.focusable,filterSize:{width:e&&e.filterSize&&e.filterSize.width||"100%",height:e&&e.filterSize&&e.filterSize.height||"100%",x:e&&e.filterSize&&e.filterSize.x||"0%",y:e&&e.filterSize&&e.filterSize.y||"0%"}},this.globalData={_mdf:!1,frameNum:-1,defs:o,renderConfig:this.renderConfig},this.elements=[],this.pendingElements=[],this.destroyed=!1,this.rendererType="svg"}function Pt(t,e,n){this.data=t,this.element=e,this.globalData=n,this.storedData=[],this.masksProperties=this.data.masksProperties||[],this.maskElement=null;var r,a,s=this.globalData.defs,o=this.masksProperties?this.masksProperties.length:0;this.viewData=D(o),this.solidPath="";var l,h,c,d,p,u,f=this.masksProperties,m=0,g=[],v=S(),w="clipPath",y="clip-path";for(r=0;r<o;r+=1)if(("a"!==f[r].mode&&"n"!==f[r].mode||f[r].inv||100!==f[r].o.k||f[r].o.x)&&(w="mask",y="mask"),"s"!==f[r].mode&&"i"!==f[r].mode||0!==m?c=null:((c=O("rect")).setAttribute("fill","#ffffff"),c.setAttribute("width",this.element.comp.data.w||0),c.setAttribute("height",this.element.comp.data.h||0),g.push(c)),a=O("path"),"n"===f[r].mode)this.viewData[r]={op:X.getProp(this.element,f[r].o,0,.01,this.element),prop:Y.getShapeProp(this.element,f[r],3),elem:a,lastPath:""},s.appendChild(a);else{var _;if(m+=1,a.setAttribute("fill","s"===f[r].mode?"#000000":"#ffffff"),a.setAttribute("clip-rule","nonzero"),0!==f[r].x.k?(w="mask",y="mask",u=X.getProp(this.element,f[r].x,0,null,this.element),_=S(),(d=O("filter")).setAttribute("id",_),(p=O("feMorphology")).setAttribute("operator","erode"),p.setAttribute("in","SourceGraphic"),p.setAttribute("radius","0"),d.appendChild(p),s.appendChild(d),a.setAttribute("stroke","s"===f[r].mode?"#000000":"#ffffff")):(p=null,u=null),this.storedData[r]={elem:a,x:u,expan:p,lastPath:"",lastOperator:"",filterId:_,lastRadius:0},"i"===f[r].mode){h=g.length;var b=O("g");for(l=0;l<h;l+=1)b.appendChild(g[l]);var M=O("mask");M.setAttribute("mask-type","alpha"),M.setAttribute("id",v+"_"+m),M.appendChild(a),s.appendChild(M),b.setAttribute("mask","url("+i+"#"+v+"_"+m+")"),g.length=0,g.push(b)}else g.push(a);f[r].inv&&!this.solidPath&&(this.solidPath=this.createLayerSolidPath()),this.viewData[r]={elem:a,lastPath:"",op:X.getProp(this.element,f[r].o,0,.01,this.element),prop:Y.getShapeProp(this.element,f[r],3),invRect:c},this.viewData[r].prop.k||this.drawPath(f[r],this.viewData[r].prop.v,this.viewData[r])}for(this.maskElement=O(w),o=g.length,r=0;r<o;r+=1)this.maskElement.appendChild(g[r]);m>0&&(this.maskElement.setAttribute("id",v),this.element.maskedElement.setAttribute(y,"url("+i+"#"+v+")"),s.appendChild(this.maskElement)),this.viewData.length&&this.element.addRenderableComponent(this)}function It(){}function Tt(){}function Ft(){}function Dt(){}function Ot(){}function Rt(t,e){this.elem=t,this.pos=e}function Nt(t,e){this.data=t,this.type=t.ty,this.d="",this.lvl=e,this._mdf=!1,this.closed=!0===t.hd,this.pElem=O("path"),this.msElem=null}function Bt(t,e,n){this.caches=[],this.styles=[],this.transformers=t,this.lStr="",this.sh=n,this.lvl=e,this._isAnimated=!!n.k;for(var i=0,r=t.length;i<r;){if(t[i].mProps.dynamicProperties.length){this._isAnimated=!0;break}i+=1}}function zt(t,e,n){this.transform={mProps:t,op:e,container:n},this.elements=[],this._isAnimated=this.transform.mProps.dynamicProperties.length||this.transform.op.effectsSequence.length}function Wt(t,e,n){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.o=X.getProp(t,e.o,0,.01,this),this.w=X.getProp(t,e.w,0,null,this),this.d=new st(t,e.d||{},"svg",this),this.c=X.getProp(t,e.c,1,255,this),this.style=n,this._isAnimated=!!this._isAnimated}function qt(t,e,n){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.o=X.getProp(t,e.o,0,.01,this),this.c=X.getProp(t,e.c,1,255,this),this.style=n}function jt(t,e,n){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.initGradientData(t,e,n)}function Vt(t,e,n){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.w=X.getProp(t,e.w,0,null,this),this.d=new st(t,e.d||{},"svg",this),this.initGradientData(t,e,n),this._isAnimated=!!this._isAnimated}function Ht(){this.it=[],this.prevViewData=[],this.gr=O("g")}Et.prototype.checkLayers=function(t){var e,n,i=this.layers.length;for(this.completeLayers=!0,e=i-1;e>=0;e-=1)this.elements[e]||(n=this.layers[e]).ip-n.st<=t-this.layers[e].st&&n.op-n.st>t-this.layers[e].st&&this.buildItem(e),this.completeLayers=!!this.elements[e]&&this.completeLayers;this.checkPendingElements()},Et.prototype.createItem=function(t){switch(t.ty){case 2:return this.createImage(t);case 0:return this.createComp(t);case 1:return this.createSolid(t);case 3:default:return this.createNull(t);case 4:return this.createShape(t);case 5:return this.createText(t);case 6:return this.createAudio(t);case 13:return this.createCamera(t);case 15:return this.createFootage(t)}},Et.prototype.createCamera=function(){throw new Error("You're using a 3d camera. Try the html renderer.")},Et.prototype.createAudio=function(t){return new te(t,this.globalData,this)},Et.prototype.createFootage=function(t){return new FootageElement(t,this.globalData,this)},Et.prototype.buildAllItems=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.buildItem(t);this.checkPendingElements()},Et.prototype.includeLayers=function(t){var e;this.completeLayers=!1;var n,i=t.length,r=this.layers.length;for(e=0;e<i;e+=1)for(n=0;n<r;){if(this.layers[n].id===t[e].id){this.layers[n]=t[e];break}n+=1}},Et.prototype.setProjectInterface=function(t){this.globalData.projectInterface=t},Et.prototype.initItems=function(){this.globalData.progressiveLoad||this.buildAllItems()},Et.prototype.buildElementParenting=function(t,e,n){for(var i=this.elements,r=this.layers,a=0,s=r.length;a<s;)r[a].ind==e&&(i[a]&&!0!==i[a]?(n.push(i[a]),i[a].setAsParent(),void 0!==r[a].parent?this.buildElementParenting(t,r[a].parent,n):t.setHierarchy(n)):(this.buildItem(a),this.addPendingElement(t))),a+=1},Et.prototype.addPendingElement=function(t){this.pendingElements.push(t)},Et.prototype.searchExtraCompositions=function(t){var e,n=t.length;for(e=0;e<n;e+=1)if(t[e].xt){var i=this.createComp(t[e]);i.initExpressions(),this.globalData.projectInterface.registerComposition(i)}},Et.prototype.setupGlobalData=function(t,e){this.globalData.fontManager=new $,this.globalData.fontManager.addChars(t.chars),this.globalData.fontManager.addFonts(t.fonts,e),this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem),this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem),this.globalData.imageLoader=this.animationItem.imagePreloader,this.globalData.audioController=this.animationItem.audioController,this.globalData.frameId=0,this.globalData.frameRate=t.fr,this.globalData.nm=t.nm,this.globalData.compSize={w:t.w,h:t.h}},H([Et],Lt),Lt.prototype.createNull=function(t){return new Gt(t,this.globalData,this)},Lt.prototype.createShape=function(t){return new ie(t,this.globalData,this)},Lt.prototype.createText=function(t){return new ne(t,this.globalData,this)},Lt.prototype.createImage=function(t){return new Yt(t,this.globalData,this)},Lt.prototype.createComp=function(t){return new ee(t,this.globalData,this)},Lt.prototype.createSolid=function(t){return new Qt(t,this.globalData,this)},Lt.prototype.configAnimation=function(t){this.svgElement.setAttribute("xmlns","http://www.w3.org/2000/svg"),this.renderConfig.viewBoxSize?this.svgElement.setAttribute("viewBox",this.renderConfig.viewBoxSize):this.svgElement.setAttribute("viewBox","0 0 "+t.w+" "+t.h),this.renderConfig.viewBoxOnly||(this.svgElement.setAttribute("width",t.w),this.svgElement.setAttribute("height",t.h),this.svgElement.style.width="100%",this.svgElement.style.height="100%",this.svgElement.style.transform="translate3d(0,0,0)",this.svgElement.style.contentVisibility=this.renderConfig.contentVisibility),this.renderConfig.className&&this.svgElement.setAttribute("class",this.renderConfig.className),this.renderConfig.id&&this.svgElement.setAttribute("id",this.renderConfig.id),void 0!==this.renderConfig.focusable&&this.svgElement.setAttribute("focusable",this.renderConfig.focusable),this.svgElement.setAttribute("preserveAspectRatio",this.renderConfig.preserveAspectRatio),this.animationItem.wrapper.appendChild(this.svgElement);var e=this.globalData.defs;this.setupGlobalData(t,e),this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.data=t;var n=O("clipPath"),r=O("rect");r.setAttribute("width",t.w),r.setAttribute("height",t.h),r.setAttribute("x",0),r.setAttribute("y",0);var a=S();n.setAttribute("id",a),n.appendChild(r),this.layerElement.setAttribute("clip-path","url("+i+"#"+a+")"),e.appendChild(n),this.layers=t.layers,this.elements=D(t.layers.length)},Lt.prototype.destroy=function(){var t;this.animationItem.wrapper&&(this.animationItem.wrapper.innerText=""),this.layerElement=null,this.globalData.defs=null;var e=this.layers?this.layers.length:0;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy();this.elements.length=0,this.destroyed=!0,this.animationItem=null},Lt.prototype.updateContainerSize=function(){},Lt.prototype.buildItem=function(t){var n=this.elements;if(!n[t]&&99!==this.layers[t].ty){n[t]=!0;var i=this.createItem(this.layers[t]);n[t]=i,e&&(0===this.layers[t].ty&&this.globalData.projectInterface.registerComposition(i),i.initExpressions()),this.appendElementInPos(i,t),this.layers[t].tt&&(this.elements[t-1]&&!0!==this.elements[t-1]?i.setMatte(n[t-1].layerId):(this.buildItem(t-1),this.addPendingElement(i)))}},Lt.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){var t=this.pendingElements.pop();if(t.checkParenting(),t.data.tt)for(var e=0,n=this.elements.length;e<n;){if(this.elements[e]===t){t.setMatte(this.elements[e-1].layerId);break}e+=1}}},Lt.prototype.renderFrame=function(t){if(this.renderedFrame!==t&&!this.destroyed){var e;null===t?t=this.renderedFrame:this.renderedFrame=t,this.globalData.frameNum=t,this.globalData.frameId+=1,this.globalData.projectInterface.currentFrame=t,this.globalData._mdf=!1;var n=this.layers.length;for(this.completeLayers||this.checkLayers(t),e=n-1;e>=0;e-=1)(this.completeLayers||this.elements[e])&&this.elements[e].prepareFrame(t-this.layers[e].st);if(this.globalData._mdf)for(e=0;e<n;e+=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame()}},Lt.prototype.appendElementInPos=function(t,e){var n=t.getBaseElement();if(n){for(var i,r=0;r<e;)this.elements[r]&&!0!==this.elements[r]&&this.elements[r].getBaseElement()&&(i=this.elements[r].getBaseElement()),r+=1;i?this.layerElement.insertBefore(n,i):this.layerElement.appendChild(n)}},Lt.prototype.hide=function(){this.layerElement.style.display="none"},Lt.prototype.show=function(){this.layerElement.style.display="block"},Pt.prototype.getMaskProperty=function(t){return this.viewData[t].prop},Pt.prototype.renderFrame=function(t){var e,n=this.element.finalTransform.mat,r=this.masksProperties.length;for(e=0;e<r;e+=1)if((this.viewData[e].prop._mdf||t)&&this.drawPath(this.masksProperties[e],this.viewData[e].prop.v,this.viewData[e]),(this.viewData[e].op._mdf||t)&&this.viewData[e].elem.setAttribute("fill-opacity",this.viewData[e].op.v),"n"!==this.masksProperties[e].mode&&(this.viewData[e].invRect&&(this.element.finalTransform.mProp._mdf||t)&&this.viewData[e].invRect.setAttribute("transform",n.getInverseMatrix().to2dCSS()),this.storedData[e].x&&(this.storedData[e].x._mdf||t))){var a=this.storedData[e].expan;this.storedData[e].x.v<0?("erode"!==this.storedData[e].lastOperator&&(this.storedData[e].lastOperator="erode",this.storedData[e].elem.setAttribute("filter","url("+i+"#"+this.storedData[e].filterId+")")),a.setAttribute("radius",-this.storedData[e].x.v)):("dilate"!==this.storedData[e].lastOperator&&(this.storedData[e].lastOperator="dilate",this.storedData[e].elem.setAttribute("filter",null)),this.storedData[e].elem.setAttribute("stroke-width",2*this.storedData[e].x.v))}},Pt.prototype.getMaskelement=function(){return this.maskElement},Pt.prototype.createLayerSolidPath=function(){var t="M0,0 ";return t+=" h"+this.globalData.compSize.w,t+=" v"+this.globalData.compSize.h,(t+=" h-"+this.globalData.compSize.w)+" v-"+this.globalData.compSize.h+" "},Pt.prototype.drawPath=function(t,e,n){var i,r,a=" M"+e.v[0][0]+","+e.v[0][1];for(r=e._length,i=1;i<r;i+=1)a+=" C"+e.o[i-1][0]+","+e.o[i-1][1]+" "+e.i[i][0]+","+e.i[i][1]+" "+e.v[i][0]+","+e.v[i][1];if(e.c&&r>1&&(a+=" C"+e.o[i-1][0]+","+e.o[i-1][1]+" "+e.i[0][0]+","+e.i[0][1]+" "+e.v[0][0]+","+e.v[0][1]),n.lastPath!==a){var s="";n.elem&&(e.c&&(s=t.inv?this.solidPath+a:a),n.elem.setAttribute("d",s)),n.lastPath=a}},Pt.prototype.destroy=function(){this.element=null,this.globalData=null,this.maskElement=null,this.data=null,this.masksProperties=null},It.prototype={initHierarchy:function(){this.hierarchy=[],this._isParent=!1,this.checkParenting()},setHierarchy:function(t){this.hierarchy=t},setAsParent:function(){this._isParent=!0},checkParenting:function(){void 0!==this.data.parent&&this.comp.buildElementParenting(this,this.data.parent,[])}},Tt.prototype={initFrame:function(){this._isFirstFrame=!1,this.dynamicProperties=[],this._mdf=!1},prepareProperties:function(t,e){var n,i=this.dynamicProperties.length;for(n=0;n<i;n+=1)(e||this._isParent&&"transform"===this.dynamicProperties[n].propType)&&(this.dynamicProperties[n].getValue(),this.dynamicProperties[n]._mdf&&(this.globalData._mdf=!0,this._mdf=!0))},addDynamicProperty:function(t){-1===this.dynamicProperties.indexOf(t)&&this.dynamicProperties.push(t)}},Ft.prototype={initTransform:function(){this.finalTransform={mProp:this.data.ks?K.getTransformProperty(this,this.data.ks,this):{o:0},_matMdf:!1,_opMdf:!1,mat:new j},this.data.ao&&(this.finalTransform.mProp.autoOriented=!0),this.data.ty},renderTransform:function(){if(this.finalTransform._opMdf=this.finalTransform.mProp.o._mdf||this._isFirstFrame,this.finalTransform._matMdf=this.finalTransform.mProp._mdf||this._isFirstFrame,this.hierarchy){var t,e=this.finalTransform.mat,n=0,i=this.hierarchy.length;if(!this.finalTransform._matMdf)for(;n<i;){if(this.hierarchy[n].finalTransform.mProp._mdf){this.finalTransform._matMdf=!0;break}n+=1}if(this.finalTransform._matMdf)for(t=this.finalTransform.mProp.v.props,e.cloneFromProps(t),n=0;n<i;n+=1)t=this.hierarchy[n].finalTransform.mProp.v.props,e.transform(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])}},globalToLocal:function(t){var e=[];e.push(this.finalTransform);for(var n,i=!0,r=this.comp;i;)r.finalTransform?(r.data.hasMask&&e.splice(0,0,r.finalTransform),r=r.comp):i=!1;var a,s=e.length;for(n=0;n<s;n+=1)a=e[n].mat.applyToPointArray(0,0,0),t=[t[0]-a[0],t[1]-a[1],0];return t},mHelper:new j},Dt.prototype={initRenderable:function(){this.isInRange=!1,this.hidden=!1,this.isTransparent=!1,this.renderableComponents=[]},addRenderableComponent:function(t){-1===this.renderableComponents.indexOf(t)&&this.renderableComponents.push(t)},removeRenderableComponent:function(t){-1!==this.renderableComponents.indexOf(t)&&this.renderableComponents.splice(this.renderableComponents.indexOf(t),1)},prepareRenderableFrame:function(t){this.checkLayerLimits(t)},checkTransparency:function(){this.finalTransform.mProp.o.v<=0?!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent&&(this.isTransparent=!0,this.hide()):this.isTransparent&&(this.isTransparent=!1,this.show())},checkLayerLimits:function(t){this.data.ip-this.data.st<=t&&this.data.op-this.data.st>t?!0!==this.isInRange&&(this.globalData._mdf=!0,this._mdf=!0,this.isInRange=!0,this.show()):!1!==this.isInRange&&(this.globalData._mdf=!0,this.isInRange=!1,this.hide())},renderRenderable:function(){var t,e=this.renderableComponents.length;for(t=0;t<e;t+=1)this.renderableComponents[t].renderFrame(this._isFirstFrame)},sourceRectAtTime:function(){return{top:0,left:0,width:100,height:100}},getLayerSize:function(){return 5===this.data.ty?{w:this.data.textData.width,h:this.data.textData.height}:{w:this.data.width,h:this.data.height}}},H([Dt,function(t){function e(){}return e.prototype=t,e}({initElement:function(t,e,n){this.initFrame(),this.initBaseData(t,e,n),this.initTransform(t,e,n),this.initHierarchy(),this.initRenderable(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),this.createContent(),this.hide()},hide:function(){this.hidden||this.isInRange&&!this.isTransparent||((this.baseElement||this.layerElement).style.display="none",this.hidden=!0)},show:function(){this.isInRange&&!this.isTransparent&&(this.data.hd||((this.baseElement||this.layerElement).style.display="block"),this.hidden=!1,this._isFirstFrame=!0)},renderFrame:function(){this.data.hd||this.hidden||(this.renderTransform(),this.renderRenderable(),this.renderElement(),this.renderInnerContent(),this._isFirstFrame&&(this._isFirstFrame=!1))},renderInnerContent:function(){},prepareFrame:function(t){this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange),this.checkTransparency()},destroy:function(){this.innerElem=null,this.destroyBaseElement()}})],Ot),Nt.prototype.reset=function(){this.d="",this._mdf=!1},Bt.prototype.setAsAnimated=function(){this._isAnimated=!0},H([N],Wt),H([N],qt),jt.prototype.initGradientData=function(t,e,n){this.o=X.getProp(t,e.o,0,.01,this),this.s=X.getProp(t,e.s,1,null,this),this.e=X.getProp(t,e.e,1,null,this),this.h=X.getProp(t,e.h||{k:0},0,.01,this),this.a=X.getProp(t,e.a||{k:0},0,m,this),this.g=new ot(t,e.g,this),this.style=n,this.stops=[],this.setGradientData(n.pElem,e),this.setGradientOpacity(e,n),this._isAnimated=!!this._isAnimated},jt.prototype.setGradientData=function(t,e){var n=S(),r=O(1===e.t?"linearGradient":"radialGradient");r.setAttribute("id",n),r.setAttribute("spreadMethod","pad"),r.setAttribute("gradientUnits","userSpaceOnUse");var a,s,o,l=[];for(o=4*e.g.p,s=0;s<o;s+=4)a=O("stop"),r.appendChild(a),l.push(a);t.setAttribute("gf"===e.ty?"fill":"stroke","url("+i+"#"+n+")"),this.gf=r,this.cst=l},jt.prototype.setGradientOpacity=function(t,e){if(this.g._hasOpacity&&!this.g._collapsable){var n,r,a,s=O("mask"),o=O("path");s.appendChild(o);var l=S(),h=S();s.setAttribute("id",h);var c=O(1===t.t?"linearGradient":"radialGradient");c.setAttribute("id",l),c.setAttribute("spreadMethod","pad"),c.setAttribute("gradientUnits","userSpaceOnUse"),a=t.g.k.k[0].s?t.g.k.k[0].s.length:t.g.k.k.length;var d=this.stops;for(r=4*t.g.p;r<a;r+=2)(n=O("stop")).setAttribute("stop-color","rgb(255,255,255)"),c.appendChild(n),d.push(n);o.setAttribute("gf"===t.ty?"fill":"stroke","url("+i+"#"+l+")"),"gs"===t.ty&&(o.setAttribute("stroke-linecap",W[t.lc||2]),o.setAttribute("stroke-linejoin",q[t.lj||2]),1===t.lj&&o.setAttribute("stroke-miterlimit",t.ml)),this.of=c,this.ms=s,this.ost=d,this.maskId=h,e.msElem=o}},H([N],jt),H([jt,N],Vt);var Zt=function(){var t=new j,e=new j;function n(t,e,n){(n||e.transform.op._mdf)&&e.transform.container.setAttribute("opacity",e.transform.op.v),(n||e.transform.mProps._mdf)&&e.transform.container.setAttribute("transform",e.transform.mProps.v.to2dCSS())}function i(n,i,r){var a,s,o,l,h,c,d,p,u,f,m,g=i.styles.length,v=i.lvl;for(c=0;c<g;c+=1){if(l=i.sh._mdf||r,i.styles[c].lvl<v){for(p=e.reset(),f=v-i.styles[c].lvl,m=i.transformers.length-1;!l&&f>0;)l=i.transformers[m].mProps._mdf||l,f-=1,m-=1;if(l)for(f=v-i.styles[c].lvl,m=i.transformers.length-1;f>0;)u=i.transformers[m].mProps.v.props,p.transform(u[0],u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],u[9],u[10],u[11],u[12],u[13],u[14],u[15]),f-=1,m-=1}else p=t;if(s=(d=i.sh.paths)._length,l){for(o="",a=0;a<s;a+=1)(h=d.shapes[a])&&h._length&&(o+=ht(h,h._length,h.c,p));i.caches[c]=o}else o=i.caches[c];i.styles[c].d+=!0===n.hd?"":o,i.styles[c]._mdf=l||i.styles[c]._mdf}}function r(t,e,n){var i=e.style;(e.c._mdf||n)&&i.pElem.setAttribute("fill","rgb("+d(e.c.v[0])+","+d(e.c.v[1])+","+d(e.c.v[2])+")"),(e.o._mdf||n)&&i.pElem.setAttribute("fill-opacity",e.o.v)}function a(t,e,n){s(t,e,n),o(0,e,n)}function s(t,e,n){var i,r,a,s,o,l=e.gf,h=e.g._hasOpacity,c=e.s.v,d=e.e.v;if(e.o._mdf||n){var p="gf"===t.ty?"fill-opacity":"stroke-opacity";e.style.pElem.setAttribute(p,e.o.v)}if(e.s._mdf||n){var u=1===t.t?"x1":"cx",f="x1"===u?"y1":"cy";l.setAttribute(u,c[0]),l.setAttribute(f,c[1]),h&&!e.g._collapsable&&(e.of.setAttribute(u,c[0]),e.of.setAttribute(f,c[1]))}if(e.g._cmdf||n){i=e.cst;var m=e.g.c;for(a=i.length,r=0;r<a;r+=1)(s=i[r]).setAttribute("offset",m[4*r]+"%"),s.setAttribute("stop-color","rgb("+m[4*r+1]+","+m[4*r+2]+","+m[4*r+3]+")")}if(h&&(e.g._omdf||n)){var g=e.g.o;for(a=(i=e.g._collapsable?e.cst:e.ost).length,r=0;r<a;r+=1)s=i[r],e.g._collapsable||s.setAttribute("offset",g[2*r]+"%"),s.setAttribute("stop-opacity",g[2*r+1])}if(1===t.t)(e.e._mdf||n)&&(l.setAttribute("x2",d[0]),l.setAttribute("y2",d[1]),h&&!e.g._collapsable&&(e.of.setAttribute("x2",d[0]),e.of.setAttribute("y2",d[1])));else if((e.s._mdf||e.e._mdf||n)&&(o=Math.sqrt(Math.pow(c[0]-d[0],2)+Math.pow(c[1]-d[1],2)),l.setAttribute("r",o),h&&!e.g._collapsable&&e.of.setAttribute("r",o)),e.e._mdf||e.h._mdf||e.a._mdf||n){o||(o=Math.sqrt(Math.pow(c[0]-d[0],2)+Math.pow(c[1]-d[1],2)));var v=Math.atan2(d[1]-c[1],d[0]-c[0]),w=e.h.v;w>=1?w=.99:w<=-1&&(w=-.99);var y=o*w,_=Math.cos(v+e.a.v)*y+c[0],b=Math.sin(v+e.a.v)*y+c[1];l.setAttribute("fx",_),l.setAttribute("fy",b),h&&!e.g._collapsable&&(e.of.setAttribute("fx",_),e.of.setAttribute("fy",b))}}function o(t,e,n){var i=e.style,r=e.d;r&&(r._mdf||n)&&r.dashStr&&(i.pElem.setAttribute("stroke-dasharray",r.dashStr),i.pElem.setAttribute("stroke-dashoffset",r.dashoffset[0])),e.c&&(e.c._mdf||n)&&i.pElem.setAttribute("stroke","rgb("+d(e.c.v[0])+","+d(e.c.v[1])+","+d(e.c.v[2])+")"),(e.o._mdf||n)&&i.pElem.setAttribute("stroke-opacity",e.o.v),(e.w._mdf||n)&&(i.pElem.setAttribute("stroke-width",e.w.v),i.msElem&&i.msElem.setAttribute("stroke-width",e.w.v))}return{createRenderFunction:function(t){switch(t.ty){case"fl":return r;case"gf":return s;case"gs":return a;case"st":return o;case"sh":case"el":case"rc":case"sr":return i;case"tr":return n;default:return null}}}}();function Ut(){}function Gt(t,e,n){this.initFrame(),this.initBaseData(t,e,n),this.initFrame(),this.initTransform(t,e,n),this.initHierarchy()}function $t(){}function Xt(){}function Kt(){}function Jt(){}function Yt(t,e,n){this.assetData=e.getAssetData(t.refId),this.initElement(t,e,n),this.sourceRect={top:0,left:0,width:this.assetData.w,height:this.assetData.h}}function Qt(t,e,n){this.initElement(t,e,n)}function te(t,e,n){this.initFrame(),this.initRenderable(),this.assetData=e.getAssetData(t.refId),this.initBaseData(t,e,n),this._isPlaying=!1,this._canPlay=!1;var i=this.globalData.getAssetsPath(this.assetData);this.audio=this.globalData.audioController.createAudio(i),this._currentTime=0,this.globalData.audioController.addAudio(this),this.tm=t.tm?X.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0}}function ee(t,e,n){this.layers=t.layers,this.supports3d=!0,this.completeLayers=!1,this.pendingElements=[],this.elements=this.layers?D(this.layers.length):[],this.initElement(t,e,n),this.tm=t.tm?X.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0}}function ne(t,e,n){this.textSpans=[],this.renderType="svg",this.initElement(t,e,n)}function ie(t,e,n){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.shapeModifiers=[],this.itemsData=[],this.processedElements=[],this.animatedContents=[],this.initElement(t,e,n),this.prevViewData=[]}function re(t,e){this.initialized=!1,this.filterManager=e,this.elem=t,this.paths=[]}function ae(t,e){this.filterManager=e;var n=this.filterManager.effectElements,i=O("feComponentTransfer");(n[10].p.k||0!==n[10].p.v||n[11].p.k||1!==n[11].p.v||n[12].p.k||1!==n[12].p.v||n[13].p.k||0!==n[13].p.v||n[14].p.k||1!==n[14].p.v)&&(this.feFuncR=this.createFeFunc("feFuncR",i)),(n[17].p.k||0!==n[17].p.v||n[18].p.k||1!==n[18].p.v||n[19].p.k||1!==n[19].p.v||n[20].p.k||0!==n[20].p.v||n[21].p.k||1!==n[21].p.v)&&(this.feFuncG=this.createFeFunc("feFuncG",i)),(n[24].p.k||0!==n[24].p.v||n[25].p.k||1!==n[25].p.v||n[26].p.k||1!==n[26].p.v||n[27].p.k||0!==n[27].p.v||n[28].p.k||1!==n[28].p.v)&&(this.feFuncB=this.createFeFunc("feFuncB",i)),(n[31].p.k||0!==n[31].p.v||n[32].p.k||1!==n[32].p.v||n[33].p.k||1!==n[33].p.v||n[34].p.k||0!==n[34].p.v||n[35].p.k||1!==n[35].p.v)&&(this.feFuncA=this.createFeFunc("feFuncA",i)),(this.feFuncR||this.feFuncG||this.feFuncB||this.feFuncA)&&(i.setAttribute("color-interpolation-filters","sRGB"),t.appendChild(i),i=O("feComponentTransfer")),(n[3].p.k||0!==n[3].p.v||n[4].p.k||1!==n[4].p.v||n[5].p.k||1!==n[5].p.v||n[6].p.k||0!==n[6].p.v||n[7].p.k||1!==n[7].p.v)&&(i.setAttribute("color-interpolation-filters","sRGB"),t.appendChild(i),this.feFuncRComposed=this.createFeFunc("feFuncR",i),this.feFuncGComposed=this.createFeFunc("feFuncG",i),this.feFuncBComposed=this.createFeFunc("feFuncB",i))}Ut.prototype={checkMasks:function(){if(!this.data.hasMask)return!1;for(var t=0,e=this.data.masksProperties.length;t<e;){if("n"!==this.data.masksProperties[t].mode&&!1!==this.data.masksProperties[t].cl)return!0;t+=1}return!1},initExpressions:function(){this.layerInterface=LayerExpressionInterface(this),this.data.hasMask&&this.maskManager&&this.layerInterface.registerMaskInterface(this.maskManager);var t=EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(t),0===this.data.ty||this.data.xt?this.compInterface=CompExpressionInterface(this):4===this.data.ty?(this.layerInterface.shapeInterface=ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface),this.layerInterface.content=this.layerInterface.shapeInterface):5===this.data.ty&&(this.layerInterface.textInterface=TextExpressionInterface(this),this.layerInterface.text=this.layerInterface.textInterface)},setBlendMode:function(){var t=z(this.data.bm);(this.baseElement||this.layerElement).style["mix-blend-mode"]=t},initBaseData:function(t,e,n){this.globalData=e,this.comp=n,this.data=t,this.layerId=S(),this.data.sr||(this.data.sr=1),this.effectsManager=new de(this.data,this,this.dynamicProperties)},getType:function(){return this.type},sourceRectAtTime:function(){}},Gt.prototype.prepareFrame=function(t){this.prepareProperties(t,!0)},Gt.prototype.renderFrame=function(){},Gt.prototype.getBaseElement=function(){return null},Gt.prototype.destroy=function(){},Gt.prototype.sourceRectAtTime=function(){},Gt.prototype.hide=function(){},H([Ut,Ft,It,Tt],Gt),$t.prototype={initRendererElement:function(){this.layerElement=O("g")},createContainerElements:function(){this.matteElement=O("g"),this.transformedElement=this.layerElement,this.maskedElement=this.layerElement,this._sizeChanged=!1;var t,e,n,r=null;if(this.data.td){if(3==this.data.td||1==this.data.td){var a=O("mask");a.setAttribute("id",this.layerId),a.setAttribute("mask-type",3==this.data.td?"luminance":"alpha"),a.appendChild(this.layerElement),r=a,this.globalData.defs.appendChild(a),pt.maskType||1!=this.data.td||(a.setAttribute("mask-type","luminance"),t=S(),e=ut.createFilter(t),this.globalData.defs.appendChild(e),e.appendChild(ut.createAlphaToLuminanceFilter()),(n=O("g")).appendChild(this.layerElement),r=n,a.appendChild(n),n.setAttribute("filter","url("+i+"#"+t+")"))}else if(2==this.data.td){var s=O("mask");s.setAttribute("id",this.layerId),s.setAttribute("mask-type","alpha");var o=O("g");s.appendChild(o),t=S(),e=ut.createFilter(t);var l=O("feComponentTransfer");l.setAttribute("in","SourceGraphic"),e.appendChild(l);var h=O("feFuncA");h.setAttribute("type","table"),h.setAttribute("tableValues","1.0 0.0"),l.appendChild(h),this.globalData.defs.appendChild(e);var c=O("rect");c.setAttribute("width",this.comp.data.w),c.setAttribute("height",this.comp.data.h),c.setAttribute("x","0"),c.setAttribute("y","0"),c.setAttribute("fill","#ffffff"),c.setAttribute("opacity","0"),o.setAttribute("filter","url("+i+"#"+t+")"),o.appendChild(c),o.appendChild(this.layerElement),r=o,pt.maskType||(s.setAttribute("mask-type","luminance"),e.appendChild(ut.createAlphaToLuminanceFilter()),n=O("g"),o.appendChild(c),n.appendChild(this.layerElement),r=n,o.appendChild(n)),this.globalData.defs.appendChild(s)}}else this.data.tt?(this.matteElement.appendChild(this.layerElement),r=this.matteElement,this.baseElement=this.matteElement):this.baseElement=this.layerElement;if(this.data.ln&&this.layerElement.setAttribute("id",this.data.ln),this.data.cl&&this.layerElement.setAttribute("class",this.data.cl),0===this.data.ty&&!this.data.hd){var d=O("clipPath"),p=O("path");p.setAttribute("d","M0,0 L"+this.data.w+",0 L"+this.data.w+","+this.data.h+" L0,"+this.data.h+"z");var u=S();if(d.setAttribute("id",u),d.appendChild(p),this.globalData.defs.appendChild(d),this.checkMasks()){var f=O("g");f.setAttribute("clip-path","url("+i+"#"+u+")"),f.appendChild(this.layerElement),this.transformedElement=f,r?r.appendChild(this.transformedElement):this.baseElement=this.transformedElement}else this.layerElement.setAttribute("clip-path","url("+i+"#"+u+")")}0!==this.data.bm&&this.setBlendMode()},renderElement:function(){this.finalTransform._matMdf&&this.transformedElement.setAttribute("transform",this.finalTransform.mat.to2dCSS()),this.finalTransform._opMdf&&this.transformedElement.setAttribute("opacity",this.finalTransform.mProp.o.v)},destroyBaseElement:function(){this.layerElement=null,this.matteElement=null,this.maskManager.destroy()},getBaseElement:function(){return this.data.hd?null:this.baseElement},createRenderableComponents:function(){this.maskManager=new Pt(this.data,this,this.globalData),this.renderableEffectsManager=new le(this)},setMatte:function(t){this.matteElement&&this.matteElement.setAttribute("mask","url("+i+"#"+t+")")}},Xt.prototype={addShapeToModifiers:function(t){var e,n=this.shapeModifiers.length;for(e=0;e<n;e+=1)this.shapeModifiers[e].addShape(t)},isShapeInAnimatedModifiers:function(t){for(var e=this.shapeModifiers.length;0<e;)if(this.shapeModifiers[0].isAnimatedWithShape(t))return!0;return!1},renderModifiers:function(){if(this.shapeModifiers.length){var t,e=this.shapes.length;for(t=0;t<e;t+=1)this.shapes[t].sh.reset();for(t=(e=this.shapeModifiers.length)-1;t>=0&&!this.shapeModifiers[t].processShapes(this._isFirstFrame);t-=1);}},searchProcessedElement:function(t){for(var e=this.processedElements,n=0,i=e.length;n<i;){if(e[n].elem===t)return e[n].pos;n+=1}return 0},addProcessedElement:function(t,e){for(var n=this.processedElements,i=n.length;i;)if(n[i-=1].elem===t)return void(n[i].pos=e);n.push(new Rt(t,e))},prepareFrame:function(t){this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange)}},Kt.prototype.initElement=function(t,e,n){this.lettersChangedFlag=!0,this.initFrame(),this.initBaseData(t,e,n),this.textProperty=new vt(this,t.t,this.dynamicProperties),this.textAnimator=new ft(t.t,this.renderType,this),this.initTransform(t,e,n),this.initHierarchy(),this.initRenderable(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),this.createContent(),this.hide(),this.textAnimator.searchProperties(this.dynamicProperties)},Kt.prototype.prepareFrame=function(t){this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange),(this.textProperty._mdf||this.textProperty._isFirstFrame)&&(this.buildNewText(),this.textProperty._isFirstFrame=!1,this.textProperty._mdf=!1)},Kt.prototype.createPathShape=function(t,e){var n,i,r=e.length,a="";for(n=0;n<r;n+=1)i=e[n].ks.k,a+=ht(i,i.i.length,!0,t);return a},Kt.prototype.updateDocumentData=function(t,e){this.textProperty.updateDocumentData(t,e)},Kt.prototype.canResizeFont=function(t){this.textProperty.canResizeFont(t)},Kt.prototype.setMinimumFontSize=function(t){this.textProperty.setMinimumFontSize(t)},Kt.prototype.applyTextPropertiesToMatrix=function(t,e,n,i,r){switch(t.ps&&e.translate(t.ps[0],t.ps[1]+t.ascent,0),e.translate(0,-t.ls,0),t.j){case 1:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[n]),0,0);break;case 2:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[n])/2,0,0)}e.translate(i,r,0)},Kt.prototype.buildColor=function(t){return"rgb("+Math.round(255*t[0])+","+Math.round(255*t[1])+","+Math.round(255*t[2])+")"},Kt.prototype.emptyProp=new gt,Kt.prototype.destroy=function(){},H([Ut,Ft,It,Tt,Ot],Jt),Jt.prototype.initElement=function(t,e,n){this.initFrame(),this.initBaseData(t,e,n),this.initTransform(t,e,n),this.initRenderable(),this.initHierarchy(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),!this.data.xt&&e.progressiveLoad||this.buildAllItems(),this.hide()},Jt.prototype.prepareFrame=function(t){if(this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange),this.isInRange||this.data.xt){if(this.tm._placeholder)this.renderedFrame=t/this.data.sr;else{var e=this.tm.v;e===this.data.op&&(e=this.data.op-1),this.renderedFrame=e}var n,i=this.elements.length;for(this.completeLayers||this.checkLayers(this.renderedFrame),n=i-1;n>=0;n-=1)(this.completeLayers||this.elements[n])&&(this.elements[n].prepareFrame(this.renderedFrame-this.layers[n].st),this.elements[n]._mdf&&(this._mdf=!0))}},Jt.prototype.renderInnerContent=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)(this.completeLayers||this.elements[t])&&this.elements[t].renderFrame()},Jt.prototype.setElements=function(t){this.elements=t},Jt.prototype.getElements=function(){return this.elements},Jt.prototype.destroyElements=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy()},Jt.prototype.destroy=function(){this.destroyElements(),this.destroyBaseElement()},H([Ut,Ft,$t,It,Tt,Ot],Yt),Yt.prototype.createContent=function(){var t=this.globalData.getAssetsPath(this.assetData);this.innerElem=O("image"),this.innerElem.setAttribute("width",this.assetData.w+"px"),this.innerElem.setAttribute("height",this.assetData.h+"px"),this.innerElem.setAttribute("preserveAspectRatio",this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio),this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink","href",t),this.layerElement.appendChild(this.innerElem)},Yt.prototype.sourceRectAtTime=function(){return this.sourceRect},H([Yt],Qt),Qt.prototype.createContent=function(){var t=O("rect");t.setAttribute("width",this.data.sw),t.setAttribute("height",this.data.sh),t.setAttribute("fill",this.data.sc),this.layerElement.appendChild(t)},te.prototype.prepareFrame=function(t){if(this.prepareRenderableFrame(t,!0),this.prepareProperties(t,!0),this.tm._placeholder)this._currentTime=t/this.data.sr;else{var e=this.tm.v;this._currentTime=e}},H([Dt,Ut,Tt],te),te.prototype.renderFrame=function(){this.isInRange&&this._canPlay&&(this._isPlaying?(!this.audio.playing()||Math.abs(this._currentTime/this.globalData.frameRate-this.audio.seek())>.1)&&this.audio.seek(this._currentTime/this.globalData.frameRate):(this.audio.play(),this.audio.seek(this._currentTime/this.globalData.frameRate),this._isPlaying=!0))},te.prototype.show=function(){},te.prototype.hide=function(){this.audio.pause(),this._isPlaying=!1},te.prototype.pause=function(){this.audio.pause(),this._isPlaying=!1,this._canPlay=!1},te.prototype.resume=function(){this._canPlay=!0},te.prototype.setRate=function(t){this.audio.rate(t)},te.prototype.volume=function(t){this.audio.volume(t)},te.prototype.getBaseElement=function(){return null},te.prototype.destroy=function(){},te.prototype.sourceRectAtTime=function(){},te.prototype.initExpressions=function(){},H([Lt,Jt,$t],ee),H([Ut,Ft,$t,It,Tt,Ot,Kt],ne),ne.prototype.createContent=function(){this.data.singleShape&&!this.globalData.fontManager.chars&&(this.textContainer=O("text"))},ne.prototype.buildTextContents=function(t){for(var e=0,n=t.length,i=[],r="";e<n;)t[e]===String.fromCharCode(13)||t[e]===String.fromCharCode(3)?(i.push(r),r=""):r+=t[e],e+=1;return i.push(r),i},ne.prototype.buildNewText=function(){var t,e,n=this.textProperty.currentData;this.renderedLetters=D(n?n.l.length:0),n.fc?this.layerElement.setAttribute("fill",this.buildColor(n.fc)):this.layerElement.setAttribute("fill","rgba(0,0,0,0)"),n.sc&&(this.layerElement.setAttribute("stroke",this.buildColor(n.sc)),this.layerElement.setAttribute("stroke-width",n.sw)),this.layerElement.setAttribute("font-size",n.finalSize);var i=this.globalData.fontManager.getFontByName(n.f);if(i.fClass)this.layerElement.setAttribute("class",i.fClass);else{this.layerElement.setAttribute("font-family",i.fFamily);var r=n.fWeight,a=n.fStyle;this.layerElement.setAttribute("font-style",a),this.layerElement.setAttribute("font-weight",r)}this.layerElement.setAttribute("aria-label",n.t);var s,o=n.l||[],l=!!this.globalData.fontManager.chars;e=o.length;var h,c=this.mHelper,d="",p=this.data.singleShape,u=0,f=0,m=!0,g=.001*n.tr*n.finalSize;if(!p||l||n.sz){var v,w,y=this.textSpans.length;for(t=0;t<e;t+=1)l&&p&&0!==t||(s=y>t?this.textSpans[t]:O(l?"path":"text"),y<=t&&(s.setAttribute("stroke-linecap","butt"),s.setAttribute("stroke-linejoin","round"),s.setAttribute("stroke-miterlimit","4"),this.textSpans[t]=s,this.layerElement.appendChild(s)),s.style.display="inherit"),c.reset(),c.scale(n.finalSize/100,n.finalSize/100),p&&(o[t].n&&(u=-g,f+=n.yOffset,f+=m?1:0,m=!1),this.applyTextPropertiesToMatrix(n,c,o[t].line,u,f),u+=o[t].l||0,u+=g),l?(h=(v=(w=this.globalData.fontManager.getCharData(n.finalText[t],i.fStyle,this.globalData.fontManager.getFontByName(n.f).fFamily))&&w.data||{}).shapes?v.shapes[0].it:[],p?d+=this.createPathShape(c,h):s.setAttribute("d",this.createPathShape(c,h))):(p&&s.setAttribute("transform","translate("+c.props[12]+","+c.props[13]+")"),s.textContent=o[t].val,s.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"));p&&s&&s.setAttribute("d",d)}else{var _=this.textContainer,b="start";switch(n.j){case 1:b="end";break;case 2:b="middle";break;default:b="start"}_.setAttribute("text-anchor",b),_.setAttribute("letter-spacing",g);var M=this.buildTextContents(n.finalText);for(e=M.length,f=n.ps?n.ps[1]+n.ascent:0,t=0;t<e;t+=1)(s=this.textSpans[t]||O("tspan")).textContent=M[t],s.setAttribute("x",0),s.setAttribute("y",f),s.style.display="inherit",_.appendChild(s),this.textSpans[t]=s,f+=n.finalLineHeight;this.layerElement.appendChild(_)}for(;t<this.textSpans.length;)this.textSpans[t].style.display="none",t+=1;this._sizeChanged=!0},ne.prototype.sourceRectAtTime=function(){if(this.prepareFrame(this.comp.renderedFrame-this.data.st),this.renderInnerContent(),this._sizeChanged){this._sizeChanged=!1;var t=this.layerElement.getBBox();this.bbox={top:t.y,left:t.x,width:t.width,height:t.height}}return this.bbox},ne.prototype.renderInnerContent=function(){if(!this.data.singleShape&&(this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag),this.lettersChangedFlag||this.textAnimator.lettersChangedFlag)){var t,e;this._sizeChanged=!0;var n,i,r=this.textAnimator.renderedLetters,a=this.textProperty.currentData.l;for(e=a.length,t=0;t<e;t+=1)a[t].n||(n=r[t],i=this.textSpans[t],n._mdf.m&&i.setAttribute("transform",n.m),n._mdf.o&&i.setAttribute("opacity",n.o),n._mdf.sw&&i.setAttribute("stroke-width",n.sw),n._mdf.sc&&i.setAttribute("stroke",n.sc),n._mdf.fc&&i.setAttribute("fill",n.fc))}},H([Ut,Ft,$t,Xt,It,Tt,Ot],ie),ie.prototype.initSecondaryElement=function(){},ie.prototype.identityMatrix=new j,ie.prototype.buildExpressionInterface=function(){},ie.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],!0),this.filterUniqueShapes()},ie.prototype.filterUniqueShapes=function(){var t,e,n,i,r=this.shapes.length,a=this.stylesList.length,s=[],o=!1;for(n=0;n<a;n+=1){for(i=this.stylesList[n],o=!1,s.length=0,t=0;t<r;t+=1)-1!==(e=this.shapes[t]).styles.indexOf(i)&&(s.push(e),o=e._isAnimated||o);s.length>1&&o&&this.setShapesAsAnimated(s)}},ie.prototype.setShapesAsAnimated=function(t){var e,n=t.length;for(e=0;e<n;e+=1)t[e].setAsAnimated()},ie.prototype.createStyleElement=function(t,e){var n,r=new Nt(t,e),a=r.pElem;return"st"===t.ty?n=new Wt(this,t,r):"fl"===t.ty?n=new qt(this,t,r):"gf"!==t.ty&&"gs"!==t.ty||(n=new("gf"===t.ty?jt:Vt)(this,t,r),this.globalData.defs.appendChild(n.gf),n.maskId&&(this.globalData.defs.appendChild(n.ms),this.globalData.defs.appendChild(n.of),a.setAttribute("mask","url("+i+"#"+n.maskId+")"))),"st"!==t.ty&&"gs"!==t.ty||(a.setAttribute("stroke-linecap",W[t.lc||2]),a.setAttribute("stroke-linejoin",q[t.lj||2]),a.setAttribute("fill-opacity","0"),1===t.lj&&a.setAttribute("stroke-miterlimit",t.ml)),2===t.r&&a.setAttribute("fill-rule","evenodd"),t.ln&&a.setAttribute("id",t.ln),t.cl&&a.setAttribute("class",t.cl),t.bm&&(a.style["mix-blend-mode"]=z(t.bm)),this.stylesList.push(r),this.addToAnimatedContents(t,n),n},ie.prototype.createGroupElement=function(t){var e=new Ht;return t.ln&&e.gr.setAttribute("id",t.ln),t.cl&&e.gr.setAttribute("class",t.cl),t.bm&&(e.gr.style["mix-blend-mode"]=z(t.bm)),e},ie.prototype.createTransformElement=function(t,e){var n=K.getTransformProperty(this,t,this),i=new zt(n,n.o,e);return this.addToAnimatedContents(t,i),i},ie.prototype.createShapeElement=function(t,e,n){var i=4;"rc"===t.ty?i=5:"el"===t.ty?i=6:"sr"===t.ty&&(i=7);var r=new Bt(e,n,Y.getShapeProp(this,t,i,this));return this.shapes.push(r),this.addShapeToModifiers(r),this.addToAnimatedContents(t,r),r},ie.prototype.addToAnimatedContents=function(t,e){for(var n=0,i=this.animatedContents.length;n<i;){if(this.animatedContents[n].element===e)return;n+=1}this.animatedContents.push({fn:Zt.createRenderFunction(t),element:e,data:t})},ie.prototype.setElementStyles=function(t){var e,n=t.styles,i=this.stylesList.length;for(e=0;e<i;e+=1)this.stylesList[e].closed||n.push(this.stylesList[e])},ie.prototype.reloadShapes=function(){var t;this._isFirstFrame=!0;var e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];for(this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],!0),this.filterUniqueShapes(),e=this.dynamicProperties.length,t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers()},ie.prototype.searchShapes=function(t,e,n,i,r,a,s){var o,l,h,c,d,p,u=[].concat(a),f=t.length-1,m=[],g=[];for(o=f;o>=0;o-=1){if((p=this.searchProcessedElement(t[o]))?e[o]=n[p-1]:t[o]._render=s,"fl"===t[o].ty||"st"===t[o].ty||"gf"===t[o].ty||"gs"===t[o].ty)p?e[o].style.closed=!1:e[o]=this.createStyleElement(t[o],r),t[o]._render&&e[o].style.pElem.parentNode!==i&&i.appendChild(e[o].style.pElem),m.push(e[o].style);else if("gr"===t[o].ty){if(p)for(h=e[o].it.length,l=0;l<h;l+=1)e[o].prevViewData[l]=e[o].it[l];else e[o]=this.createGroupElement(t[o]);this.searchShapes(t[o].it,e[o].it,e[o].prevViewData,e[o].gr,r+1,u,s),t[o]._render&&e[o].gr.parentNode!==i&&i.appendChild(e[o].gr)}else"tr"===t[o].ty?(p||(e[o]=this.createTransformElement(t[o],i)),c=e[o].transform,u.push(c)):"sh"===t[o].ty||"rc"===t[o].ty||"el"===t[o].ty||"sr"===t[o].ty?(p||(e[o]=this.createShapeElement(t[o],u,r)),this.setElementStyles(e[o])):"tm"===t[o].ty||"rd"===t[o].ty||"ms"===t[o].ty||"pb"===t[o].ty?(p?(d=e[o]).closed=!1:((d=Q.getModifier(t[o].ty)).init(this,t[o]),e[o]=d,this.shapeModifiers.push(d)),g.push(d)):"rp"===t[o].ty&&(p?(d=e[o]).closed=!0:(d=Q.getModifier(t[o].ty),e[o]=d,d.init(this,t,o,e),this.shapeModifiers.push(d),s=!1),g.push(d));this.addProcessedElement(t[o],o+1)}for(f=m.length,o=0;o<f;o+=1)m[o].closed=!0;for(f=g.length,o=0;o<f;o+=1)g[o].closed=!0},ie.prototype.renderInnerContent=function(){var t;this.renderModifiers();var e=this.stylesList.length;for(t=0;t<e;t+=1)this.stylesList[t].reset();for(this.renderShape(),t=0;t<e;t+=1)(this.stylesList[t]._mdf||this._isFirstFrame)&&(this.stylesList[t].msElem&&(this.stylesList[t].msElem.setAttribute("d",this.stylesList[t].d),this.stylesList[t].d="M0 0"+this.stylesList[t].d),this.stylesList[t].pElem.setAttribute("d",this.stylesList[t].d||"M0 0"))},ie.prototype.renderShape=function(){var t,e,n=this.animatedContents.length;for(t=0;t<n;t+=1)e=this.animatedContents[t],(this._isFirstFrame||e.element._isAnimated)&&!0!==e.data&&e.fn(e.data,e.element,this._isFirstFrame)},ie.prototype.destroy=function(){this.destroyBaseElement(),this.shapesData=null,this.itemsData=null},re.prototype.initialize=function(){var t,e,n,r,a=this.elem.layerElement.children||this.elem.layerElement.childNodes;for(1===this.filterManager.effectElements[1].p.v?(r=this.elem.maskManager.masksProperties.length,n=0):r=1+(n=this.filterManager.effectElements[0].p.v-1),(e=O("g")).setAttribute("fill","none"),e.setAttribute("stroke-linecap","round"),e.setAttribute("stroke-dashoffset",1);n<r;n+=1)t=O("path"),e.appendChild(t),this.paths.push({p:t,m:n});if(3===this.filterManager.effectElements[10].p.v){var s=O("mask"),o=S();s.setAttribute("id",o),s.setAttribute("mask-type","alpha"),s.appendChild(e),this.elem.globalData.defs.appendChild(s);var l=O("g");for(l.setAttribute("mask","url("+i+"#"+o+")");a[0];)l.appendChild(a[0]);this.elem.layerElement.appendChild(l),this.masker=s,e.setAttribute("stroke","#fff")}else if(1===this.filterManager.effectElements[10].p.v||2===this.filterManager.effectElements[10].p.v){if(2===this.filterManager.effectElements[10].p.v)for(a=this.elem.layerElement.children||this.elem.layerElement.childNodes;a.length;)this.elem.layerElement.removeChild(a[0]);this.elem.layerElement.appendChild(e),this.elem.layerElement.removeAttribute("mask"),e.setAttribute("stroke","#fff")}this.initialized=!0,this.pathMasker=e},re.prototype.renderFrame=function(t){var e;this.initialized||this.initialize();var n,i,r=this.paths.length;for(e=0;e<r;e+=1)if(-1!==this.paths[e].m&&(n=this.elem.maskManager.viewData[this.paths[e].m],i=this.paths[e].p,(t||this.filterManager._mdf||n.prop._mdf)&&i.setAttribute("d",n.lastPath),t||this.filterManager.effectElements[9].p._mdf||this.filterManager.effectElements[4].p._mdf||this.filterManager.effectElements[7].p._mdf||this.filterManager.effectElements[8].p._mdf||n.prop._mdf)){var a;if(0!==this.filterManager.effectElements[7].p.v||100!==this.filterManager.effectElements[8].p.v){var s=.01*Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v),o=.01*Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v),l=i.getTotalLength();a="0 0 0 "+l*s+" ";var h,c=l*(o-s),p=1+2*this.filterManager.effectElements[4].p.v*this.filterManager.effectElements[9].p.v*.01,u=Math.floor(c/p);for(h=0;h<u;h+=1)a+="1 "+2*this.filterManager.effectElements[4].p.v*this.filterManager.effectElements[9].p.v*.01+" ";a+="0 "+10*l+" 0 0"}else a="1 "+2*this.filterManager.effectElements[4].p.v*this.filterManager.effectElements[9].p.v*.01;i.setAttribute("stroke-dasharray",a)}if((t||this.filterManager.effectElements[4].p._mdf)&&this.pathMasker.setAttribute("stroke-width",2*this.filterManager.effectElements[4].p.v),(t||this.filterManager.effectElements[6].p._mdf)&&this.pathMasker.setAttribute("opacity",this.filterManager.effectElements[6].p.v),(1===this.filterManager.effectElements[10].p.v||2===this.filterManager.effectElements[10].p.v)&&(t||this.filterManager.effectElements[3].p._mdf)){var f=this.filterManager.effectElements[3].p.v;this.pathMasker.setAttribute("stroke","rgb("+d(255*f[0])+","+d(255*f[1])+","+d(255*f[2])+")")}},ae.prototype.createFeFunc=function(t,e){var n=O(t);return n.setAttribute("type","table"),e.appendChild(n),n},ae.prototype.getTableValue=function(t,e,n,i,r){for(var a,s,o=0,l=Math.min(t,e),h=Math.max(t,e),c=Array.call(null,{length:256}),d=0,p=r-i,u=e-t;o<=256;)s=(a=o/256)<=l?u<0?r:i:a>=h?u<0?i:r:i+p*Math.pow((a-t)/u,1/n),c[d]=s,d+=1,o+=256/255;return c.join(" ")},ae.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){var e,n=this.filterManager.effectElements;this.feFuncRComposed&&(t||n[3].p._mdf||n[4].p._mdf||n[5].p._mdf||n[6].p._mdf||n[7].p._mdf)&&(e=this.getTableValue(n[3].p.v,n[4].p.v,n[5].p.v,n[6].p.v,n[7].p.v),this.feFuncRComposed.setAttribute("tableValues",e),this.feFuncGComposed.setAttribute("tableValues",e),this.feFuncBComposed.setAttribute("tableValues",e)),this.feFuncR&&(t||n[10].p._mdf||n[11].p._mdf||n[12].p._mdf||n[13].p._mdf||n[14].p._mdf)&&(e=this.getTableValue(n[10].p.v,n[11].p.v,n[12].p.v,n[13].p.v,n[14].p.v),this.feFuncR.setAttribute("tableValues",e)),this.feFuncG&&(t||n[17].p._mdf||n[18].p._mdf||n[19].p._mdf||n[20].p._mdf||n[21].p._mdf)&&(e=this.getTableValue(n[17].p.v,n[18].p.v,n[19].p.v,n[20].p.v,n[21].p.v),this.feFuncG.setAttribute("tableValues",e)),this.feFuncB&&(t||n[24].p._mdf||n[25].p._mdf||n[26].p._mdf||n[27].p._mdf||n[28].p._mdf)&&(e=this.getTableValue(n[24].p.v,n[25].p.v,n[26].p.v,n[27].p.v,n[28].p.v),this.feFuncB.setAttribute("tableValues",e)),this.feFuncA&&(t||n[31].p._mdf||n[32].p._mdf||n[33].p._mdf||n[34].p._mdf||n[35].p._mdf)&&(e=this.getTableValue(n[31].p.v,n[32].p.v,n[33].p.v,n[34].p.v,n[35].p.v),this.feFuncA.setAttribute("tableValues",e))}};var se=[];function oe(t,e,n){this.initialized=!1,this.filterManager=e,this.filterElem=t,this.elem=n,n.matteElement=O("g"),n.matteElement.appendChild(n.layerElement),n.matteElement.appendChild(n.transformedElement),n.baseElement=n.matteElement}function le(){}oe.prototype.findSymbol=function(t){for(var e=0,n=se.length;e<n;){if(se[e]===t)return se[e];e+=1}return null},oe.prototype.replaceInParent=function(t,e){var n=t.layerElement.parentNode;if(n){for(var i,r=n.children,a=0,s=r.length;a<s&&r[a]!==t.layerElement;)a+=1;a<=s-2&&(i=r[a+1]);var o=O("use");o.setAttribute("href","#"+e),i?n.insertBefore(o,i):n.appendChild(o)}},oe.prototype.setElementAsMask=function(t,e){if(!this.findSymbol(e)){var n=S(),i=O("mask");i.setAttribute("id",e.layerId),i.setAttribute("mask-type","alpha"),se.push(e);var r=t.globalData.defs;r.appendChild(i);var a=O("symbol");a.setAttribute("id",n),this.replaceInParent(e,n),a.appendChild(e.layerElement),r.appendChild(a);var s=O("use");s.setAttribute("href","#"+n),i.appendChild(s),e.data.hd=!1,e.show()}t.setMatte(e.layerId)},oe.prototype.initialize=function(){for(var t=this.filterManager.effectElements[0].p.v,e=this.elem.comp.elements,n=0,i=e.length;n<i;)e[n]&&e[n].data.ind===t&&this.setElementAsMask(this.elem,e[n]),n+=1;this.initialized=!0},oe.prototype.renderFrame=function(){this.initialized||this.initialize()};var he=function(){var e={},n=[],i=0,r=0,a=0,s=!0,o=!1;function l(t){for(var e=0,i=t.target;e<r;)n[e].animation===i&&(n.splice(e,1),e-=1,r-=1,i.isPaused||d()),e+=1}function h(t,e){if(!t)return null;for(var i=0;i<r;){if(n[i].elem===t&&null!==n[i].elem)return n[i].animation;i+=1}var a=new ce;return p(a,t),a.setData(t,e),a}function c(){a+=1,m()}function d(){a-=1}function p(t,e){t.addEventListener("destroy",l),t.addEventListener("_active",c),t.addEventListener("_idle",d),n.push({elem:e,animation:t}),r+=1}function u(e){var l,h=e-i;for(l=0;l<r;l+=1)n[l].animation.advanceTime(h);i=e,a&&!o?t.requestAnimationFrame(u):s=!0}function f(e){i=e,t.requestAnimationFrame(u)}function m(){!o&&a&&s&&(t.requestAnimationFrame(f),s=!1)}return e.registerAnimation=h,e.loadAnimation=function(t){var e=new ce;return p(e,null),e.setParams(t),e},e.setSpeed=function(t,e){var i;for(i=0;i<r;i+=1)n[i].animation.setSpeed(t,e)},e.setDirection=function(t,e){var i;for(i=0;i<r;i+=1)n[i].animation.setDirection(t,e)},e.play=function(t){var e;for(e=0;e<r;e+=1)n[e].animation.play(t)},e.pause=function(t){var e;for(e=0;e<r;e+=1)n[e].animation.pause(t)},e.stop=function(t){var e;for(e=0;e<r;e+=1)n[e].animation.stop(t)},e.togglePause=function(t){var e;for(e=0;e<r;e+=1)n[e].animation.togglePause(t)},e.searchAnimations=function(t,e,n){var i,r=[].concat([].slice.call(document.getElementsByClassName("lottie")),[].slice.call(document.getElementsByClassName("bodymovin"))),a=r.length;for(i=0;i<a;i+=1)n&&r[i].setAttribute("data-bm-type",n),h(r[i],t);if(e&&0===a){n||(n="svg");var s=document.getElementsByTagName("body")[0];s.innerText="";var o=R("div");o.style.width="100%",o.style.height="100%",o.setAttribute("data-bm-type",n),s.appendChild(o),h(o,t)}},e.resize=function(){var t;for(t=0;t<r;t+=1)n[t].animation.resize()},e.goToAndStop=function(t,e,i){var a;for(a=0;a<r;a+=1)n[a].animation.goToAndStop(t,e,i)},e.destroy=function(t){var e;for(e=r-1;e>=0;e-=1)n[e].animation.destroy(t)},e.freeze=function(){o=!0},e.unfreeze=function(){o=!1,m()},e.setVolume=function(t,e){var i;for(i=0;i<r;i+=1)n[i].animation.setVolume(t,e)},e.mute=function(t){var e;for(e=0;e<r;e+=1)n[e].animation.mute(t)},e.unmute=function(t){var e;for(e=0;e<r;e+=1)n[e].animation.unmute(t)},e.getRegisteredAnimations=function(){var t,e=n.length,i=[];for(t=0;t<e;t+=1)i.push(n[t].animation);return i},e}(),ce=function(){this._cbs=[],this.name="",this.path="",this.isLoaded=!1,this.currentFrame=0,this.currentRawFrame=0,this.firstFrame=0,this.totalFrames=0,this.frameRate=0,this.frameMult=0,this.playSpeed=1,this.playDirection=1,this.playCount=0,this.animationData={},this.assets=[],this.isPaused=!0,this.autoplay=!1,this.loop=!0,this.renderer=null,this.animationID=S(),this.assetsPath="",this.timeCompleted=0,this.segmentPos=0,this.isSubframeEnabled=s,this.segments=[],this._idle=!0,this._completedLoop=!1,this.projectInterface={},this.imagePreloader=new dt,this.audioController=ct(),this.markers=[],this.configAnimation=this.configAnimation.bind(this),this.onSetupError=this.onSetupError.bind(this),this.onSegmentComplete=this.onSegmentComplete.bind(this)};function de(){this.effectElements=[]}H([T],ce),ce.prototype.setParams=function(t){(t.wrapper||t.container)&&(this.wrapper=t.wrapper||t.container);var e="svg";switch(t.animType?e=t.animType:t.renderer&&(e=t.renderer),e){case"canvas":this.renderer=new CanvasRenderer(this,t.rendererSettings);break;case"svg":this.renderer=new Lt(this,t.rendererSettings);break;default:this.renderer=new HybridRenderer(this,t.rendererSettings)}this.imagePreloader.setCacheType(e,this.renderer.globalData.defs),this.renderer.setProjectInterface(this.projectInterface),this.animType=e,""===t.loop||null===t.loop||void 0===t.loop||!0===t.loop?this.loop=!0:!1===t.loop?this.loop=!1:this.loop=parseInt(t.loop,10),this.autoplay=!("autoplay"in t)||t.autoplay,this.name=t.name?t.name:"",this.autoloadSegments=!Object.prototype.hasOwnProperty.call(t,"autoloadSegments")||t.autoloadSegments,this.assetsPath=t.assetsPath,this.initialSegment=t.initialSegment,t.audioFactory&&this.audioController.setAudioFactory(t.audioFactory),t.animationData?this.setupAnimation(t.animationData):t.path&&(-1!==t.path.lastIndexOf("\\")?this.path=t.path.substr(0,t.path.lastIndexOf("\\")+1):this.path=t.path.substr(0,t.path.lastIndexOf("/")+1),this.fileName=t.path.substr(t.path.lastIndexOf("/")+1),this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf(".json")),U.loadAnimation(t.path,this.configAnimation,this.onSetupError))},ce.prototype.onSetupError=function(){this.trigger("data_failed")},ce.prototype.setupAnimation=function(t){U.completeAnimation(t,this.configAnimation)},ce.prototype.setData=function(t,e){e&&"object"!=typeof e&&(e=JSON.parse(e));var n={wrapper:t,animationData:e},i=t.attributes;n.path=i.getNamedItem("data-animation-path")?i.getNamedItem("data-animation-path").value:i.getNamedItem("data-bm-path")?i.getNamedItem("data-bm-path").value:i.getNamedItem("bm-path")?i.getNamedItem("bm-path").value:"",n.animType=i.getNamedItem("data-anim-type")?i.getNamedItem("data-anim-type").value:i.getNamedItem("data-bm-type")?i.getNamedItem("data-bm-type").value:i.getNamedItem("bm-type")?i.getNamedItem("bm-type").value:i.getNamedItem("data-bm-renderer")?i.getNamedItem("data-bm-renderer").value:i.getNamedItem("bm-renderer")?i.getNamedItem("bm-renderer").value:"canvas";var r=i.getNamedItem("data-anim-loop")?i.getNamedItem("data-anim-loop").value:i.getNamedItem("data-bm-loop")?i.getNamedItem("data-bm-loop").value:i.getNamedItem("bm-loop")?i.getNamedItem("bm-loop").value:"";"false"===r?n.loop=!1:"true"===r?n.loop=!0:""!==r&&(n.loop=parseInt(r,10));var a=i.getNamedItem("data-anim-autoplay")?i.getNamedItem("data-anim-autoplay").value:i.getNamedItem("data-bm-autoplay")?i.getNamedItem("data-bm-autoplay").value:!i.getNamedItem("bm-autoplay")||i.getNamedItem("bm-autoplay").value;n.autoplay="false"!==a,n.name=i.getNamedItem("data-name")?i.getNamedItem("data-name").value:i.getNamedItem("data-bm-name")?i.getNamedItem("data-bm-name").value:i.getNamedItem("bm-name")?i.getNamedItem("bm-name").value:"","false"===(i.getNamedItem("data-anim-prerender")?i.getNamedItem("data-anim-prerender").value:i.getNamedItem("data-bm-prerender")?i.getNamedItem("data-bm-prerender").value:i.getNamedItem("bm-prerender")?i.getNamedItem("bm-prerender").value:"")&&(n.prerender=!1),this.setParams(n)},ce.prototype.includeLayers=function(t){t.op>this.animationData.op&&(this.animationData.op=t.op,this.totalFrames=Math.floor(t.op-this.animationData.ip));var e,n,i=this.animationData.layers,r=i.length,a=t.layers,s=a.length;for(n=0;n<s;n+=1)for(e=0;e<r;){if(i[e].id===a[n].id){i[e]=a[n];break}e+=1}if((t.chars||t.fonts)&&(this.renderer.globalData.fontManager.addChars(t.chars),this.renderer.globalData.fontManager.addFonts(t.fonts,this.renderer.globalData.defs)),t.assets)for(r=t.assets.length,e=0;e<r;e+=1)this.animationData.assets.push(t.assets[e]);this.animationData.__complete=!1,U.completeAnimation(this.animationData,this.onSegmentComplete)},ce.prototype.onSegmentComplete=function(t){this.animationData=t,e&&e.initExpressions(this),this.loadNextSegment()},ce.prototype.loadNextSegment=function(){var t=this.animationData.segments;if(!t||0===t.length||!this.autoloadSegments)return this.trigger("data_ready"),void(this.timeCompleted=this.totalFrames);var e=t.shift();this.timeCompleted=e.time*this.frameRate;var n=this.path+this.fileName+"_"+this.segmentPos+".json";this.segmentPos+=1,U.loadData(n,this.includeLayers.bind(this),function(){this.trigger("data_failed")}.bind(this))},ce.prototype.loadSegments=function(){this.animationData.segments||(this.timeCompleted=this.totalFrames),this.loadNextSegment()},ce.prototype.imagesLoaded=function(){this.trigger("loaded_images"),this.checkLoaded()},ce.prototype.preloadImages=function(){this.imagePreloader.setAssetsPath(this.assetsPath),this.imagePreloader.setPath(this.path),this.imagePreloader.loadAssets(this.animationData.assets,this.imagesLoaded.bind(this))},ce.prototype.configAnimation=function(t){if(this.renderer)try{this.animationData=t,this.initialSegment?(this.totalFrames=Math.floor(this.initialSegment[1]-this.initialSegment[0]),this.firstFrame=Math.round(this.initialSegment[0])):(this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip),this.firstFrame=Math.round(this.animationData.ip)),this.renderer.configAnimation(t),t.assets||(t.assets=[]),this.assets=this.animationData.assets,this.frameRate=this.animationData.fr,this.frameMult=this.animationData.fr/1e3,this.renderer.searchExtraCompositions(t.assets),this.markers=At(t.markers||[]),this.trigger("config_ready"),this.preloadImages(),this.loadSegments(),this.updaFrameModifier(),this.waitForFontsLoaded(),this.isPaused&&this.audioController.pause()}catch(t){this.triggerConfigError(t)}},ce.prototype.waitForFontsLoaded=function(){this.renderer&&(this.renderer.globalData.fontManager.isLoaded?this.checkLoaded():setTimeout(this.waitForFontsLoaded.bind(this),20))},ce.prototype.checkLoaded=function(){!this.isLoaded&&this.renderer.globalData.fontManager.isLoaded&&(this.imagePreloader.loadedImages()||"canvas"!==this.renderer.rendererType)&&this.imagePreloader.loadedFootages()&&(this.isLoaded=!0,e&&e.initExpressions(this),this.renderer.initItems(),setTimeout(function(){this.trigger("DOMLoaded")}.bind(this),0),this.gotoFrame(),this.autoplay&&this.play())},ce.prototype.resize=function(){this.renderer.updateContainerSize()},ce.prototype.setSubframe=function(t){this.isSubframeEnabled=!!t},ce.prototype.gotoFrame=function(){this.currentFrame=this.isSubframeEnabled?this.currentRawFrame:~~this.currentRawFrame,this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted&&(this.currentFrame=this.timeCompleted),this.trigger("enterFrame"),this.renderFrame(),this.trigger("drawnFrame")},ce.prototype.renderFrame=function(){if(!1!==this.isLoaded&&this.renderer)try{this.renderer.renderFrame(this.currentFrame+this.firstFrame)}catch(t){this.triggerRenderFrameError(t)}},ce.prototype.play=function(t){t&&this.name!==t||!0===this.isPaused&&(this.isPaused=!1,this.audioController.resume(),this._idle&&(this._idle=!1,this.trigger("_active")))},ce.prototype.pause=function(t){t&&this.name!==t||!1===this.isPaused&&(this.isPaused=!0,this._idle=!0,this.trigger("_idle"),this.audioController.pause())},ce.prototype.togglePause=function(t){t&&this.name!==t||(!0===this.isPaused?this.play():this.pause())},ce.prototype.stop=function(t){t&&this.name!==t||(this.pause(),this.playCount=0,this._completedLoop=!1,this.setCurrentRawFrameValue(0))},ce.prototype.getMarkerData=function(t){for(var e,n=0;n<this.markers.length;n+=1)if((e=this.markers[n]).payload&&e.payload.name===t)return e;return null},ce.prototype.goToAndStop=function(t,e,n){if(!n||this.name===n){var i=Number(t);if(isNaN(i)){var r=this.getMarkerData(t);r&&this.goToAndStop(r.time,!0)}else e?this.setCurrentRawFrameValue(t):this.setCurrentRawFrameValue(t*this.frameModifier);this.pause()}},ce.prototype.goToAndPlay=function(t,e,n){if(!n||this.name===n){var i=Number(t);if(isNaN(i)){var r=this.getMarkerData(t);r&&(r.duration?this.playSegments([r.time,r.time+r.duration],!0):this.goToAndStop(r.time,!0))}else this.goToAndStop(i,e,n);this.play()}},ce.prototype.advanceTime=function(t){if(!0!==this.isPaused&&!1!==this.isLoaded){var e=this.currentRawFrame+t*this.frameModifier,n=!1;e>=this.totalFrames-1&&this.frameModifier>0?this.loop&&this.playCount!==this.loop?e>=this.totalFrames?(this.playCount+=1,this.checkSegments(e%this.totalFrames)||(this.setCurrentRawFrameValue(e%this.totalFrames),this._completedLoop=!0,this.trigger("loopComplete"))):this.setCurrentRawFrameValue(e):this.checkSegments(e>this.totalFrames?e%this.totalFrames:0)||(n=!0,e=this.totalFrames-1):e<0?this.checkSegments(e%this.totalFrames)||(!this.loop||this.playCount--<=0&&!0!==this.loop?(n=!0,e=0):(this.setCurrentRawFrameValue(this.totalFrames+e%this.totalFrames),this._completedLoop?this.trigger("loopComplete"):this._completedLoop=!0)):this.setCurrentRawFrameValue(e),n&&(this.setCurrentRawFrameValue(e),this.pause(),this.trigger("complete"))}},ce.prototype.adjustSegment=function(t,e){this.playCount=0,t[1]<t[0]?(this.frameModifier>0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(-1)),this.totalFrames=t[0]-t[1],this.timeCompleted=this.totalFrames,this.firstFrame=t[1],this.setCurrentRawFrameValue(this.totalFrames-.001-e)):t[1]>t[0]&&(this.frameModifier<0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(1)),this.totalFrames=t[1]-t[0],this.timeCompleted=this.totalFrames,this.firstFrame=t[0],this.setCurrentRawFrameValue(.001+e)),this.trigger("segmentStart")},ce.prototype.setSegment=function(t,e){var n=-1;this.isPaused&&(this.currentRawFrame+this.firstFrame<t?n=t:this.currentRawFrame+this.firstFrame>e&&(n=e-t)),this.firstFrame=t,this.totalFrames=e-t,this.timeCompleted=this.totalFrames,-1!==n&&this.goToAndStop(n,!0)},ce.prototype.playSegments=function(t,e){if(e&&(this.segments.length=0),"object"==typeof t[0]){var n,i=t.length;for(n=0;n<i;n+=1)this.segments.push(t[n])}else this.segments.push(t);this.segments.length&&e&&this.adjustSegment(this.segments.shift(),0),this.isPaused&&this.play()},ce.prototype.resetSegments=function(t){this.segments.length=0,this.segments.push([this.animationData.ip,this.animationData.op]),t&&this.checkSegments(0)},ce.prototype.checkSegments=function(t){return!!this.segments.length&&(this.adjustSegment(this.segments.shift(),t),!0)},ce.prototype.destroy=function(t){t&&this.name!==t||!this.renderer||(this.renderer.destroy(),this.imagePreloader.destroy(),this.trigger("destroy"),this._cbs=null,this.onEnterFrame=null,this.onLoopComplete=null,this.onComplete=null,this.onSegmentStart=null,this.onDestroy=null,this.renderer=null,this.renderer=null,this.imagePreloader=null,this.projectInterface=null)},ce.prototype.setCurrentRawFrameValue=function(t){this.currentRawFrame=t,this.gotoFrame()},ce.prototype.setSpeed=function(t){this.playSpeed=t,this.updaFrameModifier()},ce.prototype.setDirection=function(t){this.playDirection=t<0?-1:1,this.updaFrameModifier()},ce.prototype.setVolume=function(t,e){e&&this.name!==e||this.audioController.setVolume(t)},ce.prototype.getVolume=function(){return this.audioController.getVolume()},ce.prototype.mute=function(t){t&&this.name!==t||this.audioController.mute()},ce.prototype.unmute=function(t){t&&this.name!==t||this.audioController.unmute()},ce.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection,this.audioController.setRate(this.playSpeed*this.playDirection)},ce.prototype.getPath=function(){return this.path},ce.prototype.getAssetsPath=function(t){var e="";if(t.e)e=t.p;else if(this.assetsPath){var n=t.p;-1!==n.indexOf("images/")&&(n=n.split("/")[1]),e=this.assetsPath+n}else e=this.path,e+=t.u?t.u:"",e+=t.p;return e},ce.prototype.getAssetData=function(t){for(var e=0,n=this.assets.length;e<n;){if(t===this.assets[e].id)return this.assets[e];e+=1}return null},ce.prototype.hide=function(){this.renderer.hide()},ce.prototype.show=function(){this.renderer.show()},ce.prototype.getDuration=function(t){return t?this.totalFrames:this.totalFrames/this.frameRate},ce.prototype.trigger=function(t){if(this._cbs&&this._cbs[t])switch(t){case"enterFrame":case"drawnFrame":this.triggerEvent(t,new w(t,this.currentFrame,this.totalFrames,this.frameModifier));break;case"loopComplete":this.triggerEvent(t,new _(t,this.loop,this.playCount,this.frameMult));break;case"complete":this.triggerEvent(t,new y(t,this.frameMult));break;case"segmentStart":this.triggerEvent(t,new b(t,this.firstFrame,this.totalFrames));break;case"destroy":this.triggerEvent(t,new M(t,this));break;default:this.triggerEvent(t)}"enterFrame"===t&&this.onEnterFrame&&this.onEnterFrame.call(this,new w(t,this.currentFrame,this.totalFrames,this.frameMult)),"loopComplete"===t&&this.onLoopComplete&&this.onLoopComplete.call(this,new _(t,this.loop,this.playCount,this.frameMult)),"complete"===t&&this.onComplete&&this.onComplete.call(this,new y(t,this.frameMult)),"segmentStart"===t&&this.onSegmentStart&&this.onSegmentStart.call(this,new b(t,this.firstFrame,this.totalFrames)),"destroy"===t&&this.onDestroy&&this.onDestroy.call(this,new M(t,this))},ce.prototype.triggerRenderFrameError=function(t){var e=new x(t,this.currentFrame);this.triggerEvent("error",e),this.onError&&this.onError.call(this,e)},ce.prototype.triggerConfigError=function(t){var e=new C(t,this.currentFrame);this.triggerEvent("error",e),this.onError&&this.onError.call(this,e)};var pe={};function ue(){!0===me?he.searchAnimations(ge,me,ve):he.searchAnimations()}pe.play=he.play,pe.pause=he.pause,pe.setLocationHref=function(t){i=t},pe.togglePause=he.togglePause,pe.setSpeed=he.setSpeed,pe.setDirection=he.setDirection,pe.stop=he.stop,pe.searchAnimations=ue,pe.registerAnimation=he.registerAnimation,pe.loadAnimation=function(t){return!0===me&&(t.animationData=JSON.parse(ge)),he.loadAnimation(t)},pe.setSubframeRendering=function(t){s=t},pe.resize=he.resize,pe.goToAndStop=he.goToAndStop,pe.destroy=he.destroy,pe.setQuality=function(t){if("string"==typeof t)switch(t){case"high":f=200;break;default:case"medium":f=50;break;case"low":f=10}else!isNaN(t)&&t>1&&(f=t);v(!(f>=50))},pe.inBrowser=function(){return"undefined"!=typeof navigator},pe.installPlugin=function(t,n){"expressions"===t&&(e=n)},pe.freeze=he.freeze,pe.unfreeze=he.unfreeze,pe.setVolume=he.setVolume,pe.mute=he.mute,pe.unmute=he.unmute,pe.getRegisteredAnimations=he.getRegisteredAnimations,pe.useWebWorker=function(t){a=t},pe.setIDPrefix=function(t){o=t},pe.__getFactory=function(t){switch(t){case"propertyFactory":return X;case"shapePropertyFactory":return Y;case"matrix":return j;default:return null}},pe.version="5.8.1";var fe,me="__[STANDALONE]__",ge="__[ANIMATIONDATA]__",ve="";if(me){var we=document.getElementsByTagName("script"),ye=we[we.length-1]||{src:""};fe=ye.src.replace(/^[^\?]+\??/,""),ve=function(t){for(var e=fe.split("&"),n=0;n<e.length;n+=1){var i=e[n].split("=");if(decodeURIComponent(i[0])==t)return decodeURIComponent(i[1])}return null}("renderer")}var _e=setInterval((function(){"complete"===document.readyState&&(clearInterval(_e),ue())}),100);return pe}(r)}.call(e,n,e,t))||(t.exports=i))},4529:(t,e,n)=>{"use strict";var i=n(3509),r=n(1915),a=n(3627);function s(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}n(9868),n(4126),n(1206);var o=s(r),l=s(a);function h(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&i.firstChild?i.insertBefore(r,i.firstChild):i.appendChild(r),r.styleSheet?r.styleSheet.cssText=t:r.appendChild(document.createTextNode(t))}}var c=".pera-wallet-modal-header {\n  position: absolute;\n  top: -44px;\n  right: 0px;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.pera-wallet-modal-header--mobile {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  position: static;\n}\n.pera-wallet-modal-header--mobile .pera-wallet-modal-header__close-button {\n  width: 24px;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  border: unset;\n  box-shadow: unset;\n}\n\n.pera-wallet-modal-header__brand {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: -0.13px;\n  color: #ffffff;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal-header__close-button {\n  width: 32px;\n  height: 32px;\n  margin: 0;\n  padding: 0;\n  background: rgba(44, 53, 89, 0.1);\n  border-radius: 8px;\n}\n\n.pera-wallet-modal-header__close-button__close-icon {\n  width: 20px;\n  height: 20px;\n}";function d(){return document.documentElement.clientWidth<=767}function p(){document.documentElement.style.setProperty("--vh",.01*window.innerHeight+"px")}h(c);const u=document.createElement("template"),f=i.isMobile()?"pera-wallet-modal-header pera-wallet-modal-header--mobile":"pera-wallet-modal-header pera-wallet-modal-header--desktop";u.innerHTML=`\n  <div class="${f}">\n      ${d()&&i.isMobile()?"":"<div class=\"pera-wallet-modal-header__brand\">\n              <img src=\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='24' height='24' rx='4.8' fill='%23FFEE55'/%3e%3cpath d='M13.0408 5.92462C13.413 7.46693 13.2872 8.8236 12.7597 8.95482C12.2322 9.08605 11.5028 7.94214 11.1306 6.39983C10.7583 4.85752 10.8842 3.50085 11.4117 3.36963C11.9391 3.2384 12.6685 4.38231 13.0408 5.92462Z' fill='black'/%3e%3cpath d='M19.1876 7.25063C18.3632 6.37689 16.7231 6.61371 15.5243 7.77959C14.3254 8.94547 14.0219 10.5989 14.8463 11.4727C15.6707 12.3464 17.3108 12.1096 18.5097 10.9437C19.7085 9.77781 20.012 8.12438 19.1876 7.25063Z' fill='black'/%3e%3cpath d='M12.6308 20.6297C13.1583 20.4985 13.2656 19.0651 12.8705 17.4281C12.4754 15.7911 11.7275 14.5705 11.2 14.7017C10.6725 14.8329 10.5652 16.2663 10.9603 17.9033C11.3554 19.5403 12.1033 20.7609 12.6308 20.6297Z' fill='black'/%3e%3cpath d='M7.25371 8.05056C8.77551 8.49933 9.8875 9.28664 9.73741 9.80906C9.58731 10.3315 8.23197 10.3912 6.71016 9.94242C5.18836 9.49364 4.07637 8.70633 4.22646 8.18391C4.37656 7.66149 5.7319 7.60178 7.25371 8.05056Z' fill='black'/%3e%3cpath d='M17.1309 13.9497C18.7461 14.4261 19.9338 15.2357 19.7837 15.7581C19.6336 16.2806 18.2025 16.3179 16.5873 15.8416C14.9721 15.3653 13.7844 14.5556 13.9345 14.0332C14.0846 13.5108 15.5157 13.4734 17.1309 13.9497Z' fill='black'/%3e%3cpath d='M8.96609 12.8536C8.5887 12.4624 7.35088 13.0318 6.20133 14.1253C5.05177 15.2188 4.42581 16.4225 4.80319 16.8137C5.18058 17.2048 6.4184 16.6355 7.56796 15.542C8.71751 14.4484 9.34347 13.2448 8.96609 12.8536Z' fill='black'/%3e%3c/svg%3e\" />\n\n              Pera Connect\n            </div>\n            "} \n\n      <button\n        id="pera-wallet-modal-header-close-button"\n        class="pera-wallet-button pera-wallet-modal-header__close-button">\n        <img\n          class="pera-wallet-modal-header__close-button__close-icon"\n          src="${d()&&i.isMobile()?"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='%232C3559' stroke-width='2'/%3e%3c/svg%3e":"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='white' stroke-width='2'/%3e%3c/svg%3e"}"\n        />\n      </button>\n    </div>\n`;class m extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const t=document.createElement("style");t.textContent=c,this.shadowRoot.append(u.content.cloneNode(!0),t),this.onClose()}}onClose(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-modal-header-close-button"),n=this.getAttribute("modal-id");e&&n===i.PERA_WALLET_REDIRECT_MODAL_ID&&e.addEventListener("click",(()=>{i.removeModalWrapperFromDOM(i.PERA_WALLET_REDIRECT_MODAL_ID)}))}}var g="data:image/svg+xml,%3csvg fill='none' height='80' width='80' xmlns='http://www.w3.org/2000/svg'%3e%3cpath clip-rule='evenodd' d='M39.9 80V68.99h-9.8V80h-.2V68.99h-3.5a6.503 6.503 0 0 1-6.247-4.7 6.514 6.514 0 0 1-4.445-4.444 6.503 6.503 0 0 1-4.695-6.246v-3.5H0v-.2h11.013v-9.8H0v-.2h11.013v-9.8H0v-.2h11.013v-3.5a6.503 6.503 0 0 1 4.694-6.246 6.513 6.513 0 0 1 4.447-4.447 6.503 6.503 0 0 1 6.246-4.696h3.5V0h.2v11.011h9.8V0h.2v11.011h9.8V0h.2v11.011h3.5a6.503 6.503 0 0 1 6.247 4.697 6.514 6.514 0 0 1 4.443 4.444 6.503 6.503 0 0 1 4.701 6.248v3.5H80v.2H68.991v9.8H80v.2H68.991v9.8H80v.2H68.991v3.5a6.503 6.503 0 0 1-4.701 6.248 6.514 6.514 0 0 1-4.443 4.442 6.503 6.503 0 0 1-6.247 4.7h-3.5V80h-.2V68.99h-9.8V80zm28.89-40.1a28.728 28.728 0 0 0-1.746-9.8h-2.5v9.8h4.247zm-4.246.2h4.247a28.729 28.729 0 0 1-1.747 9.8h-2.5zm-.2-.2v-9.8H60.1v9.8zm-4.244.2h4.244v9.8H60.1zm-.2-.2a19.807 19.807 0 0 0-2.633-9.8H50.1v9.8zm-9.8.2h9.8a19.807 19.807 0 0 1-2.633 9.8H50.1zm-.2-.2v-9.8h-9.8v9.8zm-9.8.2h9.8v9.8h-9.8zm-.2-.2v-9.8h-9.8v9.8zm-9.8.2h9.8v9.8h-9.8zm-.2-.2v-9.8h-7.167a19.807 19.807 0 0 0-2.633 9.8zm-9.8.2h9.8v9.8h-7.167a19.807 19.807 0 0 1-2.633-9.8zm-.2-.2v-9.8h-4.245v9.8zm-4.245.2H19.9v9.8h-4.245zm-.2-.2v-9.8H12.96a28.726 28.726 0 0 0-1.748 9.8h4.242zm-4.242.2h4.242v9.8H12.96a28.726 28.726 0 0 1-1.748-9.8zm0 13.5v-3.5h1.608a28.876 28.876 0 0 0 2.634 5.327v2.617c0 .543.066 1.07.192 1.575a6.303 6.303 0 0 1-4.434-6.019zm4.242 1.449a28.674 28.674 0 0 1-2.42-4.949h2.42zm.2.32V50.1H19.9v9.8h-.702a28.915 28.915 0 0 1-3.543-4.53zM20.1 59.9v-9.8h2.518a20.2 20.2 0 0 0 7.282 7.282V59.9zm0-10h2.403a19.966 19.966 0 0 1-2.403-7.053zm9.8 7.25a20 20 0 0 1-7.05-7.05h7.05zm.2.117V50.1h9.8v9.8a19.807 19.807 0 0 1-9.8-2.633zm10 2.633v-9.8h9.8v7.167a19.807 19.807 0 0 1-9.8 2.633zm10-2.75V50.1h7.05a20 20 0 0 1-7.05 7.05zm0 .232a20.2 20.2 0 0 0 7.282-7.282H59.9v9.8h-9.8zm7.397-7.482H59.9v-7.053a19.966 19.966 0 0 1-2.403 7.053zm2.603 10v-9.8h4.244v5.28a28.91 28.91 0 0 1-3.538 4.52zm4.444-4.841V50.1h2.426a28.67 28.67 0 0 1-2.426 4.959zm0 .378a28.881 28.881 0 0 0 2.64-5.337h1.607v3.5a6.303 6.303 0 0 1-4.44 6.021 6.514 6.514 0 0 0 .193-1.577zm2.713-5.537h1.534v-6.477a28.817 28.817 0 0 1-1.534 6.477zm-56.044 0h1.535a28.807 28.807 0 0 1-1.535-6.477zm57.578-20v-3.5a6.303 6.303 0 0 0-4.44-6.02c.126.504.193 1.031.193 1.575v2.608a28.877 28.877 0 0 1 2.639 5.337zm-1.534.2h1.534v6.477a28.815 28.815 0 0 0-1.534-6.477zm-.288-.2a28.673 28.673 0 0 0-2.425-4.958V29.9zm-2.625 0v-5.279a28.911 28.911 0 0 0-3.538-4.521H60.1v9.8zm-4.444 0v-9.8h-9.8v2.518a20.2 20.2 0 0 1 7.282 7.282zm-2.403.2H59.9v7.053a19.966 19.966 0 0 0-2.403-7.053zm-.347-.2a20 20 0 0 0-7.05-7.05v7.05zm-7.25 0v-7.167a19.807 19.807 0 0 0-9.8-2.633v9.8zm-10 0v-9.8a19.807 19.807 0 0 0-9.8 2.633V29.9zm-10 0v-7.05a20 20 0 0 0-7.05 7.05zm-7.282 0a20.2 20.2 0 0 1 7.282-7.282V20.1h-9.8v9.8zm-2.518.2h2.403a19.966 19.966 0 0 0-2.403 7.053zm-.2-.2v-9.8h-.701a28.915 28.915 0 0 0-3.544 4.53v5.27zm-4.445 0v-4.948a28.665 28.665 0 0 0-2.42 4.948zm-2.634 0a28.874 28.874 0 0 1 2.634-5.327v-2.618c0-.543.066-1.07.191-1.574a6.303 6.303 0 0 0-4.433 6.019v3.5zm-1.608.2h1.535a28.81 28.81 0 0 0-1.535 6.477zM36.58 68.79H30.1v-1.536c2.06.749 4.23 1.27 6.479 1.535zm3.321-.001a28.726 28.726 0 0 1-9.8-1.748v-2.497h9.8zm-10-1.822v-2.423h-4.953a28.678 28.678 0 0 0 4.953 2.423zm10-2.623h-9.8V60.1h9.8zm-10 0V60.1h-9.8v.702a28.915 28.915 0 0 0 4.526 3.542H29.9zm7.254-4.444H30.1v-2.403a19.966 19.966 0 0 0 7.053 2.403zm0-39.8a19.966 19.966 0 0 0-7.054 2.403V20.1h7.053zm2.746-.2h-9.8v-4.245h9.8zm-10 0v-4.245h-5.27a28.907 28.907 0 0 0-4.53 3.544v.701zm10-4.445h-9.8V12.96a28.729 28.729 0 0 1 9.8-1.749zm-10 0v-2.421a28.668 28.668 0 0 0-4.95 2.42h4.95zm6.679-4.244a28.81 28.81 0 0 0-6.479 1.536V11.21h6.479zm-6.679 1.61v-1.61h-3.5a6.303 6.303 0 0 0-6.02 4.436 6.514 6.514 0 0 1 1.575-.192h2.617A28.877 28.877 0 0 1 29.9 12.82zm0 55.968V67.18a28.878 28.878 0 0 1-5.331-2.636h-2.614c-.543 0-1.07-.067-1.575-.192a6.303 6.303 0 0 0 6.02 4.437zm20.2 0h3.5a6.303 6.303 0 0 0 6.02-4.438 6.513 6.513 0 0 1-1.576.193h-2.608a28.879 28.879 0 0 1-5.336 2.638zm-.2-1.534v1.534h-6.475a28.808 28.808 0 0 0 6.475-1.534zm.2-.287a28.671 28.671 0 0 0 4.957-2.424H50.1v2.424zm-.2-2.424v2.499a28.728 28.728 0 0 1-9.8 1.746v-4.245zm.2-.2h5.278a28.914 28.914 0 0 0 4.522-3.538V60.1h-9.8zm-.2-4.244v4.244h-9.8V60.1zm0-2.603V59.9h-7.053a19.966 19.966 0 0 0 7.053-2.403zm0-37.397v2.403a19.966 19.966 0 0 0-7.053-2.403H49.9zm.2-.2h9.8v-.705a28.911 28.911 0 0 0-4.526-3.54H50.1V19.9zm-.2-4.245V19.9h-9.8v-4.245h9.8zm.2-.2h4.954a28.676 28.676 0 0 0-4.954-2.423zm-.2-2.497v2.497h-9.8V11.21a28.75 28.75 0 0 1 9.8 1.747zm.2-.14a28.877 28.877 0 0 1 5.332 2.637h2.612c.543 0 1.071.066 1.576.192a6.303 6.303 0 0 0-6.02-4.436h-3.5zm-.2-1.607v1.534a28.812 28.812 0 0 0-6.475-1.534H49.9zm-34.245 44.53v2.303c0 .567.075 1.117.215 1.64a6.309 6.309 0 0 0 1.643.216h1.41a29.118 29.118 0 0 1-3.268-4.16zm3.458 4.359h-1.6a6.513 6.513 0 0 1-1.578-.193 6.315 6.315 0 0 0 4.157 4.157 6.517 6.517 0 0 1-.192-1.575v-1.602a29.35 29.35 0 0 1-.787-.787zm.787.509a29.029 29.029 0 0 1-.508-.509h.508zm.2.469v1.411c0 .567.075 1.117.215 1.64.523.14 1.073.215 1.64.215h2.3a29.118 29.118 0 0 1-4.155-3.266zm35.649 3.266h2.295c.567 0 1.117-.075 1.64-.216a6.286 6.286 0 0 0 .216-1.639v-1.407a29.116 29.116 0 0 1-4.151 3.262zm4.35-3.454v1.598a6.53 6.53 0 0 1-.192 1.574 6.314 6.314 0 0 0 4.155-4.154 6.509 6.509 0 0 1-1.572.191h-1.6a29.08 29.08 0 0 1-.791.791zm.982-.991h1.41c.565 0 1.114-.075 1.636-.215a6.31 6.31 0 0 0 .216-1.641V55.75a29.113 29.113 0 0 1-3.262 4.15zm3.262-35.65v-2.295c0-.568-.075-1.117-.216-1.64a6.307 6.307 0 0 0-1.637-.215h-1.41a29.112 29.112 0 0 1 3.263 4.15zM60.89 19.9h1.6c.542 0 1.069.066 1.573.192a6.314 6.314 0 0 0-4.156-4.157 6.51 6.51 0 0 1 .192 1.576v1.598c.269.259.532.522.79.791zm-.991-.981V17.51a6.31 6.31 0 0 0-.216-1.64 6.308 6.308 0 0 0-1.64-.216h-2.299a29.108 29.108 0 0 1 4.155 3.264zm-35.641-3.264h-2.304a6.31 6.31 0 0 0-1.639.215 6.306 6.306 0 0 0-.216 1.641v1.412a29.115 29.115 0 0 1 4.159-3.268zM19.9 19.113v-1.602c0-.543.067-1.072.193-1.577a6.315 6.315 0 0 0-4.159 4.16 6.518 6.518 0 0 1 1.58-.194h1.6c.257-.267.519-.53.786-.787zm-.508.787h.508v-.508c-.171.167-.34.337-.508.508zm-.47.2h-1.409a6.31 6.31 0 0 0-1.643.216 6.308 6.308 0 0 0-.215 1.639v2.305a29.107 29.107 0 0 1 3.268-4.16zm41.178-.712c.173.168.344.34.512.512H60.1zm.513 40.712c-.169.173-.34.344-.513.513V60.1z' fill='%2394a3b8' fill-rule='evenodd'/%3e%3crect fill='black' height='80' rx='16' width='80'/%3e%3cpath d='M43.47 19.752c1.24 5.14.821 9.663-.937 10.1-1.758.438-4.19-3.375-5.43-8.517-1.241-5.14-.822-9.663.936-10.1 1.759-.438 4.19 3.376 5.43 8.517zm20.49 4.42c-2.749-2.913-8.216-2.123-12.212 1.763s-5.008 9.398-2.26 12.31 8.215 2.123 12.211-1.763 5.008-9.398 2.26-12.31zM42.102 68.769c1.758-.438 2.116-5.216.8-10.673-1.318-5.456-3.81-9.525-5.57-9.088-1.757.438-2.115 5.216-.798 10.672 1.317 5.457 3.81 9.526 5.568 9.089zM24.18 26.838c5.073 1.496 8.78 4.12 8.28 5.862-.5 1.741-5.019 1.94-10.091.444-5.073-1.496-8.78-4.12-8.28-5.861.501-1.742 5.019-1.941 10.092-.445zm32.924 19.664c5.384 1.588 9.343 4.286 8.843 6.028-.5 1.741-5.27 1.866-10.654.278-5.385-1.588-9.343-4.286-8.843-6.028.5-1.741 5.27-1.866 10.654-.278zm-27.216-3.654c-1.258-1.304-5.384.594-9.215 4.24-3.832 3.644-5.919 7.656-4.66 8.96 1.257 1.304 5.383-.594 9.215-4.239s5.918-7.657 4.66-8.96z' fill='%23fe5'/%3e%3c/svg%3e",v=".pera-wallet-download-qr-code-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  margin: 26px auto 0;\n  padding: 10px;\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\n  border-radius: 24px;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-download-qr-code-wrapper {\n    margin-top: 51px;\n  }\n}";h(v);const w=document.createElement("template");w.innerHTML='\n  <div id="pera-wallet-download-qr-code-wrapper" class="pera-wallet-download-qr-code-wrapper"></div>  \n';class y extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const t=document.createElement("style");t.textContent=v,this.shadowRoot.append(w.content.cloneNode(!0),t)}}connectedCallback(){var t;const e=new o.default({width:205,height:205,type:"svg",data:i.PERA_DOWNLOAD_URL,image:g,dotsOptions:{color:"#000",type:"extra-rounded"},imageOptions:{crossOrigin:"anonymous",margin:10},cornersSquareOptions:{type:"extra-rounded"},cornersDotOptions:{type:"dot"}}),n=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-download-qr-code-wrapper");n&&e.append(n)}}var _="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.5 19L15.5 12L8.5 5' stroke='%233C3C49' stroke-width='2'/%3e%3c/svg%3e",b=".pera-wallet-connect-modal-desktop-mode {\n  display: grid;\n  grid-template-columns: 205px auto;\n  gap: 70px;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view {\n  display: block;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item--web-wallet {\n  display: none;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-toggle {\n  padding: 26px 24px 12px;\n  border-radius: 24px 24px 0 0;\n  transition: all ease-in 0.2s;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-item__content {\n  height: 434px;\n  border-radius: 0 0 24px 24px;\n  transition: height ease-in 0.2s;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-icon {\n  transform: rotate(90deg);\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-connect-modal-desktop-mode__download-pera-description {\n  margin-top: 50px;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__download-view {\n  display: none;\n}\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__default-view {\n  display: none;\n}\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__download-view {\n  display: block;\n}\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__download-view .pera-wallet-connect-modal-download-pera-view__footer a {\n  display: flex;\n  cursor: pointer;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account {\n  width: 100%;\n  height: 100%;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account.pera-wallet-connect-modal-desktop-mode--default {\n  overflow: hidden;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account .pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\n  position: unset;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account .pera-wallet-accordion {\n  overflow: hidden;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account #pera-wallet-iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__accordion__description,\n.pera-wallet-connect-modal-desktop-mode__connect-button-wrapper {\n  padding: 0 40px 20px 64px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: calc(100% - 88px);\n  padding: 48px 52px 40px;\n  margin: 0 auto;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 72px;\n  height: 72px;\n  margin: 0 auto 16px;\n  background: #ffffff;\n  border-radius: 50%;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.1), 0px 10px 16px rgba(20, 37, 63, 0.06);\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet__description {\n  margin: 0 auto 32px;\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: -0.1px;\n  text-align: center;\n  color: #6a6a81;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  padding: 14px 0;\n  color: #ffffff;\n  background-color: #6b46fe;\n  border-radius: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.1;\n  border: none;\n  outline: none;\n  cursor: pointer;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\n  position: relative;\n  width: fit-content;\n  margin: 0 auto;\n}\n\n.pera-wallet-connect-modal-desktop-mode__connect-button {\n  display: block;\n  width: 100%;\n  height: 48px;\n  border: unset;\n  border-radius: 6px;\n  background-color: #333333;\n  color: white;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 13px;\n}\n\n.pera-wallet-connect-qr-code-wrapper {\n  width: fit-content;\n  margin: 24px auto 0;\n  padding: 10px;\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\n  border-radius: 24px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__download-pera-description {\n  color: #838aa6;\n  text-align: center;\n  margin: 32px 0 12px;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.04px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__download-pera-button {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0 auto;\n  padding: 0;\n  color: #6b46fe;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 20px;\n  letter-spacing: 0.01px;\n  cursor: pointer;\n}\n\n.pera-wallet-connect-modal-download-pera-view__back-button {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 14px;\n  padding: 12px 24px;\n  color: #3c3c49;\n  background-color: #ffffff;\n  outline: none;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border: unset;\n  border-radius: 24px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  letter-spacing: -0.1px;\n  cursor: pointer;\n}\n\n.pera-wallet-connect-modal-download-pera-view {\n  padding: 32px 37px 28px;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border-radius: 24px;\n}\n\n.pera-wallet-connect-modal-download-pera-view__title {\n  margin-bottom: 8px;\n  color: #3c3c49;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 18px;\n  text-align: center;\n  letter-spacing: -0.13px;\n}\n\n.pera-wallet-connect-modal-download-pera-view__footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin-top: 53px;\n}\n\n.pera-wallet-connect-modal-download-pera-view__footer__button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 8px 16px;\n  color: #6a6a81;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  text-decoration: none;\n  border-radius: 12px;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 200%;\n  letter-spacing: -0.04px;\n  cursor: pointer;\n}\n\n#pera-wallet-iframe {\n  width: 285px;\n  height: 376px;\n  margin: 0 auto;\n  border: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-connect-modal-desktop-mode {\n    grid-template-columns: 1fr;\n    gap: 24px;\n  }\n  .pera-wallet-connect-qr-code-wrapper {\n    margin-top: 16px;\n  }\n  .pera-wallet-connect-modal-download-pera-view {\n    padding: 24px;\n  }\n  .pera-wallet-download-qr-code-wrapper {\n    margin-top: 32px;\n  }\n  .pera-wallet-connect-modal-download-pera-view__footer {\n    margin-top: 40px;\n  }\n}";h(b);var M=".pera-wallet-accordion-item {\n  background-color: #ffffff;\n  border-radius: 24px;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.02), 0px 4px 12px rgba(0, 0, 0, 0.03);\n}\n.pera-wallet-accordion-item:not(:last-of-type) {\n  margin-bottom: 20px;\n}\n.pera-wallet-accordion-item:not(:last-of-type) .pera-wallet-accordion-panel {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.pera-wallet-accordion-item .pera-wallet-accordion-item__content {\n  height: 0;\n  overflow: hidden;\n  color: #69708d;\n  background-color: #ffffff;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.04px;\n  transition: height ease-in 0.2s;\n}\n.pera-wallet-accordion-item--active .pera-wallet-accordion-toggle {\n  padding: 26px 24px 12px;\n  border-radius: 24px 24px 0 0;\n  transition: all ease-in 0.2s;\n}\n.pera-wallet-accordion-item--active .pera-wallet-accordion-item__content {\n  height: 364px;\n  border-radius: 0 0 24px 24px;\n  transition: height ease-in 0.2s;\n}\n.pera-wallet-accordion-item--active .pera-wallet-accordion-icon {\n  transform: rotate(90deg);\n}\n\n.pera-wallet-accordion-toggle {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 12px 24px;\n  color: #2c3559;\n  background-color: #ffffff;\n  border: none;\n  border-radius: 24px;\n  outline: none;\n  cursor: pointer;\n  font-size: 16px;\n  line-height: 18px;\n  letter-spacing: -0.1px;\n  font-weight: 600;\n  transition: all ease-in 0.2s;\n}\n.pera-wallet-accordion-toggle__text, .pera-wallet-accordion-toggle__content-with-label__text {\n  color: #6a6a81;\n}\n\n.pera-wallet-accordion-icon {\n  transition: all ease-in 0.2s;\n}\n\n.pera-wallet-accordion-toggle__bold-color {\n  color: #3c3c49;\n  font-weight: 600;\n}\n\n.pera-wallet-accordion-toggle__content-with-label {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.pera-wallet-accordion-toggle__label {\n  padding: 4px 9px;\n  color: #00b19e;\n  background: rgba(0, 177, 158, 0.08);\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0.01px;\n}\n\n.pera-wallet-accordion-toggle__button {\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n  background: transparent;\n  box-shadow: none;\n  outline: none;\n  border: none;\n  cursor: pointer;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-accordion-toggle {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: -0.1px;\n  }\n}";h(M);const x=document.createElement("template"),C=document.createElement("style"),k=document.createElement("style");C.textContent=b,k.textContent=M;const S=`\n  <div id="pera-wallet-connect-modal-desktop-mode" class="pera-wallet-connect-modal-desktop-mode pera-wallet-connect-modal-desktop-mode--default">\n      <pera-wallet-connect-modal-information-section></pera-wallet-connect-modal-information-section>\n\n      <div class="pera-wallet-connect-modal-desktop-mode__default-view">\n        <div class="pera-wallet-accordion-item pera-wallet-accordion-item--active pera-wallet-accordion-item--web-wallet">\n          <a class="pera-wallet-accordion-toggle">\n            <button class="pera-wallet-accordion-toggle__button"></button>\n\n            <img src="${_}" class="pera-wallet-accordion-icon" />\n\n            <div class="pera-wallet-accordion-toggle__content-with-label">\n              <div class="pera-wallet-accordion-toggle__content-with-label__text">\n                Connect With\n\n                <span class="pera-wallet-accordion-toggle__bold-color">\n                  Pera Web\n                </span>\n              </div>\n\n              <span id="pera-web-new-label" class="pera-wallet-accordion-toggle__label">NEW</span>\n            </div>\n          </a>\n\n          <div class="pera-wallet-accordion-item__content">\n          ${"Chrome"===i.detectBrowser()?'<div class="pera-wallet-connect-modal-desktop-mode__web-wallet-iframe"></div>':"<div class=\"pera-wallet-connect-modal-desktop-mode__web-wallet\">\n          <div>\n            <div\n              class=\"pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper\">\n              <img src=\"data:image/svg+xml,%3csvg width='44' height='44' viewBox='0 0 44 44' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='3.5' y='7.5' width='36' height='26' rx='5.5' stroke='%236B46FE' stroke-width='3'/%3e%3cpath d='M22.4973 14.5237C22.8556 16.041 22.7344 17.3757 22.2267 17.5048C21.719 17.6339 21.0169 16.5085 20.6586 14.9912C20.3003 13.4739 20.4214 12.1392 20.9292 12.0101C21.4369 11.881 22.1389 13.0064 22.4973 14.5237Z' fill='%236B46FE'/%3e%3cpath d='M28.4139 15.8282C27.6204 14.9686 26.0417 15.2016 24.8877 16.3486C23.7338 17.4956 23.4417 19.1222 24.2352 19.9818C25.0287 20.8414 26.6074 20.6084 27.7613 19.4614C28.9153 18.3144 29.2074 16.6878 28.4139 15.8282Z' fill='%236B46FE'/%3e%3cpath d='M22.1027 28.9905C22.6104 28.8614 22.7137 27.4512 22.3334 25.8407C21.9531 24.2303 21.2332 23.0294 20.7254 23.1585C20.2177 23.2876 20.1144 24.6978 20.4947 26.3083C20.875 27.9187 21.5949 29.1196 22.1027 28.9905Z' fill='%236B46FE'/%3e%3cpath d='M16.9269 16.6152C18.3917 17.0567 19.4621 17.8312 19.3176 18.3452C19.1731 18.8591 17.8686 18.9179 16.4037 18.4764C14.9389 18.0349 13.8686 17.2603 14.0131 16.7464C14.1575 16.2324 15.4621 16.1737 16.9269 16.6152Z' fill='%236B46FE'/%3e%3cpath d='M26.4342 22.4188C27.9889 22.8874 29.1322 23.6839 28.9877 24.1979C28.8432 24.7118 27.4657 24.7486 25.911 24.28C24.3563 23.8114 23.213 23.0148 23.3575 22.5009C23.502 21.9869 24.8795 21.9502 26.4342 22.4188Z' fill='%236B46FE'/%3e%3cpath d='M18.5752 21.3404C18.2119 20.9555 17.0205 21.5157 15.914 22.5915C14.8075 23.6673 14.2049 24.8514 14.5682 25.2363C14.9314 25.6211 16.1229 25.061 17.2294 23.9852C18.3359 22.9094 18.9384 21.7253 18.5752 21.3404Z' fill='%236B46FE'/%3e%3cpath d='M16 39C21 39.0001 23.5 39.0001 28 39' stroke='%236B46FE' stroke-width='3' stroke-linecap='round'/%3e%3c/svg%3e\" />\n            </div>\n\n            <p\n              class=\"pera-wallet-connect-modal-desktop-mode__web-wallet__description\">\n              Connect with Pera Web to continue\n            </p>\n          </div>\n\n          <button\n            id=\"pera-wallet-connect-web-wallet-launch-button\"\n            class=\"pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button\">\n            Launch Pera Web\n\n            <img src=\"data:image/svg+xml,%3csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M13.0892 9.41009C13.4147 9.73553 13.4147 10.2632 13.0892 10.5886L8.08924 15.5886C7.7638 15.914 7.23616 15.914 6.91072 15.5886C6.58529 15.2632 6.58529 14.7355 6.91072 14.4101L11.3215 9.99935L6.91073 5.5886C6.58529 5.26317 6.58529 4.73553 6.91073 4.41009C7.23616 4.08466 7.7638 4.08466 8.08924 4.41009L13.0892 9.41009Z' fill='white'/%3e%3c/svg%3e\" />\n          </button>\n        </div>"}\n          </div>\n        </div>\n\n        <div class="pera-wallet-accordion-item">\n          <a class="pera-wallet-accordion-toggle">\n          <button class="pera-wallet-accordion-toggle__button"></button>\n\n            <img src="${_}" class="pera-wallet-accordion-icon" />\n\n            <div class="pera-wallet-accordion-toggle__text">\n              Connect with\n\n              <span class="pera-wallet-accordion-toggle__bold-color">\n                Pera Mobile\n              </span>\n            </div>\n          </a>\n\n          <div class="pera-wallet-accordion-item__content">\n            <div id="pera-wallet-connect-modal-connect-qr-code" class="pera-wallet-connect-qr-code-wrapper"></div>\n\n            <div>\n              <p\n                class="pera-wallet-connect-modal-desktop-mode__download-pera-description">\n                  Don’t have Pera Wallet app?\n              </p>\n\n              <button\n                id="pera-wallet-connect-modal-desktop-mode-download-pera-button"\n                class="pera-wallet-connect-modal-desktop-mode__download-pera-button">\n                <img src="data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='2' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3crect x='2' y='9.33203' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3crect x='9.33325' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3cpath d='M8.70581 9.5293H10.9411' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 12.668L14.6667 12.668' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 14L14.6667 14' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M11.686 14L13.1762 14' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M12.4314 9.5293H14.6667' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M8.70581 10.2754H12.4313' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.7656H11.6862' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 12.5117H11.6862' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 13.2539H10.196' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 14H10.196' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.0195H12.4313' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3c/svg%3e" alt="QR Icon" />\n\n                Download Pera Wallet\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="pera-wallet-connect-modal-desktop-mode__download-view">\n        <button\n          id="pera-wallet-connect-modal-download-pera-view-back-button"\n          class="pera-wallet-connect-modal-download-pera-view__back-button">\n          <img\n            src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.7071 6.29387C11.0976 6.68439 11.0976 7.31756 10.7071 7.70808L7.41421 11.001L19 11.001C19.5523 11.001 20 11.4487 20 12.001C20 12.5533 19.5523 13.001 19 13.001L7.41421 13.001L10.7071 16.2939C11.0976 16.6844 11.0976 17.3176 10.7071 17.7081C10.3166 18.0986 9.68342 18.0986 9.29289 17.7081L4.29289 12.7081C4.10536 12.5205 4 12.2662 4 12.001C4 11.7358 4.10536 11.4814 4.29289 11.2939L9.29289 6.29387C9.68342 5.90335 10.3166 5.90335 10.7071 6.29387Z' fill='%233C3C49'/%3e%3c/svg%3e"\n            alt="Back Arrow"\n          />\n\n          Back\n        </button>\n\n        <div class="pera-wallet-connect-modal-download-pera-view">\n          <h1 class="pera-wallet-connect-modal-download-pera-view__title">\n            Download Pera Wallet\n          </h1>\n\n          <pera-wallet-download-qr-code></pera-wallet-download-qr-code>\n\n          <div class="pera-wallet-connect-modal-download-pera-view__footer">\n            <a\n              href="https://apps.apple.com/us/app/algorand-wallet/id1459898525"\n              target="_blank"\n              rel="noopener noreferrer">\n              <img src="data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M25.6308 20.3011C25.6416 19.4664 25.8633 18.6481 26.2753 17.9221C26.6873 17.1962 27.2763 16.5863 27.9873 16.1491C27.5356 15.5039 26.9397 14.973 26.2469 14.5984C25.554 14.2239 24.7834 14.016 23.9963 13.9914C22.317 13.8151 20.6891 14.9962 19.8333 14.9962C18.9611 14.9962 17.6436 14.0089 16.2249 14.0381C15.3072 14.0677 14.4128 14.3346 13.6289 14.8126C12.8451 15.2906 12.1984 15.9636 11.7519 16.7659C9.81789 20.1144 11.2605 25.0354 13.1132 27.742C14.0401 29.0674 15.1233 30.5478 16.5408 30.4953C17.9278 30.4378 18.4458 29.6108 20.1202 29.6108C21.779 29.6108 22.265 30.4953 23.7112 30.4619C25.1995 30.4378 26.1372 29.1307 27.0316 27.7928C27.6976 26.8484 28.2101 25.8047 28.55 24.7003C27.6853 24.3345 26.9474 23.7224 26.4283 22.9401C25.9092 22.1578 25.6318 21.2399 25.6308 20.3011ZM22.8993 12.2113C23.7108 11.2371 24.1106 9.98492 24.0138 8.7207C22.7739 8.85092 21.6287 9.44347 20.8062 10.3803C20.404 10.838 20.096 11.3704 19.8998 11.9472C19.7035 12.5239 19.6229 13.1337 19.6625 13.7417C20.2826 13.7481 20.8961 13.6137 21.4568 13.3486C22.0175 13.0835 22.5107 12.6946 22.8993 12.2113Z' fill='white'/%3e%3c/svg%3e" alt="App Store icon" />\n            </a>\n\n            <a\n              href="https://play.google.com/store/apps/details?id=com.algorand.android"\n              target="_blank"\n              rel="noopener noreferrer">\n              <img src="data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M12.41 9.7719C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922V10.8671V29.1294V29.0091C11.9683 29.5202 12.1099 29.9149 12.3497 30.169L12.4109 30.2277V30.228C12.6051 30.4035 12.854 30.4966 13.1393 30.4963C13.418 30.4963 13.7316 30.4073 14.0626 30.2194L26.0264 23.4107L30.1359 21.0717C30.6578 20.7748 30.9508 20.3917 30.9998 20.0014V19.9998C30.9508 19.6087 30.6578 19.2259 30.1359 18.9289L26.0261 16.5902L14.0627 9.78154C13.731 9.59325 13.4171 9.50391 13.1376 9.50391C12.8527 9.50391 12.6041 9.59677 12.41 9.7719H12.41Z' fill='%2300C1FF'/%3e%3cpath d='M12.411 30.2285L12.3497 30.1698C12.1099 29.9157 11.9683 29.5209 11.9683 29.0098V29.1301V10.8724V10.993C11.9683 10.4396 12.1334 10.0226 12.41 9.77268L22.622 20.0009L12.411 30.2285Z' fill='url(%23paint0_linear_173_14441)'/%3e%3cpath d='M26.0256 23.4102L22.6211 19.9996L26.0253 16.5896L30.1351 18.9283C30.657 19.2253 30.95 19.6081 30.9989 19.9993V20.0008C30.95 20.3911 30.657 20.7742 30.1351 21.0712L26.0256 23.4101' fill='url(%23paint1_linear_173_14441)'/%3e%3cpath d='M13.1374 30.4961C12.8522 30.4964 12.6033 30.4032 12.4092 30.2277V30.2275L22.6202 19.9999L26.0246 23.4104L14.0608 30.2191C13.7298 30.4071 13.4162 30.4961 13.1374 30.4961Z' fill='url(%23paint2_linear_173_14441)'/%3e%3cpath d='M22.6212 20.002L12.4092 9.7737C12.6033 9.59858 12.8519 9.50571 13.1368 9.50571C13.4163 9.50571 13.7302 9.59501 14.0618 9.78335L26.0253 16.592L22.6212 20.002' fill='url(%23paint3_linear_173_14441)'/%3e%3cpath d='M13.1394 30.6172C12.8542 30.6172 12.6049 30.524 12.4108 30.3486L12.4105 30.3489C12.4097 30.3481 12.4088 30.3473 12.4079 30.3466L12.3548 30.2947C12.3531 30.2931 12.3516 30.2912 12.3496 30.2893L12.4108 30.2279C12.6049 30.4034 12.8538 30.4966 13.1392 30.4962C13.4179 30.4962 13.7315 30.4073 14.0625 30.2193L26.0263 23.4106L26.1029 23.4874L26.0253 23.5316L14.0625 30.3398C13.7608 30.5111 13.4739 30.6004 13.2147 30.6153C13.1896 30.6165 13.1645 30.6171 13.1394 30.6172' fill='url(%23paint4_linear_173_14441)'/%3e%3cpath d='M12.3497 30.2891C12.1099 30.0349 11.9683 29.6406 11.9683 29.1292V29.0089C11.9683 29.52 12.1099 29.9146 12.3497 30.1688L12.4109 30.2275L12.3497 30.2891Z' fill='url(%23paint5_linear_173_14441)'/%3e%3cpath d='M26.1025 23.4882L26.0259 23.4114L30.1349 21.0727C30.6568 20.7758 30.9498 20.3927 30.9987 20.0025C30.9987 20.1457 30.9668 20.2889 30.9035 20.4282C30.7756 20.7091 30.5194 20.9744 30.135 21.1934L26.1025 23.4883' fill='url(%23paint6_linear_173_14441)'/%3e%3cpath d='M30.9991 20C30.9501 19.6089 30.6571 19.2261 30.1353 18.9291L26.0259 16.5907L26.1025 16.5139H26.1029L30.1353 18.8088C30.7106 19.1365 30.9987 19.5682 30.9991 20Z' fill='url(%23paint7_linear_173_14441)'/%3e%3cpath d='M11.9683 10.9922V10.8661C11.9683 10.8206 11.9695 10.7761 11.9718 10.7329V10.7309C11.9718 10.7303 11.9718 10.7297 11.972 10.729V10.7242C11.9969 10.284 12.1334 9.94066 12.3497 9.71139L12.4099 9.77198C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922Z' fill='url(%23paint8_linear_173_14441)'/%3e%3cpath d='M26.026 16.5898L14.0625 9.78115C13.7308 9.59285 13.417 9.50355 13.1375 9.50355C12.8525 9.50355 12.6039 9.59642 12.4099 9.77154L12.3496 9.71091C12.3684 9.69096 12.388 9.67172 12.4082 9.65322C12.4089 9.65255 12.4099 9.65188 12.4105 9.65125C12.6031 9.47747 12.849 9.3846 13.1314 9.38293H13.1375C13.417 9.38293 13.7308 9.47227 14.0625 9.66064L26.1029 16.5128L26.1026 16.513L26.026 16.5898Z' fill='url(%23paint9_linear_173_14441)'/%3e%3cdefs%3e%3clinearGradient id='paint0_linear_173_14441' x1='18.4943' y1='10.6794' x2='9.69389' y2='19.494' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2300A0FF'/%3e%3cstop offset='0.00657' stop-color='%2300A1FF'/%3e%3cstop offset='0.2601' stop-color='%2300BEFF'/%3e%3cstop offset='0.5122' stop-color='%2300D2FF'/%3e%3cstop offset='0.7604' stop-color='%2300DFFF'/%3e%3cstop offset='1' stop-color='%2300E3FF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint1_linear_173_14441' x1='31.6348' y1='19.9407' x2='11.691' y2='19.9407' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE000'/%3e%3cstop offset='0.4087' stop-color='%23FFBD00'/%3e%3cstop offset='0.7754' stop-color='orange'/%3e%3cstop offset='1' stop-color='%23FF9C00'/%3e%3c/linearGradient%3e%3clinearGradient id='paint2_linear_173_14441' x1='24.2172' y1='23.2425' x2='9.30414' y2='38.0705' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FF3A44'/%3e%3cstop offset='1' stop-color='%23C31162'/%3e%3c/linearGradient%3e%3clinearGradient id='paint3_linear_173_14441' x1='9.77725' y1='8.25731' x2='16.4237' y2='14.876' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2332A071'/%3e%3cstop offset='0.0685' stop-color='%232DA771'/%3e%3cstop offset='0.4762' stop-color='%2315CF74'/%3e%3cstop offset='0.8009' stop-color='%2306E775'/%3e%3cstop offset='1' stop-color='%2300F076'/%3e%3c/linearGradient%3e%3clinearGradient id='paint4_linear_173_14441' x1='24.2114' y1='25.6084' x2='12.2683' y2='37.5709' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23CC2E36'/%3e%3cstop offset='1' stop-color='%239C0E4E'/%3e%3c/linearGradient%3e%3clinearGradient id='paint5_linear_173_14441' x1='13.3285' y1='10.6804' x2='5.57625' y2='18.4453' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23008DE0'/%3e%3cstop offset='0.00657' stop-color='%23008DE0'/%3e%3cstop offset='0.2601' stop-color='%2300A7E0'/%3e%3cstop offset='0.5122' stop-color='%2300B8E0'/%3e%3cstop offset='0.7604' stop-color='%2300C4E0'/%3e%3cstop offset='1' stop-color='%2300C7E0'/%3e%3c/linearGradient%3e%3clinearGradient id='paint6_linear_173_14441' x1='31.6346' y1='20.0018' x2='11.6929' y2='20.0018' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23E0C500'/%3e%3cstop offset='0.4087' stop-color='%23E0A600'/%3e%3cstop offset='0.7754' stop-color='%23E09100'/%3e%3cstop offset='1' stop-color='%23E08900'/%3e%3c/linearGradient%3e%3clinearGradient id='paint7_linear_173_14441' x1='31.6349' y1='20.0008' x2='11.6933' y2='20.0008' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE840'/%3e%3cstop offset='0.4087' stop-color='%23FFCE40'/%3e%3cstop offset='0.7754' stop-color='%23FFBC40'/%3e%3cstop offset='1' stop-color='%23FFB540'/%3e%3c/linearGradient%3e%3clinearGradient id='paint8_linear_173_14441' x1='13.3201' y1='10.6927' x2='5.8533' y2='17.8475' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2340B8FF'/%3e%3cstop offset='0.00657' stop-color='%2340B9FF'/%3e%3cstop offset='0.2601' stop-color='%2340CEFF'/%3e%3cstop offset='0.5122' stop-color='%2340DDFF'/%3e%3cstop offset='0.7604' stop-color='%2340E7FF'/%3e%3cstop offset='1' stop-color='%2340EAFF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint9_linear_173_14441' x1='9.76302' y1='10.4182' x2='15.0961' y2='15.76' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2365B895'/%3e%3cstop offset='0.0685' stop-color='%2362BD95'/%3e%3cstop offset='0.4762' stop-color='%2350DB97'/%3e%3cstop offset='0.8009' stop-color='%2344ED98'/%3e%3cstop offset='1' stop-color='%2340F498'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e" alt="Play Store icon" />\n            </a>\n\n            <a\n              class="pera-wallet-connect-modal-download-pera-view__footer__button"\n              href="https://perawallet.s3-eu-west-3.amazonaws.com/android-releases/app-pera-prod-release-bitrise-signed.apk"\n              target="_blank"\n              rel="noopener noreferrer">\n              <img src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M3 14V20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20V14' stroke='%232C3559' stroke-width='1.5'/%3e%3cpath d='M11.9998 16V3M11.9998 16L7.47803 11.4783M11.9998 16L16.5215 11.4783' stroke='%232C3559' stroke-width='1.5'/%3e%3c/svg%3e" alt="Download icon" />\n\n              Download APK File\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;x.innerHTML=S;class A extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot&&(this.shadowRoot.append(x.content.cloneNode(!0),C,k),this.shadowRoot.addEventListener("click",(t=>{this.handleAccordion(t)})))}connectedCallback(){var t;const e=this.getAttribute("should-display-new-badge"),n=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-web-new-label");if("false"===e&&(null==n||n.setAttribute("style","display:none")),this.handleChangeView(),"Chrome"===i.detectBrowser()&&this.shadowRoot){const t=this.shadowRoot.querySelector(".pera-wallet-connect-modal-desktop-mode__web-wallet-iframe");t&&"true"===this.getAttribute("is-web-wallet-avaliable")&&window.onWebWalletConnect(t)}}handleChangeView(){var t,e,n;const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-desktop-mode-download-pera-button"),r=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("pera-wallet-connect-modal-download-pera-view-back-button"),a=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById("pera-wallet-connect-web-wallet-launch-button");i&&i.addEventListener("click",(()=>{this.onClickDownload()})),r&&r.addEventListener("click",(()=>{this.onClickBack()})),a&&a.addEventListener("click",(()=>{this.webWalletConnect()})),this.renderQRCode(),this.checkWebWalletAvaliability()}webWalletConnect(){"true"===this.getAttribute("is-web-wallet-avaliable")&&window.onWebWalletConnect()}handleAccordion(t){var e,n;if(t.target instanceof Element){if(!t.target.classList.contains("pera-wallet-accordion-toggle__button"))return;if(this.shadowRoot&&(null===(e=t.target.parentElement)||void 0===e?void 0:e.parentElement)){const e=null===(n=t.target.parentElement)||void 0===n?void 0:n.parentElement;if(!e)return;if(e.classList.contains("pera-wallet-accordion-item--active"))return;const i=this.shadowRoot.querySelectorAll(".pera-wallet-accordion-item.pera-wallet-accordion-item--active");for(let t=0;t<i.length;t++)i[t].classList.remove("pera-wallet-accordion-item--active");e.classList.toggle("pera-wallet-accordion-item--active")}}}renderQRCode(){var t;const e=this.getAttribute("uri"),n="false"===this.getAttribute("is-web-wallet-avaliable")?250:205;if(e){const i=new o.default({width:n,height:n,type:"svg",data:e,image:g,dotsOptions:{color:"#000",type:"extra-rounded"},imageOptions:{crossOrigin:"anonymous",margin:10},cornersSquareOptions:{type:"extra-rounded"},cornersDotOptions:{type:"dot"}}),r=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-connect-qr-code");r&&i.append(r)}}onClickDownload(){if(this.shadowRoot){const t=this.shadowRoot.getElementById("pera-wallet-connect-modal-desktop-mode");t&&(t.classList.remove("pera-wallet-connect-modal-desktop-mode--default"),t.classList.add("pera-wallet-connect-modal-desktop-mode--download"))}}onClickBack(){if(this.shadowRoot){const t=this.shadowRoot.getElementById("pera-wallet-connect-modal-desktop-mode");t&&(t.classList.add("pera-wallet-connect-modal-desktop-mode--default"),t.classList.remove("pera-wallet-connect-modal-desktop-mode--download"))}}checkWebWalletAvaliability(){var t;if("false"===this.getAttribute("is-web-wallet-avaliable")){const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".pera-wallet-connect-modal-desktop-mode__default-view");null==e||e.classList.add("pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable")}}}var E=".pera-wallet-connect-modal-touch-screen-mode {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 46px;\n  padding: 4px;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode--pending-message-view {\n  gap: 56px;\n  grid-template-rows: auto 48px;\n  height: 100%;\n  padding-bottom: 70px;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button,\n.pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button {\n  display: block;\n  padding: 14px;\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button {\n  margin-bottom: 32px;\n  background-color: #6b46fe;\n  color: #ffffff;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button {\n  margin-bottom: 20px;\n  color: #6a6a81;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box {\n  position: relative;\n  margin-bottom: 32px;\n  border-top: 1px solid #e6e8ee;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box__text {\n  position: absolute;\n  top: -25px;\n  right: calc(50% - 56px);\n  width: 116px;\n  color: #69708d;\n  background-color: #ffffff;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.04px;\n  text-align: center;\n}";h(E);const L=document.createElement("template");class P extends HTMLElement{constructor(){var t;if(super(),this.attachShadow({mode:"open"}),L.innerHTML='\n  <div class="pera-wallet-connect-modal-touch-screen-mode">\n    <pera-wallet-connect-modal-information-section></pera-wallet-connect-modal-information-section>\n\n    <div>\n      <a\n        id="pera-wallet-connect-modal-touch-screen-mode-launch-pera-wallet-button"\n        class="pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button"\n        rel="noopener noreferrer"\n        target="_blank">\n        Launch Pera Wallet\n      </a>\n\n      <div\n        class="pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box">\n        <p\n          class="pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box__text"\n          >\n          New to Pera?\n        </p>\n      </div>\n\n      <a\n        href="https://perawallet.app/download/"\n        class="pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button"\n        rel="noopener noreferrer"\n        target="_blank">\n        Install Pera Wallet\n      </a>\n    </div>\n  </div>\n',this.shadowRoot){const e=document.createElement("style");e.textContent=E,this.shadowRoot.append(L.content.cloneNode(!0),e);const n=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-touch-screen-mode-launch-pera-wallet-button"),r=this.getAttribute("uri");n&&r&&(n.setAttribute("href",i.generatePeraWalletConnectDeepLink(r)),n.addEventListener("click",(()=>{this.onClickLaunch()})))}}onClickLaunch(){if(L.innerHTML=`\n    <div class="pera-wallet-connect-modal-touch-screen-mode pera-wallet-connect-modal-touch-screen-mode--pending-message-view">\n      <pera-wallet-connect-modal-pending-message-section should-use-sound="${this.getAttribute("should-use-sound")}"></pera-wallet-connect-modal-pending-message-section>\n    </div>\n  `,this.shadowRoot){const t=document.createElement("style");t.textContent=E,this.shadowRoot.innerHTML="",this.shadowRoot.append(L.content.cloneNode(!0),t)}}}var I='@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}';h(I);const T=document.createElement("template"),F=i.isMobile()?`${i.PERA_WALLET_MODAL_CLASSNAME} ${i.PERA_WALLET_MODAL_CLASSNAME}--mobile`:`${i.PERA_WALLET_MODAL_CLASSNAME} ${i.PERA_WALLET_MODAL_CLASSNAME}--desktop`;class D extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const t=document.createElement("style");t.textContent=I,d()&&i.isMobile()?(T.innerHTML=`\n        <div class="${F}">\n          <div class="pera-wallet-modal__body" part="body">\n            <pera-wallet-modal-header modal-id="${i.PERA_WALLET_CONNECT_MODAL_ID}"></pera-wallet-modal-header/>\n      \n            <pera-wallet-modal-touch-screen-mode uri="${this.getAttribute("uri")}" should-use-sound="${this.getAttribute("should-use-sound")}"></pera-wallet-modal-touch-screen-mode>\n          </div>\n        </div>\n      `,this.shadowRoot.append(T.content.cloneNode(!0),t)):(T.innerHTML=`\n          <div class="${F}">\n            <div class="pera-wallet-modal__body">\n              <pera-wallet-modal-header modal-id="${i.PERA_WALLET_CONNECT_MODAL_ID}"></pera-wallet-modal-header/>\n        \n              <pera-wallet-modal-desktop-mode id="pera-wallet-modal-desktop-mode" uri="${this.getAttribute("uri")}" is-web-wallet-avaliable="${this.getAttribute("is-web-wallet-avaliable")}" should-display-new-badge="${this.getAttribute("should-display-new-badge")}"></pera-wallet-modal-desktop-mode>\n            </div>\n          </div>\n        `,this.shadowRoot.append(T.content.cloneNode(!0),t))}}}var O='@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}\n.pera-wallet-redirect-modal {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 56px;\n  grid-template-rows: auto 48px;\n  height: 100%;\n  padding: 4px;\n  padding-bottom: 70px;\n}\n\n.pera-wallet-redirect-modal__content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.pera-wallet-redirect-modal__content__title {\n  margin: 20px 0 8px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n  letter-spacing: -0.26px;\n}\n\n.pera-wallet-redirect-modal__content__description,\n.pera-wallet-redirect-modal__content__install-pera-text {\n  color: #3c3c49;\n  max-width: 271px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n  text-align: center;\n}\n\n.pera-wallet-redirect-modal__content__description {\n  margin-bottom: 24px;\n}\n\n.pera-wallet-redirect-modal__content__install-pera-text__link {\n  color: #6b46fe;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n  text-align: center;\n}\n\n.pera-wallet-redirect-modal__launch-pera-wallet-button {\n  display: block;\n  padding: 14px;\n  color: #ffffff;\n  background-color: #6b46fe;\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n}';h(O);const R=document.createElement("template");R.innerHTML=`\n  <div class="pera-wallet-modal pera-wallet-modal--mobile">\n    <div class="pera-wallet-modal__body">\n      <pera-wallet-modal-header modal-id="${i.PERA_WALLET_REDIRECT_MODAL_ID}"></pera-wallet-modal-header/>\n\n      <div class="pera-wallet-redirect-modal">\n        <div class="pera-wallet-redirect-modal__content">\n          <img src="data:image/svg+xml,%3csvg width='120' height='38' viewBox='0 0 120 38' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg clip-path='url(%23clip0_38844_290434)'%3e%3cpath d='M103.739 28.6746H109.565' stroke='%236B46FE' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/%3e%3cpath d='M112.25 37H100.75C97.5731 37 95 34.2336 95 30.8182V9.18182C95 5.76636 97.5731 3 100.75 3H112.25C115.427 3 118 5.76636 118 9.18182V30.8182C118 34.2336 115.427 37 112.25 37Z' fill='%236B46FE' fill-opacity='0.1' stroke='%236B46FE' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/%3e%3crect y='1' width='36' height='36' rx='7.76829' fill='%236B46FE' fill-opacity='0.1'/%3e%3cpath d='M19.6057 9.47351C20.1851 11.8819 19.9967 14.0022 19.1848 14.2093C18.373 14.4164 17.2452 12.6319 16.6658 10.2235C16.0864 7.81514 16.2748 5.69486 17.0867 5.48775C17.8985 5.28063 19.0263 7.06512 19.6057 9.47351Z' fill='%236B46FE'/%3e%3cpath d='M29.0775 11.5213C27.8045 10.1593 25.2795 10.5358 23.4378 12.3621C21.5961 14.1885 21.1352 16.7732 22.4083 18.1352C23.6814 19.4972 26.2064 19.1207 28.048 17.2943C29.8897 15.4679 30.3506 12.8832 29.0775 11.5213Z' fill='%236B46FE'/%3e%3cpath d='M19.0324 32.4518C19.8443 32.2446 20.0039 30.0045 19.3889 27.4483C18.774 24.8921 17.6173 22.9877 16.8055 23.1948C15.9937 23.402 15.834 25.6421 16.449 28.1983C17.064 30.7545 18.2206 32.6589 19.0324 32.4518Z' fill='%236B46FE'/%3e%3cpath d='M10.7016 12.818C13.0471 13.5132 14.7627 14.739 14.5336 15.5559C14.3045 16.3728 12.2175 16.4714 9.87199 15.7762C7.52653 15.0809 5.81087 13.8551 6.03996 13.0383C6.26906 12.2214 8.35615 12.1228 10.7016 12.818Z' fill='%236B46FE'/%3e%3cpath d='M25.9365 21.9967C28.4259 22.7346 30.2583 23.995 30.0292 24.8119C29.8001 25.6287 27.5963 25.6927 25.1069 24.9548C22.6174 24.2169 20.7851 22.9565 21.0141 22.1397C21.2432 21.3228 23.447 21.2588 25.9365 21.9967Z' fill='%236B46FE'/%3e%3cpath d='M13.3578 20.316C12.775 19.7063 10.8709 20.6007 9.10487 22.3139C7.33879 24.0271 6.37952 25.9102 6.96226 26.5199C7.54501 27.1297 9.4491 26.2352 11.2152 24.522C12.9813 22.8089 13.9405 20.9258 13.3578 20.316Z' fill='%236B46FE'/%3e%3cpath d='M70.2098 10L75.3049 15.0945L52 15.0945' stroke='%23D0CAE7' stroke-width='3'/%3e%3cpath d='M60.7902 29.5945L55.6951 24.5L79 24.5' stroke='%23D0CAE7' stroke-width='3'/%3e%3c/g%3e%3cdefs%3e%3cclipPath id='clip0_38844_290434'%3e%3crect width='120' height='38' fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e" />\n\n          <h1 class="pera-wallet-redirect-modal__content__title">\n            Can't Launch Pera\n          </h1>\n\n          <p class="pera-wallet-redirect-modal__content__description">\n            We couldn't redirect you to Pera Wallet automatically. Please try again.\n          </p>\n\n          <p class="pera-wallet-redirect-modal__content__install-pera-text">\n            Don't have Pera Wallet installed yet?\n            <br />\n            \n            <a\n              id="pera-wallet-redirect-modal-download-pera-link"\n              class="pera-wallet-redirect-modal__content__install-pera-text__link"\n              href="https://perawallet.app/download/"\n              rel="noopener noreferrer"\n              target="_blank">\n              Tap here to install.\n            </a>\n          </p>\n        </div>\n\n        <a\n          id="pera-wallet-redirect-modal-launch-pera-link"\n          class="pera-wallet-redirect-modal__launch-pera-wallet-button"\n          rel="noopener noreferrer"\n          target="_blank">\n          Launch Pera Wallet\n        </a>\n      </div>\n    </div>\n  </div>\n`;class N extends HTMLElement{constructor(){var t,e;if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const n=document.createElement("style");n.textContent=O,this.shadowRoot.append(R.content.cloneNode(!0),n);const r=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-redirect-modal-download-pera-link");null==r||r.addEventListener("click",(()=>{this.onClose()}));const a=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("pera-wallet-redirect-modal-launch-pera-link");null==a||a.addEventListener("click",(()=>{this.onClose(),window.open(i.generatePeraWalletAppDeepLink(),"_blank")}))}}connectedCallback(){const t=window.open(i.generatePeraWalletAppDeepLink(),"_blank");t&&!t.closed&&this.onClose()}onClose(){i.removeModalWrapperFromDOM(i.PERA_WALLET_REDIRECT_MODAL_ID)}}var B="data:image/svg+xml,%3csvg width='32' height='35' viewBox='0 0 32 35' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.2837 5.09271C19.0234 8.12325 18.7827 10.7913 17.7463 11.0519C16.7098 11.3126 15.27 9.06712 14.5304 6.03657C13.7908 3.00603 14.0315 0.337996 15.0679 0.0773547C16.1044 -0.183287 17.5441 2.06216 18.2837 5.09271Z' fill='%233C3C49'/%3e%3cpath d='M30.376 7.66915C28.7507 5.95537 25.5271 6.42918 23.1759 8.72745C20.8247 11.0257 20.2361 14.2781 21.8614 15.9919C23.4866 17.7057 26.7102 17.2319 29.0614 14.9336C31.4127 12.6354 32.0012 9.38294 30.376 7.66915Z' fill='%233C3C49'/%3e%3cpath d='M17.5511 34.0071C18.5876 33.7465 18.7914 30.9276 18.0064 27.711C17.2214 24.4945 15.7448 22.0982 14.7084 22.3589C13.6719 22.6195 13.4681 25.4383 14.2531 28.6549C15.0381 31.8715 16.5147 34.2677 17.5511 34.0071Z' fill='%233C3C49'/%3e%3cpath d='M6.91617 9.3015C9.9105 10.1763 12.1008 11.7187 11.8083 12.7466C11.5158 13.7745 8.85126 13.8986 5.85693 13.0239C2.8626 12.1491 0.672334 10.6067 0.964835 9.57881C1.25734 8.5509 3.92184 8.42674 6.91617 9.3015Z' fill='%233C3C49'/%3e%3cpath d='M26.3656 20.8508C29.5437 21.7793 31.883 23.3652 31.5905 24.3932C31.298 25.4211 28.4845 25.5017 25.3063 24.5732C22.1282 23.6448 19.7889 22.0588 20.0814 21.0309C20.3739 20.003 23.1874 19.9224 26.3656 20.8508Z' fill='%233C3C49'/%3e%3cpath d='M10.3069 18.7365C9.56299 17.9692 7.13209 19.0948 4.87736 21.2506C2.62264 23.4064 1.39791 25.776 2.14185 26.5432C2.8858 27.3105 5.3167 26.1849 7.57143 24.0291C9.82615 21.8733 11.0509 19.5037 10.3069 18.7365Z' fill='%233C3C49'/%3e%3c/svg%3e",z=".pera-wallet-connect-modal-information-section {\n  padding: 12px;\n  padding-right: 0;\n}\n.pera-wallet-connect-modal-information-section--mobile {\n  padding: 0;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__pera-icon {\n  margin-bottom: 16px;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__connect-pera-title {\n  margin-bottom: 8px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n  letter-spacing: -0.2px;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__title {\n  margin-bottom: 24px;\n  color: #3c3c49;\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n  font-weight: 400;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__features-item__icon-wrapper {\n  background-color: #f2f3f8;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__features-item__description {\n  color: #6a6a81;\n}\n.pera-wallet-connect-modal-information-section * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.pera-wallet-connect-modal-information-section__pera-icon {\n  margin-bottom: 32px;\n}\n\n.pera-wallet-connect-modal-information-section__title {\n  margin-bottom: 148px;\n  color: #3c3c49;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.5px;\n}\n\n.pera-wallet-connect-modal-information-section__secondary-title {\n  margin-bottom: 20px;\n  color: #9d9dae;\n  font-size: 11px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0.06px;\n  text-transform: uppercase;\n}\n\n.pera-wallet-connect-modal-information-section__features-item {\n  display: grid;\n  align-items: center;\n  grid-template-columns: 36px auto;\n  gap: 16px;\n}\n.pera-wallet-connect-modal-information-section__features-item:not(:last-of-type) {\n  margin-bottom: 24px;\n}\n\n.pera-wallet-connect-modal-information-section__features-item__icon-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  background-color: #ffffff;\n  border-radius: 50%;\n}\n\n.pera-wallet-connect-modal-information-section__features-item__description {\n  color: #6a6a81;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: 0.01px;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-connect-modal-information-section--desktop {\n    padding: 0;\n  }\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__pera-icon {\n    margin-bottom: 12px;\n  }\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__title {\n    margin-bottom: 24px;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: -0.26px;\n  }\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__features-item {\n    display: none;\n  }\n  .pera-wallet-connect-modal-information-section__secondary-title {\n    display: none;\n  }\n}";h(z);const W=document.createElement("template"),q=i.isMobile()?"pera-wallet-connect-modal-information-section pera-wallet-connect-modal-information-section--mobile":"pera-wallet-connect-modal-information-section pera-wallet-connect-modal-information-section--desktop";W.innerHTML=`\n  <section class="${q}">\n    <img\n      id="pera-wallet-connect-modal-information-section-pera-icon"\n      src="${B}"\n      class="pera-wallet-connect-modal-information-section__pera-icon"\n      alt="Pera Wallet Logo"\n    />\n\n    <h1 id="pera-wallet-connect-modal-information-section-connect-pera-mobile" class="pera-wallet-connect-modal-information-section__connect-pera-title">\n        Connect to Pera Wallet\n    </h1>\n\n    <h1 class="pera-wallet-connect-modal-information-section__title">\n      Simply the best Algorand wallet.\n    </h1>\n\n    <h2 id="pera-wallet-connect-modal-information-section-secondary-title" class="pera-wallet-connect-modal-information-section__secondary-title">\n      Features\n    </h2>\n\n    <ul>\n      <li class="pera-wallet-connect-modal-information-section__features-item">\n        <div class="pera-wallet-connect-modal-information-section__features-item__icon-wrapper">\n          <img src="data:image/svg+xml,%3csvg width='20' height='21' viewBox='0 0 20 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M2.5 10.1378C2.5 10.8378 3.025 11.6461 3.66667 11.9294L9.325 14.4461C9.75833 14.6378 10.25 14.6378 10.675 14.4461L16.3333 11.9294C16.975 11.6461 17.5 10.8378 17.5 10.1378M2.5 14.3044C2.5 15.0794 2.95833 15.7794 3.66667 16.0961L9.325 18.6128C9.75833 18.8044 10.25 18.8044 10.675 18.6128L16.3333 16.0961C17.0417 15.7794 17.5 15.0794 17.5 14.3044M10.8417 3.4043L15.7583 5.58763C17.175 6.21263 17.175 7.24596 15.7583 7.87096L10.8417 10.0543C10.2833 10.3043 9.36668 10.3043 8.80835 10.0543L3.89168 7.87096C2.47502 7.24596 2.47502 6.21263 3.89168 5.58763L8.80835 3.4043C9.36668 3.1543 10.2833 3.1543 10.8417 3.4043Z' stroke='%239D9DAE' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3e%3c/svg%3e" alt="Layer Icon" />\n        </div>\n        \n        <p\n          class="pera-wallet-connect-modal-information-section__features-item__description">\n          Connect to any Algorand dApp securely\n        </p>\n      </li>\n\n      <li class="pera-wallet-connect-modal-information-section__features-item">\n        <div\n          class="pera-wallet-connect-modal-information-section__features-item__icon-wrapper">\n          <img src="data:image/svg+xml,%3csvg width='24' height='25' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M9.58033 12.3109C9.28744 12.018 8.81257 12.018 8.51967 12.3109C8.22678 12.6038 8.22678 13.0787 8.51967 13.3716L9.58033 12.3109ZM10.66 14.4512L10.1297 14.9816C10.4226 15.2745 10.8974 15.2745 11.1903 14.9816L10.66 14.4512ZM15.4903 10.6816C15.7832 10.3887 15.7832 9.91381 15.4903 9.62092C15.1974 9.32803 14.7226 9.32803 14.4297 9.62092L15.4903 10.6816ZM19.84 8.09125C19.84 8.50546 20.1758 8.84125 20.59 8.84125C21.0042 8.84125 21.34 8.50546 21.34 8.09125H19.84ZM18.5 5.07125L18.2368 5.77355L18.2373 5.77375L18.5 5.07125ZM13.51 3.20125L13.7732 2.49894L13.7724 2.49866L13.51 3.20125ZM10.49 3.20125L10.2276 2.49865L10.2256 2.49941L10.49 3.20125ZM5.5 5.08125L5.76268 5.78375L5.76442 5.78309L5.5 5.08125ZM5.14 18.9612L4.69102 19.562L4.69135 19.5623L5.14 18.9612ZM9.44 22.1713L9.89069 21.5718L9.88866 21.5702L9.44 22.1713ZM14.58 22.1713L14.1313 21.5702L14.1293 21.5718L14.58 22.1713ZM18.88 18.9612L19.3287 19.5623L19.329 19.562L18.88 18.9612ZM21.36 8.09125C21.36 7.67704 21.0242 7.34125 20.61 7.34125C20.1958 7.34125 19.86 7.67704 19.86 8.09125H21.36ZM8.51967 13.3716L10.1297 14.9816L11.1903 13.9209L9.58033 12.3109L8.51967 13.3716ZM11.1903 14.9816L15.4903 10.6816L14.4297 9.62092L10.1297 13.9209L11.1903 14.9816ZM21.34 8.09125C21.34 7.29392 21.0398 6.50041 20.5931 5.85456C20.1463 5.20881 19.5097 4.64807 18.7627 4.36875L18.2373 5.77375C18.6403 5.92443 19.0487 6.25869 19.3595 6.70794C19.6702 7.15709 19.84 7.65858 19.84 8.09125H21.34ZM18.7632 4.36895L13.7732 2.49895L13.2468 3.90355L18.2368 5.77355L18.7632 4.36895ZM13.7724 2.49866C13.2479 2.30277 12.6051 2.21875 12 2.21875C11.3949 2.21875 10.7521 2.30277 10.2276 2.49866L10.7524 3.90384C11.0579 3.78973 11.5101 3.71875 12 3.71875C12.4899 3.71875 12.9421 3.78973 13.2476 3.90384L13.7724 2.49866ZM10.2256 2.49941L5.23558 4.37941L5.76442 5.78309L10.7544 3.90309L10.2256 2.49941ZM5.23733 4.37875C4.49043 4.65803 3.85398 5.2186 3.40741 5.86265C2.96095 6.50656 2.66 7.2978 2.66 8.09125H4.16C4.16 7.6647 4.32906 7.16594 4.64009 6.71735C4.95103 6.2689 5.35957 5.93447 5.76268 5.78375L5.23733 4.37875ZM2.66 8.09125V15.5212H4.16V8.09125H2.66ZM2.66 15.5212C2.66 16.2602 2.8989 17.059 3.24874 17.7545C3.59871 18.4503 4.09802 19.1188 4.69102 19.562L5.58899 18.3605C5.23198 18.0937 4.86629 17.6322 4.58877 17.0805C4.31111 16.5285 4.16 15.9623 4.16 15.5212H2.66ZM4.69135 19.5623L8.99135 22.7723L9.88866 21.5702L5.58866 18.3602L4.69135 19.5623ZM8.98932 22.7707C9.84721 23.4157 10.9462 23.7163 12.01 23.7163C13.0738 23.7163 14.1728 23.4157 15.0307 22.7707L14.1293 21.5718C13.5772 21.9868 12.8112 22.2163 12.01 22.2163C11.2088 22.2163 10.4428 21.9868 9.89068 21.5718L8.98932 22.7707ZM15.0287 22.7723L19.3287 19.5623L18.4313 18.3602L14.1313 21.5702L15.0287 22.7723ZM19.329 19.562C19.922 19.1188 20.4213 18.4503 20.7713 17.7545C21.1211 17.059 21.36 16.2602 21.36 15.5212H19.86C19.86 15.9623 19.7089 16.5285 19.4312 17.0805C19.1537 17.6322 18.788 18.0937 18.431 18.3605L19.329 19.562ZM21.36 15.5212V8.09125H19.86V15.5212H21.36Z' fill='%239D9DAE'/%3e%3c/svg%3e" alt="Tick Icon" />\n        </div>\n\n        <p\n          class="pera-wallet-connect-modal-information-section__features-item__description">\n          Your private keys are safely stored locally\n        </p>\n      </li>\n\n      <li class="pera-wallet-connect-modal-information-section__features-item">\n        <div\n          class="pera-wallet-connect-modal-information-section__features-item__icon-wrapper">\n          <img src="data:image/svg+xml,%3csvg width='20' height='21' viewBox='0 0 20 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.05 9.67014L17.3198 9.49894L18.05 9.67014ZM17.2333 13.1535L16.5031 12.9823L16.5029 12.9835L17.2333 13.1535ZM12.55 17.1285L12.6218 16.3818L12.6098 16.3809L12.55 17.1285ZM11.2 16.9035L11.376 16.1744L11.3737 16.1739L11.2 16.9035ZM9.8 16.5701L9.97372 15.8405L9.97324 15.8404L9.8 16.5701ZM6.06667 10.5451L6.79687 10.7163L6.79696 10.7159L6.06667 10.5451ZM6.88334 7.05347L6.15327 6.88169L6.15304 6.88267L6.88334 7.05347ZM7.5 5.22014L8.17303 5.55114L8.17523 5.54659L7.5 5.22014ZM12.9167 3.32014L12.744 4.05L12.7461 4.05049L12.9167 3.32014ZM14.3083 3.64514L14.4791 2.91485L14.4789 2.91479L14.3083 3.64514ZM10.5917 18.0285L10.359 17.3155L10.3572 17.3161L10.5917 18.0285ZM9.27501 18.4618L9.50516 19.1756L9.50947 19.1742L9.27501 18.4618ZM3.15001 15.3285L2.43654 15.5597L2.43672 15.5603L3.15001 15.3285ZM2.08334 12.0368L1.36953 12.267L1.36987 12.268L2.08334 12.0368ZM5.20834 5.91182L5.43849 6.62565L5.44281 6.62423L5.20834 5.91182ZM6.52501 5.47848L6.29831 4.76352L6.29055 4.76608L6.52501 5.47848ZM10.7177 7.35149C10.3162 7.24967 9.90818 7.49261 9.80635 7.89411C9.70453 8.29561 9.94746 8.70364 10.349 8.80546L10.7177 7.35149ZM14.3906 9.83046C14.7921 9.93229 15.2002 9.68935 15.302 9.28785C15.4038 8.88635 15.1609 8.47832 14.7594 8.37649L14.3906 9.83046ZM9.90211 10.5768C9.50076 10.4743 9.09238 10.7167 8.98996 11.118C8.88755 11.5194 9.12988 11.9278 9.53124 12.0302L9.90211 10.5768ZM11.9479 12.6469C12.3493 12.7493 12.7576 12.5069 12.8601 12.1056C12.9625 11.7042 12.7201 11.2958 12.3188 11.1934L11.9479 12.6469ZM17.3198 9.49894L16.5031 12.9823L17.9635 13.3247L18.7802 9.84133L17.3198 9.49894ZM16.5029 12.9835C16.168 14.4224 15.6979 15.2955 15.1165 15.793C14.5605 16.2688 13.7912 16.4944 12.6218 16.3819L12.4782 17.875C13.9088 18.0126 15.1312 17.7548 16.0918 16.9327C17.0271 16.1323 17.5986 14.8928 17.9638 13.3234L16.5029 12.9835ZM12.6098 16.3809C12.2388 16.3512 11.8281 16.2835 11.376 16.1744L11.024 17.6325C11.5386 17.7567 12.0279 17.8391 12.4902 17.8761L12.6098 16.3809ZM11.3737 16.1739L9.97372 15.8405L9.62629 17.2997L11.0263 17.6331L11.3737 16.1739ZM9.97324 15.8404C8.30732 15.4449 7.40652 14.876 6.96107 14.1588C6.51616 13.4425 6.40566 12.385 6.79687 10.7163L5.33647 10.3739C4.91101 12.1887 4.92968 13.7311 5.68685 14.9502C6.44349 16.1685 7.81769 16.8704 9.62676 17.2999L9.97324 15.8404ZM6.79696 10.7159L7.61363 7.22428L6.15304 6.88267L5.33638 10.3743L6.79696 10.7159ZM7.6134 7.22525C7.77277 6.54795 7.95691 5.99053 8.17301 5.55113L6.82699 4.88915C6.54309 5.46641 6.32724 6.14234 6.15327 6.88169L7.6134 7.22525ZM8.17523 5.54659C8.59604 4.67619 9.11898 4.20234 9.77488 3.97598C10.4657 3.73759 11.4133 3.73525 12.744 4.05L13.0893 2.59028C11.6367 2.2467 10.3635 2.18603 9.28554 2.55805C8.17269 2.94211 7.37896 3.74743 6.82478 4.89369L8.17523 5.54659ZM12.7461 4.05049L14.1378 4.37549L14.4789 2.91479L13.0872 2.58979L12.7461 4.05049ZM14.1375 4.37543C15.8111 4.76687 16.7126 5.33603 17.1575 6.05304C17.6023 6.77006 17.7112 7.82942 17.3198 9.49894L18.7802 9.84133C19.2054 8.02753 19.1893 6.48272 18.4321 5.26224C17.6749 4.04175 16.2972 3.34008 14.4791 2.91485L14.1375 4.37543ZM12.1294 16.5075C11.6911 16.8045 11.1123 17.0697 10.359 17.3155L10.8243 18.7415C11.6544 18.4706 12.3756 18.1525 12.9706 17.7494L12.1294 16.5075ZM10.3572 17.3161L9.04055 17.7494L9.50947 19.1742L10.8261 18.7409L10.3572 17.3161ZM9.04486 17.748C7.46037 18.2589 6.43607 18.2362 5.71663 17.8681C4.99693 17.4999 4.37829 16.6816 3.8633 15.0967L2.43672 15.5603C2.99673 17.2837 3.78642 18.5654 5.03339 19.2035C6.28062 19.8416 7.78131 19.7314 9.50516 19.1756L9.04486 17.748ZM3.86348 15.0973L2.79682 11.8056L1.36987 12.268L2.43654 15.5597L3.86348 15.0973ZM2.79716 11.8067C2.28607 10.2215 2.3068 9.19457 2.67362 8.4739C3.03983 7.75443 3.85506 7.13616 5.43849 6.62563L4.9782 5.198C3.25329 5.75414 1.97269 6.54421 1.33682 7.79348C0.701551 9.04157 0.813948 10.5438 1.36953 12.267L2.79716 11.8067ZM5.44281 6.62423L6.75947 6.19089L6.29055 4.76608L4.97388 5.19941L5.44281 6.62423ZM6.75169 6.19341C7.08205 6.08866 7.37424 6.00724 7.63942 5.95707L7.36058 4.48321C7.00909 4.54971 6.6513 4.65164 6.29833 4.76356L6.75169 6.19341ZM10.349 8.80546L14.3906 9.83046L14.7594 8.37649L10.7177 7.35149L10.349 8.80546ZM9.53124 12.0302L11.9479 12.6469L12.3188 11.1934L9.90211 10.5768L9.53124 12.0302Z' fill='%239D9DAE'/%3e%3c/svg%3e" alt="Note Icon" />\n        </div>\n\n        <p\n          class="pera-wallet-connect-modal-information-section__features-item__description">\n          View NFTs, buy and swap crypto and more\n        </p>\n      </li>\n    </ul>\n  </section>\n`;class j extends HTMLElement{constructor(){var t,e,n;if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const r=document.createElement("style");r.textContent=z,this.shadowRoot.append(W.content.cloneNode(!0),r),d()&&i.isMobile()?null===(t=this.shadowRoot.getElementById("pera-wallet-connect-modal-information-section-title"))||void 0===t||t.setAttribute("style","display: none;"):(null===(e=this.shadowRoot.getElementById("pera-wallet-connect-modal-information-section-pera-icon"))||void 0===e||e.setAttribute("src","data:image/svg+xml,%3csvg width='84' height='38' viewBox='0 0 84 38' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.806 8.62773C20.4416 11.2609 20.2268 13.5772 19.3262 13.8012C18.4256 14.0253 17.1803 12.0723 16.5448 9.43906C15.9092 6.80585 16.1241 4.48959 17.0246 4.26555C17.9252 4.04151 19.1705 5.99452 19.806 8.62773Z' fill='%233C3C49'/%3e%3cpath d='M30.3007 10.8917C28.8932 9.3999 26.0929 9.80424 24.0461 11.7948C21.9994 13.7853 21.4812 16.6082 22.8887 18.1C24.2962 19.5917 27.0964 19.1874 29.1432 17.1969C31.1899 15.2064 31.7082 12.3834 30.3007 10.8917Z' fill='%233C3C49'/%3e%3cpath d='M19.1061 33.734C20.0067 33.5099 20.1899 31.0627 19.5153 28.2678C18.8408 25.473 17.5639 23.3889 16.6633 23.613C15.7627 23.837 15.5795 26.2843 16.2541 29.0791C16.9286 31.874 18.2056 33.958 19.1061 33.734Z' fill='%233C3C49'/%3e%3cpath d='M9.92571 12.2574C12.5239 13.0236 14.4224 14.3678 14.1662 15.2597C13.9099 16.1517 11.5959 16.2536 8.99771 15.4874C6.3995 14.7212 4.50098 13.377 4.75724 12.4851C5.0135 11.5931 7.3275 11.4912 9.92571 12.2574Z' fill='%233C3C49'/%3e%3cpath d='M26.7892 22.3292C29.5469 23.1424 31.5747 24.5247 31.3184 25.4167C31.0621 26.3086 28.6189 26.3724 25.8612 25.5592C23.1035 24.7459 21.0757 23.3636 21.3319 22.4717C21.5882 21.5797 24.0315 21.5159 26.7892 22.3292Z' fill='%233C3C49'/%3e%3cpath d='M12.8493 20.4577C12.205 19.7898 10.0916 20.7619 8.12896 22.6289C6.16631 24.4959 5.09759 26.5509 5.7419 27.2188C6.38622 27.8867 8.49958 26.9146 10.4622 25.0476C12.4249 23.1806 13.4936 21.1256 12.8493 20.4577Z' fill='%233C3C49'/%3e%3cpath d='M41.691 12.5347V11.9635H39.3366V27.1957H41.691V23.0915C41.691 22.6472 41.691 22.2876 41.6482 21.801H41.691C42.5471 23.1973 44.0026 23.9377 45.7148 23.9377C48.6043 23.9377 51.1299 21.7587 51.1299 17.7179C51.1299 13.7617 48.6043 11.625 45.7148 11.625C44.0668 11.625 42.6113 12.3443 41.691 13.7617H41.6482C41.691 13.2963 41.691 12.9578 41.691 12.5347ZM45.1155 21.9279C42.9324 21.9068 41.6696 20.0662 41.6696 17.6967C41.6696 15.4542 42.9324 13.656 45.1155 13.6348C47.2559 13.6137 48.6685 15.2638 48.6685 17.7179C48.6685 20.2354 47.2559 21.9491 45.1155 21.9279Z' fill='%233C3C49'/%3e%3cpath d='M63.4932 16.7236C63.4932 13.8041 61.1388 11.625 57.9283 11.625C54.5037 11.625 52.1279 13.931 52.1279 17.7814C52.1279 21.4836 54.4609 23.9377 57.9283 23.9377C60.7749 23.9377 62.8939 22.2876 63.3862 20.0239H60.8177C60.4111 21.1663 59.2981 21.9279 57.9283 21.9279C56.1732 21.9279 54.889 20.6797 54.6107 18.6064H63.4932V16.7236ZM57.9283 13.6348C59.662 13.6348 60.8606 14.8195 61.1174 16.5332H54.6321C54.9318 14.883 56.1518 13.6348 57.9283 13.6348Z' fill='%233C3C49'/%3e%3cpath d='M65.224 23.5992H67.5784V17.0409C67.5784 14.7984 68.8198 13.6348 70.7462 13.6348H72.009V11.625H71.003C69.2693 11.625 68.1991 12.7674 67.5784 13.7617H67.5356V11.9635H65.224V23.5992Z' fill='%233C3C49'/%3e%3cpath d='M83.0154 21.5683C82.6944 21.5683 82.5445 21.3779 82.5445 20.9971V15.8773C82.5445 13.4233 81.3459 11.625 77.8144 11.625C74.3898 11.625 72.8273 13.3175 72.6561 15.7292H75.0105C75.1603 14.4176 76.2091 13.6348 77.8144 13.6348C79.1842 13.6348 80.1259 14.2272 80.1259 15.158C80.1259 15.9196 79.5909 16.3851 77.8358 16.3851H76.894C74.0901 16.3851 72.2066 17.5063 72.2066 20.0662C72.2066 22.753 74.1972 23.98 76.5301 23.98C78.2638 23.98 79.7407 23.2184 80.3186 21.5894C80.3828 22.7742 81.1747 23.5992 82.673 23.5992H84V21.5683H83.0154ZM80.1902 18.1833C80.1902 20.8067 78.7561 21.9491 76.9154 21.9491C75.3101 21.9491 74.668 21.0182 74.668 20.0662C74.668 19.1565 75.2245 18.416 76.9368 18.416H77.2793C78.9273 18.416 79.9547 17.8448 80.1688 16.8505H80.1902V18.1833Z' fill='%233C3C49'/%3e%3c/svg%3e"),null===(n=this.shadowRoot.getElementById("pera-wallet-connect-modal-information-section-connect-pera-mobile"))||void 0===n||n.setAttribute("style","display: none;"))}}}var V='@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}\n.pera-wallet-connect-modal-pending-message-section {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 48px;\n  gap: 56px;\n  height: 100%;\n  padding: 4px;\n  padding-bottom: 70px;\n}\n\n.pera-wallet-connect-modal-pending-message {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  height: 100%;\n  margin-top: 10px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__title {\n  margin: 16px 0 12px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.26px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__description {\n  color: #6a6a81;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.01px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__button {\n  display: block;\n  width: 100%;\n  padding: 14px;\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n  color: #ffffff;\n  background-color: #6b46fe;\n  border: none;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor {\n  display: flex;\n  gap: 12px;\n  margin-bottom: 20px;\n  padding: 16px;\n  background: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border-radius: 12px;\n  text-decoration: none;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image {\n  width: 24px;\n  height: 24px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 4px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title {\n  margin: 0;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.1px;\n  color: #3c3c49;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description {\n  /* stylelint-disable value-no-vendor-prefix */\n  /* stylelint-disable  property-no-vendor-prefix */\n  display: -webkit-box;\n  max-width: 100%;\n  -webkit-line-clamp: 2;\n  /* autoprefixer: ignore next */\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* stylelint-enable value-no-vendor-prefix */\n  /* stylelint-enable property-no-vendor-prefix */\n  margin: 0;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0.01px;\n  color: #9d9dae;\n}\n\n.pera-wallet-connect-modal-pending-message__animation-wrapper {\n  width: 56px;\n  height: 56px;\n  background-color: #6b46fe;\n  border-radius: 50%;\n}\n\n.pera-wallet-connect-modal-pending-message__text {\n  max-width: 271px;\n  margin-top: 24px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 28px;\n  letter-spacing: -0.26px;\n}\n\n.pera-wallet-connect-modal-pending-message__cancel-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 14px;\n  color: #6a6a81;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n  border: none;\n}';h(V);const H=document.createElement("template");H.innerHTML='\n  <div class="pera-wallet-connect-modal-pending-message-section">\n    <div class="pera-wallet-connect-modal-pending-message">\n      <div id="pera-wallet-connect-modal-pending-message-animation-wrapper" class="pera-wallet-connect-modal-pending-message__animation-wrapper"></div>\n\n      <div class="pera-wallet-connect-modal-pending-message__text">\n        Please wait while we connect you to Pera Wallet\n      </div>\n    </div>\n\n    <button\n      id="pera-wallet-connect-modal-pending-message-cancel-button"\n      class="pera-wallet-button pera-wallet-connect-modal-pending-message__cancel-button">\n        Cancel\n    </button>\n  </div>\n\n  <div id="pera-wallet-connect-modal-pending-message-audio-wrapper"></div>\n';const Z=`\n  <div class="pera-wallet-connect-modal-pending-message--try-again-view">\n    <div>\n      <img src="${B}" alt="Pera Wallet Logo" />\n\n      <h1 class="pera-wallet-connect-modal-pending-message--try-again-view__title">\n        Couldn’t establish connection\n      </h1>\n\n      <p class="pera-wallet-connect-modal-pending-message--try-again-view__description">\n        Having issues? Before trying again, make sure to read the support article below and apply the possible solutions.\n      </p>\n    </div>\n\n    <div>\n      <a\n        href="https://support.perawallet.app/en/article/resolving-walletconnect-issues-1tolptm/"\n        target="_blank"\n        rel="noopener noreferrer"\n        class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor">\n        <img\n          class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image"\n          src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 22.3199C7.72 22.3199 7.42998 22.2499 7.16998 22.1099C6.59998 21.8099 6.25 21.2099 6.25 20.5699V19.15C3.23 18.84 1.25 16.6199 1.25 13.4399V7.43994C1.25 3.99994 3.56 1.68994 7 1.68994H17C20.44 1.68994 22.75 3.99994 22.75 7.43994V13.4399C22.75 16.8799 20.44 19.1899 17 19.1899H13.23L8.96997 22.03C8.67997 22.22 8.34 22.3199 8 22.3199ZM7 3.17993C4.42 3.17993 2.75 4.84993 2.75 7.42993V13.43C2.75 16.01 4.42 17.68 7 17.68C7.41 17.68 7.75 18.02 7.75 18.43V20.56C7.75 20.69 7.83 20.75 7.88 20.78C7.93001 20.81 8.03001 20.84 8.14001 20.77L12.59 17.81C12.71 17.73 12.86 17.68 13.01 17.68H17.01C19.59 17.68 21.26 16.01 21.26 13.43V7.42993C21.26 4.84993 19.59 3.17993 17.01 3.17993H7ZM11.9998 12.11C11.5898 12.11 11.2498 11.77 11.2498 11.36V11.15C11.2498 10.0038 12.0798 9.4336 12.4082 9.20798L12.4198 9.20001C12.7898 8.95001 12.9098 8.78002 12.9098 8.52002C12.9098 8.02002 12.4998 7.60999 11.9998 7.60999C11.4998 7.60999 11.0898 8.02002 11.0898 8.52002C11.0898 8.93002 10.7498 9.27002 10.3398 9.27002C9.92984 9.27002 9.58984 8.93002 9.58984 8.52002C9.58984 7.19002 10.6698 6.10999 11.9998 6.10999C13.3298 6.10999 14.4098 7.19002 14.4098 8.52002C14.4098 9.66002 13.5698 10.23 13.2598 10.44C12.8698 10.7 12.7498 10.87 12.7498 11.15V11.36C12.7498 11.78 12.4098 12.11 11.9998 12.11ZM11.25 13.85C11.25 14.26 11.58 14.6 12 14.6C12.42 14.6 12.75 14.26 12.75 13.85C12.75 13.44 12.41 13.1 12 13.1C11.59 13.1 11.25 13.44 11.25 13.85Z' fill='%236B46FE'/%3e%3c/svg%3e"\n          alt="Help Icon"\n        />\n\n        <div>\n          <div\n            class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper">\n            <h1\n              class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title">\n                Resolving WalletConnect issues\n            </h1>\n\n            <img src="data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M11.3287 10.0983C10.9574 10.0983 10.6564 9.79734 10.6564 9.42604L10.6564 6.29525L5.14866 11.803C4.88611 12.0655 4.46044 12.0655 4.19789 11.803C3.93534 11.5404 3.93534 11.1147 4.19789 10.8522L9.70561 5.34447L6.57482 5.34447C6.20352 5.34447 5.90252 5.04347 5.90252 4.67218C5.90252 4.30088 6.20352 3.99988 6.57482 3.99988L11.3287 3.99988C11.507 3.99988 11.678 4.07071 11.8041 4.19679C11.9301 4.32287 12.001 4.49387 12.001 4.67218L12.001 9.42604C12.001 9.79734 11.7 10.0983 11.3287 10.0983Z' fill='%239D9DAE'/%3e%3c/svg%3e" alt="Send Icon"/>\n          </div>\n\n          <p\n            class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description">\n            Unfortunately there are several known issues related to WalletConnect that our team is working on. Some of these issues are related to the WalletConnect JavaScript implementation on the dApp ...\n          </p>\n        </div>\n      </a>\n\n      <button id="pera-wallet-connect-modal-pending-message-try-again-button" class="pera-wallet-connect-button pera-wallet-connect-modal-pending-message--try-again-view__button">\n        Close & Try Again\n      </button>\n    </div>\n  </div>\n  `;class U extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const t=document.createElement("style");t.textContent=V,this.shadowRoot.append(H.content.cloneNode(!0),t)}}connectedCallback(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-pending-message-cancel-button");null==e||e.addEventListener("click",(()=>{this.onClose()})),this.addAudioForConnection(),this.renderLottieAnimation(),setTimeout((()=>{var t;if(H.innerHTML=Z,this.shadowRoot){const e=document.createElement("style");e.textContent=V,this.shadowRoot.innerHTML="",this.shadowRoot.append(H.content.cloneNode(!0),e);const n=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-pending-message-try-again-button");null==n||n.addEventListener("click",(()=>{this.onClose()}))}}),3e4)}onClose(){i.removeModalWrapperFromDOM(i.PERA_WALLET_CONNECT_MODAL_ID)}addAudioForConnection(){var t;if("true"===this.getAttribute("should-use-sound")&&i.isIOS()){const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-pending-message-audio-wrapper"),n=document.createElement("audio");n.src="https://s3.amazonaws.com/wc.perawallet.app/audio.mp3",n.autoplay=!0,n.loop=!0,null==e||e.appendChild(n)}}renderLottieAnimation(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-connect-modal-pending-message-animation-wrapper");e&&l.default.loadAnimation({container:e,renderer:"svg",loop:!0,autoplay:!0,path:"https://s3.amazonaws.com/wc.perawallet.app/static/pera-loader-animation.json"})}}var G='.pera-wallet-sign-txn-toast {\n  --pera-wallet-sign-txn-toast-width: 422px;\n  --pera-wallet-sign-txn-toast-height: 134px;\n  --pera-wallet-sign-txn-toast-font-family: "Inter", sans-serif;\n  position: fixed;\n  bottom: 28px;\n  right: 35px;\n  z-index: 11;\n  overflow: hidden;\n  width: var(--pera-wallet-sign-txn-toast-width);\n  height: var(--pera-wallet-sign-txn-toast-height);\n  background: #edeffb;\n  border-radius: 8px;\n  animation: 0.2s PeraWalletSignTxnToastSlideIn ease-out;\n}\n.pera-wallet-sign-txn-toast * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-sign-txn-toast-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-sign-txn-toast ul,\n.pera-wallet-sign-txn-toast ol,\n.pera-wallet-sign-txn-toast li {\n  list-style-type: none;\n}\n\n.pera-wallet-sign-txn-toast__header__close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n  height: 20px;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n}\n\n.pera-wallet-sign-txn-toast__content__lottie-animation {\n  position: absolute;\n  top: -75px;\n  left: -100px;\n  width: 368px;\n  height: 368px;\n}\n\n.pera-wallet-sign-txn-toast__content__description {\n  position: absolute;\n  top: 40px;\n  right: 48px;\n  max-width: 197px;\n  color: #3c3c49;\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: -0.1px;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-sign-txn-toast {\n    display: none;\n  }\n}\n@keyframes PeraWalletSignTxnToastSlideIn {\n  0% {\n    bottom: 12px;\n    opacity: 0;\n  }\n  100% {\n    bottom: 26px;\n    opacity: 1;\n  }\n}';h(G);const $=document.createElement("template");$.innerHTML='\n  <div class="pera-wallet-sign-txn-toast">\n    <div class="pera-wallet-sign-txn-toast__header">\n      <button\n        id="pera-wallet-sign-txn-toast-close-button"\n        class="pera-wallet-sign-txn-toast__header__close-button">\n        <img src="data:image/svg+xml,%3csvg width=\'20\' height=\'20\' viewBox=\'0 0 20 20\' fill=\'none\' xmlns=\'http://www.w3.org/2000/svg\'%3e%3cpath d=\'M14.4107 4.41074L9.41074 9.41074L10.5893 10.5893L15.5893 5.58926L14.4107 4.41074ZM9.41074 9.41074L4.41074 14.4107L5.58926 15.5893L10.5893 10.5893L9.41074 9.41074ZM15.5893 14.4107L10.5893 9.41074L9.41074 10.5893L14.4107 15.5893L15.5893 14.4107ZM10.5893 9.41074L5.58926 4.41074L4.41074 5.58926L9.41074 10.5893L10.5893 9.41074Z\' fill=\'%239099BD\'/%3e%3c/svg%3e" />\n      </button>\n    </div>\n    <div class="pera-wallet-sign-txn-toast__content">\n      <div id="pera-wallet-sign-txn-toast-lottie-animation" style="width:368;height:368" class="pera-wallet-sign-txn-toast__content__lottie-animation"></div>\n      <p class="pera-wallet-sign-txn-toast__content__description">\n        Please launch <b>Pera Wallet</b> on your iOS or Android device to sign this transaction.\n      </p>\n    </div>\n  </div>\n';class X extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const t=document.createElement("style");t.textContent=G,this.shadowRoot.append($.content.cloneNode(!0),t);const e=this.shadowRoot.getElementById("pera-wallet-sign-txn-toast-close-button");null==e||e.addEventListener("click",(()=>{i.removeModalWrapperFromDOM(i.PERA_WALLET_SIGN_TXN_TOAST_ID)})),this.renderLottieAnimation()}}renderLottieAnimation(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById("pera-wallet-sign-txn-toast-lottie-animation");e&&l.default.loadAnimation({container:e,renderer:"svg",loop:!0,autoplay:!0,path:"https://s3.amazonaws.com/wc.perawallet.app/static/sign-toast-animation.json"})}}var K='@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n  background-image: unset;\n  padding: 0;\n}\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body .pera-wallet-sign-txn-modal__body__content {\n  width: 100%;\n  height: 100%;\n}\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body #pera-wallet-iframe {\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n  margin: 0 auto;\n  border: none;\n}';h(K);const J=document.createElement("template");J.innerHTML=`\n  <div class="${i.PERA_WALLET_MODAL_CLASSNAME} pera-wallet-sign-txn-modal">\n    <div class="pera-wallet-modal__body">\n      <pera-wallet-modal-header modal-id="${i.PERA_WALLET_SIGN_TXN_MODAL_ID}"></pera-wallet-modal-header/>\n\n      <div class="pera-wallet-sign-txn-modal__body__content" />\n    </div>\n  </div>\n`;class Y extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:"open"}),this.shadowRoot){const t=document.createElement("style");t.textContent=K,this.shadowRoot.append(J.content.cloneNode(!0),t)}}}window.addEventListener("DOMContentLoaded",(()=>{p()})),window.addEventListener("resize",(()=>{p()})),window.customElements.define("pera-wallet-connect-modal",D),window.customElements.define("pera-wallet-modal-desktop-mode",A),window.customElements.define("pera-wallet-modal-header",m),window.customElements.define("pera-wallet-modal-touch-screen-mode",P),window.customElements.define("pera-wallet-redirect-modal",N),window.customElements.define("pera-wallet-connect-modal-information-section",j),window.customElements.define("pera-wallet-connect-modal-pending-message-section",U),window.customElements.define("pera-wallet-sign-txn-toast",X),window.customElements.define("pera-wallet-sign-txn-modal",Y),window.customElements.define("pera-wallet-download-qr-code",y)},3509:(t,e,n)=>{"use strict";var i=n(8764).lW,r=n(9868),a=n(4126),s=n(1206);function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var l=o(r),h=o(a),c=o(s);function d(t,e,n,i){return new(n||(n=Promise))((function(r,a){function s(t){try{l(i.next(t))}catch(t){a(t)}}function o(t){try{l(i.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,o)}l((i=i.apply(t,e||[])).next())}))}class p extends Error{constructor(t,e,...n){super(...n),Error.captureStackTrace&&Error.captureStackTrace(this,p),this.name="PeraWalletConnectError",this.data=t,this.message=e}}const u=new class{constructor(t){this.listener=void 0,this.channel=t.channel}setupListener({onReceiveMessage:t}){this.close(),this.listener=e=>{if("object"==typeof e.data)try{e.data.channel===this.channel&&t(e)}catch(t){console.error(t)}},window.addEventListener("message",this.listener)}sendMessage({message:t,targetWindow:e,origin:n,timeout:i=1e3}){setTimeout((()=>{const i={channel:this.channel,message:t};e.postMessage(i,{targetOrigin:n||"*"})}),i)}close(){this.listener&&(window.removeEventListener("message",this.listener),this.listener=void 0)}}({channel:"pera-web-wallet"});function f(){const t=document.querySelector('meta[name="name"]'),e=document.querySelector('meta[name="description"]');let{title:n}=document,i="";return t instanceof HTMLMetaElement&&(n=t.content),e instanceof HTMLMetaElement&&(i=e.content),{title:n,description:i,url:window.location.origin,favicon:m()[0]}}function m(){const t=document.getElementsByTagName("link"),e=[];for(let n=0;n<t.length;n++){const i=t[n],r=i.getAttribute("rel");if(r&&r.toLowerCase().indexOf("icon")>-1){const t=i.getAttribute("href");if(t&&-1===t.toLowerCase().indexOf("https:")&&-1===t.toLowerCase().indexOf("http:")&&0!==t.indexOf("//")){let n=`${window.location.protocol}//${window.location.host}`;if(0===t.indexOf("/"))n+=t;else{const e=window.location.pathname.split("/");e.pop(),n+=`${e.join("/")}/${t}`}e.push(n)}else if(0===(null==t?void 0:t.indexOf("//"))){const n=window.location.protocol+t;e.push(n)}else t&&e.push(t)}}return e}function g(t){return new Promise(((e,n)=>{try{const i=window.open(t,"_blank");let r=0;const a=setInterval((()=>{if(r+=1,50===r)return clearInterval(a),void n(new p({type:"MESSAGE_NOT_RECEIVED"},"Couldn't open Pera Wallet, please try again."));i&&(!0===i.closed&&(clearInterval(a),n(new p({type:"OPERATION_CANCELLED"},"Operation cancelled by user"))),u.sendMessage({message:{type:"TAB_OPEN"},origin:t,targetWindow:i}))}),700);u.setupListener({onReceiveMessage:t=>{"TAB_OPEN_RECEIVED"===t.data.message.type&&(clearInterval(a),e(i))}})}catch(t){n(t)}}))}function v(t){const e=document.createElement("div");return e.setAttribute("id",t),document.body.appendChild(e),e}function w(t){y("pera-wallet-sign-txn-modal-wrapper"),t&&t(new p({type:"SIGN_TXN_CANCELLED"},"Transaction sign is cancelled"))}function y(t){const e=document.getElementById(t);e&&e.remove()}const _="PeraWallet.Wallet",b="walletconnect";function M(){return"undefined"==typeof localStorage?void 0:localStorage}function x(t,e){var n;null===(n=M())||void 0===n||n.setItem(_,JSON.stringify({type:e||"pera-wallet",accounts:t,selectedAccount:t[0]}))}function C(){var t;const e=null===(t=M())||void 0===t?void 0:t.getItem(_);return e?JSON.parse(e):null}function k(){return new Promise(((t,e)=>{var n,i;try{null===(n=M())||void 0===n||n.removeItem(b),null===(i=M())||void 0===i||i.removeItem(_),t(void 0)}catch(t){e(t)}}))}function S(t){const e=t.slice();for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}return e}function A(){return d(this,void 0,void 0,(function*(){let t={bridgeURL:"",webWalletURL:"",isWebWalletAvailable:!1,shouldDisplayNewBadge:!1,shouldUseSound:!0,silent:!1};try{const e=yield function(t,e={}){return fetch("https://wc.perawallet.app/config.json",e).then((t=>t.json())).then((t=>t))}(0,{cache:"no-store"});void 0!==e.web_wallet&&e.web_wallet_url&&(t.isWebWalletAvailable=e.web_wallet),void 0!==e.display_new_badge&&(t.shouldDisplayNewBadge=e.display_new_badge),void 0!==e.use_sound&&(t.shouldUseSound=e.use_sound),void 0!==e.silent&&(t.silent=e.silent),t=Object.assign(Object.assign({},t),{bridgeURL:S(e.servers||[])[0]||"",webWalletURL:e.web_wallet_url||""})}catch(t){console.log(t)}return t}))}function E(t){return Uint8Array.from(window.atob(t),(t=>t.charCodeAt(0)))}function L(){return"undefined"!=typeof navigator}function P(){return L()&&/Android/i.test(navigator.userAgent)}function I(){return L()&&/iPhone|iPad|iPod/i.test(navigator.userAgent)}function T(){return L()&&/iPhone|iPod|Android/i.test(navigator.userAgent)}function F(){if(!L())return null;const{userAgent:t}=navigator;let e;return e=t.match(/DuckDuckGo/i)?"DuckDuckGo":t.match(/OPX/i)?"Opera GX":navigator.brave?"Brave":c.default.getParser(navigator.userAgent).getBrowserName(),e}const D=P()?"algorand://":"algorand-wc://";function O(t){return{ROOT:`https://${t}`,CONNECT:`https://${t}/connect`,TRANSACTION_SIGN:`https://${t}/transaction/sign`}}function R(t=!0){let e=D;const n=F();return t&&n&&(e=`${e}?browser=${encodeURIComponent(n)}`),e}function N(t){const e=new URL(t);return e.searchParams.append("embedded","true"),e.toString()}function B({isWebWalletAvailable:t,shouldDisplayNewBadge:e,shouldUseSound:n}){return{open:(i={isWebWalletAvailable:t,shouldDisplayNewBadge:e,shouldUseSound:n},t=>{if(!document.getElementById("pera-wallet-connect-modal-wrapper")){const e=v("pera-wallet-connect-modal-wrapper"),n=`${t}&algorand=true`,{isWebWalletAvailable:r,shouldDisplayNewBadge:a,shouldUseSound:s}=i;e.innerHTML=`<pera-wallet-connect-modal uri="${n}" is-web-wallet-avaliable="${r}" should-display-new-badge="${a}" should-use-sound="${s}"></pera-wallet-connect-modal>`}}),close:()=>y("pera-wallet-connect-modal-wrapper")};var i}"undefined"!=typeof window&&(window.global=window,window.Buffer=window.Buffer||n(8764).lW,Promise.resolve().then((function(){return n(4529)}))),e.PERA_DOWNLOAD_URL="https://perawallet.app/download/",e.PERA_WALLET_CONNECT_MODAL_ID="pera-wallet-connect-modal-wrapper",e.PERA_WALLET_MODAL_CLASSNAME="pera-wallet-modal",e.PERA_WALLET_REDIRECT_MODAL_ID="pera-wallet-redirect-modal-wrapper",e.PERA_WALLET_SIGN_TXN_MODAL_ID="pera-wallet-sign-txn-modal-wrapper",e.PERA_WALLET_SIGN_TXN_TOAST_ID="pera-wallet-sign-txn-toast-wrapper",e.PeraWalletConnect=class{constructor(t){this.bridge=(null==t?void 0:t.bridge)||"",this.connector=null,this.shouldShowSignTxnToast=void 0===(null==t?void 0:t.shouldShowSignTxnToast)||t.shouldShowSignTxnToast,this.chainId=null==t?void 0:t.chainId}get platform(){return function(){const t=C();let e=null;return"pera-wallet"===(null==t?void 0:t.type)?e="mobile":"pera-wallet-web"===(null==t?void 0:t.type)&&(e="web"),e}()}get isConnected(){var t;return"mobile"===this.platform?!!this.connector:"web"===this.platform&&!!(null===(t=C())||void 0===t?void 0:t.accounts.length)}connectWithWebWallet(t,e,n,i){const r=F(),a=O(n),s=document.createElement("iframe");function o(){y("pera-wallet-connect-modal-wrapper")}return{onWebWalletConnect:function(n){if("Chrome"===r){if(s.setAttribute("id","pera-wallet-iframe"),s.setAttribute("src",N(a.CONNECT)),n.appendChild(s),s.contentWindow){let n=0;const r=setInterval((()=>{n+=1,50!==n?u.sendMessage({message:{type:"IFRAME_INITIALIZED"},origin:a.CONNECT,targetWindow:s.contentWindow}):clearInterval(r)}),700);u.setupListener({onReceiveMessage:n=>{var l,h,c,d,m,v;if("IFRAME_INITIALIZED_RECEIVED"===n.data.message.type)clearInterval(r),u.sendMessage({message:{type:"CONNECT",data:Object.assign(Object.assign({},f()),{chainId:i})},origin:a.CONNECT,targetWindow:s.contentWindow});else if(t&&"CONNECT_CALLBACK"===n.data.message.type){const e=n.data.message.data.addresses;x(e,"pera-wallet-web"),t(e),o(),null===(l=document.getElementById("pera-wallet-iframe"))||void 0===l||l.remove()}else if("CONNECT_NETWORK_MISMATCH"===n.data.message.type)e(new p({type:"CONNECT_NETWORK_MISMATCH",detail:n.data.message.error},n.data.message.error||"Your wallet is connected to a different network to this dApp. Update your wallet to the correct network (MainNet or TestNet) to continue.")),o(),null===(h=document.getElementById("pera-wallet-iframe"))||void 0===h||h.remove();else if(["CREATE_PASSCODE_EMBEDDED","SELECT_ACCOUNT_EMBEDDED"].includes(n.data.message.type))if("CREATE_PASSCODE_EMBEDDED"===n.data.message.type)g(a.CONNECT).then((n=>{n&&u.sendMessage({message:{type:"CONNECT",data:Object.assign(Object.assign({},f()),{chainId:i})},origin:a.CONNECT,targetWindow:n});const r=setInterval((()=>{!0===(null==n?void 0:n.closed)&&(e(new p({type:"CONNECT_CANCELLED"},"Connect is cancelled by user")),o(),clearInterval(r))}),2e3);u.setupListener({onReceiveMessage:e=>{if(t&&"CONNECT_CALLBACK"===e.data.message.type){const i=e.data.message.data.addresses;x(i,"pera-wallet-web"),t(i),o(),null==n||n.close()}}})}));else if("SELECT_ACCOUNT_EMBEDDED"===n.data.message.type){const t=document.getElementById("pera-wallet-connect-modal-wrapper"),e=null===(d=null===(c=null==t?void 0:t.querySelector("pera-wallet-connect-modal"))||void 0===c?void 0:c.shadowRoot)||void 0===d?void 0:d.querySelector(".pera-wallet-modal"),n=null===(v=null===(m=null==e?void 0:e.querySelector("pera-wallet-modal-desktop-mode"))||void 0===m?void 0:m.shadowRoot)||void 0===v?void 0:v.querySelector(".pera-wallet-connect-modal-desktop-mode");e&&n&&(e.classList.add("pera-wallet-modal--select-account"),e.classList.remove("pera-wallet-modal--create-passcode"),n.classList.add("pera-wallet-connect-modal-desktop-mode--select-account"),n.classList.remove("pera-wallet-connect-modal-desktop-mode--create-passcode")),u.sendMessage({message:{type:"SELECT_ACCOUNT_EMBEDDED_CALLBACK"},origin:a.CONNECT,targetWindow:s.contentWindow})}}})}}else g(a.CONNECT).then((n=>{n&&u.sendMessage({message:{type:"CONNECT",data:Object.assign(Object.assign({},f()),{chainId:i})},origin:a.CONNECT,targetWindow:n});const r=setInterval((()=>{!0===(null==n?void 0:n.closed)&&(e(new p({type:"CONNECT_CANCELLED"},"Connect is cancelled by user")),clearInterval(r),o())}),2e3);u.setupListener({onReceiveMessage:i=>{if(t&&"CONNECT_CALLBACK"===i.data.message.type){const e=i.data.message.data.addresses;x(e,"pera-wallet-web"),t(e),o(),null==n||n.close()}else"CONNECT_NETWORK_MISMATCH"===i.data.message.type&&(e(new p({type:"CONNECT_NETWORK_MISMATCH",detail:i.data.message.error},i.data.message.error||"Your wallet is connected to a different network to this dApp. Update your wallet to the correct network (MainNet or TestNet) to continue.")),o(),null==n||n.close())}})})).catch((t=>{o(),e(t)}))}}}connect(){return new Promise(((t,e)=>d(this,void 0,void 0,(function*(){var n;try{if(null===(n=this.connector)||void 0===n?void 0:n.connected)try{yield this.connector.killSession()}catch(t){}const{isWebWalletAvailable:i,bridgeURL:r,webWalletURL:a,shouldDisplayNewBadge:s,shouldUseSound:o}=yield A(),{onWebWalletConnect:h}=this.connectWithWebWallet(t,e,a,this.chainId);i&&(window.onWebWalletConnect=h),this.connector=new l.default({bridge:this.bridge||r||"https://bridge.walletconnect.org",qrcodeModal:B({isWebWalletAvailable:i,shouldDisplayNewBadge:s,shouldUseSound:o})}),yield this.connector.createSession({chainId:this.chainId||4160}),function(t){var e,n,i,r;const a=document.getElementById("pera-wallet-connect-modal-wrapper"),s=null===(n=null===(e=null==a?void 0:a.querySelector("pera-wallet-connect-modal"))||void 0===e?void 0:e.shadowRoot)||void 0===n?void 0:n.querySelector(".pera-wallet-modal"),o=null===(r=null===(i=null==s?void 0:s.querySelector("pera-wallet-modal-header"))||void 0===i?void 0:i.shadowRoot)||void 0===r?void 0:r.getElementById("pera-wallet-modal-header-close-button");null==o||o.addEventListener("click",(()=>{t(),y("pera-wallet-connect-modal-wrapper")}))}((()=>e(new p({type:"CONNECT_MODAL_CLOSED"},"Connect modal is closed by user")))),this.connector.on("connect",((n,i)=>{var r,a;n&&e(n),t((null===(r=this.connector)||void 0===r?void 0:r.accounts)||[]),x((null===(a=this.connector)||void 0===a?void 0:a.accounts)||[])}))}catch(t){console.log(t),e(new p({type:"SESSION_CONNECT",detail:t},t.message||"There was an error while connecting to Pera Wallet"))}}))))}reconnectSession(){return new Promise(((t,e)=>d(this,void 0,void 0,(function*(){var n,i;try{const r=C();if(!r)return void t([]);if("pera-wallet-web"===(null==r?void 0:r.type)){const{isWebWalletAvailable:n}=yield A();n?t(r.accounts||[]):e(new p({type:"SESSION_RECONNECT",detail:"Pera Web is not available"},"Pera Web is not available"))}this.connector&&t(this.connector.accounts||[]),this.bridge=(null===(n=function(){var t;const e=null===(t=M())||void 0===t?void 0:t.getItem(b);return e?JSON.parse(e):null}())||void 0===n?void 0:n.bridge)||"",this.bridge&&(this.connector=new l.default({bridge:this.bridge}),t((null===(i=this.connector)||void 0===i?void 0:i.accounts)||[])),this.isConnected||t([])}catch(t){yield this.disconnect(),e(new p({type:"SESSION_RECONNECT",detail:t},t.message||"There was an error while reconnecting to Pera Wallet"))}}))))}disconnect(){var t;return d(this,void 0,void 0,(function*(){let e;this.isConnected&&"mobile"===this.platform&&(e=null===(t=this.connector)||void 0===t?void 0:t.killSession(),null==e||e.then((()=>{this.connector=null}))),yield k()}))}signTransactionWithMobile(t){return d(this,void 0,void 0,(function*(){const e=(n=[t],{id:Date.now()*Math.pow(10,3)+Math.floor(Math.random()*Math.pow(10,3)),jsonrpc:"2.0",method:"algo_signTxn",params:n});var n;try{try{const{silent:t}=yield A(),n=(yield this.connector.sendCustomRequest(e,{forcePushNotification:!t})).filter(Boolean);return"string"==typeof n[0]?n.map(E):n.map((t=>Uint8Array.from(t)))}catch(t){return yield Promise.reject(new p({type:"SIGN_TRANSACTIONS",detail:t},t.message||"Failed to sign transaction"))}}finally{y("pera-wallet-redirect-modal-wrapper"),y("pera-wallet-sign-txn-toast-wrapper")}}))}signTransactionWithWeb(t,e){return new Promise(((n,i)=>{const r=O(e);"Chrome"===F()?function(){const t=v("pera-wallet-sign-txn-modal-wrapper");t.innerHTML="<pera-wallet-sign-txn-modal></pera-wallet-sign-txn-modal>";const e=t.querySelector("pera-wallet-sign-txn-modal");return e?(n=e,new Promise((t=>{var e;const i=null===(e=n.shadowRoot)||void 0===e?void 0:e.querySelector(".pera-wallet-sign-txn-modal__body__content");if(i)return t(i);const r=new MutationObserver((()=>{i&&(t(i),r.disconnect())}));r.observe(n,{childList:!0,subtree:!0})}))):Promise.reject();var n}().then((e=>{var a,s,o,l;const h=e,c=document.createElement("iframe"),d=N(r.TRANSACTION_SIGN),f=`hid ${d}; bluetooth ${d}`;c.setAttribute("id","pera-wallet-iframe"),c.setAttribute("src",d),c.setAttribute("allow",f),null==h||h.appendChild(c);const m=null===(o=null===(s=null===(a=document.getElementById("pera-wallet-sign-txn-modal-wrapper"))||void 0===a?void 0:a.querySelector("pera-wallet-sign-txn-modal"))||void 0===s?void 0:s.shadowRoot)||void 0===o?void 0:o.querySelector("pera-wallet-modal-header"),g=null===(l=null==m?void 0:m.shadowRoot)||void 0===l?void 0:l.getElementById("pera-wallet-modal-header-close-button");if(g&&g.addEventListener("click",(()=>{i(new p({type:"SIGN_TXN_CANCELLED"},"Transaction signing is cancelled by user.")),y("pera-wallet-sign-txn-modal-wrapper")})),c.contentWindow){let e=0;const a=setInterval((()=>{e+=1,50!==e?u.sendMessage({message:{type:"IFRAME_INITIALIZED"},origin:r.CONNECT,targetWindow:c.contentWindow}):clearInterval(a)}),700);u.setupListener({onReceiveMessage:e=>{var s,o,l;"IFRAME_INITIALIZED_RECEIVED"===e.data.message.type&&(clearInterval(a),u.sendMessage({message:{type:"SIGN_TXN",txn:t},origin:N(r.TRANSACTION_SIGN),targetWindow:c.contentWindow})),"SIGN_TXN_CALLBACK"===e.data.message.type&&(null===(s=document.getElementById("pera-wallet-iframe"))||void 0===s||s.remove(),w(),n(e.data.message.signedTxns.map((t=>E(t.signedTxn))))),"SIGN_TXN_NETWORK_MISMATCH"===e.data.message.type&&i(new p({type:"SIGN_TXN_NETWORK_MISMATCH",detail:e.data.message.error},e.data.message.error||"Network mismatch")),"SESSION_DISCONNECTED"===e.data.message.type&&(null===(o=document.getElementById("pera-wallet-iframe"))||void 0===o||o.remove(),w(),k(),i(new p({type:"SESSION_DISCONNECTED",detail:e.data.message.error},e.data.message.error))),"SIGN_TXN_CALLBACK_ERROR"===e.data.message.type&&(null===(l=document.getElementById("pera-wallet-iframe"))||void 0===l||l.remove(),w(),i(new p({type:"SIGN_TXN_CANCELLED"},e.data.message.error)))}})}})).catch((t=>{console.log(t)})):g(r.TRANSACTION_SIGN).then((e=>{e&&u.sendMessage({message:{type:"SIGN_TXN",txn:t},origin:r.TRANSACTION_SIGN,targetWindow:e});const a=setInterval((()=>{!0===(null==e?void 0:e.closed)&&(i(new p({type:"SIGN_TXN_CANCELLED"},"Transaction signing is cancelled by user.")),clearInterval(a))}),2e3);u.setupListener({onReceiveMessage:t=>{"SIGN_TXN_CALLBACK"===t.data.message.type&&(null==e||e.close(),n(t.data.message.signedTxns.map((t=>E(t.signedTxn))))),"SIGN_TXN_NETWORK_MISMATCH"===t.data.message.type&&i(new p({type:"SIGN_TXN_NETWORK_MISMATCH",detail:t.data.message.error},t.data.message.error||"Network mismatch")),"SESSION_DISCONNECTED"===t.data.message.type&&(null==e||e.close(),k(),i(new p({type:"SESSION_DISCONNECTED",detail:t.data.message.error},t.data.message.error))),"SIGN_TXN_CALLBACK_ERROR"===t.data.message.type&&(null==e||e.close(),i(new p({type:"SIGN_TXN_CANCELLED"},t.data.message.error)))}})})).catch((t=>{i(t)}))}))}signTransaction(t,e){return d(this,void 0,void 0,(function*(){if("mobile"===this.platform&&(T()?v("pera-wallet-redirect-modal-wrapper").innerHTML="<pera-wallet-redirect-modal></pera-wallet-redirect-modal>":!T()&&this.shouldShowSignTxnToast&&(v("pera-wallet-sign-txn-toast-wrapper").innerHTML="<pera-wallet-sign-txn-toast></pera-wallet-sign-txn-toast>"),!this.connector))throw new Error("PeraWalletConnect was not initialized correctly.");const n=t.flatMap((t=>t.map((t=>function(t,e){let n;e&&!(t.signers||[]).includes(e)&&(n=[]);const r={txn:(a=t.txn,i.from(h.default.encodeUnsignedTransaction(a)).toString("base64"))};var a;return Array.isArray(n)&&(r.signers=n),t.authAddr&&(r.authAddr=t.authAddr),t.message&&(r.message=t.message),t.msig&&(r.msig=t.msig),r}(t,e)))));if("web"===this.platform){const{webWalletURL:t}=yield A();return this.signTransactionWithWeb(n,t)}return this.signTransactionWithMobile(n)}))}},e.closePeraWalletSignTxnToast=function(){y("pera-wallet-sign-txn-toast-wrapper")},e.detectBrowser=F,e.generatePeraWalletAppDeepLink=R,e.generatePeraWalletConnectDeepLink=function(t){let e=R(!1);I()&&!e.includes("-wc")&&(e=e.replace("://","-wc://"));let n=`${e}wc?uri=${encodeURIComponent(t)}`;const i=F();return P()&&(n=t),i&&(n=`${n}&browser=${encodeURIComponent(i)}`),n},e.isIOS=I,e.isMobile=T,e.removeModalWrapperFromDOM=y},2339:(t,e,n)=>{"use strict";var i=n(3509);n(9868),n(4126),n(1206),e.PeraWalletConnect=i.PeraWalletConnect,i.closePeraWalletSignTxnToast},9868:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>Tt});var i={};n.r(i),n.d(i,{decrypt:()=>It,encrypt:()=>Pt,generateKey:()=>Et,verifyHmac:()=>Lt});var r=n(5755),a=n(2873),s=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var a=arguments[e],s=0,o=a.length;s<o;s++,r++)i[r]=a[s];return i},o=function(t,e,n){this.name=t,this.version=e,this.os=n,this.type="browser"},l=function(t){this.version=t,this.type="node",this.name="node",this.os=process.platform},h=function(t,e,n,i){this.name=t,this.version=e,this.os=n,this.bot=i,this.type="bot-device"},c=function(){this.type="bot",this.bot=!0,this.name="bot",this.version=null,this.os=null},d=function(){this.type="react-native",this.name="react-native",this.version=null,this.os=null},p=/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,u=3,f=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/EdgA?\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FBAV\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["searchbot",/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]],m=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/]];function g(t){var e=function(t){return""!==t&&f.reduce((function(e,n){var i=n[0],r=n[1];if(e)return e;var a=r.exec(t);return!!a&&[i,a]}),!1)}(t);if(!e)return null;var n=e[0],i=e[1];if("searchbot"===n)return new c;var r=i[1]&&i[1].split(/[._]/).slice(0,3);r?r.length<u&&(r=s(r,function(t){for(var e=[],n=0;n<t;n++)e.push("0");return e}(u-r.length))):r=[];var a=r.join("."),l=function(t){for(var e=0,n=m.length;e<n;e++){var i=m[e],r=i[0];if(i[1].exec(t))return r}return null}(t),d=p.exec(t);return d&&d[1]?new h(n,a,l,d[1]):new o(n,a,l)}function v(t){return function(t){return t?g(t):"undefined"==typeof document&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product?new d:"undefined"!=typeof navigator?g(navigator.userAgent):"undefined"!=typeof process&&process.version?new l(process.version.slice(1)):null}(t)}function w(){const t=v();return t&&t.os?t.os:void 0}a.getFromWindow,a.getFromWindowOrThrow,a.getDocumentOrThrow,a.getDocument,a.getNavigatorOrThrow;const y=a.getNavigator,_=(a.getLocationOrThrow,a.getLocation),b=(a.getCryptoOrThrow,a.getCrypto,a.getLocalStorageOrThrow,a.getLocalStorage);function M(){return r.D()}function x(t){let e=null,n=null;const i=b();return i&&(n=i.getItem(t)),e=n?function(t){if("string"!=typeof t)throw new Error("Cannot safe json parse value of type "+typeof t);try{return JSON.parse(t)}catch(e){return t}}(n):n,e}function C(t){const e=b();e&&e.removeItem(t)}const k="WALLETCONNECT_DEEPLINK_CHOICE",S=["session_request","session_update","exchange_key","connect","disconnect","display_uri","modal_closed","transport_open","transport_close","transport_error"],A=["eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode"];var E=n(1460),L=n.n(E),P=(n(4501),n(5054)),I=n.n(P),T=n(8764).lW;const F="hex",D="utf8",O="0";function R(t){return new Uint8Array(t)}function N(t,e=!1){const n=t.toString(F);return e?U(n):n}function B(t){return I()(t)}function z(t,e=!1){return N(B(t),e)}function W(t){return B(t).toString(D)}function q(t){return R(function(t){return T.from(Z(t),F)}(t))}function j(t){return T.from(t,D)}function V(...t){let e=[];return t.forEach((t=>e=e.concat(Array.from(t)))),new Uint8Array([...e])}function H(t,e=8,n=O){return function(t,e,n=O){return function(t,e,n,i=O){const r=e-t.length;let a=t;if(r>0){const e=i.repeat(r);a=n?e+t:t+e}return a}(t,e,!0,n)}(t,function(t,e=8){const n=t%e;return n?(t-n)/e*e+e:t}(t.length,e),n)}function Z(t){return t.replace(/^0x/,"")}function U(t){return t.startsWith("0x")?t:`0x${t}`}function G(t){return(t=H(t=Z(t),2))&&(t=U(t)),t}function $(t){return B(new Uint8Array(t))}function X(t,e){const n=Z(G(new(L())(t).toString(16)));return e?n:U(n)}var K=n(1094),J=n(1468);function Y(t){return G(t)}const Q=function(t=3){return Date.now()*Math.pow(10,t)+Math.floor(Math.random()*Math.pow(10,t))};function tt(){return((t,e)=>{for(e=t="";t++<36;e+=51*t&52?(15^t?8^Math.random()*(20^t?16:4):4).toString(16):"-");return e})()}function et(t,e){return function(t,e){return!("string"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/)||e&&t.length!==2+2*e)}(t,e)}function nt(t){return void 0!==t.result}function it(t){return void 0!==t.error}function rt(t){return void 0!==t.event}function at(t){var e,n;return(e=t)&&e.length&&!et(t[0])&&(t[0]=function(t,e=!1){return N(j(t),e)}(t[0],!n)),t}function st(t){if(void 0!==t.type&&"0"!==t.type)return t;if(void 0===t.from||!(e=t.from)||"0x"!==e.toLowerCase().substring(0,2)||!/^(0x)?[0-9a-f]{40}$/i.test(e)||!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e)&&e!==function(t){t=Z(t.toLowerCase());const e=Z((0,K.keccak_256)(j(t)));let n="";for(let i=0;i<t.length;i++)parseInt(e[i],16)>7?n+=t[i].toUpperCase():n+=t[i];return U(n)}(e))throw new Error("Transaction object must include a valid 'from' value.");var e;function n(t){let e=t;return("number"==typeof t||"string"==typeof t&&!function(t){return""===t||"string"==typeof t&&""===t.trim()}(t))&&(et(t)?"string"==typeof t&&(e=Y(t)):e=X(t)),"string"==typeof e&&(e=function(t){const e=t.startsWith("0x");return t=(t=Z(t)).startsWith(O)?t.substring(1):t,e?U(t):t}(U(e))),e}const i={from:Y(t.from),to:void 0===t.to?void 0:Y(t.to),gasPrice:void 0===t.gasPrice?"":n(t.gasPrice),gas:void 0===t.gas?void 0===t.gasLimit?"":n(t.gasLimit):n(t.gas),value:void 0===t.value?"":n(t.value),nonce:void 0===t.nonce?"":n(t.nonce),data:void 0===t.data?"":Y(t.data)||"0x"},r=["gasPrice","gas","value","nonce"];return Object.keys(i).forEach((t=>{(void 0===i[t]||"string"==typeof i[t]&&!i[t].trim().length)&&r.includes(t)&&delete i[t]})),i}var ot=n(7563);function lt(t){return ot.parse(t)}const ht=void 0!==n.g.WebSocket?n.g.WebSocket:n(7026),ct="Session currently connected",dt="Session currently disconnected",pt="JSON RPC response format is invalid",ut="User close QRCode Modal",ft="abcdefghijklmnopqrstuvwxyz0123456789".split("").map((t=>`https://${t}.bridge.walletconnect.org`));function mt(t){return function(t){return"walletconnect.org"===function(t){return function(t){let e=t.indexOf("//")>-1?t.split("/")[2]:t.split("/")[0];return e=e.split(":")[0],e=e.split("?")[0],e}(t).split(".").slice(-2).join(".")}(t)}(t)?ft[Math.floor(Math.random()*ft.length)]:t}const gt=class{constructor(t){if(this.protocol="wc",this.version=1,this._bridge="",this._key=null,this._clientId="",this._clientMeta=null,this._peerId="",this._peerMeta=null,this._handshakeId=0,this._handshakeTopic="",this._connected=!1,this._accounts=[],this._chainId=0,this._networkId=0,this._rpcUrl="",this._eventManager=new class{constructor(){this._eventEmitters=[]}subscribe(t){this._eventEmitters.push(t)}unsubscribe(t){this._eventEmitters=this._eventEmitters.filter((e=>e.event!==t))}trigger(t){let e,n=[];e=void 0!==t.method?t.method:nt(t)||it(t)?`response:${t.id}`:rt(t)?t.event:"",e&&(n=this._eventEmitters.filter((t=>t.event===e))),n&&n.length||function(t){return S.includes(t)||t.startsWith("wc_")}(e)||rt(e)||(n=this._eventEmitters.filter((t=>"call_request"===t.event))),n.forEach((e=>{if(it(t)){const n=new Error(t.error.message);e.callback(n,null)}else e.callback(null,t)}))}},this._clientMeta=M()||t.connectorOpts.clientMeta||null,this._cryptoLib=t.cryptoLib,this._sessionStorage=t.sessionStorage||new class{constructor(t="walletconnect"){this.storageId=t}getSession(){let t=null;const e=x(this.storageId);return e&&void 0!==e.bridge&&(t=e),t}setSession(t){return function(t,e){const n="string"==typeof(r=e)?r:JSON.stringify(r),i=b();var r;i&&i.setItem(t,n)}(this.storageId,t),t}removeSession(){C(this.storageId)}}(t.connectorOpts.storageId),this._qrcodeModal=t.connectorOpts.qrcodeModal,this._qrcodeModalOptions=t.connectorOpts.qrcodeModalOptions,this._signingMethods=[...A,...t.connectorOpts.signingMethods||[]],!t.connectorOpts.bridge&&!t.connectorOpts.uri&&!t.connectorOpts.session)throw new Error("Missing one of the required parameters: bridge / uri / session");t.connectorOpts.bridge&&(this.bridge=mt(t.connectorOpts.bridge)),t.connectorOpts.uri&&(this.uri=t.connectorOpts.uri);const e=t.connectorOpts.session||this._getStorageSession();e&&(this.session=e),this.handshakeId&&this._subscribeToSessionResponse(this.handshakeId,"Session request rejected"),this._transport=t.transport||new class{constructor(t){if(this.opts=t,this._queue=[],this._events=[],this._subscriptions=[],this._protocol=t.protocol,this._version=t.version,this._url="",this._netMonitor=null,this._socket=null,this._nextSocket=null,this._subscriptions=t.subscriptions||[],this._netMonitor=t.netMonitor||new class{constructor(){this._eventEmitters=[],"undefined"!=typeof window&&void 0!==window.addEventListener&&(window.addEventListener("online",(()=>this.trigger("online"))),window.addEventListener("offline",(()=>this.trigger("offline"))))}on(t,e){this._eventEmitters.push({event:t,callback:e})}trigger(t){let e=[];t&&(e=this._eventEmitters.filter((e=>e.event===t))),e.forEach((t=>{t.callback()}))}},!t.url||"string"!=typeof t.url)throw new Error("Missing or invalid WebSocket url");this._url=t.url,this._netMonitor.on("online",(()=>this._socketCreate()))}set readyState(t){}get readyState(){return this._socket?this._socket.readyState:-1}set connecting(t){}get connecting(){return 0===this.readyState}set connected(t){}get connected(){return 1===this.readyState}set closing(t){}get closing(){return 2===this.readyState}set closed(t){}get closed(){return 3===this.readyState}open(){this._socketCreate()}close(){this._socketClose()}send(t,e,n){if(!e||"string"!=typeof e)throw new Error("Missing or invalid topic field");this._socketSend({topic:e,type:"pub",payload:t,silent:!!n})}subscribe(t){this._socketSend({topic:t,type:"sub",payload:"",silent:!0})}on(t,e){this._events.push({event:t,callback:e})}_socketCreate(){if(this._nextSocket)return;const t=function(t,e,n){var i,r;const a=(t.startsWith("https")?t.replace("https","wss"):t.startsWith("http")?t.replace("http","ws"):t).split("?"),s=!function(){const t=v();return!(!t||!t.name)&&"node"===t.name.toLowerCase()}()&&y()?{protocol:e,version:n,env:"browser",host:(null===(i=_())||void 0===i?void 0:i.host)||""}:{protocol:e,version:n,env:(null===(r=v())||void 0===r?void 0:r.name)||""},o=function(t,e){let n=lt(t);return n=Object.assign(Object.assign({},n),e),t=function(t){return ot.stringify(t)}(n),t}(function(t){const e=-1!==t.indexOf("?")?t.indexOf("?"):void 0;return void 0!==e?t.substr(e):""}(a[1]||""),s);return a[0]+"?"+o}(this._url,this._protocol,this._version);if(this._nextSocket=new ht(t),!this._nextSocket)throw new Error("Failed to create socket");this._nextSocket.onmessage=t=>this._socketReceive(t),this._nextSocket.onopen=()=>this._socketOpen(),this._nextSocket.onerror=t=>this._socketError(t),this._nextSocket.onclose=()=>{setTimeout((()=>{this._nextSocket=null,this._socketCreate()}),1e3)}}_socketOpen(){this._socketClose(),this._socket=this._nextSocket,this._nextSocket=null,this._queueSubscriptions(),this._pushQueue()}_socketClose(){this._socket&&(this._socket.onclose=()=>{},this._socket.close())}_socketSend(t){const e=JSON.stringify(t);this._socket&&1===this._socket.readyState?this._socket.send(e):(this._setToQueue(t),this._socketCreate())}async _socketReceive(t){let e;try{e=JSON.parse(t.data)}catch(t){return}if(this._socketSend({topic:e.topic,type:"ack",payload:"",silent:!0}),this._socket&&1===this._socket.readyState){const t=this._events.filter((t=>"message"===t.event));t&&t.length&&t.forEach((t=>t.callback(e)))}}_socketError(t){const e=this._events.filter((t=>"error"===t.event));e&&e.length&&e.forEach((e=>e.callback(t)))}_queueSubscriptions(){this._subscriptions.forEach((t=>this._queue.push({topic:t,type:"sub",payload:"",silent:!0}))),this._subscriptions=this.opts.subscriptions||[]}_setToQueue(t){this._queue.push(t)}_pushQueue(){this._queue.forEach((t=>this._socketSend(t))),this._queue=[]}}({protocol:this.protocol,version:this.version,url:this.bridge,subscriptions:[this.clientId]}),this._subscribeToInternalEvents(),this._initTransport(),t.connectorOpts.uri&&this._subscribeToSessionRequest(),t.pushServerOpts&&this._registerPushServer(t.pushServerOpts)}set bridge(t){t&&(this._bridge=t)}get bridge(){return this._bridge}set key(t){if(!t)return;const e=q(t).buffer;this._key=e}get key(){return this._key?(t=this._key,!0,z(new Uint8Array(t),!1)):"";var t}set clientId(t){t&&(this._clientId=t)}get clientId(){let t=this._clientId;return t||(t=this._clientId=tt()),this._clientId}set peerId(t){t&&(this._peerId=t)}get peerId(){return this._peerId}set clientMeta(t){}get clientMeta(){let t=this._clientMeta;return t||(t=this._clientMeta=M()),t}set peerMeta(t){this._peerMeta=t}get peerMeta(){return this._peerMeta}set handshakeTopic(t){t&&(this._handshakeTopic=t)}get handshakeTopic(){return this._handshakeTopic}set handshakeId(t){t&&(this._handshakeId=t)}get handshakeId(){return this._handshakeId}get uri(){return this._formatUri()}set uri(t){if(!t)return;const{handshakeTopic:e,bridge:n,key:i}=this._parseUri(t);this.handshakeTopic=e,this.bridge=n,this.key=i}set chainId(t){this._chainId=t}get chainId(){return this._chainId}set networkId(t){this._networkId=t}get networkId(){return this._networkId}set accounts(t){this._accounts=t}get accounts(){return this._accounts}set rpcUrl(t){this._rpcUrl=t}get rpcUrl(){return this._rpcUrl}set connected(t){}get connected(){return this._connected}set pending(t){}get pending(){return!!this._handshakeTopic}get session(){return{connected:this.connected,accounts:this.accounts,chainId:this.chainId,bridge:this.bridge,key:this.key,clientId:this.clientId,clientMeta:this.clientMeta,peerId:this.peerId,peerMeta:this.peerMeta,handshakeId:this.handshakeId,handshakeTopic:this.handshakeTopic}}set session(t){t&&(this._connected=t.connected,this.accounts=t.accounts,this.chainId=t.chainId,this.bridge=t.bridge,this.key=t.key,this.clientId=t.clientId,this.clientMeta=t.clientMeta,this.peerId=t.peerId,this.peerMeta=t.peerMeta,this.handshakeId=t.handshakeId,this.handshakeTopic=t.handshakeTopic)}on(t,e){const n={event:t,callback:e};this._eventManager.subscribe(n)}off(t){this._eventManager.unsubscribe(t)}async createInstantRequest(t){this._key=await this._generateKey();const e=this._formatRequest({method:"wc_instantRequest",params:[{peerId:this.clientId,peerMeta:this.clientMeta,request:this._formatRequest(t)}]});this.handshakeId=e.id,this.handshakeTopic=tt(),this._eventManager.trigger({event:"display_uri",params:[this.uri]}),this.on("modal_closed",(()=>{throw new Error(ut)}));const n=()=>{this.killSession()};try{const t=await this._sendCallRequest(e);return t&&n(),t}catch(t){throw n(),t}}async connect(t){if(!this._qrcodeModal)throw new Error("QRCode Modal not provided");return this.connected?{chainId:this.chainId,accounts:this.accounts}:(await this.createSession(t),new Promise((async(t,e)=>{this.on("modal_closed",(()=>e(new Error(ut)))),this.on("connect",((n,i)=>{if(n)return e(n);t(i.params[0])}))})))}async createSession(t){if(this._connected)throw new Error(ct);if(this.pending)return;this._key=await this._generateKey();const e=this._formatRequest({method:"wc_sessionRequest",params:[{peerId:this.clientId,peerMeta:this.clientMeta,chainId:t&&t.chainId?t.chainId:null}]});this.handshakeId=e.id,this.handshakeTopic=tt(),this._sendSessionRequest(e,"Session update rejected",{topic:this.handshakeTopic}),this._eventManager.trigger({event:"display_uri",params:[this.uri]})}approveSession(t){if(this._connected)throw new Error(ct);this.chainId=t.chainId,this.accounts=t.accounts,this.networkId=t.networkId||0,this.rpcUrl=t.rpcUrl||"";const e={approved:!0,chainId:this.chainId,networkId:this.networkId,accounts:this.accounts,rpcUrl:this.rpcUrl,peerId:this.clientId,peerMeta:this.clientMeta},n={id:this.handshakeId,jsonrpc:"2.0",result:e};this._sendResponse(n),this._connected=!0,this._setStorageSession(),this._eventManager.trigger({event:"connect",params:[{peerId:this.peerId,peerMeta:this.peerMeta,chainId:this.chainId,accounts:this.accounts}]})}rejectSession(t){if(this._connected)throw new Error(ct);const e=t&&t.message?t.message:"Session Rejected",n=this._formatResponse({id:this.handshakeId,error:{message:e}});this._sendResponse(n),this._connected=!1,this._eventManager.trigger({event:"disconnect",params:[{message:e}]}),this._removeStorageSession()}updateSession(t){if(!this._connected)throw new Error(dt);this.chainId=t.chainId,this.accounts=t.accounts,this.networkId=t.networkId||0,this.rpcUrl=t.rpcUrl||"";const e={approved:!0,chainId:this.chainId,networkId:this.networkId,accounts:this.accounts,rpcUrl:this.rpcUrl},n=this._formatRequest({method:"wc_sessionUpdate",params:[e]});this._sendSessionRequest(n,"Session update rejected"),this._eventManager.trigger({event:"session_update",params:[{chainId:this.chainId,accounts:this.accounts}]}),this._manageStorageSession()}async killSession(t){const e=t?t.message:"Session Disconnected",n=this._formatRequest({method:"wc_sessionUpdate",params:[{approved:!1,chainId:null,networkId:null,accounts:null}]});await this._sendRequest(n),this._handleSessionDisconnect(e)}async sendTransaction(t){if(!this._connected)throw new Error(dt);const e=st(t),n=this._formatRequest({method:"eth_sendTransaction",params:[e]});return await this._sendCallRequest(n)}async signTransaction(t){if(!this._connected)throw new Error(dt);const e=st(t),n=this._formatRequest({method:"eth_signTransaction",params:[e]});return await this._sendCallRequest(n)}async signMessage(t){if(!this._connected)throw new Error(dt);const e=this._formatRequest({method:"eth_sign",params:t});return await this._sendCallRequest(e)}async signPersonalMessage(t){if(!this._connected)throw new Error(dt);t=at(t);const e=this._formatRequest({method:"personal_sign",params:t});return await this._sendCallRequest(e)}async signTypedData(t){if(!this._connected)throw new Error(dt);const e=this._formatRequest({method:"eth_signTypedData",params:t});return await this._sendCallRequest(e)}async updateChain(t){if(!this._connected)throw new Error("Session currently disconnected");const e=this._formatRequest({method:"wallet_updateChain",params:[t]});return await this._sendCallRequest(e)}unsafeSend(t,e){return this._sendRequest(t,e),this._eventManager.trigger({event:"call_request_sent",params:[{request:t,options:e}]}),new Promise(((e,n)=>{this._subscribeToResponse(t.id,((t,i)=>{if(t)n(t);else{if(!i)throw new Error("Missing JSON RPC response");e(i)}}))}))}async sendCustomRequest(t,e){if(!this._connected)throw new Error(dt);switch(t.method){case"eth_accounts":return this.accounts;case"eth_chainId":return X(this.chainId);case"eth_sendTransaction":case"eth_signTransaction":t.params&&(t.params[0]=st(t.params[0]));break;case"personal_sign":t.params&&(t.params=at(t.params))}const n=this._formatRequest(t);return await this._sendCallRequest(n,e)}approveRequest(t){if(!nt(t))throw new Error('JSON-RPC success response must include "result" field');{const e=this._formatResponse(t);this._sendResponse(e)}}rejectRequest(t){if(!it(t))throw new Error('JSON-RPC error response must include "error" field');{const e=this._formatResponse(t);this._sendResponse(e)}}transportClose(){this._transport.close()}async _sendRequest(t,e){const n=this._formatRequest(t),i=await this._encrypt(n),r=void 0!==(null==e?void 0:e.topic)?e.topic:this.peerId,a=JSON.stringify(i),s=void 0!==(null==e?void 0:e.forcePushNotification)?!e.forcePushNotification:function(t){return!!t.method.startsWith("wc_")||!A.includes(t.method)}(n);this._transport.send(a,r,s)}async _sendResponse(t){const e=await this._encrypt(t),n=this.peerId,i=JSON.stringify(e);this._transport.send(i,n,!0)}async _sendSessionRequest(t,e,n){this._sendRequest(t,n),this._subscribeToSessionResponse(t.id,e)}_sendCallRequest(t,e){return this._sendRequest(t,e),this._eventManager.trigger({event:"call_request_sent",params:[{request:t,options:e}]}),this._subscribeToCallResponse(t.id)}_formatRequest(t){if(void 0===t.method)throw new Error('JSON RPC request must have valid "method" value');return{id:void 0===t.id?Q():t.id,jsonrpc:"2.0",method:t.method,params:void 0===t.params?[]:t.params}}_formatResponse(t){if(void 0===t.id)throw new Error('JSON RPC request must have valid "id" value');const e={id:t.id,jsonrpc:"2.0"};if(it(t)){const n=function(t){const e=t.message||"Failed or Rejected Request";let n=-32e3;if(t&&!t.code)switch(e){case"Parse error":n=-32700;break;case"Invalid request":n=-32600;break;case"Method not found":n=-32601;break;case"Invalid params":n=-32602;break;case"Internal error":n=-32603;break;default:n=-32e3}const i={code:n,message:e};return t.data&&(i.data=t.data),i}(t.error);return Object.assign(Object.assign(Object.assign({},e),t),{error:n})}if(nt(t))return Object.assign(Object.assign({},e),t);throw new Error(pt)}_handleSessionDisconnect(t){const e=t||"Session Disconnected";this._connected||(this._qrcodeModal&&this._qrcodeModal.close(),C(k)),this._connected&&(this._connected=!1),this._handshakeId&&(this._handshakeId=0),this._handshakeTopic&&(this._handshakeTopic=""),this._peerId&&(this._peerId=""),this._eventManager.trigger({event:"disconnect",params:[{message:e}]}),this._removeStorageSession(),this.transportClose()}_handleSessionResponse(t,e){e&&e.approved?(this._connected?(e.chainId&&(this.chainId=e.chainId),e.accounts&&(this.accounts=e.accounts),this._eventManager.trigger({event:"session_update",params:[{chainId:this.chainId,accounts:this.accounts}]})):(this._connected=!0,e.chainId&&(this.chainId=e.chainId),e.accounts&&(this.accounts=e.accounts),e.peerId&&!this.peerId&&(this.peerId=e.peerId),e.peerMeta&&!this.peerMeta&&(this.peerMeta=e.peerMeta),this._eventManager.trigger({event:"connect",params:[{peerId:this.peerId,peerMeta:this.peerMeta,chainId:this.chainId,accounts:this.accounts}]})),this._manageStorageSession()):this._handleSessionDisconnect(t)}async _handleIncomingMessages(t){if(![this.clientId,this.handshakeTopic].includes(t.topic))return;let e;try{e=JSON.parse(t.payload)}catch(t){return}const n=await this._decrypt(e);n&&this._eventManager.trigger(n)}_subscribeToSessionRequest(){this._transport.subscribe(this.handshakeTopic)}_subscribeToResponse(t,e){this.on(`response:${t}`,e)}_subscribeToSessionResponse(t,e){this._subscribeToResponse(t,((t,n)=>{t?this._handleSessionResponse(t.message):nt(n)?this._handleSessionResponse(e,n.result):n.error&&n.error.message?this._handleSessionResponse(n.error.message):this._handleSessionResponse(e)}))}_subscribeToCallResponse(t){return new Promise(((e,n)=>{this._subscribeToResponse(t,((t,i)=>{t?n(t):nt(i)?e(i.result):i.error&&i.error.message?n(i.error):n(new Error(pt))}))}))}_subscribeToInternalEvents(){this.on("display_uri",(()=>{this._qrcodeModal&&this._qrcodeModal.open(this.uri,(()=>{this._eventManager.trigger({event:"modal_closed",params:[]})}),this._qrcodeModalOptions)})),this.on("connect",(()=>{this._qrcodeModal&&this._qrcodeModal.close()})),this.on("call_request_sent",((t,e)=>{const{request:n}=e.params[0];if(w()&&(function(){const t=w();return!!t&&t.toLowerCase().includes("android")}()||function(){const t=w();return!!t&&(t.toLowerCase().includes("ios")||t.toLowerCase().includes("mac")&&navigator.maxTouchPoints>1)}())&&this._signingMethods.includes(n.method)){const t=x(k);t&&(window.location.href=t.href)}})),this.on("wc_sessionRequest",((t,e)=>{t&&this._eventManager.trigger({event:"error",params:[{code:"SESSION_REQUEST_ERROR",message:t.toString()}]}),this.handshakeId=e.id,this.peerId=e.params[0].peerId,this.peerMeta=e.params[0].peerMeta;const n=Object.assign(Object.assign({},e),{method:"session_request"});this._eventManager.trigger(n)})),this.on("wc_sessionUpdate",((t,e)=>{t&&this._handleSessionResponse(t.message),this._handleSessionResponse("Session disconnected",e.params[0])}))}_initTransport(){this._transport.on("message",(t=>this._handleIncomingMessages(t))),this._transport.on("open",(()=>this._eventManager.trigger({event:"transport_open",params:[]}))),this._transport.on("close",(()=>this._eventManager.trigger({event:"transport_close",params:[]}))),this._transport.on("error",(()=>this._eventManager.trigger({event:"transport_error",params:["Websocket connection failed"]}))),this._transport.open()}_formatUri(){return`${this.protocol}:${this.handshakeTopic}@${this.version}?bridge=${encodeURIComponent(this.bridge)}&key=${this.key}`}_parseUri(t){const e=function(t){const e=t.indexOf(":"),n=-1!==t.indexOf("?")?t.indexOf("?"):void 0,i=t.substring(0,e),r=function(t){const e=t.split("@");return{handshakeTopic:e[0],version:parseInt(e[1],10)}}(t.substring(e+1,n)),a=function(t){const e=lt(t);return{key:e.key||"",bridge:e.bridge||""}}(void 0!==n?t.substr(n):"");return Object.assign(Object.assign({protocol:i},r),a)}(t);if(e.protocol===this.protocol){if(!e.handshakeTopic)throw Error("Invalid or missing handshakeTopic parameter value");const t=e.handshakeTopic;if(!e.bridge)throw Error("Invalid or missing bridge url parameter value");const n=decodeURIComponent(e.bridge);if(!e.key)throw Error("Invalid or missing key parameter value");return{handshakeTopic:t,bridge:n,key:e.key}}throw new Error("URI format is invalid")}async _generateKey(){return this._cryptoLib?await this._cryptoLib.generateKey():null}async _encrypt(t){const e=this._key;return this._cryptoLib&&e?await this._cryptoLib.encrypt(t,e):null}async _decrypt(t){const e=this._key;return this._cryptoLib&&e?await this._cryptoLib.decrypt(t,e):null}_getStorageSession(){let t=null;return this._sessionStorage&&(t=this._sessionStorage.getSession()),t}_setStorageSession(){this._sessionStorage&&this._sessionStorage.setSession(this.session)}_removeStorageSession(){this._sessionStorage&&this._sessionStorage.removeSession()}_manageStorageSession(){this._connected?this._setStorageSession():this._removeStorageSession()}_registerPushServer(t){if(!t.url||"string"!=typeof t.url)throw Error("Invalid or missing pushServerOpts.url parameter value");if(!t.type||"string"!=typeof t.type)throw Error("Invalid or missing pushServerOpts.type parameter value");if(!t.token||"string"!=typeof t.token)throw Error("Invalid or missing pushServerOpts.token parameter value");const e={bridge:this.bridge,topic:this.clientId,type:t.type,token:t.token,peerName:"",language:t.language||""};this.on("connect",(async(n,i)=>{if(n)throw n;if(t.peerMeta){const t=i.params[0].peerMeta.name;e.peerName=t}try{const n=await fetch(`${t.url}/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)});if(!(await n.json()).success)throw Error("Failed to register in Push Server")}catch(n){throw Error("Failed to register in Push Server")}}))}},vt=256,wt=256,yt="AES-CBC",_t=`SHA-${vt}`,bt="HMAC",Mt="encrypt",xt="decrypt",Ct="sign",kt="verify";async function St(t,e=yt){return J.getSubtleCrypto().importKey("raw",t,function(t){return t===yt?{length:vt,name:yt}:{hash:{name:_t},name:bt}}(e),!0,function(t){return t===yt?[Mt,xt]:[Ct,kt]}(e))}async function At(t,e){const n=await async function(t,e){const n=J.getSubtleCrypto(),i=await St(t,bt),r=await n.sign({length:wt,name:bt},i,e);return new Uint8Array(r)}(t,e);return n}async function Et(t){const e=function(t){return J.getBrowerCrypto().getRandomValues(new Uint8Array(t))}((t||256)/8);return R(B(e)).buffer}async function Lt(t,e){const n=q(t.data),i=q(t.iv),r=z(q(t.hmac),!1),a=V(n,i),s=z(await At(e,a),!1);return Z(r)===Z(s)}async function Pt(t,e,n){const i=R($(e)),r=R($(n||await Et(128))),a=z(r,!1),s=R(j(JSON.stringify(t))),o=await function(t,e,n){return async function(t,e,n){const i=J.getSubtleCrypto(),r=await St(e,yt),a=await i.encrypt({iv:t,name:yt},r,n);return new Uint8Array(a)}(t,e,n)}(r,i,s),l=z(o,!1),h=V(o,r);return{data:l,hmac:z(await At(i,h),!1),iv:a}}async function It(t,e){const n=R($(e));if(!n)throw new Error("Missing key: required for decryption");if(!await Lt(t,n))return null;const i=q(t.data),r=q(t.iv),a=W(await function(t,e,n){return async function(t,e,n){const i=J.getSubtleCrypto(),r=await St(e,yt),a=await i.decrypt({iv:t,name:yt},r,n);return new Uint8Array(a)}(t,e,n)}(r,n,i));let s;try{s=JSON.parse(a)}catch(t){return null}return s}const Tt=class extends gt{constructor(t,e){super({cryptoLib:i,connectorOpts:t,pushServerOpts:e})}}},926:(t,e,n)=>{"use strict";function i(){return(null===n.g||void 0===n.g?void 0:n.g.crypto)||(null===n.g||void 0===n.g?void 0:n.g.msCrypto)||{}}function r(){const t=i();return t.subtle||t.webkitSubtle}Object.defineProperty(e,"__esModule",{value:!0}),e.isBrowserCryptoAvailable=e.getSubtleCrypto=e.getBrowerCrypto=void 0,e.getBrowerCrypto=i,e.getSubtleCrypto=r,e.isBrowserCryptoAvailable=function(){return!!i()&&!!r()}},8618:(t,e)=>{"use strict";function n(){return"undefined"==typeof document&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product}function i(){return"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node}Object.defineProperty(e,"__esModule",{value:!0}),e.isBrowser=e.isNode=e.isReactNative=void 0,e.isReactNative=n,e.isNode=i,e.isBrowser=function(){return!n()&&!i()}},1468:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=n(4308);i.__exportStar(n(926),e),i.__exportStar(n(8618),e)},4308:(t,e,n)=>{"use strict";n.r(e),n.d(e,{__assign:()=>a,__asyncDelegator:()=>_,__asyncGenerator:()=>y,__asyncValues:()=>b,__await:()=>w,__awaiter:()=>c,__classPrivateFieldGet:()=>k,__classPrivateFieldSet:()=>S,__createBinding:()=>p,__decorate:()=>o,__exportStar:()=>u,__extends:()=>r,__generator:()=>d,__importDefault:()=>C,__importStar:()=>x,__makeTemplateObject:()=>M,__metadata:()=>h,__param:()=>l,__read:()=>m,__rest:()=>s,__spread:()=>g,__spreadArrays:()=>v,__values:()=>f});var i=function(t,e){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},i(t,e)};function r(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var a=function(){return a=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t},a.apply(this,arguments)};function s(t,e){var n={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(i=Object.getOwnPropertySymbols(t);r<i.length;r++)e.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(t,i[r])&&(n[i[r]]=t[i[r]])}return n}function o(t,e,n,i){var r,a=arguments.length,s=a<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,i);else for(var o=t.length-1;o>=0;o--)(r=t[o])&&(s=(a<3?r(s):a>3?r(e,n,s):r(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s}function l(t,e){return function(n,i){e(n,i,t)}}function h(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function c(t,e,n,i){return new(n||(n=Promise))((function(r,a){function s(t){try{l(i.next(t))}catch(t){a(t)}}function o(t){try{l(i.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,o)}l((i=i.apply(t,e||[])).next())}))}function d(t,e){var n,i,r,a,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,i=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){s.label=a[1];break}if(6===a[0]&&s.label<r[1]){s.label=r[1],r=a;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(a);break}r[2]&&s.ops.pop(),s.trys.pop();continue}a=e.call(t,s)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}function p(t,e,n,i){void 0===i&&(i=n),t[i]=e[n]}function u(t,e){for(var n in t)"default"===n||e.hasOwnProperty(n)||(e[n]=t[n])}function f(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function m(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var i,r,a=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(i=a.next()).done;)s.push(i.value)}catch(t){r={error:t}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return s}function g(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(m(arguments[e]));return t}function v(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var a=arguments[e],s=0,o=a.length;s<o;s++,r++)i[r]=a[s];return i}function w(t){return this instanceof w?(this.v=t,this):new w(t)}function y(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,r=n.apply(t,e||[]),a=[];return i={},s("next"),s("throw"),s("return"),i[Symbol.asyncIterator]=function(){return this},i;function s(t){r[t]&&(i[t]=function(e){return new Promise((function(n,i){a.push([t,e,n,i])>1||o(t,e)}))})}function o(t,e){try{(n=r[t](e)).value instanceof w?Promise.resolve(n.value.v).then(l,h):c(a[0][2],n)}catch(t){c(a[0][3],t)}var n}function l(t){o("next",t)}function h(t){o("throw",t)}function c(t,e){t(e),a.shift(),a.length&&o(a[0][0],a[0][1])}}function _(t){var e,n;return e={},i("next"),i("throw",(function(t){throw t})),i("return"),e[Symbol.iterator]=function(){return this},e;function i(i,r){e[i]=t[i]?function(e){return(n=!n)?{value:w(t[i](e)),done:"return"===i}:r?r(e):e}:r}}function b(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t=f(t),e={},i("next"),i("throw"),i("return"),e[Symbol.asyncIterator]=function(){return this},e);function i(n){e[n]=t[n]&&function(e){return new Promise((function(i,r){!function(t,e,n,i){Promise.resolve(i).then((function(e){t({value:e,done:n})}),e)}(i,r,(e=t[n](e)).done,e.value)}))}}}function M(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t}function x(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}function C(t){return t&&t.__esModule?t:{default:t}}function k(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)}function S(t,e,n){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,n),n}},1460:function(t,e,n){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function r(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}function a(t,e,n){if(a.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(n=e,e=10),this._init(t||0,e||10,n||"be"))}var s;"object"==typeof t?t.exports=a:e.BN=a,a.BN=a,a.wordSize=26;try{s=n(6563).Buffer}catch(t){}function o(t,e,n){for(var i=0,r=Math.min(t.length,n),a=e;a<r;a++){var s=t.charCodeAt(a)-48;i<<=4,i|=s>=49&&s<=54?s-49+10:s>=17&&s<=22?s-17+10:15&s}return i}function l(t,e,n,i){for(var r=0,a=Math.min(t.length,n),s=e;s<a;s++){var o=t.charCodeAt(s)-48;r*=i,r+=o>=49?o-49+10:o>=17?o-17+10:o}return r}a.isBN=function(t){return t instanceof a||null!==t&&"object"==typeof t&&t.constructor.wordSize===a.wordSize&&Array.isArray(t.words)},a.max=function(t,e){return t.cmp(e)>0?t:e},a.min=function(t,e){return t.cmp(e)<0?t:e},a.prototype._init=function(t,e,n){if("number"==typeof t)return this._initNumber(t,e,n);if("object"==typeof t)return this._initArray(t,e,n);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var r=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&r++,16===e?this._parseHex(t,r):this._parseBase(t,e,r),"-"===t[0]&&(this.negative=1),this.strip(),"le"===n&&this._initArray(this.toArray(),e,n)},a.prototype._initNumber=function(t,e,n){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),e,n)},a.prototype._initArray=function(t,e,n){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var a,s,o=0;if("be"===n)for(r=t.length-1,a=0;r>=0;r-=3)s=t[r]|t[r-1]<<8|t[r-2]<<16,this.words[a]|=s<<o&67108863,this.words[a+1]=s>>>26-o&67108863,(o+=24)>=26&&(o-=26,a++);else if("le"===n)for(r=0,a=0;r<t.length;r+=3)s=t[r]|t[r+1]<<8|t[r+2]<<16,this.words[a]|=s<<o&67108863,this.words[a+1]=s>>>26-o&67108863,(o+=24)>=26&&(o-=26,a++);return this.strip()},a.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var i,r,a=0;for(n=t.length-6,i=0;n>=e;n-=6)r=o(t,n,n+6),this.words[i]|=r<<a&67108863,this.words[i+1]|=r>>>26-a&4194303,(a+=24)>=26&&(a-=26,i++);n+6!==e&&(r=o(t,e,n+6),this.words[i]|=r<<a&67108863,this.words[i+1]|=r>>>26-a&4194303),this.strip()},a.prototype._parseBase=function(t,e,n){this.words=[0],this.length=1;for(var i=0,r=1;r<=67108863;r*=e)i++;i--,r=r/e|0;for(var a=t.length-n,s=a%i,o=Math.min(a,a-s)+n,h=0,c=n;c<o;c+=i)h=l(t,c,c+i,e),this.imuln(r),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==s){var d=1;for(h=l(t,c,t.length,e),c=0;c<s;c++)d*=e;this.imuln(d),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},a.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},a.prototype.clone=function(){var t=new a(null);return this.copy(t),t},a.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},a.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},a.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},a.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],c=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function p(t,e,n){n.negative=e.negative^t.negative;var i=t.length+e.length|0;n.length=i,i=i-1|0;var r=0|t.words[0],a=0|e.words[0],s=r*a,o=67108863&s,l=s/67108864|0;n.words[0]=o;for(var h=1;h<i;h++){for(var c=l>>>26,d=67108863&l,p=Math.min(h,e.length-1),u=Math.max(0,h-t.length+1);u<=p;u++){var f=h-u|0;c+=(s=(r=0|t.words[f])*(a=0|e.words[u])+d)/67108864|0,d=67108863&s}n.words[h]=0|d,l=0|c}return 0!==l?n.words[h]=0|l:n.length--,n.strip()}a.prototype.toString=function(t,e){var n;if(e=0|e||1,16===(t=t||10)||"hex"===t){n="";for(var r=0,a=0,s=0;s<this.length;s++){var o=this.words[s],l=(16777215&(o<<r|a)).toString(16);n=0!=(a=o>>>24-r&16777215)||s!==this.length-1?h[6-l.length]+l+n:l+n,(r+=2)>=26&&(r-=26,s--)}for(0!==a&&(n=a.toString(16)+n);n.length%e!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(t===(0|t)&&t>=2&&t<=36){var p=c[t],u=d[t];n="";var f=this.clone();for(f.negative=0;!f.isZero();){var m=f.modn(u).toString(t);n=(f=f.idivn(u)).isZero()?m+n:h[p-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%e!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}i(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},a.prototype.toJSON=function(){return this.toString(16)},a.prototype.toBuffer=function(t,e){return i(void 0!==s),this.toArrayLike(s,t,e)},a.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},a.prototype.toArrayLike=function(t,e,n){var r=this.byteLength(),a=n||Math.max(1,r);i(r<=a,"byte array longer than desired length"),i(a>0,"Requested array length <= 0"),this.strip();var s,o,l="le"===e,h=new t(a),c=this.clone();if(l){for(o=0;!c.isZero();o++)s=c.andln(255),c.iushrn(8),h[o]=s;for(;o<a;o++)h[o]=0}else{for(o=0;o<a-r;o++)h[o]=0;for(o=0;!c.isZero();o++)s=c.andln(255),c.iushrn(8),h[a-o-1]=s}return h},Math.clz32?a.prototype._countBits=function(t){return 32-Math.clz32(t)}:a.prototype._countBits=function(t){var e=t,n=0;return e>=4096&&(n+=13,e>>>=13),e>=64&&(n+=7,e>>>=7),e>=8&&(n+=4,e>>>=4),e>=2&&(n+=2,e>>>=2),n+e},a.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,n=0;return 0==(8191&e)&&(n+=13,e>>>=13),0==(127&e)&&(n+=7,e>>>=7),0==(15&e)&&(n+=4,e>>>=4),0==(3&e)&&(n+=2,e>>>=2),0==(1&e)&&n++,n},a.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var n=this._zeroBits(this.words[e]);if(t+=n,26!==n)break}return t},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},a.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return 0!==this.negative},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},a.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},a.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},a.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},a.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var n=0;n<e.length;n++)this.words[n]=this.words[n]&t.words[n];return this.length=e.length,this.strip()},a.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},a.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},a.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},a.prototype.iuxor=function(t){var e,n;this.length>t.length?(e=this,n=t):(e=t,n=this);for(var i=0;i<n.length;i++)this.words[i]=e.words[i]^n.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},a.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},a.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},a.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},a.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),n=t%26;this._expand(e),n>0&&e--;for(var r=0;r<e;r++)this.words[r]=67108863&~this.words[r];return n>0&&(this.words[r]=~this.words[r]&67108863>>26-n),this.strip()},a.prototype.notn=function(t){return this.clone().inotn(t)},a.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var n=t/26|0,r=t%26;return this._expand(n+1),this.words[n]=e?this.words[n]|1<<r:this.words[n]&~(1<<r),this.strip()},a.prototype.iadd=function(t){var e,n,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(n=this,i=t):(n=t,i=this);for(var r=0,a=0;a<i.length;a++)e=(0|n.words[a])+(0|i.words[a])+r,this.words[a]=67108863&e,r=e>>>26;for(;0!==r&&a<n.length;a++)e=(0|n.words[a])+r,this.words[a]=67108863&e,r=e>>>26;if(this.length=n.length,0!==r)this.words[this.length]=r,this.length++;else if(n!==this)for(;a<n.length;a++)this.words[a]=n.words[a];return this},a.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},a.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var n,i,r=this.cmp(t);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;r>0?(n=this,i=t):(n=t,i=this);for(var a=0,s=0;s<i.length;s++)a=(e=(0|n.words[s])-(0|i.words[s])+a)>>26,this.words[s]=67108863&e;for(;0!==a&&s<n.length;s++)a=(e=(0|n.words[s])+a)>>26,this.words[s]=67108863&e;if(0===a&&s<n.length&&n!==this)for(;s<n.length;s++)this.words[s]=n.words[s];return this.length=Math.max(this.length,s),n!==this&&(this.negative=1),this.strip()},a.prototype.sub=function(t){return this.clone().isub(t)};var u=function(t,e,n){var i,r,a,s=t.words,o=e.words,l=n.words,h=0,c=0|s[0],d=8191&c,p=c>>>13,u=0|s[1],f=8191&u,m=u>>>13,g=0|s[2],v=8191&g,w=g>>>13,y=0|s[3],_=8191&y,b=y>>>13,M=0|s[4],x=8191&M,C=M>>>13,k=0|s[5],S=8191&k,A=k>>>13,E=0|s[6],L=8191&E,P=E>>>13,I=0|s[7],T=8191&I,F=I>>>13,D=0|s[8],O=8191&D,R=D>>>13,N=0|s[9],B=8191&N,z=N>>>13,W=0|o[0],q=8191&W,j=W>>>13,V=0|o[1],H=8191&V,Z=V>>>13,U=0|o[2],G=8191&U,$=U>>>13,X=0|o[3],K=8191&X,J=X>>>13,Y=0|o[4],Q=8191&Y,tt=Y>>>13,et=0|o[5],nt=8191&et,it=et>>>13,rt=0|o[6],at=8191&rt,st=rt>>>13,ot=0|o[7],lt=8191&ot,ht=ot>>>13,ct=0|o[8],dt=8191&ct,pt=ct>>>13,ut=0|o[9],ft=8191&ut,mt=ut>>>13;n.negative=t.negative^e.negative,n.length=19;var gt=(h+(i=Math.imul(d,q))|0)+((8191&(r=(r=Math.imul(d,j))+Math.imul(p,q)|0))<<13)|0;h=((a=Math.imul(p,j))+(r>>>13)|0)+(gt>>>26)|0,gt&=67108863,i=Math.imul(f,q),r=(r=Math.imul(f,j))+Math.imul(m,q)|0,a=Math.imul(m,j);var vt=(h+(i=i+Math.imul(d,H)|0)|0)+((8191&(r=(r=r+Math.imul(d,Z)|0)+Math.imul(p,H)|0))<<13)|0;h=((a=a+Math.imul(p,Z)|0)+(r>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(v,q),r=(r=Math.imul(v,j))+Math.imul(w,q)|0,a=Math.imul(w,j),i=i+Math.imul(f,H)|0,r=(r=r+Math.imul(f,Z)|0)+Math.imul(m,H)|0,a=a+Math.imul(m,Z)|0;var wt=(h+(i=i+Math.imul(d,G)|0)|0)+((8191&(r=(r=r+Math.imul(d,$)|0)+Math.imul(p,G)|0))<<13)|0;h=((a=a+Math.imul(p,$)|0)+(r>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(_,q),r=(r=Math.imul(_,j))+Math.imul(b,q)|0,a=Math.imul(b,j),i=i+Math.imul(v,H)|0,r=(r=r+Math.imul(v,Z)|0)+Math.imul(w,H)|0,a=a+Math.imul(w,Z)|0,i=i+Math.imul(f,G)|0,r=(r=r+Math.imul(f,$)|0)+Math.imul(m,G)|0,a=a+Math.imul(m,$)|0;var yt=(h+(i=i+Math.imul(d,K)|0)|0)+((8191&(r=(r=r+Math.imul(d,J)|0)+Math.imul(p,K)|0))<<13)|0;h=((a=a+Math.imul(p,J)|0)+(r>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(x,q),r=(r=Math.imul(x,j))+Math.imul(C,q)|0,a=Math.imul(C,j),i=i+Math.imul(_,H)|0,r=(r=r+Math.imul(_,Z)|0)+Math.imul(b,H)|0,a=a+Math.imul(b,Z)|0,i=i+Math.imul(v,G)|0,r=(r=r+Math.imul(v,$)|0)+Math.imul(w,G)|0,a=a+Math.imul(w,$)|0,i=i+Math.imul(f,K)|0,r=(r=r+Math.imul(f,J)|0)+Math.imul(m,K)|0,a=a+Math.imul(m,J)|0;var _t=(h+(i=i+Math.imul(d,Q)|0)|0)+((8191&(r=(r=r+Math.imul(d,tt)|0)+Math.imul(p,Q)|0))<<13)|0;h=((a=a+Math.imul(p,tt)|0)+(r>>>13)|0)+(_t>>>26)|0,_t&=67108863,i=Math.imul(S,q),r=(r=Math.imul(S,j))+Math.imul(A,q)|0,a=Math.imul(A,j),i=i+Math.imul(x,H)|0,r=(r=r+Math.imul(x,Z)|0)+Math.imul(C,H)|0,a=a+Math.imul(C,Z)|0,i=i+Math.imul(_,G)|0,r=(r=r+Math.imul(_,$)|0)+Math.imul(b,G)|0,a=a+Math.imul(b,$)|0,i=i+Math.imul(v,K)|0,r=(r=r+Math.imul(v,J)|0)+Math.imul(w,K)|0,a=a+Math.imul(w,J)|0,i=i+Math.imul(f,Q)|0,r=(r=r+Math.imul(f,tt)|0)+Math.imul(m,Q)|0,a=a+Math.imul(m,tt)|0;var bt=(h+(i=i+Math.imul(d,nt)|0)|0)+((8191&(r=(r=r+Math.imul(d,it)|0)+Math.imul(p,nt)|0))<<13)|0;h=((a=a+Math.imul(p,it)|0)+(r>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(L,q),r=(r=Math.imul(L,j))+Math.imul(P,q)|0,a=Math.imul(P,j),i=i+Math.imul(S,H)|0,r=(r=r+Math.imul(S,Z)|0)+Math.imul(A,H)|0,a=a+Math.imul(A,Z)|0,i=i+Math.imul(x,G)|0,r=(r=r+Math.imul(x,$)|0)+Math.imul(C,G)|0,a=a+Math.imul(C,$)|0,i=i+Math.imul(_,K)|0,r=(r=r+Math.imul(_,J)|0)+Math.imul(b,K)|0,a=a+Math.imul(b,J)|0,i=i+Math.imul(v,Q)|0,r=(r=r+Math.imul(v,tt)|0)+Math.imul(w,Q)|0,a=a+Math.imul(w,tt)|0,i=i+Math.imul(f,nt)|0,r=(r=r+Math.imul(f,it)|0)+Math.imul(m,nt)|0,a=a+Math.imul(m,it)|0;var Mt=(h+(i=i+Math.imul(d,at)|0)|0)+((8191&(r=(r=r+Math.imul(d,st)|0)+Math.imul(p,at)|0))<<13)|0;h=((a=a+Math.imul(p,st)|0)+(r>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(T,q),r=(r=Math.imul(T,j))+Math.imul(F,q)|0,a=Math.imul(F,j),i=i+Math.imul(L,H)|0,r=(r=r+Math.imul(L,Z)|0)+Math.imul(P,H)|0,a=a+Math.imul(P,Z)|0,i=i+Math.imul(S,G)|0,r=(r=r+Math.imul(S,$)|0)+Math.imul(A,G)|0,a=a+Math.imul(A,$)|0,i=i+Math.imul(x,K)|0,r=(r=r+Math.imul(x,J)|0)+Math.imul(C,K)|0,a=a+Math.imul(C,J)|0,i=i+Math.imul(_,Q)|0,r=(r=r+Math.imul(_,tt)|0)+Math.imul(b,Q)|0,a=a+Math.imul(b,tt)|0,i=i+Math.imul(v,nt)|0,r=(r=r+Math.imul(v,it)|0)+Math.imul(w,nt)|0,a=a+Math.imul(w,it)|0,i=i+Math.imul(f,at)|0,r=(r=r+Math.imul(f,st)|0)+Math.imul(m,at)|0,a=a+Math.imul(m,st)|0;var xt=(h+(i=i+Math.imul(d,lt)|0)|0)+((8191&(r=(r=r+Math.imul(d,ht)|0)+Math.imul(p,lt)|0))<<13)|0;h=((a=a+Math.imul(p,ht)|0)+(r>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(O,q),r=(r=Math.imul(O,j))+Math.imul(R,q)|0,a=Math.imul(R,j),i=i+Math.imul(T,H)|0,r=(r=r+Math.imul(T,Z)|0)+Math.imul(F,H)|0,a=a+Math.imul(F,Z)|0,i=i+Math.imul(L,G)|0,r=(r=r+Math.imul(L,$)|0)+Math.imul(P,G)|0,a=a+Math.imul(P,$)|0,i=i+Math.imul(S,K)|0,r=(r=r+Math.imul(S,J)|0)+Math.imul(A,K)|0,a=a+Math.imul(A,J)|0,i=i+Math.imul(x,Q)|0,r=(r=r+Math.imul(x,tt)|0)+Math.imul(C,Q)|0,a=a+Math.imul(C,tt)|0,i=i+Math.imul(_,nt)|0,r=(r=r+Math.imul(_,it)|0)+Math.imul(b,nt)|0,a=a+Math.imul(b,it)|0,i=i+Math.imul(v,at)|0,r=(r=r+Math.imul(v,st)|0)+Math.imul(w,at)|0,a=a+Math.imul(w,st)|0,i=i+Math.imul(f,lt)|0,r=(r=r+Math.imul(f,ht)|0)+Math.imul(m,lt)|0,a=a+Math.imul(m,ht)|0;var Ct=(h+(i=i+Math.imul(d,dt)|0)|0)+((8191&(r=(r=r+Math.imul(d,pt)|0)+Math.imul(p,dt)|0))<<13)|0;h=((a=a+Math.imul(p,pt)|0)+(r>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,i=Math.imul(B,q),r=(r=Math.imul(B,j))+Math.imul(z,q)|0,a=Math.imul(z,j),i=i+Math.imul(O,H)|0,r=(r=r+Math.imul(O,Z)|0)+Math.imul(R,H)|0,a=a+Math.imul(R,Z)|0,i=i+Math.imul(T,G)|0,r=(r=r+Math.imul(T,$)|0)+Math.imul(F,G)|0,a=a+Math.imul(F,$)|0,i=i+Math.imul(L,K)|0,r=(r=r+Math.imul(L,J)|0)+Math.imul(P,K)|0,a=a+Math.imul(P,J)|0,i=i+Math.imul(S,Q)|0,r=(r=r+Math.imul(S,tt)|0)+Math.imul(A,Q)|0,a=a+Math.imul(A,tt)|0,i=i+Math.imul(x,nt)|0,r=(r=r+Math.imul(x,it)|0)+Math.imul(C,nt)|0,a=a+Math.imul(C,it)|0,i=i+Math.imul(_,at)|0,r=(r=r+Math.imul(_,st)|0)+Math.imul(b,at)|0,a=a+Math.imul(b,st)|0,i=i+Math.imul(v,lt)|0,r=(r=r+Math.imul(v,ht)|0)+Math.imul(w,lt)|0,a=a+Math.imul(w,ht)|0,i=i+Math.imul(f,dt)|0,r=(r=r+Math.imul(f,pt)|0)+Math.imul(m,dt)|0,a=a+Math.imul(m,pt)|0;var kt=(h+(i=i+Math.imul(d,ft)|0)|0)+((8191&(r=(r=r+Math.imul(d,mt)|0)+Math.imul(p,ft)|0))<<13)|0;h=((a=a+Math.imul(p,mt)|0)+(r>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(B,H),r=(r=Math.imul(B,Z))+Math.imul(z,H)|0,a=Math.imul(z,Z),i=i+Math.imul(O,G)|0,r=(r=r+Math.imul(O,$)|0)+Math.imul(R,G)|0,a=a+Math.imul(R,$)|0,i=i+Math.imul(T,K)|0,r=(r=r+Math.imul(T,J)|0)+Math.imul(F,K)|0,a=a+Math.imul(F,J)|0,i=i+Math.imul(L,Q)|0,r=(r=r+Math.imul(L,tt)|0)+Math.imul(P,Q)|0,a=a+Math.imul(P,tt)|0,i=i+Math.imul(S,nt)|0,r=(r=r+Math.imul(S,it)|0)+Math.imul(A,nt)|0,a=a+Math.imul(A,it)|0,i=i+Math.imul(x,at)|0,r=(r=r+Math.imul(x,st)|0)+Math.imul(C,at)|0,a=a+Math.imul(C,st)|0,i=i+Math.imul(_,lt)|0,r=(r=r+Math.imul(_,ht)|0)+Math.imul(b,lt)|0,a=a+Math.imul(b,ht)|0,i=i+Math.imul(v,dt)|0,r=(r=r+Math.imul(v,pt)|0)+Math.imul(w,dt)|0,a=a+Math.imul(w,pt)|0;var St=(h+(i=i+Math.imul(f,ft)|0)|0)+((8191&(r=(r=r+Math.imul(f,mt)|0)+Math.imul(m,ft)|0))<<13)|0;h=((a=a+Math.imul(m,mt)|0)+(r>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,G),r=(r=Math.imul(B,$))+Math.imul(z,G)|0,a=Math.imul(z,$),i=i+Math.imul(O,K)|0,r=(r=r+Math.imul(O,J)|0)+Math.imul(R,K)|0,a=a+Math.imul(R,J)|0,i=i+Math.imul(T,Q)|0,r=(r=r+Math.imul(T,tt)|0)+Math.imul(F,Q)|0,a=a+Math.imul(F,tt)|0,i=i+Math.imul(L,nt)|0,r=(r=r+Math.imul(L,it)|0)+Math.imul(P,nt)|0,a=a+Math.imul(P,it)|0,i=i+Math.imul(S,at)|0,r=(r=r+Math.imul(S,st)|0)+Math.imul(A,at)|0,a=a+Math.imul(A,st)|0,i=i+Math.imul(x,lt)|0,r=(r=r+Math.imul(x,ht)|0)+Math.imul(C,lt)|0,a=a+Math.imul(C,ht)|0,i=i+Math.imul(_,dt)|0,r=(r=r+Math.imul(_,pt)|0)+Math.imul(b,dt)|0,a=a+Math.imul(b,pt)|0;var At=(h+(i=i+Math.imul(v,ft)|0)|0)+((8191&(r=(r=r+Math.imul(v,mt)|0)+Math.imul(w,ft)|0))<<13)|0;h=((a=a+Math.imul(w,mt)|0)+(r>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(B,K),r=(r=Math.imul(B,J))+Math.imul(z,K)|0,a=Math.imul(z,J),i=i+Math.imul(O,Q)|0,r=(r=r+Math.imul(O,tt)|0)+Math.imul(R,Q)|0,a=a+Math.imul(R,tt)|0,i=i+Math.imul(T,nt)|0,r=(r=r+Math.imul(T,it)|0)+Math.imul(F,nt)|0,a=a+Math.imul(F,it)|0,i=i+Math.imul(L,at)|0,r=(r=r+Math.imul(L,st)|0)+Math.imul(P,at)|0,a=a+Math.imul(P,st)|0,i=i+Math.imul(S,lt)|0,r=(r=r+Math.imul(S,ht)|0)+Math.imul(A,lt)|0,a=a+Math.imul(A,ht)|0,i=i+Math.imul(x,dt)|0,r=(r=r+Math.imul(x,pt)|0)+Math.imul(C,dt)|0,a=a+Math.imul(C,pt)|0;var Et=(h+(i=i+Math.imul(_,ft)|0)|0)+((8191&(r=(r=r+Math.imul(_,mt)|0)+Math.imul(b,ft)|0))<<13)|0;h=((a=a+Math.imul(b,mt)|0)+(r>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(B,Q),r=(r=Math.imul(B,tt))+Math.imul(z,Q)|0,a=Math.imul(z,tt),i=i+Math.imul(O,nt)|0,r=(r=r+Math.imul(O,it)|0)+Math.imul(R,nt)|0,a=a+Math.imul(R,it)|0,i=i+Math.imul(T,at)|0,r=(r=r+Math.imul(T,st)|0)+Math.imul(F,at)|0,a=a+Math.imul(F,st)|0,i=i+Math.imul(L,lt)|0,r=(r=r+Math.imul(L,ht)|0)+Math.imul(P,lt)|0,a=a+Math.imul(P,ht)|0,i=i+Math.imul(S,dt)|0,r=(r=r+Math.imul(S,pt)|0)+Math.imul(A,dt)|0,a=a+Math.imul(A,pt)|0;var Lt=(h+(i=i+Math.imul(x,ft)|0)|0)+((8191&(r=(r=r+Math.imul(x,mt)|0)+Math.imul(C,ft)|0))<<13)|0;h=((a=a+Math.imul(C,mt)|0)+(r>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,i=Math.imul(B,nt),r=(r=Math.imul(B,it))+Math.imul(z,nt)|0,a=Math.imul(z,it),i=i+Math.imul(O,at)|0,r=(r=r+Math.imul(O,st)|0)+Math.imul(R,at)|0,a=a+Math.imul(R,st)|0,i=i+Math.imul(T,lt)|0,r=(r=r+Math.imul(T,ht)|0)+Math.imul(F,lt)|0,a=a+Math.imul(F,ht)|0,i=i+Math.imul(L,dt)|0,r=(r=r+Math.imul(L,pt)|0)+Math.imul(P,dt)|0,a=a+Math.imul(P,pt)|0;var Pt=(h+(i=i+Math.imul(S,ft)|0)|0)+((8191&(r=(r=r+Math.imul(S,mt)|0)+Math.imul(A,ft)|0))<<13)|0;h=((a=a+Math.imul(A,mt)|0)+(r>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(B,at),r=(r=Math.imul(B,st))+Math.imul(z,at)|0,a=Math.imul(z,st),i=i+Math.imul(O,lt)|0,r=(r=r+Math.imul(O,ht)|0)+Math.imul(R,lt)|0,a=a+Math.imul(R,ht)|0,i=i+Math.imul(T,dt)|0,r=(r=r+Math.imul(T,pt)|0)+Math.imul(F,dt)|0,a=a+Math.imul(F,pt)|0;var It=(h+(i=i+Math.imul(L,ft)|0)|0)+((8191&(r=(r=r+Math.imul(L,mt)|0)+Math.imul(P,ft)|0))<<13)|0;h=((a=a+Math.imul(P,mt)|0)+(r>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(B,lt),r=(r=Math.imul(B,ht))+Math.imul(z,lt)|0,a=Math.imul(z,ht),i=i+Math.imul(O,dt)|0,r=(r=r+Math.imul(O,pt)|0)+Math.imul(R,dt)|0,a=a+Math.imul(R,pt)|0;var Tt=(h+(i=i+Math.imul(T,ft)|0)|0)+((8191&(r=(r=r+Math.imul(T,mt)|0)+Math.imul(F,ft)|0))<<13)|0;h=((a=a+Math.imul(F,mt)|0)+(r>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(B,dt),r=(r=Math.imul(B,pt))+Math.imul(z,dt)|0,a=Math.imul(z,pt);var Ft=(h+(i=i+Math.imul(O,ft)|0)|0)+((8191&(r=(r=r+Math.imul(O,mt)|0)+Math.imul(R,ft)|0))<<13)|0;h=((a=a+Math.imul(R,mt)|0)+(r>>>13)|0)+(Ft>>>26)|0,Ft&=67108863;var Dt=(h+(i=Math.imul(B,ft))|0)+((8191&(r=(r=Math.imul(B,mt))+Math.imul(z,ft)|0))<<13)|0;return h=((a=Math.imul(z,mt))+(r>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,l[0]=gt,l[1]=vt,l[2]=wt,l[3]=yt,l[4]=_t,l[5]=bt,l[6]=Mt,l[7]=xt,l[8]=Ct,l[9]=kt,l[10]=St,l[11]=At,l[12]=Et,l[13]=Lt,l[14]=Pt,l[15]=It,l[16]=Tt,l[17]=Ft,l[18]=Dt,0!==h&&(l[19]=h,n.length++),n};function f(t,e,n){return(new m).mulp(t,e,n)}function m(t,e){this.x=t,this.y=e}Math.imul||(u=p),a.prototype.mulTo=function(t,e){var n,i=this.length+t.length;return n=10===this.length&&10===t.length?u(this,t,e):i<63?p(this,t,e):i<1024?function(t,e,n){n.negative=e.negative^t.negative,n.length=t.length+e.length;for(var i=0,r=0,a=0;a<n.length-1;a++){var s=r;r=0;for(var o=67108863&i,l=Math.min(a,e.length-1),h=Math.max(0,a-t.length+1);h<=l;h++){var c=a-h,d=(0|t.words[c])*(0|e.words[h]),p=67108863&d;o=67108863&(p=p+o|0),r+=(s=(s=s+(d/67108864|0)|0)+(p>>>26)|0)>>>26,s&=67108863}n.words[a]=o,i=s,s=r}return 0!==i?n.words[a]=i:n.length--,n.strip()}(this,t,e):f(this,t,e),n},m.prototype.makeRBT=function(t){for(var e=new Array(t),n=a.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,n,t);return e},m.prototype.revBin=function(t,e,n){if(0===t||t===n-1)return t;for(var i=0,r=0;r<e;r++)i|=(1&t)<<e-r-1,t>>=1;return i},m.prototype.permute=function(t,e,n,i,r,a){for(var s=0;s<a;s++)i[s]=e[t[s]],r[s]=n[t[s]]},m.prototype.transform=function(t,e,n,i,r,a){this.permute(a,t,e,n,i,r);for(var s=1;s<r;s<<=1)for(var o=s<<1,l=Math.cos(2*Math.PI/o),h=Math.sin(2*Math.PI/o),c=0;c<r;c+=o)for(var d=l,p=h,u=0;u<s;u++){var f=n[c+u],m=i[c+u],g=n[c+u+s],v=i[c+u+s],w=d*g-p*v;v=d*v+p*g,g=w,n[c+u]=f+g,i[c+u]=m+v,n[c+u+s]=f-g,i[c+u+s]=m-v,u!==o&&(w=l*d-h*p,p=l*p+h*d,d=w)}},m.prototype.guessLen13b=function(t,e){var n=1|Math.max(e,t),i=1&n,r=0;for(n=n/2|0;n;n>>>=1)r++;return 1<<r+1+i},m.prototype.conjugate=function(t,e,n){if(!(n<=1))for(var i=0;i<n/2;i++){var r=t[i];t[i]=t[n-i-1],t[n-i-1]=r,r=e[i],e[i]=-e[n-i-1],e[n-i-1]=-r}},m.prototype.normalize13b=function(t,e){for(var n=0,i=0;i<e/2;i++){var r=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+n;t[i]=67108863&r,n=r<67108864?0:r/67108864|0}return t},m.prototype.convert13b=function(t,e,n,r){for(var a=0,s=0;s<e;s++)a+=0|t[s],n[2*s]=8191&a,a>>>=13,n[2*s+1]=8191&a,a>>>=13;for(s=2*e;s<r;++s)n[s]=0;i(0===a),i(0==(-8192&a))},m.prototype.stub=function(t){for(var e=new Array(t),n=0;n<t;n++)e[n]=0;return e},m.prototype.mulp=function(t,e,n){var i=2*this.guessLen13b(t.length,e.length),r=this.makeRBT(i),a=this.stub(i),s=new Array(i),o=new Array(i),l=new Array(i),h=new Array(i),c=new Array(i),d=new Array(i),p=n.words;p.length=i,this.convert13b(t.words,t.length,s,i),this.convert13b(e.words,e.length,h,i),this.transform(s,a,o,l,i,r),this.transform(h,a,c,d,i,r);for(var u=0;u<i;u++){var f=o[u]*c[u]-l[u]*d[u];l[u]=o[u]*d[u]+l[u]*c[u],o[u]=f}return this.conjugate(o,l,i),this.transform(o,l,p,a,i,r),this.conjugate(p,a,i),this.normalize13b(p,i),n.negative=t.negative^e.negative,n.length=t.length+e.length,n.strip()},a.prototype.mul=function(t){var e=new a(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},a.prototype.mulf=function(t){var e=new a(null);return e.words=new Array(this.length+t.length),f(this,t,e)},a.prototype.imul=function(t){return this.clone().mulTo(t,this)},a.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,n=0;n<this.length;n++){var r=(0|this.words[n])*t,a=(67108863&r)+(67108863&e);e>>=26,e+=r/67108864|0,e+=a>>>26,this.words[n]=67108863&a}return 0!==e&&(this.words[n]=e,this.length++),this},a.prototype.muln=function(t){return this.clone().imuln(t)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),n=0;n<e.length;n++){var i=n/26|0,r=n%26;e[n]=(t.words[i]&1<<r)>>>r}return e}(t);if(0===e.length)return new a(1);for(var n=this,i=0;i<e.length&&0===e[i];i++,n=n.sqr());if(++i<e.length)for(var r=n.sqr();i<e.length;i++,r=r.sqr())0!==e[i]&&(n=n.mul(r));return n},a.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,n=t%26,r=(t-n)/26,a=67108863>>>26-n<<26-n;if(0!==n){var s=0;for(e=0;e<this.length;e++){var o=this.words[e]&a,l=(0|this.words[e])-o<<n;this.words[e]=l|s,s=o>>>26-n}s&&(this.words[e]=s,this.length++)}if(0!==r){for(e=this.length-1;e>=0;e--)this.words[e+r]=this.words[e];for(e=0;e<r;e++)this.words[e]=0;this.length+=r}return this.strip()},a.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},a.prototype.iushrn=function(t,e,n){var r;i("number"==typeof t&&t>=0),r=e?(e-e%26)/26:0;var a=t%26,s=Math.min((t-a)/26,this.length),o=67108863^67108863>>>a<<a,l=n;if(r-=s,r=Math.max(0,r),l){for(var h=0;h<s;h++)l.words[h]=this.words[h];l.length=s}if(0===s);else if(this.length>s)for(this.length-=s,h=0;h<this.length;h++)this.words[h]=this.words[h+s];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=r);h--){var d=0|this.words[h];this.words[h]=c<<26-a|d>>>a,c=d&o}return l&&0!==c&&(l.words[l.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},a.prototype.ishrn=function(t,e,n){return i(0===this.negative),this.iushrn(t,e,n)},a.prototype.shln=function(t){return this.clone().ishln(t)},a.prototype.ushln=function(t){return this.clone().iushln(t)},a.prototype.shrn=function(t){return this.clone().ishrn(t)},a.prototype.ushrn=function(t){return this.clone().iushrn(t)},a.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,n=(t-e)/26,r=1<<e;return!(this.length<=n||!(this.words[n]&r))},a.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,n=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==e&&n++,this.length=Math.min(n,this.length),0!==e){var r=67108863^67108863>>>e<<e;this.words[this.length-1]&=r}return this.strip()},a.prototype.maskn=function(t){return this.clone().imaskn(t)},a.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},a.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},a.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},a.prototype.addn=function(t){return this.clone().iaddn(t)},a.prototype.subn=function(t){return this.clone().isubn(t)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(t,e,n){var r,a,s=t.length+n;this._expand(s);var o=0;for(r=0;r<t.length;r++){a=(0|this.words[r+n])+o;var l=(0|t.words[r])*e;o=((a-=67108863&l)>>26)-(l/67108864|0),this.words[r+n]=67108863&a}for(;r<this.length-n;r++)o=(a=(0|this.words[r+n])+o)>>26,this.words[r+n]=67108863&a;if(0===o)return this.strip();for(i(-1===o),o=0,r=0;r<this.length;r++)o=(a=-(0|this.words[r])+o)>>26,this.words[r]=67108863&a;return this.negative=1,this.strip()},a.prototype._wordDiv=function(t,e){var n=(this.length,t.length),i=this.clone(),r=t,s=0|r.words[r.length-1];0!=(n=26-this._countBits(s))&&(r=r.ushln(n),i.iushln(n),s=0|r.words[r.length-1]);var o,l=i.length-r.length;if("mod"!==e){(o=new a(null)).length=l+1,o.words=new Array(o.length);for(var h=0;h<o.length;h++)o.words[h]=0}var c=i.clone()._ishlnsubmul(r,1,l);0===c.negative&&(i=c,o&&(o.words[l]=1));for(var d=l-1;d>=0;d--){var p=67108864*(0|i.words[r.length+d])+(0|i.words[r.length+d-1]);for(p=Math.min(p/s|0,67108863),i._ishlnsubmul(r,p,d);0!==i.negative;)p--,i.negative=0,i._ishlnsubmul(r,1,d),i.isZero()||(i.negative^=1);o&&(o.words[d]=p)}return o&&o.strip(),i.strip(),"div"!==e&&0!==n&&i.iushrn(n),{div:o||null,mod:i}},a.prototype.divmod=function(t,e,n){return i(!t.isZero()),this.isZero()?{div:new a(0),mod:new a(0)}:0!==this.negative&&0===t.negative?(o=this.neg().divmod(t,e),"mod"!==e&&(r=o.div.neg()),"div"!==e&&(s=o.mod.neg(),n&&0!==s.negative&&s.iadd(t)),{div:r,mod:s}):0===this.negative&&0!==t.negative?(o=this.divmod(t.neg(),e),"mod"!==e&&(r=o.div.neg()),{div:r,mod:o.mod}):0!=(this.negative&t.negative)?(o=this.neg().divmod(t.neg(),e),"div"!==e&&(s=o.mod.neg(),n&&0!==s.negative&&s.isub(t)),{div:o.div,mod:s}):t.length>this.length||this.cmp(t)<0?{div:new a(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new a(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new a(this.modn(t.words[0]))}:this._wordDiv(t,e);var r,s,o},a.prototype.div=function(t){return this.divmod(t,"div",!1).div},a.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},a.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},a.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var n=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),r=t.andln(1),a=n.cmp(i);return a<0||1===r&&0===a?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},a.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,n=0,r=this.length-1;r>=0;r--)n=(e*n+(0|this.words[r]))%t;return n},a.prototype.idivn=function(t){i(t<=67108863);for(var e=0,n=this.length-1;n>=0;n--){var r=(0|this.words[n])+67108864*e;this.words[n]=r/t|0,e=r%t}return this.strip()},a.prototype.divn=function(t){return this.clone().idivn(t)},a.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,n=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var r=new a(1),s=new a(0),o=new a(0),l=new a(1),h=0;e.isEven()&&n.isEven();)e.iushrn(1),n.iushrn(1),++h;for(var c=n.clone(),d=e.clone();!e.isZero();){for(var p=0,u=1;0==(e.words[0]&u)&&p<26;++p,u<<=1);if(p>0)for(e.iushrn(p);p-- >0;)(r.isOdd()||s.isOdd())&&(r.iadd(c),s.isub(d)),r.iushrn(1),s.iushrn(1);for(var f=0,m=1;0==(n.words[0]&m)&&f<26;++f,m<<=1);if(f>0)for(n.iushrn(f);f-- >0;)(o.isOdd()||l.isOdd())&&(o.iadd(c),l.isub(d)),o.iushrn(1),l.iushrn(1);e.cmp(n)>=0?(e.isub(n),r.isub(o),s.isub(l)):(n.isub(e),o.isub(r),l.isub(s))}return{a:o,b:l,gcd:n.iushln(h)}},a.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,n=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var r,s=new a(1),o=new a(0),l=n.clone();e.cmpn(1)>0&&n.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)s.isOdd()&&s.iadd(l),s.iushrn(1);for(var d=0,p=1;0==(n.words[0]&p)&&d<26;++d,p<<=1);if(d>0)for(n.iushrn(d);d-- >0;)o.isOdd()&&o.iadd(l),o.iushrn(1);e.cmp(n)>=0?(e.isub(n),s.isub(o)):(n.isub(e),o.isub(s))}return(r=0===e.cmpn(1)?s:o).cmpn(0)<0&&r.iadd(t),r},a.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),n=t.clone();e.negative=0,n.negative=0;for(var i=0;e.isEven()&&n.isEven();i++)e.iushrn(1),n.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;n.isEven();)n.iushrn(1);var r=e.cmp(n);if(r<0){var a=e;e=n,n=a}else if(0===r||0===n.cmpn(1))break;e.isub(n)}return n.iushln(i)},a.prototype.invm=function(t){return this.egcd(t).a.umod(t)},a.prototype.isEven=function(){return 0==(1&this.words[0])},a.prototype.isOdd=function(){return 1==(1&this.words[0])},a.prototype.andln=function(t){return this.words[0]&t},a.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,n=(t-e)/26,r=1<<e;if(this.length<=n)return this._expand(n+1),this.words[n]|=r,this;for(var a=r,s=n;0!==a&&s<this.length;s++){var o=0|this.words[s];a=(o+=a)>>>26,o&=67108863,this.words[s]=o}return 0!==a&&(this.words[s]=a,this.length++),this},a.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},a.prototype.cmpn=function(t){var e,n=t<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this.strip(),this.length>1)e=1;else{n&&(t=-t),i(t<=67108863,"Number is too big");var r=0|this.words[0];e=r===t?0:r<t?-1:1}return 0!==this.negative?0|-e:e},a.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},a.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,n=this.length-1;n>=0;n--){var i=0|this.words[n],r=0|t.words[n];if(i!==r){i<r?e=-1:i>r&&(e=1);break}}return e},a.prototype.gtn=function(t){return 1===this.cmpn(t)},a.prototype.gt=function(t){return 1===this.cmp(t)},a.prototype.gten=function(t){return this.cmpn(t)>=0},a.prototype.gte=function(t){return this.cmp(t)>=0},a.prototype.ltn=function(t){return-1===this.cmpn(t)},a.prototype.lt=function(t){return-1===this.cmp(t)},a.prototype.lten=function(t){return this.cmpn(t)<=0},a.prototype.lte=function(t){return this.cmp(t)<=0},a.prototype.eqn=function(t){return 0===this.cmpn(t)},a.prototype.eq=function(t){return 0===this.cmp(t)},a.red=function(t){return new M(t)},a.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},a.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(t){return this.red=t,this},a.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},a.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},a.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},a.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},a.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},a.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},a.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},a.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},a.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var g={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new a(e,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function w(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function _(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function M(t){if("string"==typeof t){var e=a._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function x(t){M.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new a(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,n=t;do{this.split(n,this.tmp),e=(n=(n=this.imulK(n)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:n.ucmp(this.p);return 0===i?(n.words[0]=0,n.length=1):i>0?n.isub(this.p):n.strip(),n},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},r(w,v),w.prototype.split=function(t,e){for(var n=4194303,i=Math.min(t.length,9),r=0;r<i;r++)e.words[r]=t.words[r];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var a=t.words[9];for(e.words[e.length++]=a&n,r=10;r<t.length;r++){var s=0|t.words[r];t.words[r-10]=(s&n)<<4|a>>>22,a=s}a>>>=22,t.words[r-10]=a,0===a&&t.length>10?t.length-=10:t.length-=9},w.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,n=0;n<t.length;n++){var i=0|t.words[n];e+=977*i,t.words[n]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},r(y,v),r(_,v),r(b,v),b.prototype.imulK=function(t){for(var e=0,n=0;n<t.length;n++){var i=19*(0|t.words[n])+e,r=67108863&i;i>>>=26,t.words[n]=r,e=i}return 0!==e&&(t.words[t.length++]=e),t},a._prime=function(t){if(g[t])return g[t];var e;if("k256"===t)e=new w;else if("p224"===t)e=new y;else if("p192"===t)e=new _;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new b}return g[t]=e,e},M.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},M.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},M.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},M.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},M.prototype.add=function(t,e){this._verify2(t,e);var n=t.add(e);return n.cmp(this.m)>=0&&n.isub(this.m),n._forceRed(this)},M.prototype.iadd=function(t,e){this._verify2(t,e);var n=t.iadd(e);return n.cmp(this.m)>=0&&n.isub(this.m),n},M.prototype.sub=function(t,e){this._verify2(t,e);var n=t.sub(e);return n.cmpn(0)<0&&n.iadd(this.m),n._forceRed(this)},M.prototype.isub=function(t,e){this._verify2(t,e);var n=t.isub(e);return n.cmpn(0)<0&&n.iadd(this.m),n},M.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},M.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},M.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},M.prototype.isqr=function(t){return this.imul(t,t.clone())},M.prototype.sqr=function(t){return this.mul(t,t)},M.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var n=this.m.add(new a(1)).iushrn(2);return this.pow(t,n)}for(var r=this.m.subn(1),s=0;!r.isZero()&&0===r.andln(1);)s++,r.iushrn(1);i(!r.isZero());var o=new a(1).toRed(this),l=o.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new a(2*c*c).toRed(this);0!==this.pow(c,h).cmp(l);)c.redIAdd(l);for(var d=this.pow(c,r),p=this.pow(t,r.addn(1).iushrn(1)),u=this.pow(t,r),f=s;0!==u.cmp(o);){for(var m=u,g=0;0!==m.cmp(o);g++)m=m.redSqr();i(g<f);var v=this.pow(d,new a(1).iushln(f-g-1));p=p.redMul(v),d=v.redSqr(),u=u.redMul(d),f=g}return p},M.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},M.prototype.pow=function(t,e){if(e.isZero())return new a(1).toRed(this);if(0===e.cmpn(1))return t.clone();var n=new Array(16);n[0]=new a(1).toRed(this),n[1]=t;for(var i=2;i<n.length;i++)n[i]=this.mul(n[i-1],t);var r=n[0],s=0,o=0,l=e.bitLength()%26;for(0===l&&(l=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=l-1;c>=0;c--){var d=h>>c&1;r!==n[0]&&(r=this.sqr(r)),0!==d||0!==s?(s<<=1,s|=d,(4==++o||0===i&&0===c)&&(r=this.mul(r,n[s]),o=0,s=0)):o=0}l=26}return r},M.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},M.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},a.mont=function(t){return new x(t)},r(x,M),x.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},x.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},x.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var n=t.imul(e),i=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=n.isub(i).iushrn(this.shift),a=r;return r.cmp(this.m)>=0?a=r.isub(this.m):r.cmpn(0)<0&&(a=r.iadd(this.m)),a._forceRed(this)},x.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new a(0)._forceRed(this);var n=t.mul(e),i=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=n.isub(i).iushrn(this.shift),s=r;return r.cmp(this.m)>=0?s=r.isub(this.m):r.cmpn(0)<0&&(s=r.iadd(this.m)),s._forceRed(this)},x.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=n.nmd(t),this)},2873:(t,e)=>{"use strict";function n(t){let e;return"undefined"!=typeof window&&void 0!==window[t]&&(e=window[t]),e}function i(t){const e=n(t);if(!e)throw new Error(`${t} is not defined in Window`);return e}Object.defineProperty(e,"__esModule",{value:!0}),e.getLocalStorage=e.getLocalStorageOrThrow=e.getCrypto=e.getCryptoOrThrow=e.getLocation=e.getLocationOrThrow=e.getNavigator=e.getNavigatorOrThrow=e.getDocument=e.getDocumentOrThrow=e.getFromWindowOrThrow=e.getFromWindow=void 0,e.getFromWindow=n,e.getFromWindowOrThrow=i,e.getDocumentOrThrow=function(){return i("document")},e.getDocument=function(){return n("document")},e.getNavigatorOrThrow=function(){return i("navigator")},e.getNavigator=function(){return n("navigator")},e.getLocationOrThrow=function(){return i("location")},e.getLocation=function(){return n("location")},e.getCryptoOrThrow=function(){return i("crypto")},e.getCrypto=function(){return n("crypto")},e.getLocalStorageOrThrow=function(){return i("localStorage")},e.getLocalStorage=function(){return n("localStorage")}},5755:(t,e,n)=>{"use strict";e.D=void 0;const i=n(2873);e.D=function(){let t,e;try{t=i.getDocumentOrThrow(),e=i.getLocationOrThrow()}catch(t){return null}function n(...e){const n=t.getElementsByTagName("meta");for(let t=0;t<n.length;t++){const i=n[t],r=["itemprop","property","name"].map((t=>i.getAttribute(t))).filter((t=>!!t&&e.includes(t)));if(r.length&&r){const t=i.getAttribute("content");if(t)return t}}return""}const r=function(){let e=n("name","og:site_name","og:title","twitter:title");return e||(e=t.title),e}();return{description:n("description","og:description","twitter:description","keywords"),url:e.origin,icons:function(){const n=t.getElementsByTagName("link"),i=[];for(let t=0;t<n.length;t++){const r=n[t],a=r.getAttribute("rel");if(a&&a.toLowerCase().indexOf("icon")>-1){const t=r.getAttribute("href");if(t)if(-1===t.toLowerCase().indexOf("https:")&&-1===t.toLowerCase().indexOf("http:")&&0!==t.indexOf("//")){let n=e.protocol+"//"+e.host;if(0===t.indexOf("/"))n+=t;else{const i=e.pathname.split("/");i.pop(),n+=i.join("/")+"/"+t}i.push(n)}else if(0===t.indexOf("//")){const n=e.protocol+t;i.push(n)}else i.push(t)}}return i}(),name:r}}},1206:function(t){t.exports=function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=90)}({17:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i=n(18),r=function(){function t(){}return t.getFirstMatch=function(t,e){var n=e.match(t);return n&&n.length>0&&n[1]||""},t.getSecondMatch=function(t,e){var n=e.match(t);return n&&n.length>1&&n[2]||""},t.matchAndReturnConst=function(t,e,n){if(t.test(e))return n},t.getWindowsVersionName=function(t){switch(t){case"NT":return"NT";case"XP":case"NT 5.1":return"XP";case"NT 5.0":return"2000";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}},t.getMacOSVersionName=function(t){var e=t.split(".").splice(0,2).map((function(t){return parseInt(t,10)||0}));if(e.push(0),10===e[0])switch(e[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}},t.getAndroidVersionName=function(t){var e=t.split(".").splice(0,2).map((function(t){return parseInt(t,10)||0}));if(e.push(0),!(1===e[0]&&e[1]<5))return 1===e[0]&&e[1]<6?"Cupcake":1===e[0]&&e[1]>=6?"Donut":2===e[0]&&e[1]<2?"Eclair":2===e[0]&&2===e[1]?"Froyo":2===e[0]&&e[1]>2?"Gingerbread":3===e[0]?"Honeycomb":4===e[0]&&e[1]<1?"Ice Cream Sandwich":4===e[0]&&e[1]<4?"Jelly Bean":4===e[0]&&e[1]>=4?"KitKat":5===e[0]?"Lollipop":6===e[0]?"Marshmallow":7===e[0]?"Nougat":8===e[0]?"Oreo":9===e[0]?"Pie":void 0},t.getVersionPrecision=function(t){return t.split(".").length},t.compareVersions=function(e,n,i){void 0===i&&(i=!1);var r=t.getVersionPrecision(e),a=t.getVersionPrecision(n),s=Math.max(r,a),o=0,l=t.map([e,n],(function(e){var n=s-t.getVersionPrecision(e),i=e+new Array(n+1).join(".0");return t.map(i.split("."),(function(t){return new Array(20-t.length).join("0")+t})).reverse()}));for(i&&(o=s-Math.min(r,a)),s-=1;s>=o;){if(l[0][s]>l[1][s])return 1;if(l[0][s]===l[1][s]){if(s===o)return 0;s-=1}else if(l[0][s]<l[1][s])return-1}},t.map=function(t,e){var n,i=[];if(Array.prototype.map)return Array.prototype.map.call(t,e);for(n=0;n<t.length;n+=1)i.push(e(t[n]));return i},t.find=function(t,e){var n,i;if(Array.prototype.find)return Array.prototype.find.call(t,e);for(n=0,i=t.length;n<i;n+=1){var r=t[n];if(e(r,n))return r}},t.assign=function(t){for(var e,n,i=t,r=arguments.length,a=new Array(r>1?r-1:0),s=1;s<r;s++)a[s-1]=arguments[s];if(Object.assign)return Object.assign.apply(Object,[t].concat(a));var o=function(){var t=a[e];"object"==typeof t&&null!==t&&Object.keys(t).forEach((function(e){i[e]=t[e]}))};for(e=0,n=a.length;e<n;e+=1)o();return t},t.getBrowserAlias=function(t){return i.BROWSER_ALIASES_MAP[t]},t.getBrowserTypeByAlias=function(t){return i.BROWSER_MAP[t]||""},t}();e.default=r,t.exports=e.default},18:function(t,e,n){"use strict";e.__esModule=!0,e.ENGINE_MAP=e.OS_MAP=e.PLATFORMS_MAP=e.BROWSER_MAP=e.BROWSER_ALIASES_MAP=void 0,e.BROWSER_ALIASES_MAP={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"},e.BROWSER_MAP={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"},e.PLATFORMS_MAP={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"},e.OS_MAP={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"},e.ENGINE_MAP={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"}},90:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i,r=(i=n(91))&&i.__esModule?i:{default:i},a=n(18);function s(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var o=function(){function t(){}var e,n;return t.getParser=function(t,e){if(void 0===e&&(e=!1),"string"!=typeof t)throw new Error("UserAgent should be a string");return new r.default(t,e)},t.parse=function(t){return new r.default(t).getResult()},e=t,n=[{key:"BROWSER_MAP",get:function(){return a.BROWSER_MAP}},{key:"ENGINE_MAP",get:function(){return a.ENGINE_MAP}},{key:"OS_MAP",get:function(){return a.OS_MAP}},{key:"PLATFORMS_MAP",get:function(){return a.PLATFORMS_MAP}}],null&&s(e.prototype,null),n&&s(e,n),t}();e.default=o,t.exports=e.default},91:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i=l(n(92)),r=l(n(93)),a=l(n(94)),s=l(n(95)),o=l(n(17));function l(t){return t&&t.__esModule?t:{default:t}}var h=function(){function t(t,e){if(void 0===e&&(e=!1),null==t||""===t)throw new Error("UserAgent parameter can't be empty");this._ua=t,this.parsedResult={},!0!==e&&this.parse()}var e=t.prototype;return e.getUA=function(){return this._ua},e.test=function(t){return t.test(this._ua)},e.parseBrowser=function(){var t=this;this.parsedResult.browser={};var e=o.default.find(i.default,(function(e){if("function"==typeof e.test)return e.test(t);if(e.test instanceof Array)return e.test.some((function(e){return t.test(e)}));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.browser=e.describe(this.getUA())),this.parsedResult.browser},e.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},e.getBrowserName=function(t){return t?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""},e.getBrowserVersion=function(){return this.getBrowser().version},e.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},e.parseOS=function(){var t=this;this.parsedResult.os={};var e=o.default.find(r.default,(function(e){if("function"==typeof e.test)return e.test(t);if(e.test instanceof Array)return e.test.some((function(e){return t.test(e)}));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.os=e.describe(this.getUA())),this.parsedResult.os},e.getOSName=function(t){var e=this.getOS().name;return t?String(e).toLowerCase()||"":e||""},e.getOSVersion=function(){return this.getOS().version},e.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},e.getPlatformType=function(t){void 0===t&&(t=!1);var e=this.getPlatform().type;return t?String(e).toLowerCase()||"":e||""},e.parsePlatform=function(){var t=this;this.parsedResult.platform={};var e=o.default.find(a.default,(function(e){if("function"==typeof e.test)return e.test(t);if(e.test instanceof Array)return e.test.some((function(e){return t.test(e)}));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.platform=e.describe(this.getUA())),this.parsedResult.platform},e.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},e.getEngineName=function(t){return t?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""},e.parseEngine=function(){var t=this;this.parsedResult.engine={};var e=o.default.find(s.default,(function(e){if("function"==typeof e.test)return e.test(t);if(e.test instanceof Array)return e.test.some((function(e){return t.test(e)}));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.engine=e.describe(this.getUA())),this.parsedResult.engine},e.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},e.getResult=function(){return o.default.assign({},this.parsedResult)},e.satisfies=function(t){var e=this,n={},i=0,r={},a=0;if(Object.keys(t).forEach((function(e){var s=t[e];"string"==typeof s?(r[e]=s,a+=1):"object"==typeof s&&(n[e]=s,i+=1)})),i>0){var s=Object.keys(n),l=o.default.find(s,(function(t){return e.isOS(t)}));if(l){var h=this.satisfies(n[l]);if(void 0!==h)return h}var c=o.default.find(s,(function(t){return e.isPlatform(t)}));if(c){var d=this.satisfies(n[c]);if(void 0!==d)return d}}if(a>0){var p=Object.keys(r),u=o.default.find(p,(function(t){return e.isBrowser(t,!0)}));if(void 0!==u)return this.compareVersion(r[u])}},e.isBrowser=function(t,e){void 0===e&&(e=!1);var n=this.getBrowserName().toLowerCase(),i=t.toLowerCase(),r=o.default.getBrowserTypeByAlias(i);return e&&r&&(i=r.toLowerCase()),i===n},e.compareVersion=function(t){var e=[0],n=t,i=!1,r=this.getBrowserVersion();if("string"==typeof r)return">"===t[0]||"<"===t[0]?(n=t.substr(1),"="===t[1]?(i=!0,n=t.substr(2)):e=[],">"===t[0]?e.push(1):e.push(-1)):"="===t[0]?n=t.substr(1):"~"===t[0]&&(i=!0,n=t.substr(1)),e.indexOf(o.default.compareVersions(r,n,i))>-1},e.isOS=function(t){return this.getOSName(!0)===String(t).toLowerCase()},e.isPlatform=function(t){return this.getPlatformType(!0)===String(t).toLowerCase()},e.isEngine=function(t){return this.getEngineName(!0)===String(t).toLowerCase()},e.is=function(t,e){return void 0===e&&(e=!1),this.isBrowser(t,e)||this.isOS(t)||this.isPlatform(t)},e.some=function(t){var e=this;return void 0===t&&(t=[]),t.some((function(t){return e.is(t)}))},t}();e.default=h,t.exports=e.default},92:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i,r=(i=n(17))&&i.__esModule?i:{default:i},a=/version\/(\d+(\.?_?\d+)+)/i,s=[{test:[/googlebot/i],describe:function(t){var e={name:"Googlebot"},n=r.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/opera/i],describe:function(t){var e={name:"Opera"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/opr\/|opios/i],describe:function(t){var e={name:"Opera"},n=r.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/SamsungBrowser/i],describe:function(t){var e={name:"Samsung Internet for Android"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/Whale/i],describe:function(t){var e={name:"NAVER Whale Browser"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/MZBrowser/i],describe:function(t){var e={name:"MZ Browser"},n=r.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/focus/i],describe:function(t){var e={name:"Focus"},n=r.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/swing/i],describe:function(t){var e={name:"Swing"},n=r.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/coast/i],describe:function(t){var e={name:"Opera Coast"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe:function(t){var e={name:"Opera Touch"},n=r.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/yabrowser/i],describe:function(t){var e={name:"Yandex Browser"},n=r.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/ucbrowser/i],describe:function(t){var e={name:"UC Browser"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/Maxthon|mxios/i],describe:function(t){var e={name:"Maxthon"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/epiphany/i],describe:function(t){var e={name:"Epiphany"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/puffin/i],describe:function(t){var e={name:"Puffin"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/sleipnir/i],describe:function(t){var e={name:"Sleipnir"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/k-meleon/i],describe:function(t){var e={name:"K-Meleon"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/micromessenger/i],describe:function(t){var e={name:"WeChat"},n=r.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/qqbrowser/i],describe:function(t){var e={name:/qqbrowserlite/i.test(t)?"QQ Browser Lite":"QQ Browser"},n=r.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/msie|trident/i],describe:function(t){var e={name:"Internet Explorer"},n=r.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/\sedg\//i],describe:function(t){var e={name:"Microsoft Edge"},n=r.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/edg([ea]|ios)/i],describe:function(t){var e={name:"Microsoft Edge"},n=r.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/vivaldi/i],describe:function(t){var e={name:"Vivaldi"},n=r.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/seamonkey/i],describe:function(t){var e={name:"SeaMonkey"},n=r.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/sailfish/i],describe:function(t){var e={name:"Sailfish"},n=r.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,t);return n&&(e.version=n),e}},{test:[/silk/i],describe:function(t){var e={name:"Amazon Silk"},n=r.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/phantom/i],describe:function(t){var e={name:"PhantomJS"},n=r.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/slimerjs/i],describe:function(t){var e={name:"SlimerJS"},n=r.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe:function(t){var e={name:"BlackBerry"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/(web|hpw)[o0]s/i],describe:function(t){var e={name:"WebOS Browser"},n=r.default.getFirstMatch(a,t)||r.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/bada/i],describe:function(t){var e={name:"Bada"},n=r.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/tizen/i],describe:function(t){var e={name:"Tizen"},n=r.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/qupzilla/i],describe:function(t){var e={name:"QupZilla"},n=r.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/firefox|iceweasel|fxios/i],describe:function(t){var e={name:"Firefox"},n=r.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/electron/i],describe:function(t){var e={name:"Electron"},n=r.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/MiuiBrowser/i],describe:function(t){var e={name:"Miui"},n=r.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/chromium/i],describe:function(t){var e={name:"Chromium"},n=r.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,t)||r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/chrome|crios|crmo/i],describe:function(t){var e={name:"Chrome"},n=r.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/GSA/i],describe:function(t){var e={name:"Google Search"},n=r.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:function(t){var e=!t.test(/like android/i),n=t.test(/android/i);return e&&n},describe:function(t){var e={name:"Android Browser"},n=r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/playstation 4/i],describe:function(t){var e={name:"PlayStation 4"},n=r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/safari|applewebkit/i],describe:function(t){var e={name:"Safari"},n=r.default.getFirstMatch(a,t);return n&&(e.version=n),e}},{test:[/.*/i],describe:function(t){var e=-1!==t.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return{name:r.default.getFirstMatch(e,t),version:r.default.getSecondMatch(e,t)}}}];e.default=s,t.exports=e.default},93:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i,r=(i=n(17))&&i.__esModule?i:{default:i},a=n(18),s=[{test:[/Roku\/DVP/],describe:function(t){var e=r.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,t);return{name:a.OS_MAP.Roku,version:e}}},{test:[/windows phone/i],describe:function(t){var e=r.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,t);return{name:a.OS_MAP.WindowsPhone,version:e}}},{test:[/windows /i],describe:function(t){var e=r.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,t),n=r.default.getWindowsVersionName(e);return{name:a.OS_MAP.Windows,version:e,versionName:n}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:function(t){var e={name:a.OS_MAP.iOS},n=r.default.getSecondMatch(/(Version\/)(\d[\d.]+)/,t);return n&&(e.version=n),e}},{test:[/macintosh/i],describe:function(t){var e=r.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,t).replace(/[_\s]/g,"."),n=r.default.getMacOSVersionName(e),i={name:a.OS_MAP.MacOS,version:e};return n&&(i.versionName=n),i}},{test:[/(ipod|iphone|ipad)/i],describe:function(t){var e=r.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,t).replace(/[_\s]/g,".");return{name:a.OS_MAP.iOS,version:e}}},{test:function(t){var e=!t.test(/like android/i),n=t.test(/android/i);return e&&n},describe:function(t){var e=r.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,t),n=r.default.getAndroidVersionName(e),i={name:a.OS_MAP.Android,version:e};return n&&(i.versionName=n),i}},{test:[/(web|hpw)[o0]s/i],describe:function(t){var e=r.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,t),n={name:a.OS_MAP.WebOS};return e&&e.length&&(n.version=e),n}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe:function(t){var e=r.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,t)||r.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,t)||r.default.getFirstMatch(/\bbb(\d+)/i,t);return{name:a.OS_MAP.BlackBerry,version:e}}},{test:[/bada/i],describe:function(t){var e=r.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,t);return{name:a.OS_MAP.Bada,version:e}}},{test:[/tizen/i],describe:function(t){var e=r.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,t);return{name:a.OS_MAP.Tizen,version:e}}},{test:[/linux/i],describe:function(){return{name:a.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:a.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(t){var e=r.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,t);return{name:a.OS_MAP.PlayStation4,version:e}}}];e.default=s,t.exports=e.default},94:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i,r=(i=n(17))&&i.__esModule?i:{default:i},a=n(18),s=[{test:[/googlebot/i],describe:function(){return{type:"bot",vendor:"Google"}}},{test:[/huawei/i],describe:function(t){var e=r.default.getFirstMatch(/(can-l01)/i,t)&&"Nova",n={type:a.PLATFORMS_MAP.mobile,vendor:"Huawei"};return e&&(n.model=e),n}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:function(){return{type:a.PLATFORMS_MAP.tablet,vendor:"Nexus"}}},{test:[/ipad/i],describe:function(){return{type:a.PLATFORMS_MAP.tablet,vendor:"Apple",model:"iPad"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:function(){return{type:a.PLATFORMS_MAP.tablet,vendor:"Apple",model:"iPad"}}},{test:[/kftt build/i],describe:function(){return{type:a.PLATFORMS_MAP.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"}}},{test:[/silk/i],describe:function(){return{type:a.PLATFORMS_MAP.tablet,vendor:"Amazon"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:a.PLATFORMS_MAP.tablet}}},{test:function(t){var e=t.test(/ipod|iphone/i),n=t.test(/like (ipod|iphone)/i);return e&&!n},describe:function(t){var e=r.default.getFirstMatch(/(ipod|iphone)/i,t);return{type:a.PLATFORMS_MAP.mobile,vendor:"Apple",model:e}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:a.PLATFORMS_MAP.mobile,vendor:"Nexus"}}},{test:[/[^-]mobi/i],describe:function(){return{type:a.PLATFORMS_MAP.mobile}}},{test:function(t){return"blackberry"===t.getBrowserName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.mobile,vendor:"BlackBerry"}}},{test:function(t){return"bada"===t.getBrowserName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.mobile}}},{test:function(t){return"windows phone"===t.getBrowserName()},describe:function(){return{type:a.PLATFORMS_MAP.mobile,vendor:"Microsoft"}}},{test:function(t){var e=Number(String(t.getOSVersion()).split(".")[0]);return"android"===t.getOSName(!0)&&e>=3},describe:function(){return{type:a.PLATFORMS_MAP.tablet}}},{test:function(t){return"android"===t.getOSName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.mobile}}},{test:function(t){return"macos"===t.getOSName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.desktop,vendor:"Apple"}}},{test:function(t){return"windows"===t.getOSName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.desktop}}},{test:function(t){return"linux"===t.getOSName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.desktop}}},{test:function(t){return"playstation 4"===t.getOSName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.tv}}},{test:function(t){return"roku"===t.getOSName(!0)},describe:function(){return{type:a.PLATFORMS_MAP.tv}}}];e.default=s,t.exports=e.default},95:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var i,r=(i=n(17))&&i.__esModule?i:{default:i},a=n(18),s=[{test:function(t){return"microsoft edge"===t.getBrowserName(!0)},describe:function(t){if(/\sedg\//i.test(t))return{name:a.ENGINE_MAP.Blink};var e=r.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,t);return{name:a.ENGINE_MAP.EdgeHTML,version:e}}},{test:[/trident/i],describe:function(t){var e={name:a.ENGINE_MAP.Trident},n=r.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:function(t){return t.test(/presto/i)},describe:function(t){var e={name:a.ENGINE_MAP.Presto},n=r.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:function(t){var e=t.test(/gecko/i),n=t.test(/like gecko/i);return e&&!n},describe:function(t){var e={name:a.ENGINE_MAP.Gecko},n=r.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}},{test:[/(apple)?webkit\/537\.36/i],describe:function(){return{name:a.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(t){var e={name:a.ENGINE_MAP.WebKit},n=r.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,t);return n&&(e.version=n),e}}];e.default=s,t.exports=e.default}})},4020:t=>{"use strict";var e="%[a-f0-9]{2}",n=new RegExp("("+e+")|([^%]+?)","gi"),i=new RegExp("("+e+")+","gi");function r(t,e){try{return[decodeURIComponent(t.join(""))]}catch(t){}if(1===t.length)return t;e=e||1;var n=t.slice(0,e),i=t.slice(e);return Array.prototype.concat.call([],r(n),r(i))}function a(t){try{return decodeURIComponent(t)}catch(a){for(var e=t.match(n)||[],i=1;i<e.length;i++)e=(t=r(e,i).join("")).match(n)||[];return t}}t.exports=function(t){if("string"!=typeof t)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof t+"`");try{return t=t.replace(/\+/g," "),decodeURIComponent(t)}catch(e){return function(t){for(var e={"%FE%FF":"��","%FF%FE":"��"},n=i.exec(t);n;){try{e[n[0]]=decodeURIComponent(n[0])}catch(t){var r=a(n[0]);r!==n[0]&&(e[n[0]]=r)}n=i.exec(t)}e["%C2"]="�";for(var s=Object.keys(e),o=0;o<s.length;o++){var l=s[o];t=t.replace(new RegExp(l,"g"),e[l])}return t}(t)}}},4501:t=>{t.exports=i,i.strict=r,i.loose=a;var e=Object.prototype.toString,n={"[object Int8Array]":!0,"[object Int16Array]":!0,"[object Int32Array]":!0,"[object Uint8Array]":!0,"[object Uint8ClampedArray]":!0,"[object Uint16Array]":!0,"[object Uint32Array]":!0,"[object Float32Array]":!0,"[object Float64Array]":!0};function i(t){return r(t)||a(t)}function r(t){return t instanceof Int8Array||t instanceof Int16Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Uint16Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array}function a(t){return n[e.call(t)]}},1094:(t,e,n)=>{var i;!function(){"use strict";var r="input is invalid type",a="object"==typeof window,s=a?window:{};s.JS_SHA3_NO_WINDOW&&(a=!1);var o=!a&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=n.g:o&&(s=self);var l=!s.JS_SHA3_NO_COMMON_JS&&t.exports,h=n.amdO,c=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,d="0123456789abcdef".split(""),p=[4,1024,262144,67108864],u=[0,8,16,24],f=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],m=[224,256,384,512],g=[128,256],v=["hex","buffer","arrayBuffer","array","digest"],w={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!c||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var y=function(t,e,n){return function(i){return new D(t,e,t).update(i)[n]()}},_=function(t,e,n){return function(i,r){return new D(t,e,r).update(i)[n]()}},b=function(t,e,n){return function(e,i,r,a){return S["cshake"+t].update(e,i,r,a)[n]()}},M=function(t,e,n){return function(e,i,r,a){return S["kmac"+t].update(e,i,r,a)[n]()}},x=function(t,e,n,i){for(var r=0;r<v.length;++r){var a=v[r];t[a]=e(n,i,a)}return t},C=function(t,e){var n=y(t,e,"hex");return n.create=function(){return new D(t,e,t)},n.update=function(t){return n.create().update(t)},x(n,y,t,e)},k=[{name:"keccak",padding:[1,256,65536,16777216],bits:m,createMethod:C},{name:"sha3",padding:[6,1536,393216,100663296],bits:m,createMethod:C},{name:"shake",padding:[31,7936,2031616,520093696],bits:g,createMethod:function(t,e){var n=_(t,e,"hex");return n.create=function(n){return new D(t,e,n)},n.update=function(t,e){return n.create(e).update(t)},x(n,_,t,e)}},{name:"cshake",padding:p,bits:g,createMethod:function(t,e){var n=w[t],i=b(t,0,"hex");return i.create=function(i,r,a){return r||a?new D(t,e,i).bytepad([r,a],n):S["shake"+t].create(i)},i.update=function(t,e,n,r){return i.create(e,n,r).update(t)},x(i,b,t,e)}},{name:"kmac",padding:p,bits:g,createMethod:function(t,e){var n=w[t],i=M(t,0,"hex");return i.create=function(i,r,a){return new O(t,e,r).bytepad(["KMAC",a],n).bytepad([i],n)},i.update=function(t,e,n,r){return i.create(t,n,r).update(e)},x(i,M,t,e)}}],S={},A=[],E=0;E<k.length;++E)for(var L=k[E],P=L.bits,I=0;I<P.length;++I){var T=L.name+"_"+P[I];if(A.push(T),S[T]=L.createMethod(P[I],L.padding),"sha3"!==L.name){var F=L.name+P[I];A.push(F),S[F]=S[T]}}function D(t,e,n){this.blocks=[],this.s=[],this.padding=e,this.outputBits=n,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=n>>5,this.extraBytes=(31&n)>>3;for(var i=0;i<50;++i)this.s[i]=0}function O(t,e,n){D.call(this,t,e,n)}D.prototype.update=function(t){if(this.finalized)throw new Error("finalize already called");var e,n=typeof t;if("string"!==n){if("object"!==n)throw new Error(r);if(null===t)throw new Error(r);if(c&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||c&&ArrayBuffer.isView(t)))throw new Error(r);e=!0}for(var i,a,s=this.blocks,o=this.byteCount,l=t.length,h=this.blockCount,d=0,p=this.s;d<l;){if(this.reset)for(this.reset=!1,s[0]=this.block,i=1;i<h+1;++i)s[i]=0;if(e)for(i=this.start;d<l&&i<o;++d)s[i>>2]|=t[d]<<u[3&i++];else for(i=this.start;d<l&&i<o;++d)(a=t.charCodeAt(d))<128?s[i>>2]|=a<<u[3&i++]:a<2048?(s[i>>2]|=(192|a>>6)<<u[3&i++],s[i>>2]|=(128|63&a)<<u[3&i++]):a<55296||a>=57344?(s[i>>2]|=(224|a>>12)<<u[3&i++],s[i>>2]|=(128|a>>6&63)<<u[3&i++],s[i>>2]|=(128|63&a)<<u[3&i++]):(a=65536+((1023&a)<<10|1023&t.charCodeAt(++d)),s[i>>2]|=(240|a>>18)<<u[3&i++],s[i>>2]|=(128|a>>12&63)<<u[3&i++],s[i>>2]|=(128|a>>6&63)<<u[3&i++],s[i>>2]|=(128|63&a)<<u[3&i++]);if(this.lastByteIndex=i,i>=o){for(this.start=i-o,this.block=s[h],i=0;i<h;++i)p[i]^=s[i];R(p),this.reset=!0}else this.start=i}return this},D.prototype.encode=function(t,e){var n=255&t,i=1,r=[n];for(n=255&(t>>=8);n>0;)r.unshift(n),n=255&(t>>=8),++i;return e?r.push(i):r.unshift(i),this.update(r),r.length},D.prototype.encodeString=function(t){var e,n=typeof t;if("string"!==n){if("object"!==n)throw new Error(r);if(null===t)throw new Error(r);if(c&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||c&&ArrayBuffer.isView(t)))throw new Error(r);e=!0}var i=0,a=t.length;if(e)i=a;else for(var s=0;s<t.length;++s){var o=t.charCodeAt(s);o<128?i+=1:o<2048?i+=2:o<55296||o>=57344?i+=3:(o=65536+((1023&o)<<10|1023&t.charCodeAt(++s)),i+=4)}return i+=this.encode(8*i),this.update(t),i},D.prototype.bytepad=function(t,e){for(var n=this.encode(e),i=0;i<t.length;++i)n+=this.encodeString(t[i]);var r=e-n%e,a=[];return a.length=r,this.update(a),this},D.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex,n=this.blockCount,i=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[n],e=1;e<n+1;++e)t[e]=0;for(t[n-1]|=2147483648,e=0;e<n;++e)i[e]^=t[e];R(i)}},D.prototype.toString=D.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,n=this.s,i=this.outputBlocks,r=this.extraBytes,a=0,s=0,o="";s<i;){for(a=0;a<e&&s<i;++a,++s)t=n[a],o+=d[t>>4&15]+d[15&t]+d[t>>12&15]+d[t>>8&15]+d[t>>20&15]+d[t>>16&15]+d[t>>28&15]+d[t>>24&15];s%e==0&&(R(n),a=0)}return r&&(t=n[a],o+=d[t>>4&15]+d[15&t],r>1&&(o+=d[t>>12&15]+d[t>>8&15]),r>2&&(o+=d[t>>20&15]+d[t>>16&15])),o},D.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,n=this.s,i=this.outputBlocks,r=this.extraBytes,a=0,s=0,o=this.outputBits>>3;t=r?new ArrayBuffer(i+1<<2):new ArrayBuffer(o);for(var l=new Uint32Array(t);s<i;){for(a=0;a<e&&s<i;++a,++s)l[s]=n[a];s%e==0&&R(n)}return r&&(l[a]=n[a],t=t.slice(0,o)),t},D.prototype.buffer=D.prototype.arrayBuffer,D.prototype.digest=D.prototype.array=function(){this.finalize();for(var t,e,n=this.blockCount,i=this.s,r=this.outputBlocks,a=this.extraBytes,s=0,o=0,l=[];o<r;){for(s=0;s<n&&o<r;++s,++o)t=o<<2,e=i[s],l[t]=255&e,l[t+1]=e>>8&255,l[t+2]=e>>16&255,l[t+3]=e>>24&255;o%n==0&&R(i)}return a&&(t=o<<2,e=i[s],l[t]=255&e,a>1&&(l[t+1]=e>>8&255),a>2&&(l[t+2]=e>>16&255)),l},O.prototype=new D,O.prototype.finalize=function(){return this.encode(this.outputBits,!0),D.prototype.finalize.call(this)};var R=function(t){var e,n,i,r,a,s,o,l,h,c,d,p,u,m,g,v,w,y,_,b,M,x,C,k,S,A,E,L,P,I,T,F,D,O,R,N,B,z,W,q,j,V,H,Z,U,G,$,X,K,J,Y,Q,tt,et,nt,it,rt,at,st,ot,lt,ht,ct;for(i=0;i<48;i+=2)r=t[0]^t[10]^t[20]^t[30]^t[40],a=t[1]^t[11]^t[21]^t[31]^t[41],s=t[2]^t[12]^t[22]^t[32]^t[42],o=t[3]^t[13]^t[23]^t[33]^t[43],l=t[4]^t[14]^t[24]^t[34]^t[44],h=t[5]^t[15]^t[25]^t[35]^t[45],c=t[6]^t[16]^t[26]^t[36]^t[46],d=t[7]^t[17]^t[27]^t[37]^t[47],e=(p=t[8]^t[18]^t[28]^t[38]^t[48])^(s<<1|o>>>31),n=(u=t[9]^t[19]^t[29]^t[39]^t[49])^(o<<1|s>>>31),t[0]^=e,t[1]^=n,t[10]^=e,t[11]^=n,t[20]^=e,t[21]^=n,t[30]^=e,t[31]^=n,t[40]^=e,t[41]^=n,e=r^(l<<1|h>>>31),n=a^(h<<1|l>>>31),t[2]^=e,t[3]^=n,t[12]^=e,t[13]^=n,t[22]^=e,t[23]^=n,t[32]^=e,t[33]^=n,t[42]^=e,t[43]^=n,e=s^(c<<1|d>>>31),n=o^(d<<1|c>>>31),t[4]^=e,t[5]^=n,t[14]^=e,t[15]^=n,t[24]^=e,t[25]^=n,t[34]^=e,t[35]^=n,t[44]^=e,t[45]^=n,e=l^(p<<1|u>>>31),n=h^(u<<1|p>>>31),t[6]^=e,t[7]^=n,t[16]^=e,t[17]^=n,t[26]^=e,t[27]^=n,t[36]^=e,t[37]^=n,t[46]^=e,t[47]^=n,e=c^(r<<1|a>>>31),n=d^(a<<1|r>>>31),t[8]^=e,t[9]^=n,t[18]^=e,t[19]^=n,t[28]^=e,t[29]^=n,t[38]^=e,t[39]^=n,t[48]^=e,t[49]^=n,m=t[0],g=t[1],G=t[11]<<4|t[10]>>>28,$=t[10]<<4|t[11]>>>28,L=t[20]<<3|t[21]>>>29,P=t[21]<<3|t[20]>>>29,ot=t[31]<<9|t[30]>>>23,lt=t[30]<<9|t[31]>>>23,V=t[40]<<18|t[41]>>>14,H=t[41]<<18|t[40]>>>14,O=t[2]<<1|t[3]>>>31,R=t[3]<<1|t[2]>>>31,v=t[13]<<12|t[12]>>>20,w=t[12]<<12|t[13]>>>20,X=t[22]<<10|t[23]>>>22,K=t[23]<<10|t[22]>>>22,I=t[33]<<13|t[32]>>>19,T=t[32]<<13|t[33]>>>19,ht=t[42]<<2|t[43]>>>30,ct=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,nt=t[4]<<30|t[5]>>>2,N=t[14]<<6|t[15]>>>26,B=t[15]<<6|t[14]>>>26,y=t[25]<<11|t[24]>>>21,_=t[24]<<11|t[25]>>>21,J=t[34]<<15|t[35]>>>17,Y=t[35]<<15|t[34]>>>17,F=t[45]<<29|t[44]>>>3,D=t[44]<<29|t[45]>>>3,k=t[6]<<28|t[7]>>>4,S=t[7]<<28|t[6]>>>4,it=t[17]<<23|t[16]>>>9,rt=t[16]<<23|t[17]>>>9,z=t[26]<<25|t[27]>>>7,W=t[27]<<25|t[26]>>>7,b=t[36]<<21|t[37]>>>11,M=t[37]<<21|t[36]>>>11,Q=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,Z=t[8]<<27|t[9]>>>5,U=t[9]<<27|t[8]>>>5,A=t[18]<<20|t[19]>>>12,E=t[19]<<20|t[18]>>>12,at=t[29]<<7|t[28]>>>25,st=t[28]<<7|t[29]>>>25,q=t[38]<<8|t[39]>>>24,j=t[39]<<8|t[38]>>>24,x=t[48]<<14|t[49]>>>18,C=t[49]<<14|t[48]>>>18,t[0]=m^~v&y,t[1]=g^~w&_,t[10]=k^~A&L,t[11]=S^~E&P,t[20]=O^~N&z,t[21]=R^~B&W,t[30]=Z^~G&X,t[31]=U^~$&K,t[40]=et^~it&at,t[41]=nt^~rt&st,t[2]=v^~y&b,t[3]=w^~_&M,t[12]=A^~L&I,t[13]=E^~P&T,t[22]=N^~z&q,t[23]=B^~W&j,t[32]=G^~X&J,t[33]=$^~K&Y,t[42]=it^~at&ot,t[43]=rt^~st&lt,t[4]=y^~b&x,t[5]=_^~M&C,t[14]=L^~I&F,t[15]=P^~T&D,t[24]=z^~q&V,t[25]=W^~j&H,t[34]=X^~J&Q,t[35]=K^~Y&tt,t[44]=at^~ot&ht,t[45]=st^~lt&ct,t[6]=b^~x&m,t[7]=M^~C&g,t[16]=I^~F&k,t[17]=T^~D&S,t[26]=q^~V&O,t[27]=j^~H&R,t[36]=J^~Q&Z,t[37]=Y^~tt&U,t[46]=ot^~ht&et,t[47]=lt^~ct&nt,t[8]=x^~m&v,t[9]=C^~g&w,t[18]=F^~k&A,t[19]=D^~S&E,t[28]=V^~O&N,t[29]=H^~R&B,t[38]=Q^~Z&G,t[39]=tt^~U&$,t[48]=ht^~et&it,t[49]=ct^~nt&rt,t[0]^=f[i],t[1]^=f[i+1]};if(l)t.exports=S;else{for(E=0;E<A.length;++E)s[A[E]]=S[A[E]];h&&(void 0===(i=function(){return S}.call(e,n,e,t))||(t.exports=i))}}()},1915:t=>{self,t.exports=(()=>{var t={192:(t,e)=>{var n,i,r=function(){var t=function(t,e){var n=t,i=s[e],r=null,a=0,l=null,g=[],v={},y=function(t,e){r=function(t){for(var e=new Array(t),n=0;n<t;n+=1){e[n]=new Array(t);for(var i=0;i<t;i+=1)e[n][i]=null}return e}(a=4*n+17),_(0,0),_(a-7,0),_(0,a-7),M(),b(),C(t,e),n>=7&&x(t),null==l&&(l=S(n,i,g)),k(l,e)},_=function(t,e){for(var n=-1;n<=7;n+=1)if(!(t+n<=-1||a<=t+n))for(var i=-1;i<=7;i+=1)e+i<=-1||a<=e+i||(r[t+n][e+i]=0<=n&&n<=6&&(0==i||6==i)||0<=i&&i<=6&&(0==n||6==n)||2<=n&&n<=4&&2<=i&&i<=4)},b=function(){for(var t=8;t<a-8;t+=1)null==r[t][6]&&(r[t][6]=t%2==0);for(var e=8;e<a-8;e+=1)null==r[6][e]&&(r[6][e]=e%2==0)},M=function(){for(var t=o.getPatternPosition(n),e=0;e<t.length;e+=1)for(var i=0;i<t.length;i+=1){var a=t[e],s=t[i];if(null==r[a][s])for(var l=-2;l<=2;l+=1)for(var h=-2;h<=2;h+=1)r[a+l][s+h]=-2==l||2==l||-2==h||2==h||0==l&&0==h}},x=function(t){for(var e=o.getBCHTypeNumber(n),i=0;i<18;i+=1){var s=!t&&1==(e>>i&1);r[Math.floor(i/3)][i%3+a-8-3]=s}for(i=0;i<18;i+=1)s=!t&&1==(e>>i&1),r[i%3+a-8-3][Math.floor(i/3)]=s},C=function(t,e){for(var n=i<<3|e,s=o.getBCHTypeInfo(n),l=0;l<15;l+=1){var h=!t&&1==(s>>l&1);l<6?r[l][8]=h:l<8?r[l+1][8]=h:r[a-15+l][8]=h}for(l=0;l<15;l+=1)h=!t&&1==(s>>l&1),l<8?r[8][a-l-1]=h:l<9?r[8][15-l-1+1]=h:r[8][15-l-1]=h;r[a-8][8]=!t},k=function(t,e){for(var n=-1,i=a-1,s=7,l=0,h=o.getMaskFunction(e),c=a-1;c>0;c-=2)for(6==c&&(c-=1);;){for(var d=0;d<2;d+=1)if(null==r[i][c-d]){var p=!1;l<t.length&&(p=1==(t[l]>>>s&1)),h(i,c-d)&&(p=!p),r[i][c-d]=p,-1==(s-=1)&&(l+=1,s=7)}if((i+=n)<0||a<=i){i-=n,n=-n;break}}},S=function(t,e,n){for(var i=c.getRSBlocks(t,e),r=d(),a=0;a<n.length;a+=1){var s=n[a];r.put(s.getMode(),4),r.put(s.getLength(),o.getLengthInBits(s.getMode(),t)),s.write(r)}var l=0;for(a=0;a<i.length;a+=1)l+=i[a].dataCount;if(r.getLengthInBits()>8*l)throw"code length overflow. ("+r.getLengthInBits()+">"+8*l+")";for(r.getLengthInBits()+4<=8*l&&r.put(0,4);r.getLengthInBits()%8!=0;)r.putBit(!1);for(;!(r.getLengthInBits()>=8*l||(r.put(236,8),r.getLengthInBits()>=8*l));)r.put(17,8);return function(t,e){for(var n=0,i=0,r=0,a=new Array(e.length),s=new Array(e.length),l=0;l<e.length;l+=1){var c=e[l].dataCount,d=e[l].totalCount-c;i=Math.max(i,c),r=Math.max(r,d),a[l]=new Array(c);for(var p=0;p<a[l].length;p+=1)a[l][p]=255&t.getBuffer()[p+n];n+=c;var u=o.getErrorCorrectPolynomial(d),f=h(a[l],u.getLength()-1).mod(u);for(s[l]=new Array(u.getLength()-1),p=0;p<s[l].length;p+=1){var m=p+f.getLength()-s[l].length;s[l][p]=m>=0?f.getAt(m):0}}var g=0;for(p=0;p<e.length;p+=1)g+=e[p].totalCount;var v=new Array(g),w=0;for(p=0;p<i;p+=1)for(l=0;l<e.length;l+=1)p<a[l].length&&(v[w]=a[l][p],w+=1);for(p=0;p<r;p+=1)for(l=0;l<e.length;l+=1)p<s[l].length&&(v[w]=s[l][p],w+=1);return v}(r,i)};v.addData=function(t,e){var n=null;switch(e=e||"Byte"){case"Numeric":n=p(t);break;case"Alphanumeric":n=u(t);break;case"Byte":n=f(t);break;case"Kanji":n=m(t);break;default:throw"mode:"+e}g.push(n),l=null},v.isDark=function(t,e){if(t<0||a<=t||e<0||a<=e)throw t+","+e;return r[t][e]},v.getModuleCount=function(){return a},v.make=function(){if(n<1){for(var t=1;t<40;t++){for(var e=c.getRSBlocks(t,i),r=d(),a=0;a<g.length;a++){var s=g[a];r.put(s.getMode(),4),r.put(s.getLength(),o.getLengthInBits(s.getMode(),t)),s.write(r)}var l=0;for(a=0;a<e.length;a++)l+=e[a].dataCount;if(r.getLengthInBits()<=8*l)break}n=t}y(!1,function(){for(var t=0,e=0,n=0;n<8;n+=1){y(!0,n);var i=o.getLostPoint(v);(0==n||t>i)&&(t=i,e=n)}return e}())},v.createTableTag=function(t,e){t=t||2;var n="";n+='<table style="',n+=" border-width: 0px; border-style: none;",n+=" border-collapse: collapse;",n+=" padding: 0px; margin: "+(e=void 0===e?4*t:e)+"px;",n+='">',n+="<tbody>";for(var i=0;i<v.getModuleCount();i+=1){n+="<tr>";for(var r=0;r<v.getModuleCount();r+=1)n+='<td style="',n+=" border-width: 0px; border-style: none;",n+=" border-collapse: collapse;",n+=" padding: 0px; margin: 0px;",n+=" width: "+t+"px;",n+=" height: "+t+"px;",n+=" background-color: ",n+=v.isDark(i,r)?"#000000":"#ffffff",n+=";",n+='"/>';n+="</tr>"}return(n+="</tbody>")+"</table>"},v.createSvgTag=function(t,e,n,i){var r={};"object"==typeof arguments[0]&&(t=(r=arguments[0]).cellSize,e=r.margin,n=r.alt,i=r.title),t=t||2,e=void 0===e?4*t:e,(n="string"==typeof n?{text:n}:n||{}).text=n.text||null,n.id=n.text?n.id||"qrcode-description":null,(i="string"==typeof i?{text:i}:i||{}).text=i.text||null,i.id=i.text?i.id||"qrcode-title":null;var a,s,o,l,h=v.getModuleCount()*t+2*e,c="";for(l="l"+t+",0 0,"+t+" -"+t+",0 0,-"+t+"z ",c+='<svg version="1.1" xmlns="http://www.w3.org/2000/svg"',c+=r.scalable?"":' width="'+h+'px" height="'+h+'px"',c+=' viewBox="0 0 '+h+" "+h+'" ',c+=' preserveAspectRatio="xMinYMin meet"',c+=i.text||n.text?' role="img" aria-labelledby="'+A([i.id,n.id].join(" ").trim())+'"':"",c+=">",c+=i.text?'<title id="'+A(i.id)+'">'+A(i.text)+"</title>":"",c+=n.text?'<description id="'+A(n.id)+'">'+A(n.text)+"</description>":"",c+='<rect width="100%" height="100%" fill="white" cx="0" cy="0"/>',c+='<path d="',s=0;s<v.getModuleCount();s+=1)for(o=s*t+e,a=0;a<v.getModuleCount();a+=1)v.isDark(s,a)&&(c+="M"+(a*t+e)+","+o+l);return(c+='" stroke="transparent" fill="black"/>')+"</svg>"},v.createDataURL=function(t,e){t=t||2,e=void 0===e?4*t:e;var n=v.getModuleCount()*t+2*e,i=e,r=n-e;return w(n,n,(function(e,n){if(i<=e&&e<r&&i<=n&&n<r){var a=Math.floor((e-i)/t),s=Math.floor((n-i)/t);return v.isDark(s,a)?0:1}return 1}))},v.createImgTag=function(t,e,n){t=t||2,e=void 0===e?4*t:e;var i=v.getModuleCount()*t+2*e,r="";return r+="<img",r+=' src="',r+=v.createDataURL(t,e),r+='"',r+=' width="',r+=i,r+='"',r+=' height="',r+=i,r+='"',n&&(r+=' alt="',r+=A(n),r+='"'),r+"/>"};var A=function(t){for(var e="",n=0;n<t.length;n+=1){var i=t.charAt(n);switch(i){case"<":e+="&lt;";break;case">":e+="&gt;";break;case"&":e+="&amp;";break;case'"':e+="&quot;";break;default:e+=i}}return e};return v.createASCII=function(t,e){if((t=t||1)<2)return function(t){t=void 0===t?2:t;var e,n,i,r,a,s=1*v.getModuleCount()+2*t,o=t,l=s-t,h={"██":"█","█ ":"▀"," █":"▄","  ":" "},c={"██":"▀","█ ":"▀"," █":" ","  ":" "},d="";for(e=0;e<s;e+=2){for(i=Math.floor((e-o)/1),r=Math.floor((e+1-o)/1),n=0;n<s;n+=1)a="█",o<=n&&n<l&&o<=e&&e<l&&v.isDark(i,Math.floor((n-o)/1))&&(a=" "),o<=n&&n<l&&o<=e+1&&e+1<l&&v.isDark(r,Math.floor((n-o)/1))?a+=" ":a+="█",d+=t<1&&e+1>=l?c[a]:h[a];d+="\n"}return s%2&&t>0?d.substring(0,d.length-s-1)+Array(s+1).join("▀"):d.substring(0,d.length-1)}(e);t-=1,e=void 0===e?2*t:e;var n,i,r,a,s=v.getModuleCount()*t+2*e,o=e,l=s-e,h=Array(t+1).join("██"),c=Array(t+1).join("  "),d="",p="";for(n=0;n<s;n+=1){for(r=Math.floor((n-o)/t),p="",i=0;i<s;i+=1)a=1,o<=i&&i<l&&o<=n&&n<l&&v.isDark(r,Math.floor((i-o)/t))&&(a=0),p+=a?h:c;for(r=0;r<t;r+=1)d+=p+"\n"}return d.substring(0,d.length-1)},v.renderTo2dContext=function(t,e){e=e||2;for(var n=v.getModuleCount(),i=0;i<n;i++)for(var r=0;r<n;r++)t.fillStyle=v.isDark(i,r)?"black":"white",t.fillRect(i*e,r*e,e,e)},v};t.stringToBytes=(t.stringToBytesFuncs={default:function(t){for(var e=[],n=0;n<t.length;n+=1){var i=t.charCodeAt(n);e.push(255&i)}return e}}).default,t.createStringToBytes=function(t,e){var n=function(){for(var n=v(t),i=function(){var t=n.read();if(-1==t)throw"eof";return t},r=0,a={};;){var s=n.read();if(-1==s)break;var o=i(),l=i()<<8|i();a[String.fromCharCode(s<<8|o)]=l,r+=1}if(r!=e)throw r+" != "+e;return a}(),i="?".charCodeAt(0);return function(t){for(var e=[],r=0;r<t.length;r+=1){var a=t.charCodeAt(r);if(a<128)e.push(a);else{var s=n[t.charAt(r)];"number"==typeof s?(255&s)==s?e.push(s):(e.push(s>>>8),e.push(255&s)):e.push(i)}}return e}};var e,n,i,r,a,s={L:1,M:0,Q:3,H:2},o=(e=[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],n=1335,i=7973,a=function(t){for(var e=0;0!=t;)e+=1,t>>>=1;return e},(r={}).getBCHTypeInfo=function(t){for(var e=t<<10;a(e)-a(n)>=0;)e^=n<<a(e)-a(n);return 21522^(t<<10|e)},r.getBCHTypeNumber=function(t){for(var e=t<<12;a(e)-a(i)>=0;)e^=i<<a(e)-a(i);return t<<12|e},r.getPatternPosition=function(t){return e[t-1]},r.getMaskFunction=function(t){switch(t){case 0:return function(t,e){return(t+e)%2==0};case 1:return function(t,e){return t%2==0};case 2:return function(t,e){return e%3==0};case 3:return function(t,e){return(t+e)%3==0};case 4:return function(t,e){return(Math.floor(t/2)+Math.floor(e/3))%2==0};case 5:return function(t,e){return t*e%2+t*e%3==0};case 6:return function(t,e){return(t*e%2+t*e%3)%2==0};case 7:return function(t,e){return(t*e%3+(t+e)%2)%2==0};default:throw"bad maskPattern:"+t}},r.getErrorCorrectPolynomial=function(t){for(var e=h([1],0),n=0;n<t;n+=1)e=e.multiply(h([1,l.gexp(n)],0));return e},r.getLengthInBits=function(t,e){if(1<=e&&e<10)switch(t){case 1:return 10;case 2:return 9;case 4:case 8:return 8;default:throw"mode:"+t}else if(e<27)switch(t){case 1:return 12;case 2:return 11;case 4:return 16;case 8:return 10;default:throw"mode:"+t}else{if(!(e<41))throw"type:"+e;switch(t){case 1:return 14;case 2:return 13;case 4:return 16;case 8:return 12;default:throw"mode:"+t}}},r.getLostPoint=function(t){for(var e=t.getModuleCount(),n=0,i=0;i<e;i+=1)for(var r=0;r<e;r+=1){for(var a=0,s=t.isDark(i,r),o=-1;o<=1;o+=1)if(!(i+o<0||e<=i+o))for(var l=-1;l<=1;l+=1)r+l<0||e<=r+l||0==o&&0==l||s==t.isDark(i+o,r+l)&&(a+=1);a>5&&(n+=3+a-5)}for(i=0;i<e-1;i+=1)for(r=0;r<e-1;r+=1){var h=0;t.isDark(i,r)&&(h+=1),t.isDark(i+1,r)&&(h+=1),t.isDark(i,r+1)&&(h+=1),t.isDark(i+1,r+1)&&(h+=1),0!=h&&4!=h||(n+=3)}for(i=0;i<e;i+=1)for(r=0;r<e-6;r+=1)t.isDark(i,r)&&!t.isDark(i,r+1)&&t.isDark(i,r+2)&&t.isDark(i,r+3)&&t.isDark(i,r+4)&&!t.isDark(i,r+5)&&t.isDark(i,r+6)&&(n+=40);for(r=0;r<e;r+=1)for(i=0;i<e-6;i+=1)t.isDark(i,r)&&!t.isDark(i+1,r)&&t.isDark(i+2,r)&&t.isDark(i+3,r)&&t.isDark(i+4,r)&&!t.isDark(i+5,r)&&t.isDark(i+6,r)&&(n+=40);var c=0;for(r=0;r<e;r+=1)for(i=0;i<e;i+=1)t.isDark(i,r)&&(c+=1);return n+Math.abs(100*c/e/e-50)/5*10},r),l=function(){for(var t=new Array(256),e=new Array(256),n=0;n<8;n+=1)t[n]=1<<n;for(n=8;n<256;n+=1)t[n]=t[n-4]^t[n-5]^t[n-6]^t[n-8];for(n=0;n<255;n+=1)e[t[n]]=n;return{glog:function(t){if(t<1)throw"glog("+t+")";return e[t]},gexp:function(e){for(;e<0;)e+=255;for(;e>=256;)e-=255;return t[e]}}}();function h(t,e){if(void 0===t.length)throw t.length+"/"+e;var n=function(){for(var n=0;n<t.length&&0==t[n];)n+=1;for(var i=new Array(t.length-n+e),r=0;r<t.length-n;r+=1)i[r]=t[r+n];return i}(),i={getAt:function(t){return n[t]},getLength:function(){return n.length},multiply:function(t){for(var e=new Array(i.getLength()+t.getLength()-1),n=0;n<i.getLength();n+=1)for(var r=0;r<t.getLength();r+=1)e[n+r]^=l.gexp(l.glog(i.getAt(n))+l.glog(t.getAt(r)));return h(e,0)},mod:function(t){if(i.getLength()-t.getLength()<0)return i;for(var e=l.glog(i.getAt(0))-l.glog(t.getAt(0)),n=new Array(i.getLength()),r=0;r<i.getLength();r+=1)n[r]=i.getAt(r);for(r=0;r<t.getLength();r+=1)n[r]^=l.gexp(l.glog(t.getAt(r))+e);return h(n,0).mod(t)}};return i}var c=function(){var t=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12,7,37,13],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]],e=function(t,e){var n={};return n.totalCount=t,n.dataCount=e,n},n={getRSBlocks:function(n,i){var r=function(e,n){switch(n){case s.L:return t[4*(e-1)+0];case s.M:return t[4*(e-1)+1];case s.Q:return t[4*(e-1)+2];case s.H:return t[4*(e-1)+3];default:return}}(n,i);if(void 0===r)throw"bad rs block @ typeNumber:"+n+"/errorCorrectionLevel:"+i;for(var a=r.length/3,o=[],l=0;l<a;l+=1)for(var h=r[3*l+0],c=r[3*l+1],d=r[3*l+2],p=0;p<h;p+=1)o.push(e(c,d));return o}};return n}(),d=function(){var t=[],e=0,n={getBuffer:function(){return t},getAt:function(e){var n=Math.floor(e/8);return 1==(t[n]>>>7-e%8&1)},put:function(t,e){for(var i=0;i<e;i+=1)n.putBit(1==(t>>>e-i-1&1))},getLengthInBits:function(){return e},putBit:function(n){var i=Math.floor(e/8);t.length<=i&&t.push(0),n&&(t[i]|=128>>>e%8),e+=1}};return n},p=function(t){var e=t,n={getMode:function(){return 1},getLength:function(t){return e.length},write:function(t){for(var n=e,r=0;r+2<n.length;)t.put(i(n.substring(r,r+3)),10),r+=3;r<n.length&&(n.length-r==1?t.put(i(n.substring(r,r+1)),4):n.length-r==2&&t.put(i(n.substring(r,r+2)),7))}},i=function(t){for(var e=0,n=0;n<t.length;n+=1)e=10*e+r(t.charAt(n));return e},r=function(t){if("0"<=t&&t<="9")return t.charCodeAt(0)-"0".charCodeAt(0);throw"illegal char :"+t};return n},u=function(t){var e=t,n={getMode:function(){return 2},getLength:function(t){return e.length},write:function(t){for(var n=e,r=0;r+1<n.length;)t.put(45*i(n.charAt(r))+i(n.charAt(r+1)),11),r+=2;r<n.length&&t.put(i(n.charAt(r)),6)}},i=function(t){if("0"<=t&&t<="9")return t.charCodeAt(0)-"0".charCodeAt(0);if("A"<=t&&t<="Z")return t.charCodeAt(0)-"A".charCodeAt(0)+10;switch(t){case" ":return 36;case"$":return 37;case"%":return 38;case"*":return 39;case"+":return 40;case"-":return 41;case".":return 42;case"/":return 43;case":":return 44;default:throw"illegal char :"+t}};return n},f=function(e){var n=t.stringToBytes(e);return{getMode:function(){return 4},getLength:function(t){return n.length},write:function(t){for(var e=0;e<n.length;e+=1)t.put(n[e],8)}}},m=function(e){var n=t.stringToBytesFuncs.SJIS;if(!n)throw"sjis not supported.";!function(t,e){var i=n("友");if(2!=i.length||38726!=(i[0]<<8|i[1]))throw"sjis not supported."}();var i=n(e);return{getMode:function(){return 8},getLength:function(t){return~~(i.length/2)},write:function(t){for(var e=i,n=0;n+1<e.length;){var r=(255&e[n])<<8|255&e[n+1];if(33088<=r&&r<=40956)r-=33088;else{if(!(57408<=r&&r<=60351))throw"illegal char at "+(n+1)+"/"+r;r-=49472}r=192*(r>>>8&255)+(255&r),t.put(r,13),n+=2}if(n<e.length)throw"illegal char at "+(n+1)}}},g=function(){var t=[],e={writeByte:function(e){t.push(255&e)},writeShort:function(t){e.writeByte(t),e.writeByte(t>>>8)},writeBytes:function(t,n,i){n=n||0,i=i||t.length;for(var r=0;r<i;r+=1)e.writeByte(t[r+n])},writeString:function(t){for(var n=0;n<t.length;n+=1)e.writeByte(t.charCodeAt(n))},toByteArray:function(){return t},toString:function(){var e="";e+="[";for(var n=0;n<t.length;n+=1)n>0&&(e+=","),e+=t[n];return e+"]"}};return e},v=function(t){var e=t,n=0,i=0,r=0,a={read:function(){for(;r<8;){if(n>=e.length){if(0==r)return-1;throw"unexpected end of file./"+r}var t=e.charAt(n);if(n+=1,"="==t)return r=0,-1;t.match(/^\s$/)||(i=i<<6|s(t.charCodeAt(0)),r+=6)}var a=i>>>r-8&255;return r-=8,a}},s=function(t){if(65<=t&&t<=90)return t-65;if(97<=t&&t<=122)return t-97+26;if(48<=t&&t<=57)return t-48+52;if(43==t)return 62;if(47==t)return 63;throw"c:"+t};return a},w=function(t,e,n){for(var i=function(t,e){var n=t,i=e,r=new Array(t*e),a={setPixel:function(t,e,i){r[e*n+t]=i},write:function(t){t.writeString("GIF87a"),t.writeShort(n),t.writeShort(i),t.writeByte(128),t.writeByte(0),t.writeByte(0),t.writeByte(0),t.writeByte(0),t.writeByte(0),t.writeByte(255),t.writeByte(255),t.writeByte(255),t.writeString(","),t.writeShort(0),t.writeShort(0),t.writeShort(n),t.writeShort(i),t.writeByte(0);var e=s(2);t.writeByte(2);for(var r=0;e.length-r>255;)t.writeByte(255),t.writeBytes(e,r,255),r+=255;t.writeByte(e.length-r),t.writeBytes(e,r,e.length-r),t.writeByte(0),t.writeString(";")}},s=function(t){for(var e=1<<t,n=1+(1<<t),i=t+1,a=o(),s=0;s<e;s+=1)a.add(String.fromCharCode(s));a.add(String.fromCharCode(e)),a.add(String.fromCharCode(n));var l,h,c,d=g(),p=(l=d,h=0,c=0,{write:function(t,e){if(t>>>e!=0)throw"length over";for(;h+e>=8;)l.writeByte(255&(t<<h|c)),e-=8-h,t>>>=8-h,c=0,h=0;c|=t<<h,h+=e},flush:function(){h>0&&l.writeByte(c)}});p.write(e,i);var u=0,f=String.fromCharCode(r[u]);for(u+=1;u<r.length;){var m=String.fromCharCode(r[u]);u+=1,a.contains(f+m)?f+=m:(p.write(a.indexOf(f),i),a.size()<4095&&(a.size()==1<<i&&(i+=1),a.add(f+m)),f=m)}return p.write(a.indexOf(f),i),p.write(n,i),p.flush(),d.toByteArray()},o=function(){var t={},e=0,n={add:function(i){if(n.contains(i))throw"dup key:"+i;t[i]=e,e+=1},size:function(){return e},indexOf:function(e){return t[e]},contains:function(e){return void 0!==t[e]}};return n};return a}(t,e),r=0;r<e;r+=1)for(var a=0;a<t;a+=1)i.setPixel(a,r,n(a,r));var s=g();i.write(s);for(var o=function(){var t=0,e=0,n=0,i="",r={},a=function(t){i+=String.fromCharCode(s(63&t))},s=function(t){if(t<0);else{if(t<26)return 65+t;if(t<52)return t-26+97;if(t<62)return t-52+48;if(62==t)return 43;if(63==t)return 47}throw"n:"+t};return r.writeByte=function(i){for(t=t<<8|255&i,e+=8,n+=1;e>=6;)a(t>>>e-6),e-=6},r.flush=function(){if(e>0&&(a(t<<6-e),t=0,e=0),n%3!=0)for(var r=3-n%3,s=0;s<r;s+=1)i+="="},r.toString=function(){return i},r}(),l=s.toByteArray(),h=0;h<l.length;h+=1)o.writeByte(l[h]);return o.flush(),"data:image/gif;base64,"+o};return t}();r.stringToBytesFuncs["UTF-8"]=function(t){return function(t){for(var e=[],n=0;n<t.length;n++){var i=t.charCodeAt(n);i<128?e.push(i):i<2048?e.push(192|i>>6,128|63&i):i<55296||i>=57344?e.push(224|i>>12,128|i>>6&63,128|63&i):(n++,i=65536+((1023&i)<<10|1023&t.charCodeAt(n)),e.push(240|i>>18,128|i>>12&63,128|i>>6&63,128|63&i))}return e}(t)},void 0===(i="function"==typeof(n=function(){return r})?n.apply(e,[]):n)||(t.exports=i)},676:(t,e,n)=>{"use strict";n.d(e,{default:()=>T});var i=function(){return(i=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=function(t){return!!t&&"object"==typeof t&&!Array.isArray(t)};function a(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(!e.length)return t;var s=e.shift();return void 0!==s&&r(t)&&r(s)?(t=i({},t),Object.keys(s).forEach((function(e){var n=t[e],i=s[e];Array.isArray(n)&&Array.isArray(i)?t[e]=i:r(n)&&r(i)?t[e]=a(Object.assign({},n),i):t[e]=i})),a.apply(void 0,function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var a=arguments[e],s=0,o=a.length;s<o;s++,r++)i[r]=a[s];return i}([t],e))):t}function s(t,e){var n=document.createElement("a");n.download=e,n.href=t,document.body.appendChild(n),n.click(),document.body.removeChild(n)}function o(t){return e=this,void 0,i=function(){return function(t,e){var n,i,r,a,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,i=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){s.label=a[1];break}if(6===a[0]&&s.label<r[1]){s.label=r[1],r=a;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(a);break}r[2]&&s.ops.pop(),s.trys.pop();continue}a=e.call(t,s)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}(this,(function(e){return[2,new Promise((function(e){var n=new XMLHttpRequest;n.onload=function(){var t=new FileReader;t.onloadend=function(){e(t.result)},t.readAsDataURL(n.response)},n.open("GET",t),n.responseType="blob",n.send()}))]}))},new((n=void 0)||(n=Promise))((function(t,r){function a(t){try{o(i.next(t))}catch(t){r(t)}}function s(t){try{o(i.throw(t))}catch(t){r(t)}}function o(e){var i;e.done?t(e.value):(i=e.value,i instanceof n?i:new n((function(t){t(i)}))).then(a,s)}o((i=i.apply(e,[])).next())}));var e,n,i}const l={L:.07,M:.15,Q:.25,H:.3};var h=function(){return(h=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};const c=function(){function t(t){var e=t.svg,n=t.type;this._svg=e,this._type=n}return t.prototype.draw=function(t,e,n,i){var r;switch(this._type){case"dots":r=this._drawDot;break;case"classy":r=this._drawClassy;break;case"classy-rounded":r=this._drawClassyRounded;break;case"rounded":r=this._drawRounded;break;case"extra-rounded":r=this._drawExtraRounded;break;default:r=this._drawSquare}r.call(this,{x:t,y:e,size:n,getNeighbor:i})},t.prototype._rotateFigure=function(t){var e,n=t.x,i=t.y,r=t.size,a=t.rotation,s=void 0===a?0:a,o=n+r/2,l=i+r/2;(0,t.draw)(),null===(e=this._element)||void 0===e||e.setAttribute("transform","rotate("+180*s/Math.PI+","+o+","+l+")")},t.prototype._basicDot=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(h(h({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","circle"),e._element.setAttribute("cx",String(i+n/2)),e._element.setAttribute("cy",String(r+n/2)),e._element.setAttribute("r",String(n/2))}}))},t.prototype._basicSquare=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(h(h({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","rect"),e._element.setAttribute("x",String(i)),e._element.setAttribute("y",String(r)),e._element.setAttribute("width",String(n)),e._element.setAttribute("height",String(n))}}))},t.prototype._basicSideRounded=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(h(h({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("d","M "+i+" "+r+"v "+n+"h "+n/2+"a "+n/2+" "+n/2+", 0, 0, 0, 0 "+-n)}}))},t.prototype._basicCornerRounded=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(h(h({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("d","M "+i+" "+r+"v "+n+"h "+n+"v "+-n/2+"a "+n/2+" "+n/2+", 0, 0, 0, "+-n/2+" "+-n/2)}}))},t.prototype._basicCornerExtraRounded=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(h(h({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("d","M "+i+" "+r+"v "+n+"h "+n+"a "+n+" "+n+", 0, 0, 0, "+-n+" "+-n)}}))},t.prototype._basicCornersRounded=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(h(h({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("d","M "+i+" "+r+"v "+n/2+"a "+n/2+" "+n/2+", 0, 0, 0, "+n/2+" "+n/2+"h "+n/2+"v "+-n/2+"a "+n/2+" "+n/2+", 0, 0, 0, "+-n/2+" "+-n/2)}}))},t.prototype._drawDot=function(t){var e=t.x,n=t.y,i=t.size;this._basicDot({x:e,y:n,size:i,rotation:0})},t.prototype._drawSquare=function(t){var e=t.x,n=t.y,i=t.size;this._basicSquare({x:e,y:n,size:i,rotation:0})},t.prototype._drawRounded=function(t){var e=t.x,n=t.y,i=t.size,r=t.getNeighbor,a=r?+r(-1,0):0,s=r?+r(1,0):0,o=r?+r(0,-1):0,l=r?+r(0,1):0,h=a+s+o+l;if(0!==h)if(h>2||a&&s||o&&l)this._basicSquare({x:e,y:n,size:i,rotation:0});else{if(2===h){var c=0;return a&&o?c=Math.PI/2:o&&s?c=Math.PI:s&&l&&(c=-Math.PI/2),void this._basicCornerRounded({x:e,y:n,size:i,rotation:c})}if(1===h)return c=0,o?c=Math.PI/2:s?c=Math.PI:l&&(c=-Math.PI/2),void this._basicSideRounded({x:e,y:n,size:i,rotation:c})}else this._basicDot({x:e,y:n,size:i,rotation:0})},t.prototype._drawExtraRounded=function(t){var e=t.x,n=t.y,i=t.size,r=t.getNeighbor,a=r?+r(-1,0):0,s=r?+r(1,0):0,o=r?+r(0,-1):0,l=r?+r(0,1):0,h=a+s+o+l;if(0!==h)if(h>2||a&&s||o&&l)this._basicSquare({x:e,y:n,size:i,rotation:0});else{if(2===h){var c=0;return a&&o?c=Math.PI/2:o&&s?c=Math.PI:s&&l&&(c=-Math.PI/2),void this._basicCornerExtraRounded({x:e,y:n,size:i,rotation:c})}if(1===h)return c=0,o?c=Math.PI/2:s?c=Math.PI:l&&(c=-Math.PI/2),void this._basicSideRounded({x:e,y:n,size:i,rotation:c})}else this._basicDot({x:e,y:n,size:i,rotation:0})},t.prototype._drawClassy=function(t){var e=t.x,n=t.y,i=t.size,r=t.getNeighbor,a=r?+r(-1,0):0,s=r?+r(1,0):0,o=r?+r(0,-1):0,l=r?+r(0,1):0;0!==a+s+o+l?a||o?s||l?this._basicSquare({x:e,y:n,size:i,rotation:0}):this._basicCornerRounded({x:e,y:n,size:i,rotation:Math.PI/2}):this._basicCornerRounded({x:e,y:n,size:i,rotation:-Math.PI/2}):this._basicCornersRounded({x:e,y:n,size:i,rotation:Math.PI/2})},t.prototype._drawClassyRounded=function(t){var e=t.x,n=t.y,i=t.size,r=t.getNeighbor,a=r?+r(-1,0):0,s=r?+r(1,0):0,o=r?+r(0,-1):0,l=r?+r(0,1):0;0!==a+s+o+l?a||o?s||l?this._basicSquare({x:e,y:n,size:i,rotation:0}):this._basicCornerExtraRounded({x:e,y:n,size:i,rotation:Math.PI/2}):this._basicCornerExtraRounded({x:e,y:n,size:i,rotation:-Math.PI/2}):this._basicCornersRounded({x:e,y:n,size:i,rotation:Math.PI/2})},t}();var d=function(){return(d=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};const p=function(){function t(t){var e=t.svg,n=t.type;this._svg=e,this._type=n}return t.prototype.draw=function(t,e,n,i){var r;switch(this._type){case"square":r=this._drawSquare;break;case"extra-rounded":r=this._drawExtraRounded;break;default:r=this._drawDot}r.call(this,{x:t,y:e,size:n,rotation:i})},t.prototype._rotateFigure=function(t){var e,n=t.x,i=t.y,r=t.size,a=t.rotation,s=void 0===a?0:a,o=n+r/2,l=i+r/2;(0,t.draw)(),null===(e=this._element)||void 0===e||e.setAttribute("transform","rotate("+180*s/Math.PI+","+o+","+l+")")},t.prototype._basicDot=function(t){var e=this,n=t.size,i=t.x,r=t.y,a=n/7;this._rotateFigure(d(d({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("clip-rule","evenodd"),e._element.setAttribute("d","M "+(i+n/2)+" "+r+"a "+n/2+" "+n/2+" 0 1 0 0.1 0zm 0 "+a+"a "+(n/2-a)+" "+(n/2-a)+" 0 1 1 -0.1 0Z")}}))},t.prototype._basicSquare=function(t){var e=this,n=t.size,i=t.x,r=t.y,a=n/7;this._rotateFigure(d(d({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("clip-rule","evenodd"),e._element.setAttribute("d","M "+i+" "+r+"v "+n+"h "+n+"v "+-n+"zM "+(i+a)+" "+(r+a)+"h "+(n-2*a)+"v "+(n-2*a)+"h "+(2*a-n)+"z")}}))},t.prototype._basicExtraRounded=function(t){var e=this,n=t.size,i=t.x,r=t.y,a=n/7;this._rotateFigure(d(d({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","path"),e._element.setAttribute("clip-rule","evenodd"),e._element.setAttribute("d","M "+i+" "+(r+2.5*a)+"v "+2*a+"a "+2.5*a+" "+2.5*a+", 0, 0, 0, "+2.5*a+" "+2.5*a+"h "+2*a+"a "+2.5*a+" "+2.5*a+", 0, 0, 0, "+2.5*a+" "+2.5*-a+"v "+-2*a+"a "+2.5*a+" "+2.5*a+", 0, 0, 0, "+2.5*-a+" "+2.5*-a+"h "+-2*a+"a "+2.5*a+" "+2.5*a+", 0, 0, 0, "+2.5*-a+" "+2.5*a+"M "+(i+2.5*a)+" "+(r+a)+"h "+2*a+"a "+1.5*a+" "+1.5*a+", 0, 0, 1, "+1.5*a+" "+1.5*a+"v "+2*a+"a "+1.5*a+" "+1.5*a+", 0, 0, 1, "+1.5*-a+" "+1.5*a+"h "+-2*a+"a "+1.5*a+" "+1.5*a+", 0, 0, 1, "+1.5*-a+" "+1.5*-a+"v "+-2*a+"a "+1.5*a+" "+1.5*a+", 0, 0, 1, "+1.5*a+" "+1.5*-a)}}))},t.prototype._drawDot=function(t){var e=t.x,n=t.y,i=t.size,r=t.rotation;this._basicDot({x:e,y:n,size:i,rotation:r})},t.prototype._drawSquare=function(t){var e=t.x,n=t.y,i=t.size,r=t.rotation;this._basicSquare({x:e,y:n,size:i,rotation:r})},t.prototype._drawExtraRounded=function(t){var e=t.x,n=t.y,i=t.size,r=t.rotation;this._basicExtraRounded({x:e,y:n,size:i,rotation:r})},t}();var u=function(){return(u=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};const f=function(){function t(t){var e=t.svg,n=t.type;this._svg=e,this._type=n}return t.prototype.draw=function(t,e,n,i){("square"===this._type?this._drawSquare:this._drawDot).call(this,{x:t,y:e,size:n,rotation:i})},t.prototype._rotateFigure=function(t){var e,n=t.x,i=t.y,r=t.size,a=t.rotation,s=void 0===a?0:a,o=n+r/2,l=i+r/2;(0,t.draw)(),null===(e=this._element)||void 0===e||e.setAttribute("transform","rotate("+180*s/Math.PI+","+o+","+l+")")},t.prototype._basicDot=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(u(u({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","circle"),e._element.setAttribute("cx",String(i+n/2)),e._element.setAttribute("cy",String(r+n/2)),e._element.setAttribute("r",String(n/2))}}))},t.prototype._basicSquare=function(t){var e=this,n=t.size,i=t.x,r=t.y;this._rotateFigure(u(u({},t),{draw:function(){e._element=document.createElementNS("http://www.w3.org/2000/svg","rect"),e._element.setAttribute("x",String(i)),e._element.setAttribute("y",String(r)),e._element.setAttribute("width",String(n)),e._element.setAttribute("height",String(n))}}))},t.prototype._drawDot=function(t){var e=t.x,n=t.y,i=t.size,r=t.rotation;this._basicDot({x:e,y:n,size:i,rotation:r})},t.prototype._drawSquare=function(t){var e=t.x,n=t.y,i=t.size,r=t.rotation;this._basicSquare({x:e,y:n,size:i,rotation:r})},t}(),m="circle";var g=function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function s(t){try{l(i.next(t))}catch(t){a(t)}}function o(t){try{l(i.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,o)}l((i=i.apply(t,e||[])).next())}))},v=function(t,e){var n,i,r,a,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,i=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){s.label=a[1];break}if(6===a[0]&&s.label<r[1]){s.label=r[1],r=a;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(a);break}r[2]&&s.ops.pop(),s.trys.pop();continue}a=e.call(t,s)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},w=[[1,1,1,1,1,1,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,0,0,0,0,0,1],[1,1,1,1,1,1,1]],y=[[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,1,1,1,0,0],[0,0,1,1,1,0,0],[0,0,1,1,1,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]];const _=function(){function t(t){this._element=document.createElementNS("http://www.w3.org/2000/svg","svg"),this._element.setAttribute("width",String(t.width)),this._element.setAttribute("height",String(t.height)),this._defs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this._element.appendChild(this._defs),this._options=t}return Object.defineProperty(t.prototype,"width",{get:function(){return this._options.width},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this._options.height},enumerable:!1,configurable:!0}),t.prototype.getElement=function(){return this._element},t.prototype.drawQR=function(t){return g(this,void 0,void 0,(function(){var e,n,i,r,a,s,o,h,c,d,p=this;return v(this,(function(u){switch(u.label){case 0:return e=t.getModuleCount(),n=Math.min(this._options.width,this._options.height)-2*this._options.margin,i=this._options.shape===m?n/Math.sqrt(2):n,r=Math.floor(i/e),a={hideXDots:0,hideYDots:0,width:0,height:0},this._qr=t,this._options.image?[4,this.loadImage()]:[3,2];case 1:if(u.sent(),!this._image)return[2];s=this._options,o=s.imageOptions,h=s.qrOptions,c=o.imageSize*l[h.errorCorrectionLevel],d=Math.floor(c*e*e),a=function(t){var e=t.originalHeight,n=t.originalWidth,i=t.maxHiddenDots,r=t.maxHiddenAxisDots,a=t.dotSize,s={x:0,y:0},o={x:0,y:0};if(e<=0||n<=0||i<=0||a<=0)return{height:0,width:0,hideYDots:0,hideXDots:0};var l=e/n;return s.x=Math.floor(Math.sqrt(i/l)),s.x<=0&&(s.x=1),r&&r<s.x&&(s.x=r),s.x%2==0&&s.x--,o.x=s.x*a,s.y=1+2*Math.ceil((s.x*l-1)/2),o.y=Math.round(o.x*l),(s.y*s.x>i||r&&r<s.y)&&(r&&r<s.y?(s.y=r,s.y%2==0&&s.x--):s.y-=2,o.y=s.y*a,s.x=1+2*Math.ceil((s.y/l-1)/2),o.x=Math.round(o.y/l)),{height:o.y,width:o.x,hideYDots:s.y,hideXDots:s.x}}({originalWidth:this._image.width,originalHeight:this._image.height,maxHiddenDots:d,maxHiddenAxisDots:e-14,dotSize:r}),u.label=2;case 2:return this.drawBackground(),this.drawDots((function(t,n){var i,r,s,o,l,h;return!(p._options.imageOptions.hideBackgroundDots&&t>=(e-a.hideXDots)/2&&t<(e+a.hideXDots)/2&&n>=(e-a.hideYDots)/2&&n<(e+a.hideYDots)/2||(null===(i=w[t])||void 0===i?void 0:i[n])||(null===(r=w[t-e+7])||void 0===r?void 0:r[n])||(null===(s=w[t])||void 0===s?void 0:s[n-e+7])||(null===(o=y[t])||void 0===o?void 0:o[n])||(null===(l=y[t-e+7])||void 0===l?void 0:l[n])||(null===(h=y[t])||void 0===h?void 0:h[n-e+7]))})),this.drawCorners(),this._options.image?[4,this.drawImage({width:a.width,height:a.height,count:e,dotSize:r})]:[3,4];case 3:u.sent(),u.label=4;case 4:return[2]}}))}))},t.prototype.drawBackground=function(){var t,e,n,i=this._element,r=this._options;if(i){var a=null===(t=r.backgroundOptions)||void 0===t?void 0:t.gradient,s=null===(e=r.backgroundOptions)||void 0===e?void 0:e.color;if((a||s)&&this._createColor({options:a,color:s,additionalRotation:0,x:0,y:0,height:r.height,width:r.width,name:"background-color"}),null===(n=r.backgroundOptions)||void 0===n?void 0:n.round){var o=Math.min(r.width,r.height),l=document.createElementNS("http://www.w3.org/2000/svg","rect");this._backgroundClipPath=document.createElementNS("http://www.w3.org/2000/svg","clipPath"),this._backgroundClipPath.setAttribute("id","clip-path-background-color"),this._defs.appendChild(this._backgroundClipPath),l.setAttribute("x",String((r.width-o)/2)),l.setAttribute("y",String((r.height-o)/2)),l.setAttribute("width",String(o)),l.setAttribute("height",String(o)),l.setAttribute("rx",String(o/2*r.backgroundOptions.round)),this._backgroundClipPath.appendChild(l)}}},t.prototype.drawDots=function(t){var e,n,i=this;if(!this._qr)throw"QR code is not defined";var r=this._options,a=this._qr.getModuleCount();if(a>r.width||a>r.height)throw"The canvas is too small.";var s=Math.min(r.width,r.height)-2*r.margin,o=r.shape===m?s/Math.sqrt(2):s,l=Math.floor(o/a),h=Math.floor((r.width-a*l)/2),d=Math.floor((r.height-a*l)/2),p=new c({svg:this._element,type:r.dotsOptions.type});this._dotsClipPath=document.createElementNS("http://www.w3.org/2000/svg","clipPath"),this._dotsClipPath.setAttribute("id","clip-path-dot-color"),this._defs.appendChild(this._dotsClipPath),this._createColor({options:null===(e=r.dotsOptions)||void 0===e?void 0:e.gradient,color:r.dotsOptions.color,additionalRotation:0,x:0,y:0,height:r.height,width:r.width,name:"dot-color"});for(var u=function(e){for(var r=function(r){return t&&!t(e,r)?"continue":(null===(n=f._qr)||void 0===n?void 0:n.isDark(e,r))?(p.draw(h+e*l,d+r*l,l,(function(n,s){return!(e+n<0||r+s<0||e+n>=a||r+s>=a)&&!(t&&!t(e+n,r+s))&&!!i._qr&&i._qr.isDark(e+n,r+s)})),void(p._element&&f._dotsClipPath&&f._dotsClipPath.appendChild(p._element))):"continue"},s=0;s<a;s++)r(s)},f=this,g=0;g<a;g++)u(g);if(r.shape===m){var v=Math.floor((s/l-a)/2),w=a+2*v,y=h-v*l,_=d-v*l,b=[],M=Math.floor(w/2);for(g=0;g<w;g++){b[g]=[];for(var x=0;x<w;x++)g>=v-1&&g<=w-v&&x>=v-1&&x<=w-v||Math.sqrt((g-M)*(g-M)+(x-M)*(x-M))>M?b[g][x]=0:b[g][x]=this._qr.isDark(x-2*v<0?x:x>=a?x-2*v:x-v,g-2*v<0?g:g>=a?g-2*v:g-v)?1:0}var C=function(t){for(var e=function(e){if(!b[t][e])return"continue";p.draw(y+t*l,_+e*l,l,(function(n,i){var r;return!!(null===(r=b[t+n])||void 0===r?void 0:r[e+i])})),p._element&&k._dotsClipPath&&k._dotsClipPath.appendChild(p._element)},n=0;n<w;n++)e(n)},k=this;for(g=0;g<w;g++)C(g)}},t.prototype.drawCorners=function(){var t=this;if(!this._qr)throw"QR code is not defined";var e=this._element,n=this._options;if(!e)throw"Element code is not defined";var i=this._qr.getModuleCount(),r=Math.min(n.width,n.height)-2*n.margin,a=n.shape===m?r/Math.sqrt(2):r,s=Math.floor(a/i),o=7*s,l=3*s,h=Math.floor((n.width-i*s)/2),d=Math.floor((n.height-i*s)/2);[[0,0,0],[1,0,Math.PI/2],[0,1,-Math.PI/2]].forEach((function(e){var r,a,u,m,g,v,_,b,M,x,C,k,S=e[0],A=e[1],E=e[2],L=h+S*s*(i-7),P=d+A*s*(i-7),I=t._dotsClipPath,T=t._dotsClipPath;if(((null===(r=n.cornersSquareOptions)||void 0===r?void 0:r.gradient)||(null===(a=n.cornersSquareOptions)||void 0===a?void 0:a.color))&&((I=document.createElementNS("http://www.w3.org/2000/svg","clipPath")).setAttribute("id","clip-path-corners-square-color-"+S+"-"+A),t._defs.appendChild(I),t._cornersSquareClipPath=t._cornersDotClipPath=T=I,t._createColor({options:null===(u=n.cornersSquareOptions)||void 0===u?void 0:u.gradient,color:null===(m=n.cornersSquareOptions)||void 0===m?void 0:m.color,additionalRotation:E,x:L,y:P,height:o,width:o,name:"corners-square-color-"+S+"-"+A})),null===(g=n.cornersSquareOptions)||void 0===g?void 0:g.type){var F=new p({svg:t._element,type:n.cornersSquareOptions.type});F.draw(L,P,o,E),F._element&&I&&I.appendChild(F._element)}else for(var D=new c({svg:t._element,type:n.dotsOptions.type}),O=function(t){for(var e=function(e){if(!(null===(v=w[t])||void 0===v?void 0:v[e]))return"continue";D.draw(L+t*s,P+e*s,s,(function(n,i){var r;return!!(null===(r=w[t+n])||void 0===r?void 0:r[e+i])})),D._element&&I&&I.appendChild(D._element)},n=0;n<w[t].length;n++)e(n)},R=0;R<w.length;R++)O(R);if(((null===(_=n.cornersDotOptions)||void 0===_?void 0:_.gradient)||(null===(b=n.cornersDotOptions)||void 0===b?void 0:b.color))&&((T=document.createElementNS("http://www.w3.org/2000/svg","clipPath")).setAttribute("id","clip-path-corners-dot-color-"+S+"-"+A),t._defs.appendChild(T),t._cornersDotClipPath=T,t._createColor({options:null===(M=n.cornersDotOptions)||void 0===M?void 0:M.gradient,color:null===(x=n.cornersDotOptions)||void 0===x?void 0:x.color,additionalRotation:E,x:L+2*s,y:P+2*s,height:l,width:l,name:"corners-dot-color-"+S+"-"+A})),null===(C=n.cornersDotOptions)||void 0===C?void 0:C.type){var N=new f({svg:t._element,type:n.cornersDotOptions.type});N.draw(L+2*s,P+2*s,l,E),N._element&&T&&T.appendChild(N._element)}else{D=new c({svg:t._element,type:n.dotsOptions.type});var B=function(t){for(var e=function(e){if(!(null===(k=y[t])||void 0===k?void 0:k[e]))return"continue";D.draw(L+t*s,P+e*s,s,(function(n,i){var r;return!!(null===(r=y[t+n])||void 0===r?void 0:r[e+i])})),D._element&&T&&T.appendChild(D._element)},n=0;n<y[t].length;n++)e(n)};for(R=0;R<y.length;R++)B(R)}}))},t.prototype.loadImage=function(){var t=this;return new Promise((function(e,n){var i=t._options,r=new Image;if(!i.image)return n("Image is not defined");"string"==typeof i.imageOptions.crossOrigin&&(r.crossOrigin=i.imageOptions.crossOrigin),t._image=r,r.onload=function(){e()},r.src=i.image}))},t.prototype.drawImage=function(t){var e=t.width,n=t.height,i=t.count,r=t.dotSize;return g(this,void 0,void 0,(function(){var t,a,s,l,h,c,d,p,u;return v(this,(function(f){switch(f.label){case 0:return t=this._options,a=Math.floor((t.width-i*r)/2),s=Math.floor((t.height-i*r)/2),l=a+t.imageOptions.margin+(i*r-e)/2,h=s+t.imageOptions.margin+(i*r-n)/2,c=e-2*t.imageOptions.margin,d=n-2*t.imageOptions.margin,(p=document.createElementNS("http://www.w3.org/2000/svg","image")).setAttribute("x",String(l)),p.setAttribute("y",String(h)),p.setAttribute("width",c+"px"),p.setAttribute("height",d+"px"),[4,o(t.image||"")];case 1:return u=f.sent(),p.setAttribute("href",u||""),this._element.appendChild(p),[2]}}))}))},t.prototype._createColor=function(t){var e=t.options,n=t.color,i=t.additionalRotation,r=t.x,a=t.y,s=t.height,o=t.width,l=t.name,h=o>s?o:s,c=document.createElementNS("http://www.w3.org/2000/svg","rect");if(c.setAttribute("x",String(r)),c.setAttribute("y",String(a)),c.setAttribute("height",String(s)),c.setAttribute("width",String(o)),c.setAttribute("clip-path","url('#clip-path-"+l+"')"),e){var d;if("radial"===e.type)(d=document.createElementNS("http://www.w3.org/2000/svg","radialGradient")).setAttribute("id",l),d.setAttribute("gradientUnits","userSpaceOnUse"),d.setAttribute("fx",String(r+o/2)),d.setAttribute("fy",String(a+s/2)),d.setAttribute("cx",String(r+o/2)),d.setAttribute("cy",String(a+s/2)),d.setAttribute("r",String(h/2));else{var p=((e.rotation||0)+i)%(2*Math.PI),u=(p+2*Math.PI)%(2*Math.PI),f=r+o/2,m=a+s/2,g=r+o/2,v=a+s/2;u>=0&&u<=.25*Math.PI||u>1.75*Math.PI&&u<=2*Math.PI?(f-=o/2,m-=s/2*Math.tan(p),g+=o/2,v+=s/2*Math.tan(p)):u>.25*Math.PI&&u<=.75*Math.PI?(m-=s/2,f-=o/2/Math.tan(p),v+=s/2,g+=o/2/Math.tan(p)):u>.75*Math.PI&&u<=1.25*Math.PI?(f+=o/2,m+=s/2*Math.tan(p),g-=o/2,v-=s/2*Math.tan(p)):u>1.25*Math.PI&&u<=1.75*Math.PI&&(m+=s/2,f+=o/2/Math.tan(p),v-=s/2,g-=o/2/Math.tan(p)),(d=document.createElementNS("http://www.w3.org/2000/svg","linearGradient")).setAttribute("id",l),d.setAttribute("gradientUnits","userSpaceOnUse"),d.setAttribute("x1",String(Math.round(f))),d.setAttribute("y1",String(Math.round(m))),d.setAttribute("x2",String(Math.round(g))),d.setAttribute("y2",String(Math.round(v)))}e.colorStops.forEach((function(t){var e=t.offset,n=t.color,i=document.createElementNS("http://www.w3.org/2000/svg","stop");i.setAttribute("offset",100*e+"%"),i.setAttribute("stop-color",n),d.appendChild(i)})),c.setAttribute("fill","url('#"+l+"')"),this._defs.appendChild(d)}else n&&c.setAttribute("fill",n);this._element.appendChild(c)},t}(),b="canvas";for(var M={},x=0;x<=40;x++)M[x]=x;const C={type:b,shape:"square",width:300,height:300,data:"",margin:0,qrOptions:{typeNumber:M[0],mode:void 0,errorCorrectionLevel:"Q"},imageOptions:{hideBackgroundDots:!0,imageSize:.4,crossOrigin:void 0,margin:0},dotsOptions:{type:"square",color:"#000"},backgroundOptions:{round:0,color:"#fff"}};var k=function(){return(k=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function S(t){var e=k({},t);if(!e.colorStops||!e.colorStops.length)throw"Field 'colorStops' is required in gradient";return e.rotation?e.rotation=Number(e.rotation):e.rotation=0,e.colorStops=e.colorStops.map((function(t){return k(k({},t),{offset:Number(t.offset)})})),e}function A(t){var e=k({},t);return e.width=Number(e.width),e.height=Number(e.height),e.margin=Number(e.margin),e.imageOptions=k(k({},e.imageOptions),{hideBackgroundDots:Boolean(e.imageOptions.hideBackgroundDots),imageSize:Number(e.imageOptions.imageSize),margin:Number(e.imageOptions.margin)}),e.margin>Math.min(e.width,e.height)&&(e.margin=Math.min(e.width,e.height)),e.dotsOptions=k({},e.dotsOptions),e.dotsOptions.gradient&&(e.dotsOptions.gradient=S(e.dotsOptions.gradient)),e.cornersSquareOptions&&(e.cornersSquareOptions=k({},e.cornersSquareOptions),e.cornersSquareOptions.gradient&&(e.cornersSquareOptions.gradient=S(e.cornersSquareOptions.gradient))),e.cornersDotOptions&&(e.cornersDotOptions=k({},e.cornersDotOptions),e.cornersDotOptions.gradient&&(e.cornersDotOptions.gradient=S(e.cornersDotOptions.gradient))),e.backgroundOptions&&(e.backgroundOptions=k({},e.backgroundOptions),e.backgroundOptions.gradient&&(e.backgroundOptions.gradient=S(e.backgroundOptions.gradient))),e}var E=n(192),L=n.n(E),P=function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function s(t){try{l(i.next(t))}catch(t){a(t)}}function o(t){try{l(i.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,o)}l((i=i.apply(t,e||[])).next())}))},I=function(t,e){var n,i,r,a,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,i=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){s.label=a[1];break}if(6===a[0]&&s.label<r[1]){s.label=r[1],r=a;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(a);break}r[2]&&s.ops.pop(),s.trys.pop();continue}a=e.call(t,s)}catch(t){a=[6,t],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};const T=function(){function t(t){this._options=t?A(a(C,t)):C,this.update()}return t._clearContainer=function(t){t&&(t.innerHTML="")},t.prototype._setupSvg=function(){var t=this;if(this._qr){var e=new _(this._options);this._svg=e.getElement(),this._svgDrawingPromise=e.drawQR(this._qr).then((function(){var n;t._svg&&(null===(n=t._extension)||void 0===n||n.call(t,e.getElement(),t._options))}))}},t.prototype._setupCanvas=function(){var t,e=this;this._qr&&(this._canvas=document.createElement("canvas"),this._canvas.width=this._options.width,this._canvas.height=this._options.height,this._setupSvg(),this._canvasDrawingPromise=null===(t=this._svgDrawingPromise)||void 0===t?void 0:t.then((function(){if(e._svg){var t=e._svg,n=(new XMLSerializer).serializeToString(t),i="data:image/svg+xml;base64,"+btoa(n),r=new Image;return new Promise((function(t){r.onload=function(){var n,i;null===(i=null===(n=e._canvas)||void 0===n?void 0:n.getContext("2d"))||void 0===i||i.drawImage(r,0,0),t()},r.src=i}))}})))},t.prototype._getElement=function(t){return void 0===t&&(t="png"),P(this,void 0,void 0,(function(){return I(this,(function(e){switch(e.label){case 0:if(!this._qr)throw"QR code is empty";return"svg"!==t.toLowerCase()?[3,2]:(this._svg&&this._svgDrawingPromise||this._setupSvg(),[4,this._svgDrawingPromise]);case 1:return e.sent(),[2,this._svg];case 2:return this._canvas&&this._canvasDrawingPromise||this._setupCanvas(),[4,this._canvasDrawingPromise];case 3:return e.sent(),[2,this._canvas]}}))}))},t.prototype.update=function(e){t._clearContainer(this._container),this._options=e?A(a(this._options,e)):this._options,this._options.data&&(this._qr=L()(this._options.qrOptions.typeNumber,this._options.qrOptions.errorCorrectionLevel),this._qr.addData(this._options.data,this._options.qrOptions.mode||function(t){switch(!0){case/^[0-9]*$/.test(t):return"Numeric";case/^[0-9A-Z $%*+\-./:]*$/.test(t):return"Alphanumeric";default:return"Byte"}}(this._options.data)),this._qr.make(),this._options.type===b?this._setupCanvas():this._setupSvg(),this.append(this._container))},t.prototype.append=function(t){if(t){if("function"!=typeof t.appendChild)throw"Container should be a single DOM node";this._options.type===b?this._canvas&&t.appendChild(this._canvas):this._svg&&t.appendChild(this._svg),this._container=t}},t.prototype.applyExtension=function(t){if(!t)throw"Extension function should be defined.";this._extension=t,this.update()},t.prototype.deleteExtension=function(){this._extension=void 0,this.update()},t.prototype.getRawData=function(t){return void 0===t&&(t="png"),P(this,void 0,void 0,(function(){var e,n,i;return I(this,(function(r){switch(r.label){case 0:if(!this._qr)throw"QR code is empty";return[4,this._getElement(t)];case 1:return(e=r.sent())?"svg"===t.toLowerCase()?(n=new XMLSerializer,i=n.serializeToString(e),[2,new Blob(['<?xml version="1.0" standalone="no"?>\r\n'+i],{type:"image/svg+xml"})]):[2,new Promise((function(n){return e.toBlob(n,"image/"+t,1)}))]:[2,null]}}))}))},t.prototype.download=function(t){return P(this,void 0,void 0,(function(){var e,n,i,r,a;return I(this,(function(o){switch(o.label){case 0:if(!this._qr)throw"QR code is empty";return e="png",n="qr","string"==typeof t?(e=t,console.warn("Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument")):"object"==typeof t&&null!==t&&(t.name&&(n=t.name),t.extension&&(e=t.extension)),[4,this._getElement(e)];case 1:return(i=o.sent())?("svg"===e.toLowerCase()?(r=new XMLSerializer,a='<?xml version="1.0" standalone="no"?>\r\n'+(a=r.serializeToString(i)),s("data:image/svg+xml;charset=utf-8,"+encodeURIComponent(a),n+".svg")):s(i.toDataURL("image/"+e),n+"."+e),[2]):[2]}}))}))},t}()}},e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={exports:{}};return t[i](r,r.exports,n),r.exports}return n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n(676)})().default},7563:(t,e,n)=>{"use strict";const i=n(610),r=n(4020),a=n(500);function s(t){if("string"!=typeof t||1!==t.length)throw new TypeError("arrayFormatSeparator must be single character string")}function o(t,e){return e.encode?e.strict?i(t):encodeURIComponent(t):t}function l(t,e){return e.decode?r(t):t}function h(t){return Array.isArray(t)?t.sort():"object"==typeof t?h(Object.keys(t)).sort(((t,e)=>Number(t)-Number(e))).map((e=>t[e])):t}function c(t){const e=t.indexOf("#");return-1!==e&&(t=t.slice(0,e)),t}function d(t){const e=(t=c(t)).indexOf("?");return-1===e?"":t.slice(e+1)}function p(t,e){return e.parseNumbers&&!Number.isNaN(Number(t))&&"string"==typeof t&&""!==t.trim()?t=Number(t):!e.parseBooleans||null===t||"true"!==t.toLowerCase()&&"false"!==t.toLowerCase()||(t="true"===t.toLowerCase()),t}function u(t,e){s((e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e)).arrayFormatSeparator);const n=function(t){let e;switch(t.arrayFormat){case"index":return(t,n,i)=>{e=/\[(\d*)\]$/.exec(t),t=t.replace(/\[\d*\]$/,""),e?(void 0===i[t]&&(i[t]={}),i[t][e[1]]=n):i[t]=n};case"bracket":return(t,n,i)=>{e=/(\[\])$/.exec(t),t=t.replace(/\[\]$/,""),e?void 0!==i[t]?i[t]=[].concat(i[t],n):i[t]=[n]:i[t]=n};case"comma":case"separator":return(e,n,i)=>{const r="string"==typeof n&&n.split("").indexOf(t.arrayFormatSeparator)>-1?n.split(t.arrayFormatSeparator).map((e=>l(e,t))):null===n?n:l(n,t);i[e]=r};default:return(t,e,n)=>{void 0!==n[t]?n[t]=[].concat(n[t],e):n[t]=e}}}(e),i=Object.create(null);if("string"!=typeof t)return i;if(!(t=t.trim().replace(/^[?#&]/,"")))return i;for(const r of t.split("&")){let[t,s]=a(e.decode?r.replace(/\+/g," "):r,"=");s=void 0===s?null:["comma","separator"].includes(e.arrayFormat)?s:l(s,e),n(l(t,e),s,i)}for(const t of Object.keys(i)){const n=i[t];if("object"==typeof n&&null!==n)for(const t of Object.keys(n))n[t]=p(n[t],e);else i[t]=p(n,e)}return!1===e.sort?i:(!0===e.sort?Object.keys(i).sort():Object.keys(i).sort(e.sort)).reduce(((t,e)=>{const n=i[e];return Boolean(n)&&"object"==typeof n&&!Array.isArray(n)?t[e]=h(n):t[e]=n,t}),Object.create(null))}e.extract=d,e.parse=u,e.stringify=(t,e)=>{if(!t)return"";s((e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e)).arrayFormatSeparator);const n=n=>e.skipNull&&null==t[n]||e.skipEmptyString&&""===t[n],i=function(t){switch(t.arrayFormat){case"index":return e=>(n,i)=>{const r=n.length;return void 0===i||t.skipNull&&null===i||t.skipEmptyString&&""===i?n:null===i?[...n,[o(e,t),"[",r,"]"].join("")]:[...n,[o(e,t),"[",o(r,t),"]=",o(i,t)].join("")]};case"bracket":return e=>(n,i)=>void 0===i||t.skipNull&&null===i||t.skipEmptyString&&""===i?n:null===i?[...n,[o(e,t),"[]"].join("")]:[...n,[o(e,t),"[]=",o(i,t)].join("")];case"comma":case"separator":return e=>(n,i)=>null==i||0===i.length?n:0===n.length?[[o(e,t),"=",o(i,t)].join("")]:[[n,o(i,t)].join(t.arrayFormatSeparator)];default:return e=>(n,i)=>void 0===i||t.skipNull&&null===i||t.skipEmptyString&&""===i?n:null===i?[...n,o(e,t)]:[...n,[o(e,t),"=",o(i,t)].join("")]}}(e),r={};for(const e of Object.keys(t))n(e)||(r[e]=t[e]);const a=Object.keys(r);return!1!==e.sort&&a.sort(e.sort),a.map((n=>{const r=t[n];return void 0===r?"":null===r?o(n,e):Array.isArray(r)?r.reduce(i(n),[]).join("&"):o(n,e)+"="+o(r,e)})).filter((t=>t.length>0)).join("&")},e.parseUrl=(t,e)=>{e=Object.assign({decode:!0},e);const[n,i]=a(t,"#");return Object.assign({url:n.split("?")[0]||"",query:u(d(t),e)},e&&e.parseFragmentIdentifier&&i?{fragmentIdentifier:l(i,e)}:{})},e.stringifyUrl=(t,n)=>{n=Object.assign({encode:!0,strict:!0},n);const i=c(t.url).split("?")[0]||"",r=e.extract(t.url),a=e.parse(r,{sort:!1}),s=Object.assign(a,t.query);let l=e.stringify(s,n);l&&(l=`?${l}`);let h=function(t){let e="";const n=t.indexOf("#");return-1!==n&&(e=t.slice(n)),e}(t.url);return t.fragmentIdentifier&&(h=`#${o(t.fragmentIdentifier,n)}`),`${i}${l}${h}`}},500:t=>{"use strict";t.exports=(t,e)=>{if("string"!=typeof t||"string"!=typeof e)throw new TypeError("Expected the arguments to be of type `string`");if(""===e)return[t];const n=t.indexOf(e);return-1===n?[t]:[t.slice(0,n),t.slice(n+e.length)]}},610:t=>{"use strict";t.exports=t=>encodeURIComponent(t).replace(/[!'()*]/g,(t=>`%${t.charCodeAt(0).toString(16).toUpperCase()}`))},5054:(t,e,n)=>{var i=n(8764).lW,r=n(4501).strict;t.exports=function(t){if(r(t)){var e=i.from(t.buffer);return t.byteLength!==t.buffer.byteLength&&(e=e.slice(t.byteOffset,t.byteOffset+t.byteLength)),e}return i.from(t)}},7026:t=>{"use strict";t.exports=function(){throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,